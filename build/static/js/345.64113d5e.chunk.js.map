{"version":3,"file":"static/js/345.64113d5e.chunk.js","mappings":"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","sources":["components/form_components/form_components.jsx","config/styling.js","containers/form-validations/FormikFields.js","views/app/students/bio/register.js"],"sourcesContent":["import { inputLabel } from 'config/styling';\nimport { FormGroup, Label } from 'reactstrap';\n\nexport const MyFormGroup = ({ children, ...props }) => (\n  <FormGroup className=\"form-group has-float-label error-l-100 \" {...props}>\n    {children}\n  </FormGroup>\n);\n\nexport const MyLabel = ({ children, required, ...props }) => (\n  <Label style={inputLabel} {...props}>\n    {children}\n    {required && <span style={{ color: 'red' }}>*</span>}\n  </Label>\n);\n\nexport const MyErrorLabel = ({ children, hide, ...props }) => {\n  if (hide) return null;\n  return (\n    <div\n      className=\"invalid-feedback d-block bg-danger text-white messageStyle\"\n      {...props}\n    >\n      {children}\n    </div>\n  );\n};\n\nexport const RequiredHash = () => <span style={{ color: 'red' }}>*</span>;\n","export const inputLabel = { fontSize: 16, fontWeight: 'bold' };\nexport const buttonStyle = { fontSize: 16 };\n","import React from 'react';\nimport Select from 'react-select';\nimport { CustomInput } from 'reactstrap';\nimport IntlMessages from 'helpers/IntlMessages';\n\nimport TagsInput from 'react-tagsinput';\nimport 'react-tagsinput/react-tagsinput.css';\nimport Switch from 'rc-switch';\nimport 'rc-switch/assets/index.css';\n\nimport DatePicker from 'react-multi-date-picker';\n\nimport 'react-datepicker/dist/react-datepicker.css';\nimport { Input } from 'antd';\n\nconst FormikReactSelect = ({\n  name,\n  value,\n  options,\n  isMulti,\n  className,\n  onChange,\n  onBlur,\n  onClick,\n  defaultValue,\n  isDisabled,\n  isLoading,\n  isClearable,\n  isRtl,\n  isSearchable,\n  placeholder,\n}) => {\n  const handleChange = (val) => {\n    onChange(name, val);\n  };\n\n  const handleBlur = () => {\n    onBlur(name, true);\n  };\n\n  return (\n    <Select\n      className={`react-select ${className}`}\n      classNamePrefix=\"react-select\"\n      placeholder={\n        placeholder || <IntlMessages id=\"forms.EducationLevelDefaultValue\" />\n      }\n      options={options}\n      isMulti={isMulti}\n      initial\n      onChange={handleChange}\n      onBlur={handleBlur}\n      value={value}\n      defaultValue={defaultValue}\n      isDisabled={isDisabled}\n      isLoading={isLoading}\n      isClearable={isClearable}\n      isRtl={isRtl}\n      isSearchable={isSearchable}\n    />\n  );\n};\n\nconst FormikCheckboxGroup = ({\n  name,\n  value,\n  options,\n  inline = false,\n  onChange,\n  onBlur,\n}) => {\n  const handleChange = (val) => {\n    const valueArray = [...value] || [];\n    if (!valueArray.includes(val)) {\n      valueArray.push(val);\n    } else {\n      valueArray.splice(valueArray.indexOf(val), 1);\n    }\n    onChange(name, valueArray);\n  };\n\n  const handleBlur = () => {\n    onBlur(name, true);\n  };\n\n  return (\n    <>\n      {options.map((child, index) => {\n        return (\n          <div\n            key={`${name}_${child.value}_${index}`}\n            className={`position-relative form-check ${\n              inline ? 'form-check-inline' : ''\n            }`}\n          >\n            <input\n              name={name}\n              type=\"checkbox\"\n              className=\"form-check-input\"\n              onChange={() => handleChange(child.value)}\n              onBlur={handleBlur}\n              defaultChecked={value.includes(child.value)}\n              disabled={child.disabled}\n            />\n            <label className=\"form-check-label\">{child.label}</label>\n          </div>\n        );\n      })}\n    </>\n  );\n};\n\nconst FormikCustomCheckboxGroup = ({\n  name,\n  value,\n  options,\n  inline = false,\n  onChange,\n  onBlur,\n}) => {\n  const handleChange = (val) => {\n    const valueArray = [...value] || [];\n    if (!valueArray.includes(val)) {\n      valueArray.push(val);\n    } else {\n      valueArray.splice(valueArray.indexOf(val), 1);\n    }\n    onChange(name, valueArray);\n  };\n\n  const handleBlur = () => {\n    onBlur(name, true);\n  };\n\n  return (\n    <>\n      {options.map((child, index) => {\n        return (\n          <CustomInput\n            key={`${name}_${child.value}_${index}`}\n            id={`${name}_${child.value}_${index}`}\n            type=\"checkbox\"\n            name={child.name}\n            label={child.label}\n            onChange={() => handleChange(child.value)}\n            onBlur={handleBlur}\n            checked={value.includes(child.value)}\n            disabled={child.disabled}\n            inline={inline}\n          />\n        );\n      })}\n    </>\n  );\n};\n\nconst FormikCheckbox = ({ name, value, disabled, label, onChange, onBlur }) => {\n  const handleChange = (_event) => {\n    onChange(name, !value);\n  };\n  const handleBlur = () => {\n    onBlur(name, true);\n  };\n  return (\n    <div className=\"position-relative form-check form-check-inline\">\n      <input\n        name={name}\n        type=\"checkbox\"\n        className=\"form-check-input\"\n        onChange={handleChange}\n        onBlur={handleBlur}\n        checked={value}\n        disabled={disabled}\n      />\n      <label className=\"form-check-label\">{label}</label>\n    </div>\n  );\n};\n\nconst FormikCustomCheckbox = ({\n  name,\n  value,\n  disabled,\n  label,\n  onChange,\n  onBlur,\n}) => {\n  const handleChange = (_event) => {\n    onChange(name, !value);\n  };\n  const handleBlur = () => {\n    onBlur(name, true);\n  };\n  return (\n    <CustomInput\n      type=\"checkbox\"\n      id={name}\n      name={name}\n      label={label}\n      onChange={handleChange}\n      onBlur={handleBlur}\n      checked={value}\n      disabled={disabled}\n      inline\n    />\n  );\n};\n\nconst FormikRadioButtonGroup = ({\n  name,\n  value,\n  options,\n  inline = false,\n  onChange,\n  onBlur,\n}) => {\n  const handleChange = (val) => {\n    onChange(name, val);\n  };\n\n  const handleBlur = () => {\n    onBlur(name, true);\n  };\n\n  return (\n    <>\n      {options.map((child, index) => {\n        return (\n          <div\n            key={`${name}_${child.value}_${index}`}\n            className={`position-relative form-check ${\n              inline ? 'form-check-inline' : ''\n            }`}\n          >\n            <input\n              id={child.value}\n              name={name}\n              type=\"radio\"\n              className=\"form-check-input\"\n              onChange={() => handleChange(child.value)}\n              onBlur={handleBlur}\n              defaultChecked={value === child.value}\n              disabled={child.disabled}\n            />\n            <label className=\"form-check-label\">{child.label}</label>\n          </div>\n        );\n      })}\n    </>\n  );\n};\n\nconst FormikCustomRadioGroup = ({\n  name,\n  value,\n  options,\n  inline = false,\n  onChange,\n  onBlur,\n}) => {\n  const handleChange = (val) => {\n    onChange(name, val);\n  };\n\n  const handleBlur = () => {\n    onBlur(name, true);\n  };\n\n  return (\n    <>\n      {options.map((child, index) => {\n        return (\n          <CustomInput\n            key={`${name}_${child.value}_${index}`}\n            type=\"radio\"\n            id={`${name}_${child.value}_${index}`}\n            name={child.name}\n            label={child.label}\n            onChange={() => handleChange(child.value)}\n            onBlur={handleBlur}\n            checked={value === child.value}\n            disabled={child.disabled}\n            inline={inline}\n          />\n        );\n      })}\n    </>\n  );\n};\n\nconst FormikTagsInput = ({ name, value, onChange, onBlur }) => {\n  const handleChange = (val) => {\n    onBlur(name, true);\n    onChange(name, val);\n  };\n\n  return <TagsInput name={name} value={value} onChange={handleChange} />;\n};\n\nconst FormikInputText = ({ name, value, onChange, onBlur, ...otherProps }) => {\n  // const handleChange = (val) => {\n  //   onBlur(name, true);\n  //   onChange(name, val);\n  // };\n  return (\n    <Input\n      name={name}\n      value={value}\n      onChange={onChange}\n      style={{ height: 48, borderRadius: 0 }}\n      {...otherProps}\n    />\n  );\n};\n\nconst FormikSwitch = ({ name, value, className, onChange, onBlur }) => {\n  const handleChange = (val) => {\n    onBlur(name, true);\n    onChange(name, val);\n  };\n\n  return (\n    <Switch\n      name={name}\n      className={className}\n      checked={value}\n      onChange={handleChange}\n    />\n  );\n};\n\nconst FormikDatePicker = ({ name, value, className, onChange, onBlur }) => {\n  const handleChange = (val) => {\n    onChange(name, val);\n  };\n\n  const handleBlur = (_val) => {\n    onBlur(name, true);\n  };\n\n  return (\n    <DatePicker\n      name={name}\n      className={className}\n      selected={value}\n      onChange={handleChange}\n      onBlur={handleBlur}\n    />\n  );\n};\n\nexport {\n  FormikReactSelect,\n  FormikCheckboxGroup,\n  FormikCustomCheckboxGroup,\n  FormikCheckbox,\n  FormikCustomCheckbox,\n  FormikRadioButtonGroup,\n  FormikCustomRadioGroup,\n  FormikTagsInput,\n  FormikInputText,\n  FormikSwitch,\n  FormikDatePicker,\n};\n","import React, { useState, useContext } from 'react';\n// import { NavLink } from 'react-router-dom';\nimport { FormControl } from 'react-bootstrap';\nimport './../../.././../assets/css/global-style.css';\nimport { InputMask } from 'primereact/inputmask';\nimport {\n  genderOptions,\n  mediumOfInstructionOptions,\n  StdInteranceOptions,\n  StudentTypeOptions,\n  studyTimeOptions,\n  tazkiraOptions,\n  educationLevelOptions,\n  disabilityOptions,\n  persianMonthOptions,\n} from '../../global-data/options';\nimport DatePicker from 'react-multi-date-picker';\nimport persian from 'react-date-object/calendars/persian';\nimport persian_fa from 'react-date-object/locales/persian_fa';\nimport {\n  Row,\n  Card,\n  CardBody,\n  CardHeader,\n  FormGroup,\n  Label,\n  // Spinner,\n  Button,\n  InputGroupAddon,\n  Spinner,\n} from 'reactstrap';\n// import { Wizard, Steps, Step } from 'react-albus';\n\nimport {\n  studentRegisterFormStep_1,\n  // studentRegisterFormStep_2,\n  // studentRegisterFormStep_3,\n} from '../../global-data/forms-validation';\nimport { FormikReactSelect } from 'containers/form-validations/FormikFields';\nimport { injectIntl } from 'react-intl';\nimport { Formik, Form, Field } from 'formik';\nimport IntlMessages from 'helpers/IntlMessages';\n// import BottomNavigation from 'components/wizard/BottomNavigation';\nimport { NotificationManager } from 'components/common/react-notifications';\n\nimport { Colxx } from 'components/common/CustomBootstrap';\nimport callApi from 'helpers/callApi';\nimport { AuthContext } from 'context/AuthContext';\nimport { message } from 'antd';\nimport { inputLabel } from 'config/styling';\nimport {\n  MyErrorLabel,\n  MyFormGroup,\n  MyLabel,\n  RequiredHash,\n} from 'components/form_components/form_components';\n\nconst StudentRegistration = ({ intl }, values) => {\n  const {\n    provinces,\n    districts,\n    institutes,\n    classes: classs,\n    contextFields: fieldList,\n    sectors,\n    departments,\n  } = useContext(AuthContext);\n\n  const [selectedFile, setSelectedFile] = useState(null);\n\n  const [instituteDeps, setInstituteDeps] = useState([]);\n\n  const [mainDistrictOptions, setMainDistrictOptions] = useState([]);\n  const [currentDistrictOptions, setCurrentDistrictOptions] = useState([]);\n\n  const [loading, setLoading] = useState(false);\n  const [isSuccess, setIsSuccess] = useState(false);\n  const [instDepartmentOptions, setInstDepartmentOptions] = useState([]);\n  // get data of each step from localstorage\n  const formValues = JSON.parse(localStorage.getItem('formData'));\n  // used arrays as intial values because other things will throw error\n  const [initialValues, setInitialValues] = useState({\n    maktoobNumber: formValues?.maktoobNumber || '',\n    maktoobDate: formValues?.maktoobDate || '',\n    kankorId: formValues?.kankorId || '',\n    name1: formValues?.name1 || '',\n    englishName: formValues?.englishName || '',\n    lastName: formValues?.lastName || '',\n    lastNameEng: formValues?.lastNameEng || '',\n    fatherName: formValues?.fatherName || '',\n    fatherDuty: formValues?.fatherDuty || '',\n    fatherEngName: formValues?.fatherEngName || '',\n    grandFatherName: formValues?.grandFatherName || '',\n    fatherDutyLocation: formValues?.fatherDutyLocation || '',\n    DoB: formValues?.DoB || '',\n    monthOfBirth: formValues?.monthOfBirth || '',\n    dayOfBirth: formValues?.dayOfBirth || '',\n    gender:\n      genderOptions.find((op) => op.value == formValues?.gender?.value) || [],\n    tazkiraNo: formValues?.tazkiraNo || '',\n    sokokNo: formValues?.sokokNo || '',\n    idCardPageNo: formValues?.idCardPageNo || '',\n    idCardJoldNo: formValues?.idCardJoldNo || '',\n    sabtNo: formValues?.sabtNo || '',\n    tazkiraType:\n      tazkiraOptions.find(\n        (op) => op.value === formValues?.tazkiraType?.value,\n      ) || tazkiraOptions[0],\n    phoneNo: formValues?.phoneNo || '',\n    email: formValues?.email || '',\n    placeOfBirth: formValues?.placeOfBirth || '',\n\n    levelOfEducation:\n      educationLevelOptions.find(\n        (op) => op.value === formValues?.levelOfEducation?.value,\n      ) || [],\n    preSchool: formValues?.preSchool || '',\n    graduationYear: formValues?.graduationYear || '',\n    schoolProvince:\n      provinces.find((op) => op.value === formValues?.schoolProvince?.value) ||\n      [],\n    province:\n      provinces.find((op) => op.value === formValues?.province?.value) || [],\n    C_Province:\n      provinces.find((op) => op.value === formValues?.C_Province?.value) || [],\n    C_District:\n      districts.find((op) => op.value === formValues?.C_District?.value) || [],\n    district:\n      districts.find((op) => op.value === formValues?.district?.value) || [],\n    village: formValues?.village || '',\n    C_Village: formValues?.C_Village || '',\n\n    institute:\n      institutes.find((op) => op.value === formValues?.institute?.value) || [],\n\n    class: classs.find((op) => op.value === formValues?.class?.value) || [],\n\n    educationalYear: formValues?.educationalYear || '',\n    department:\n      departments.find((op) => op.value === formValues?.department?.value) ||\n      [],\n\n    mediumOfInstruction:\n      mediumOfInstructionOptions.find(\n        (op) => op.value === formValues?.mediumOfInstruction?.value,\n      ) || [],\n\n    studentId: '',\n    studyTime:\n      studyTimeOptions.find(\n        (op) => op.value === formValues?.studyTime?.value,\n      ) || [],\n\n    interanceType:\n      StdInteranceOptions.find(\n        (op) => op.value === formValues?.interanceType?.value,\n      ) || [],\n\n    studentType:\n      StudentTypeOptions.find(\n        (op) => op.value === formValues?.studentType?.value,\n      ) || [],\n    // batch: [],\n    // field: [],\n    sector: sectors.find((op) => op.value === formValues?.sector?.value) || [],\n    file: [],\n    disability:\n      disabilityOptions.find(\n        (op) => op.value === formValues?.disability?.value,\n      ) || [],\n  });\n\n  // fetch department based on selected institute\n  const fetchInstDepts = (inst) => {\n    const instId = inst.value;\n    callApi(`institute/${instId}/departments/`).then((inst) => {\n      console.log('Institutes Departments: ', inst.data);\n      setInstituteDeps(inst.data);\n      const newOptions = departments.filter((dep) => {\n        // if department id is in data.department\n        let department_ids = inst.data.reduce(\n          (acc, cur, i) => acc.add(cur.department),\n          new Set(),\n        );\n        console.log(department_ids);\n        return department_ids.has(dep.value);\n      });\n      setInstDepartmentOptions(newOptions);\n    });\n  };\n\n  const handleFileChange = (event) => {\n    const file = event.currentTarget.files[0];\n    setSelectedFile(file);\n  };\n\n  const createNotification = (type, className) => {\n    const cName = className || '';\n    switch (type) {\n      case 'success':\n        NotificationManager.success(\n          'شاگرد په بریالیتوب ثبت شو',\n          'موفقیت',\n          3000,\n          null,\n          null,\n          cName,\n        );\n        break;\n      case 'error':\n        NotificationManager.error(\n          'شاگرد ثبت نشو، بیا کوشش وکری',\n          'خطا',\n          9000,\n          () => {\n            // alert('callback');\n          },\n          null,\n          cName,\n        );\n        break;\n      default:\n        NotificationManager.info('Info message');\n        break;\n    }\n  };\n\n  const storeDataToLocalStorage = (data) => {\n    localStorage.setItem('formData', JSON.stringify(data));\n  };\n  // post student record to server\n  const postStudentRecord = async (newFields, { setFieldError }) => {\n    // localStorage.setItem('formData', JSON.stringify(newFields));\n    const localStorageData = {\n      interanceType: newFields.interanceType,\n      institute: newFields.institute,\n      educationalYear: newFields.educationalYear,\n      mediumOfInstruction: newFields.mediumOfInstruction,\n      studyTime: newFields.studyTime,\n      department: newFields.department,\n      class: newFields.class,\n      studentType: newFields.studentType,\n      maktoobDate: newFields.maktoobDate,\n      maktoobNumber: newFields.maktoobNumber,\n    };\n\n    storeDataToLocalStorage(localStorageData);\n    const data = {\n      //personal info,\n      maktob_date: newFields.maktoobDate || null,\n      maktob_number: newFields.maktoobNumber || null,\n      name: newFields.name1,\n      student_id: newFields.studentId,\n      kankor_id: newFields.kankorId,\n      previous_grade_year: newFields.graduationYear.label,\n      previous_school_name: newFields.preSchool,\n      previous_school_province: newFields.schoolProvince.value,\n      previous_grade: newFields.levelOfEducation.value,\n      student_type: newFields.studentType.value,\n      english_name: newFields.englishName,\n      last_name: newFields.lastName,\n      english_last_name: newFields.lastNameEng,\n      father_name: newFields.fatherName,\n      english_father_name: newFields.fatherEngName,\n      phone_number: newFields.phoneNo,\n      email: newFields.email,\n      grandfather_name: newFields.grandFatherName,\n      cover_number: newFields.idCardJoldNo || null,\n      page_number: newFields.idCardPageNo || null,\n      sabt_number: newFields.sabtNo || null,\n      tazkira_type: newFields.tazkiraType.value,\n      registration_number: newFields.tazkiraNo || null,\n      sokok_number: newFields.sokokNo || null,\n      main_province: newFields.province.value,\n      main_district: newFields.district.value,\n      main_village: newFields.village,\n      current_province: newFields.C_Province.value,\n      current_district: newFields.C_District.value,\n      current_village: newFields.C_Village,\n      year_of_birth: newFields.DoB,\n      month_of_birth: newFields.monthOfBirth || null,\n      day_of_birth: newFields.dayOfBirth || null,\n      father_profession: newFields.fatherDuty,\n      father_place_of_duty: newFields.fatherDutyLocation,\n      admission_method: newFields.interanceType.value,\n      // students_status: 'active',\n      gender: newFields.gender.value,\n      institute: newFields.institute.value,\n      educational_year: newFields.educationalYear,\n      teaching_language: newFields.mediumOfInstruction.value,\n      shift: newFields.studyTime.value,\n\n      // fields info\n      department: newFields.department.value,\n      // field_of_study: newFields.field.value,\n\n      // sector:\n      sector: newFields?.sector.value, //not included in form\n      // batch: newFields.batch.value, // not included in form\n\n      // class info,\n      classs: newFields.class.value,\n      place_of_birth: newFields.placeOfBirth,\n    };\n    console.log('Form Data', data);\n    setLoading(true);\n    try {\n      const response = await callApi('students/register/', 'POST', data);\n\n      // const stdId = response?.data.id;\n      // history.push(`/app/students/student/${stdId}`);\n      createNotification('success', 'filled');\n      setIsSuccess(true);\n      setLoading(false);\n    } catch (error) {\n      setIsSuccess(false);\n      console.log('error.response', error.response);\n      if (error?.response?.data?.errors?.registration_number) {\n        setFieldError('tazkiraNo', 'شاگرد به ای تذکره نمبر وجود دارد');\n      }\n      if (error?.response?.data?.errors?.student_id) {\n        setFieldError('studentId', 'شاگرد به ای شماره اساس وجود دارد');\n      }\n      createNotification('error', 'filled');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const resetformFields = () => {\n    if (localStorage.getItem('formData')) {\n      localStorage.removeItem('formData');\n      window.location.reload();\n    } else message.warning('فورم پاک هست');\n  };\n\n  // const handleInitialValues = (steps, step) => {\n  //   console.log('steps is ', steps);\n  //   const formIndex = steps.indexOf(step);\n  //   if (formIndex > 2) return;\n  //   const form = forms[formIndex].current;\n\n  //   console.log('step is ', step);\n  //   const initialValuesCopy = [\n  //     { ...initialValues[0] },\n  //     { ...initialValues[1] },\n  //     { ...initialValues[2] },\n  //   ];\n  //   initialValuesCopy[steps.indexOf(step)] = form.values;\n  //   setInitialValues(initialValuesCopy);\n  // };\n\n  // handle when user clicks on next button\n  // const onClickNext = (goToNext, steps, step, values) => {\n  //   console.log('inside goToNext function');\n  //   // if last step, do nothing\n  //   const isLastStep = steps.length - 1 <= steps.indexOf(step);\n  //   if (isLastStep) {\n  //     console.log('last step, do nothing');\n  //     return;\n  //   }\n\n  //   const formIndex = steps.indexOf(step);\n  //   const form = forms[formIndex].current;\n  //   console.log('ref form value: ', form);\n  //   console.log('form values of index ${formIndex}: ', form.values);\n  //   // submitForm() only triggers formik validation\n  //   form.submitForm().then(() => {\n  //     if (!form.isDirty && form.isValid) {\n  //       // add step's data into fields state\n  //       // add fields of this step to the fields state\n  //       console.log('form values: ', form.values);\n  //       const newFields = { ...fields, ...form.values };\n  //       handleInitialValues(steps, step);\n  //       setFields(newFields);\n  //       // store data in localstorage data loss prevention\n  //       localStorage.setItem('step' + formIndex, JSON.stringify(form.values));\n\n  //       // if last step, submit the form\n  //       // if next on last step is clicked, call the api to register student\n  //       if (steps.length - 2 <= steps.indexOf(step)) {\n  //         // setBottomNavHidden(true);\n  //         console.log('new fields', newFields);\n\n  //         const data = {\n  //           //personal info,\n  //           name: newFields.name1,\n  //           student_id: newFields.studentId,\n  //           kankor_id: newFields.kankorId,\n  //           previous_grade_year: newFields.graduationYear.label,\n  //           previous_school_name: newFields.preSchool,\n  //           previous_school_province: newFields.schoolProvince.value,\n  //           previous_grade: newFields.levelOfEducation.value,\n  //           student_type: newFields.studentType.value,\n  //           english_name: newFields.englishName,\n  //           last_name: newFields.lastName,\n  //           english_last_name: newFields.lastNameEng,\n  //           father_name: newFields.fatherName,\n  //           english_father_name: newFields.fatherEngName,\n  //           phone_number: newFields.phoneNo,\n  //           email: newFields.email,\n  //           grandfather_name: newFields.grandFatherName,\n  //           cover_number: newFields.idCardJoldNo,\n  //           page_number: newFields.idCardPageNo,\n  //           sabt_number: newFields.sabtNo,\n  //           tazkira_type: newFields.tazkiraType.value,\n  //           registration_number: newFields.tazkiraNo,\n  //           sokok_number: newFields.sokokNo,\n  //           main_province: newFields.province.value,\n  //           main_district: newFields.district.value,\n  //           main_village: newFields.village,\n  //           current_province: newFields.C_Province.value,\n  //           current_district: newFields.C_District.value,\n  //           current_village: newFields.C_Village,\n  //           year_of_birth: newFields.DoB,\n  //           month_of_birth: newFields.monthOfBirth,\n  //           day_of_birth: newFields.dayOfBirth,\n  //           father_profession: newFields.fatherDuty,\n  //           father_place_of_duty: newFields.fatherDutyLocation,\n  //           admission_method: newFields.interanceType.value,\n  //           // students_status: 'active',\n  //           gender: newFields.gender.value,\n  //           institute: newFields.institute.value,\n  //           educational_year: newFields.educationalYear,\n  //           teaching_language: newFields.mediumOfInstruction.value,\n  //           shift: newFields.studyTime.value,\n\n  //           // fields info\n  //           department: newFields.department.value,\n  //           field_of_study: newFields.field.value,\n\n  //           // sector:\n  //           sector: newFields.sector.value,\n  //           batch: newFields.batch.value,\n\n  //           // class info,\n  //           classs: newFields.class.value,\n  //           place_of_birth: newFields.placeOfBirth,\n  //         };\n\n  //         // check if a file is selected\n  //         if (selectedFile) {\n  //           console.log(selectedFile);\n  //           data['photo'] = selectedFile;\n  //         }\n  //         if (newFields.disability) {\n  //           data['disability'] = newFields.disability.value;\n  //         }\n\n  //         const formValues2 = new formValues();\n  //         for (let key in data) {\n  //           // remove undefined values from data that's being sent to the server\n  //           if (data[key]) {\n  //             formValues2.append(key, data[key]);\n  //           }\n  //         }\n\n  //         console.log('formValues: ', formValues2.entries());\n\n  //         for (const entry of formValues2.entries()) {\n  //           console.log(entry);\n  //         }\n\n  //         // posting data to the server\n  //         postStudentRecord(formValues2);\n  //       }\n  //       scrollToTop();\n  //       goToNext();\n  //       step.isDone = true;\n  //     }\n  //   });\n  // };\n\n  // handle when user clicks on previous button\n  // const onClickPrev = (goToPrev, steps, step) => {\n  //   handleInitialValues(steps, step);\n  //   console.log('initialValues: ', initialValues);\n  //   if (steps.indexOf(step) <= 0) {\n  //     return;\n  //   }\n  //   scrollToTop();\n  //   goToPrev();\n  // };\n\n  const [classOptions, setClassOptions] = useState([]);\n\n  return (\n    <Card>\n      <CardHeader className=\"px-4\">\n        <h2 className=\"mt-5  titleStyle\">\n          {<IntlMessages id=\"forms.studentRegisterTitle\" />}\n        </h2>\n      </CardHeader>\n      {!isSuccess ? (\n        <CardBody className=\"wizard wizard-default\">\n          <div\n            style={{\n              width: '90%',\n              display: 'flex',\n              justifyContent: 'flex-end',\n            }}\n          >\n            <Button onClick={() => resetformFields()}>پاک کردن فورم</Button>\n          </div>\n          {/* <Wizard>\n   <Steps>\n     <Step id=\"step1\"> */}\n          <div>\n            <h1>معلومات شمولیت جدید</h1>\n            <hr />\n            <Formik\n              enableReinitialize={true}\n              initialValues={initialValues}\n              validationSchema={studentRegisterFormStep_1}\n              onSubmit={postStudentRecord}\n            >\n              {({\n                errors,\n                touched,\n                values,\n                handleSubmit,\n                setFieldTouched,\n                setFieldValue,\n              }) => (\n                <Form className=\"av-tooltip tooltip-label-right has-float-label error-l-100 style \">\n                  <Row>\n                    <Colxx xxs=\"12\">\n                      <div className=\"p-3 w-50\">\n                        <FormGroup className=\"form-group has-float-label \">\n                          <Label style={inputLabel}>مکتوب تاریخ</Label>\n                          <DatePicker\n                            style={{\n                              width: '100%',\n                              height: 40,\n                              borderRadius: 0,\n                              border: 'none',\n                              boxShadow: 'none',\n                            }}\n                            containerClassName=\"form-control fieldStyle\"\n                            name=\"maktoobDate\"\n                            calendar={persian}\n                            locale={persian_fa}\n                            months={persianMonthOptions}\n                            onChange={(e) => {\n                              if (!e) {\n                                setFieldValue('maktoobDate', '');\n                                return;\n                              }\n                              setFieldValue(\n                                'maktoobDate',\n                                new Date(e.toDate()).getFullYear() +\n                                  '-' +\n                                  (new Date(e.toDate()).getMonth() + 1) +\n                                  '-' +\n                                  new Date(e.toDate()).getDate(),\n                              );\n                            }}\n                          />\n                        </FormGroup>\n                        <FormGroup className=\"form-group has-float-label\">\n                          <Label style={inputLabel}>مکتوب نمبر</Label>\n                          <Field\n                            className=\"form-control fieldStyle\"\n                            name=\"maktoobNumber\"\n                            type=\"number\"\n                          />\n                          {errors.maktoobNumber && touched.maktoobNumber ? (\n                            <div className=\"invalid-feedback d-block  bg-danger text-white messageStyle\">\n                              {errors.maktoobNumber}\n                            </div>\n                          ) : null}\n                        </FormGroup>\n                        {/* Institute Name*/}\n                        <FormGroup className=\" has-float-label \">\n                          <Label style={inputLabel}>\n                            <IntlMessages id=\"forms.InstituteLabel\" />\n                            <span style={{ color: 'red' }}>*</span>\n                          </Label>\n                          <FormikReactSelect\n                            name=\"institute\"\n                            id=\"institute\"\n                            value={values.institute}\n                            options={institutes}\n                            onChange={(name, value) => {\n                              setFieldValue('institute', value);\n                              fetchInstDepts(value);\n                            }}\n                            onBlur={setFieldTouched}\n                            isSearchable={false}\n                          />\n                          {errors.institute && touched.institute ? (\n                            <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                              {errors.institute}\n                            </div>\n                          ) : null}\n                        </FormGroup>\n                        {/* Departement  */}\n                        <FormGroup className=\"form-group has-float-label \">\n                          <Label style={inputLabel}>\n                            <IntlMessages id=\"forms.studyDepartment\" />\n                            <span style={{ color: 'red' }}>*</span>\n                          </Label>\n                          <FormikReactSelect\n                            name=\"department\"\n                            id=\"department\"\n                            value={values.department}\n                            options={instDepartmentOptions}\n                            onChange={(name, value) => {\n                              setFieldValue(name, value);\n                              setFieldValue('class', []);\n                              console.log('selected department: ', value.value);\n                              console.log('institute deps: ', instituteDeps);\n                              const dep = instituteDeps?.find(\n                                (d) => d.department === value.value,\n                              );\n                              console.log('departments: ', departments);\n                              const class_ids = dep?.classes.map(\n                                (c) => c.classs,\n                              );\n                              console.log('class_ids', class_ids);\n                              setClassOptions(\n                                classs.filter((c) =>\n                                  class_ids.includes(c.value),\n                                ),\n                              );\n                            }}\n                            onBlur={setFieldTouched}\n                            isSearchable={false}\n                            required\n                          />\n                          {errors.department && touched.department ? (\n                            <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                              {errors.department}\n                            </div>\n                          ) : null}\n                        </FormGroup>\n\n                        {/*  Class name  */}\n                        <FormGroup className=\"form-group has-float-label \">\n                          <Label style={inputLabel}>\n                            <IntlMessages id=\"curriculum.admissionGrade\" />\n                            <span style={{ color: 'red' }}>*</span>\n                          </Label>\n                          <FormikReactSelect\n                            name=\"class\"\n                            id=\"class\"\n                            value={values.class}\n                            options={classOptions}\n                            onChange={setFieldValue}\n                            onBlur={setFieldTouched}\n                            isSearchable={false}\n                            required\n                          />\n                          {errors.class && touched.class ? (\n                            <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                              {errors.class}\n                            </div>\n                          ) : null}\n                        </FormGroup>\n\n                        {/* Eduactional Year*/}\n                        <FormGroup className=\"form-group has-float-label \">\n                          <Label style={inputLabel}>\n                            <IntlMessages id=\"curriculum.admissionYear\" />\n                            <RequiredHash />\n                          </Label>\n\n                          <Field\n                            className=\"form-control fieldStyle\"\n                            name=\"educationalYear\"\n                            type=\"number\"\n                          />\n                          {errors.educationalYear && touched.educationalYear ? (\n                            <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                              {errors.educationalYear}\n                            </div>\n                          ) : null}\n                        </FormGroup>\n\n                        {/* admission method*/}\n                        <FormGroup className=\"form-group has-float-label error-l-100\">\n                          <Label style={inputLabel}>\n                            <IntlMessages id=\"forms.StdInteranceTypeLabel\" />\n                            <span style={{ color: 'red' }}>*</span>\n                          </Label>\n                          <FormikReactSelect\n                            name=\"interanceType\"\n                            id=\"interanceType\"\n                            value={values.interanceType}\n                            options={StdInteranceOptions}\n                            onChange={setFieldValue}\n                            onBlur={setFieldTouched}\n                            isSearchable={false}\n                          />\n                          {errors.interanceType && touched.interanceType ? (\n                            <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                              {errors.interanceType}\n                            </div>\n                          ) : null}\n                        </FormGroup>\n\n                        {/* medium OfInstruction (Teaching Language) */}\n                        <FormGroup className=\"form-group has-float-label \">\n                          <Label style={inputLabel}>\n                            <IntlMessages id=\"forms.mediumOfInstruction\" />\n                            <span style={{ color: 'red' }}>*</span>\n                          </Label>\n                          <FormikReactSelect\n                            name=\"mediumOfInstruction\"\n                            id=\"mediumOfInstruction\"\n                            value={values.mediumOfInstruction}\n                            options={mediumOfInstructionOptions}\n                            onChange={setFieldValue}\n                            onBlur={setFieldTouched}\n                            isSearchable={false}\n                            required\n                          />\n                          {errors.mediumOfInstruction &&\n                          touched.mediumOfInstruction ? (\n                            <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                              {errors.mediumOfInstruction}\n                            </div>\n                          ) : null}\n                        </FormGroup>\n\n                        {/* Study Time */}\n                        <FormGroup className=\"form-group has-float-label error-l-100\">\n                          <Label style={inputLabel}>\n                            <IntlMessages id=\"forms.StudyTimeLabel\" />\n                            <span style={{ color: 'red' }}>*</span>\n                          </Label>\n                          <FormikReactSelect\n                            name=\"studyTime\"\n                            id=\"studyTime\"\n                            value={values.studyTime}\n                            options={studyTimeOptions}\n                            onChange={setFieldValue}\n                            onBlur={setFieldTouched}\n                            isSearchable={false}\n                          />\n                          {errors.studyTime && touched.studyTime ? (\n                            <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                              {errors.studyTime}\n                            </div>\n                          ) : null}\n                        </FormGroup>\n\n                        {/*Student Type*/}\n                        <FormGroup className=\"form-group has-float-label error-l-100\">\n                          <Label style={inputLabel}>\n                            <IntlMessages id=\"forms.StudentTypeLabel\" />\n                            <span style={{ color: 'red' }}>*</span>\n                          </Label>\n                          <FormikReactSelect\n                            name=\"studentType\"\n                            id=\"studentType\"\n                            value={values.studentType}\n                            options={StudentTypeOptions}\n                            onChange={setFieldValue}\n                            onBlur={setFieldTouched}\n                            isSearchable={false}\n                          />\n                          {errors.studentType && touched.studentType ? (\n                            <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                              {errors.studentType}\n                            </div>\n                          ) : null}\n                        </FormGroup>\n                      </div>\n\n                      <h1>معلومات شخصی</h1>\n                      <hr />\n                      <div className=\"p-3 w-50\">\n                        {/* Name */}\n                        {/* test it for some time, if successed, use this approach in all forms */}\n                        <MyFormGroup>\n                          <MyLabel required>\n                            <IntlMessages id=\"forms.StdName\" />\n                          </MyLabel>\n                          <Field\n                            className=\"form-control fieldStyle\"\n                            name=\"name1\"\n                          />\n                          <MyErrorLabel hide={!errors.name1 || !touched.name1}>\n                            {errors.name1}\n                          </MyErrorLabel>\n                        </MyFormGroup>\n\n                        {/* lastname */}\n                        <FormGroup className=\"form-group has-float-label\">\n                          <Label style={inputLabel}>\n                            <IntlMessages id=\"forms.lastName\" />\n                          </Label>\n                          <Field\n                            className=\"form-control fieldStyle\"\n                            name=\"lastName\"\n                          />\n                          {errors.lastName && touched.lastName ? (\n                            <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                              {errors.lastName}\n                            </div>\n                          ) : null}\n                        </FormGroup>\n\n                        {/* Father Name */}\n                        <FormGroup className=\"form-group has-float-label error-l-100\">\n                          <Label style={inputLabel}>\n                            <IntlMessages id=\"forms.StdFatherName\" />\n                            <span style={{ color: 'red' }}>*</span>\n                          </Label>\n                          <Field\n                            className=\"form-control fieldStyle\"\n                            name=\"fatherName\"\n                          />\n                          {errors.fatherName && touched.fatherName ? (\n                            <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                              {errors.fatherName}\n                            </div>\n                          ) : null}\n                        </FormGroup>\n\n                        {/* grandFatherName */}\n                        <FormGroup className=\"form-group has-float-label\">\n                          <Label style={inputLabel}>\n                            <IntlMessages id=\"forms.grandFatherName\" />\n                            <span style={{ color: 'red' }}>*</span>\n                          </Label>\n                          <Field\n                            className=\"form-control fieldStyle\"\n                            name=\"grandFatherName\"\n                          />\n                          {errors.grandFatherName && touched.grandFatherName ? (\n                            <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                              {errors.grandFatherName}\n                            </div>\n                          ) : null}\n                        </FormGroup>\n                        {values.interanceType.value === 'general_kankor' && (\n                          <FormGroup className=\"form-group has-float-label error-l-100\">\n                            <Label style={inputLabel}>\n                              کانکورایدی\n                              {/* <span style={{ color: 'red' }}>*</span> */}\n                            </Label>\n                            <Field\n                              className=\"form-control fieldStyle\"\n                              name=\"kankorId\"\n                            />\n                            {errors.kankorId && touched.kankorId ? (\n                              <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                                {errors.kankorId}\n                              </div>\n                            ) : null}\n                          </FormGroup>\n                        )}\n                        {/* Gender */}\n                        <FormGroup className=\"form-group has-float-label error-l-100\">\n                          <Label style={inputLabel}>\n                            <IntlMessages id=\"gender.gender\" />\n                            <span style={{ color: 'red' }}>*</span>\n                          </Label>\n                          <FormikReactSelect\n                            name=\"gender\"\n                            id=\"gender\"\n                            value={values.gender}\n                            options={genderOptions}\n                            onChange={setFieldValue}\n                            onBlur={setFieldTouched}\n                            isSearchable={false}\n                          />\n                          {errors.gender && touched.gender ? (\n                            <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                              {errors.gender}\n                            </div>\n                          ) : null}\n                        </FormGroup>\n\n                        {/* Tazkira Type */}\n                        <FormGroup className=\"form-group has-float-label error-l-100\">\n                          <Label style={inputLabel}>\n                            <IntlMessages id=\"forms.TazkiraType\" />\n                            <span style={{ color: 'red' }}>*</span>\n                          </Label>\n\n                          <FormikReactSelect\n                            name=\"tazkiraType\"\n                            id=\"tazkiraType\"\n                            value={values.tazkiraType}\n                            options={tazkiraOptions}\n                            onChange={setFieldValue}\n                            onBlur={setFieldTouched}\n                            isSearchable={false}\n                          />\n                          {errors.tazkiraType && touched.tazkiraType ? (\n                            <div className=\"invalid-feedback d-block   bg-danger text-white messageStyle\">\n                              {errors.tazkiraType}\n                            </div>\n                          ) : null}\n                        </FormGroup>\n                        {/* Tazkira Number */}\n                        {values.tazkiraType.value === 'electronic' && (\n                          <FormGroup className=\"form-group has-float-label error-l-100\">\n                            <Label style={inputLabel}>\n                              نمبر تذکره الکترونی\n                              <span style={{ color: 'red' }}>*</span>\n                            </Label>\n                            {/* <Field\n                     className=\"form-control fieldStyle\"\n                     name=\"tazkiraNo\"\n                     type=\"text\"\n                     maxLength=\"14\"\n                     minLength=\"12\"\n                   /> */}\n                            <InputMask\n                              style={{ width: '100%' }}\n                              name=\"tazkiraNo\"\n                              value={values.tazkiraNo}\n                              id=\"ssn\"\n                              mask=\"9999-9999-99999\"\n                              placeholder=\"9999-9999-99999\"\n                              onChange={(e) =>\n                                setFieldValue('tazkiraNo', e.target.value)\n                              }\n                            />\n                            {errors.tazkiraNo && touched.tazkiraNo ? (\n                              <div className=\"invalid-feedback d-block  bg-danger text-white messageStyle\">\n                                {errors.tazkiraNo}\n                              </div>\n                            ) : null}\n                          </FormGroup>\n                        )}\n\n                        {values.tazkiraType.value === 'paper' ? (\n                          <>\n                            {/* Jold Number */}\n                            <div>\n                              <FormGroup className=\"form-group has-float-label error-l-100\">\n                                <Label style={inputLabel}>\n                                  <IntlMessages id=\"teacher.IdCardJoldNoLabel\" />\n                                  <RequiredHash />\n                                </Label>\n                                <Field\n                                  className=\"form-control fieldStyle\"\n                                  name=\"idCardJoldNo\"\n                                  type=\"string\"\n                                />\n                                {errors.idCardJoldNo && touched.idCardJoldNo ? (\n                                  <div className=\"invalid-feedback d-block  bg-danger text-white messageStyle\">\n                                    {errors.idCardJoldNo}\n                                  </div>\n                                ) : null}\n                              </FormGroup>\n                            </div>\n\n                            <div>\n                              {/* Safha */}\n                              <div>\n                                <FormGroup className=\"form-group has-float-label error-l-100\">\n                                  <Label style={inputLabel}>\n                                    <IntlMessages id=\"teacher.IdCardPageNoLabel\" />\n                                    <RequiredHash />\n                                  </Label>\n                                  <Field\n                                    className=\"form-control fieldStyle\"\n                                    name=\"idCardPageNo\"\n                                    type=\"number\"\n                                  />\n                                  {errors.idCardPageNo &&\n                                  touched.idCardPageNo ? (\n                                    <div className=\"invalid-feedback d-block  bg-danger text-white messageStyle\">\n                                      {errors.idCardPageNo}\n                                    </div>\n                                  ) : null}\n                                </FormGroup>\n                              </div>\n                            </div>\n                            <div>\n                              {/* Sabt */}\n                              <div>\n                                <FormGroup className=\"form-group has-float-label error-l-100\">\n                                  <Label style={inputLabel}>\n                                    شماره ثبت\n                                    <RequiredHash />\n                                  </Label>\n                                  <Field\n                                    className=\"form-control fieldStyle\"\n                                    name=\"sabtNo\"\n                                    type=\"number\"\n                                  />\n                                  {errors.sabtNo && touched.sabtNo ? (\n                                    <div className=\"invalid-feedback d-block  bg-danger text-white messageStyle\">\n                                      {errors.sabtNo}\n                                    </div>\n                                  ) : null}\n                                </FormGroup>\n                              </div>\n                            </div>\n                            <div>\n                              <div>\n                                <FormGroup className=\"form-group has-float-label error-l-100\">\n                                  <Label style={inputLabel}>\n                                    شماره صکوک\n                                    <RequiredHash />\n                                  </Label>\n                                  <Field\n                                    className=\"form-control fieldStyle\"\n                                    name=\"sokokNo\"\n                                    type=\"number\"\n                                  />\n                                  {errors.sokokNo && touched.sokokNo ? (\n                                    <div className=\"invalid-feedback d-block  bg-danger text-white messageStyle\">\n                                      {errors.sokokNo}\n                                    </div>\n                                  ) : null}\n                                </FormGroup>\n                              </div>\n                            </div>\n                          </>\n                        ) : null}\n                        {/* Father Duty */}\n                        <FormGroup className=\"form-group has-float-label error-l-100\">\n                          <Label style={inputLabel}>\n                            <IntlMessages id=\"forms.StdFatherDutyLabel\" />\n                            <span style={{ color: 'red' }}>*</span>\n                          </Label>\n                          <Field\n                            className=\"form-control fieldStyle\"\n                            name=\"fatherDuty\"\n                          />\n                          {errors.fatherDuty && touched.fatherDuty ? (\n                            <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                              {errors.fatherDuty}\n                            </div>\n                          ) : null}\n                        </FormGroup>\n\n                        {/* Father duty place */}\n                        <FormGroup className=\"form-group has-float-label error-l-100\">\n                          <Label style={inputLabel}>\n                            <IntlMessages id=\"forms.StdFatherDutyLocationLabel\" />\n                          </Label>\n                          <Field\n                            className=\"form-control fieldStyle\"\n                            name=\"fatherDutyLocation\"\n                          />\n                          {errors.fatherDutyLocation &&\n                          touched.fatherDutyLocation ? (\n                            <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                              {errors.fatherDutyLocation}\n                            </div>\n                          ) : null}\n                        </FormGroup>\n\n                        {/* year, month and day of birth */}\n                        <FormGroup className=\"form-group has-float-label error-l-100 \">\n                          <Label style={inputLabel}>\n                            <IntlMessages id=\"label.yearOfBirth\" />\n                            <span style={{ color: 'red' }}>*</span>\n                          </Label>\n                          <Field\n                            className=\"form-control fieldStyle\"\n                            name=\"DoB\"\n                            type=\"number\"\n                            min={1300}\n                            max={1450}\n                          />\n                          {errors.DoB && touched.DoB ? (\n                            <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                              {errors.DoB}\n                            </div>\n                          ) : null}\n                        </FormGroup>\n\n                        <FormGroup className=\"form-group has-float-label error-l-100 \">\n                          <Label style={inputLabel}>\n                            <IntlMessages id=\"label.monthOfBirth\" />\n                          </Label>\n                          <Field\n                            className=\"form-control fieldStyle\"\n                            name=\"monthOfBirth\"\n                            type=\"number\"\n                            min={1}\n                            max={12}\n                            required={false}\n                          />\n                          {errors.monthOfBirth && touched.monthOfBirth ? (\n                            <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                              {errors.monthOfBirth}\n                            </div>\n                          ) : null}\n                        </FormGroup>\n\n                        <FormGroup className=\"form-group has-float-label error-l-100 \">\n                          <Label style={inputLabel}>\n                            <IntlMessages id=\"label.dayOfBirth\" />\n                          </Label>\n                          <Field\n                            className=\"form-control fieldStyle\"\n                            name=\"dayOfBirth\"\n                            type=\"number\"\n                            min={1}\n                            max={31}\n                            required={false}\n                          />\n                          {errors.dayOfBirth && touched.dayOfBirth ? (\n                            <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                              {errors.dayOfBirth}\n                            </div>\n                          ) : null}\n                        </FormGroup>\n\n                        {/* Place of birth */}\n                        <FormGroup className=\"form-group has-float-label error-l-100\">\n                          <Label style={inputLabel}>\n                            <IntlMessages id=\"forms.PlaceOfBirthLabel\" />\n                          </Label>\n                          <Field\n                            className=\"form-control fieldStyle\"\n                            name=\"placeOfBirth\"\n                          />\n                          {errors.placeOfBirth && touched.placeOfBirth ? (\n                            <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                              {errors.placeOfBirth}\n                            </div>\n                          ) : null}\n                        </FormGroup>\n\n                        {/* Student English Name */}\n                        {/* <FormGroup className=\"form-group has-float-label error-l-100\">\n                          <Label style={inputLabel}>\n                            <IntlMessages id=\"forms.Eng_name\" />\n                          </Label>\n                          <Field\n                            className=\"form-control fieldStyle\"\n                            name=\"englishName\"\n                          />\n                          {errors.englishName && touched.englishName ? (\n                            <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                              {errors.englishName}\n                            </div>\n                          ) : null}\n                        </FormGroup> */}\n\n                        {/* englishLastname */}\n                        {/* <FormGroup className=\"form-group has-float-label\">\n                          <Label style={inputLabel}>\n                            <IntlMessages id=\"forms.lastNameEng\" />\n                          </Label>\n                          <Field\n                            className=\"form-control fieldStyle\"\n                            name=\"lastNameEng\"\n                          />\n                          {errors.lastNameEng && touched.lastNameEng ? (\n                            <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                              {errors.lastNameEng}\n                            </div>\n                          ) : null}\n                        </FormGroup> */}\n\n                        {/*Students Father English Name */}\n                        {/* <FormGroup className=\"form-group has-float-label error-l-100\">\n                          <Label style={inputLabel}>\n                            <IntlMessages id=\"forms.Std_father_Eng_Name\" />\n                          </Label>\n                          <Field\n                            className=\"form-control fieldStyle\"\n                            name=\"fatherEngName\"\n                          />\n                          {errors.fatherEngName && touched.fatherEngName ? (\n                            <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                              {errors.fatherEngName}\n                            </div>\n                          ) : null}\n                        </FormGroup> */}\n\n                        {/* Contact No */}\n                        <FormGroup className=\"form-group has-float-label error-l-100 \">\n                          <Label style={inputLabel}>\n                            <IntlMessages id=\"teacher.PhoneNoLabel\" />\n                            {/* <span style={{ color: 'red' }}>*</span> */}\n                          </Label>\n                          <Field\n                            className=\"form-control fieldStyle\"\n                            name=\"phoneNo\"\n                            type=\"text\"\n                          />\n                          {errors.phoneNo && touched.phoneNo ? (\n                            <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                              {errors.phoneNo}\n                            </div>\n                          ) : null}\n                        </FormGroup>\n\n                        {/* Email Address */}\n                        {/* <FormGroup className=\"form-group has-float-label error-l-100\">\n                          <Label style={inputLabel}>\n                            <IntlMessages id=\"teacher.EmailLabel\" />\n                          </Label>\n                          <Field\n                            className=\"form-control fieldStyle\"\n                            name=\"email\"\n                            type=\"email\"\n                          />\n                          {errors.email && touched.email ? (\n                            <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                              {errors.email}\n                            </div>\n                          ) : null}\n                        </FormGroup> */}\n                        <h6 className=\" mb-4\">\n                          {<IntlMessages id=\"forms.PermanentAddressLabel\" />}\n                        </h6>\n\n                        {/* province permanent*/}\n                        <FormGroup className=\"form-group has-float-label error-l-100\">\n                          <Label style={inputLabel}>\n                            <IntlMessages id=\"forms.ProvinceLabel\" />\n                            <span style={{ color: 'red' }}>*</span>\n                          </Label>\n                          <FormikReactSelect\n                            name=\"province\"\n                            id=\"province\"\n                            value={values.province}\n                            options={provinces}\n                            onChange={(name, value) => {\n                              setFieldValue('district', []);\n                              setFieldValue(name, value);\n                            }}\n                            isSearchable={true}\n                            onBlur={setFieldTouched}\n                          />\n                          {errors.province && touched.province ? (\n                            <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                              {errors.province}\n                            </div>\n                          ) : null}\n                        </FormGroup>\n\n                        {/* District  permanent*/}\n                        <FormGroup className=\"form-group has-float-label error-l-100\">\n                          <Label style={inputLabel}>\n                            <IntlMessages id=\"forms.DistrictLabel\" />\n                            <span style={{ color: 'red' }}>*</span>\n                          </Label>\n                          <FormikReactSelect\n                            name=\"district\"\n                            id=\"district\"\n                            value={values.district}\n                            options={districts?.filter(\n                              (district) =>\n                                district.province === values.province.value,\n                            )}\n                            onChange={setFieldValue}\n                            onBlur={setFieldTouched}\n                            isSearchable={true}\n                          />\n                          {errors.district && touched.district ? (\n                            <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                              {errors.district}\n                            </div>\n                          ) : null}\n                        </FormGroup>\n\n                        {/* village permanent */}\n                        <FormGroup className=\"form-group has-float-label error-l-100\">\n                          <Label style={inputLabel}>\n                            <IntlMessages id=\"forms.VillageLabel\" />\n                            <span style={{ color: 'red' }}>*</span>\n                          </Label>\n                          <Field\n                            className=\"form-control fieldStyle\"\n                            name=\"village\"\n                          />\n                          {errors.village && touched.village ? (\n                            <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                              {errors.village}\n                            </div>\n                          ) : null}\n                        </FormGroup>\n                        <h6 className=\" mb-4\">\n                          {<IntlMessages id=\"forms.CurrentAddresslabel\" />}\n                        </h6>\n                        {/* Current Address */}\n                        {/* province Current */}\n                        <FormGroup className=\"form-group has-float-label error-l-100\">\n                          <Label style={inputLabel}>\n                            <IntlMessages id=\"forms.ProvinceLabel\" />\n                            <span style={{ color: 'red' }}>*</span>\n                          </Label>\n                          <FormikReactSelect\n                            name=\"C_Province\"\n                            id=\"C_Province\"\n                            value={values.C_Province}\n                            options={provinces}\n                            isSearchable={true}\n                            onChange={(name, value) => {\n                              setFieldValue('C_District', []);\n                              setFieldValue(name, value);\n                            }}\n                            onBlur={setFieldTouched}\n                          />\n                          {errors.C_Province && touched.C_Province ? (\n                            <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                              {errors.C_Province}\n                            </div>\n                          ) : null}\n                        </FormGroup>\n\n                        {/* District */}\n                        <FormGroup className=\"form-group has-float-label error-l-100\">\n                          <Label style={inputLabel}>\n                            <IntlMessages id=\"forms.DistrictLabel\" />\n                            <span style={{ color: 'red' }}>*</span>\n                          </Label>\n                          <FormikReactSelect\n                            name=\"C_District\"\n                            id=\"C_District\"\n                            value={values.C_District}\n                            options={districts?.filter(\n                              (district) =>\n                                district.province === values.C_Province.value,\n                            )}\n                            onChange={setFieldValue}\n                            onBlur={setFieldTouched}\n                            isSearchable={true}\n                          />\n                          {errors.C_District && touched.C_District ? (\n                            <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                              {errors.C_District}\n                            </div>\n                          ) : null}\n                        </FormGroup>\n\n                        {/* village */}\n                        <FormGroup className=\"form-group has-float-label error-l-100\">\n                          <Label style={inputLabel}>\n                            <IntlMessages id=\"forms.VillageLabel\" />\n                            <span style={{ color: 'red' }}>*</span>\n                          </Label>\n                          <Field\n                            className=\"form-control fieldStyle\"\n                            name=\"C_Village\"\n                          />\n                          {errors.C_Village && touched.C_Village ? (\n                            <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                              {errors.C_Village}\n                            </div>\n                          ) : null}\n                        </FormGroup>\n                        {/* Education */}\n                      </div>\n                      <h1>سوابق تعلیمی</h1>\n                      <hr />\n                      <div className=\"p-3 w-50\">\n                        <FormGroup className=\"form-group has-float-label error-l-100\">\n                          <Label style={inputLabel}>\n                            <IntlMessages id=\"teacher.LevelOfEducationLabel\" />\n                            <span style={{ color: 'red' }}>*</span>\n                          </Label>\n                          <FormikReactSelect\n                            name=\"levelOfEducation\"\n                            id=\"levelOfEducation\"\n                            value={values.levelOfEducation}\n                            options={educationLevelOptions}\n                            onChange={setFieldValue}\n                            onBlur={setFieldTouched}\n                            isSearchable={false}\n                          />\n                          {errors.levelOfEducation &&\n                          touched.levelOfEducation ? (\n                            <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                              {errors.levelOfEducation}\n                            </div>\n                          ) : null}\n                        </FormGroup>\n\n                        <FormGroup className=\"form-group has-float-label error-l-100\">\n                          <Label style={inputLabel}>\n                            <IntlMessages id=\"forms.StdGraduationYearLabel\" />\n                            <span style={{ color: 'red' }}>*</span>\n                          </Label>\n                          {/* <FormikReactSelect\n                           name=\"graduationYear\"\n                           id=\"graduationYear\"\n                           value={values.graduationYear}\n                           options={educationalYearsOptions}\n                           onChange={setFieldValue}\n                           onBlur={setFieldTouched}\n                           isSearchable={false}\n                           required\n                         /> */}\n                          <Field\n                            className=\"form-control fieldStyle\"\n                            name=\"graduationYear\"\n                            type=\"number\"\n                          />\n                          {errors.graduationYear && touched.graduationYear ? (\n                            <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                              {errors.graduationYear}\n                            </div>\n                          ) : null}\n                        </FormGroup>\n                        {/* Student Maktab*/}\n                        <FormGroup className=\"form-group has-float-label error-l-100\">\n                          <Label style={inputLabel}>\n                            <IntlMessages id=\"forms.StPreShcoolLabel\" />\n                            <span style={{ color: 'red' }}>*</span>\n                          </Label>\n                          <Field\n                            className=\"form-control fieldStyle\"\n                            name=\"preSchool\"\n                          />\n                          {errors.preSchool && touched.preSchool ? (\n                            <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                              {errors.preSchool}\n                            </div>\n                          ) : null}\n                        </FormGroup>\n\n                        {/*School province*/}\n                        <FormGroup className=\"form-group has-float-label error-l-100\">\n                          <Label style={inputLabel}>\n                            <IntlMessages id=\"forms.StdSchoolProvinceLabel\" />\n                            <span style={{ color: 'red' }}>*</span>\n                          </Label>\n                          <FormikReactSelect\n                            name=\"schoolProvince\"\n                            id=\"schoolProvince\"\n                            value={values.schoolProvince}\n                            options={provinces}\n                            onChange={setFieldValue}\n                            onBlur={setFieldTouched}\n                            isSearchable={true}\n                          />\n                          {errors.schoolProvince && touched.schoolProvince ? (\n                            <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                              {errors.schoolProvince}\n                            </div>\n                          ) : null}\n                        </FormGroup>\n\n                        <FormGroup className=\"form-group has-float-label error-l-100 \">\n                          <Label style={inputLabel}>معلولیت/معیوبیت</Label>\n                          <FormikReactSelect\n                            name=\"disability\"\n                            id=\"disability\"\n                            value={values.disability}\n                            options={disabilityOptions}\n                            onChange={setFieldValue}\n                            onBlur={setFieldTouched}\n                            isSearchable={false}\n                            isClearable={true}\n                            // style={{ fontSize: '100%' }}\n                          />\n                          {errors.disability && touched.disability ? (\n                            <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                              {errors.disability}\n                            </div>\n                          ) : null}\n                        </FormGroup>\n\n                        {/* Student Id */}\n                        <FormGroup className=\"form-group has-float-label\">\n                          <Label style={inputLabel}>\n                            <IntlMessages id=\"student.studentId\" />\n                            <span style={{ color: 'red' }}>*</span>\n                          </Label>\n                          <Field\n                            className=\"form-control fieldStyle\"\n                            name=\"studentId\"\n                            type=\"number\"\n                          />\n                          {errors.studentId && touched.studentId ? (\n                            <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                              {errors.studentId}\n                            </div>\n                          ) : null}\n                        </FormGroup>\n\n                        {/* Upload Photo */}\n                        <FormGroup className=\"form-group has-float-label error-l-100\">\n                          <InputGroupAddon addonType=\"prepend\">\n                            <IntlMessages id=\"student.uploadPhoto\" />\n                          </InputGroupAddon>\n                          <FormControl\n                            name=\"file\"\n                            type=\"file\"\n                            className=\"form-control fieldStyle\"\n                            onChange={handleFileChange}\n                          />\n                          {errors.file && touched.file ? (\n                            <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                              {errors.file}\n                            </div>\n                          ) : null}\n                        </FormGroup>\n                      </div>\n                    </Colxx>\n                  </Row>\n                  <button className=\"btn btn-primary\" onClick={handleSubmit}>\n                    ثبت\n                    {loading && <Spinner />}\n                  </button>\n                </Form>\n              )}\n            </Formik>\n          </div>\n          {/* </Step>\n   </Steps>\n </Wizard> */}\n        </CardBody>\n      ) : (\n        <div\n          className=\"wizard-basic-step text-center pt-3 \"\n          style={{ minHeight: '400px' }}\n        >\n          <div>\n            <h1 className=\"mb-2\">\n              <IntlMessages id=\"wizard.content-thanks\" />\n            </h1>\n            <h3>\n              <IntlMessages id=\"wizard.registered\" />\n            </h3>\n            <Button\n              className=\"m-5 bg-primary\"\n              onClick={() => setIsSuccess(false)}\n            >\n              {loading ? <Spinner /> : <IntlMessages id=\"button.back\" />}\n            </Button>\n          </div>\n        </div>\n      )}\n    </Card>\n  );\n};\nexport default injectIntl(StudentRegistration);\n"],"names":["MyFormGroup","_ref","children","props","_objectWithoutProperties","_excluded","_jsx","FormGroup","_objectSpread","className","MyLabel","_ref2","required","_excluded2","_jsxs","Label","style","inputLabel","color","MyErrorLabel","_ref3","hide","_excluded3","RequiredHash","fontSize","fontWeight","buttonStyle","FormikReactSelect","name","value","options","isMulti","onChange","onBlur","defaultValue","onClick","isDisabled","isLoading","isClearable","isRtl","isSearchable","placeholder","Select","concat","classNamePrefix","IntlMessages","id","initial","val","FormikInputText","_ref9","otherProps","Input","height","borderRadius","FormikDatePicker","_ref11","DatePicker","selected","_val","injectIntl","values","intl","_useContext","useContext","AuthContext","provinces","districts","institutes","classs","classes","sectors","contextFields","departments","_useState","useState","_useState2","_slicedToArray","setSelectedFile","_useState3","_useState4","instituteDeps","setInstituteDeps","_useState5","_useState6","_useState7","_useState8","_useState9","_useState10","loading","setLoading","_useState11","_useState12","isSuccess","setIsSuccess","_useState13","_useState14","instDepartmentOptions","setInstDepartmentOptions","formValues","JSON","parse","localStorage","getItem","_useState15","maktoobNumber","maktoobDate","kankorId","name1","englishName","lastName","lastNameEng","fatherName","fatherDuty","fatherEngName","grandFatherName","fatherDutyLocation","DoB","monthOfBirth","dayOfBirth","gender","genderOptions","find","op","_formValues$gender","tazkiraNo","sokokNo","idCardPageNo","idCardJoldNo","sabtNo","tazkiraType","tazkiraOptions","_formValues$tazkiraTy","phoneNo","email","placeOfBirth","levelOfEducation","educationLevelOptions","_formValues$levelOfEd","preSchool","graduationYear","schoolProvince","_formValues$schoolPro","province","_formValues$province","C_Province","_formValues$C_Provinc","C_District","_formValues$C_Distric","district","_formValues$district","village","C_Village","institute","_formValues$institute","class","_formValues$class","educationalYear","department","_formValues$departmen","mediumOfInstruction","mediumOfInstructionOptions","_formValues$mediumOfI","studentId","studyTime","studyTimeOptions","_formValues$studyTime","interanceType","StdInteranceOptions","_formValues$interance","studentType","StudentTypeOptions","_formValues$studentTy","sector","_formValues$sector","file","disability","disabilityOptions","_formValues$disabilit","_useState16","initialValues","handleFileChange","event","currentTarget","files","createNotification","type","cName","NotificationManager","success","error","info","storeDataToLocalStorage","data","setItem","stringify","postStudentRecord","_asyncToGenerator","_regeneratorRuntime","mark","_callee","newFields","setFieldError","localStorageData","_error$response","_error$response$data","_error$response$data$","_error$response2","_error$response2$data","_error$response2$data2","wrap","_context","prev","next","maktob_date","maktob_number","student_id","kankor_id","previous_grade_year","label","previous_school_name","previous_school_province","previous_grade","student_type","english_name","last_name","english_last_name","father_name","english_father_name","phone_number","grandfather_name","cover_number","page_number","sabt_number","tazkira_type","registration_number","sokok_number","main_province","main_district","main_village","current_province","current_district","current_village","year_of_birth","month_of_birth","day_of_birth","father_profession","father_place_of_duty","admission_method","educational_year","teaching_language","shift","place_of_birth","console","log","callApi","sent","t0","response","errors","finish","stop","_x","_x2","apply","arguments","_useState17","_useState18","classOptions","setClassOptions","Card","CardHeader","minHeight","Button","Spinner","CardBody","width","display","justifyContent","removeItem","window","location","reload","message","warning","Formik","enableReinitialize","validationSchema","studentRegisterFormStep_1","onSubmit","_ref4","touched","handleSubmit","setFieldTouched","setFieldValue","Form","Row","Colxx","xxs","border","boxShadow","containerClassName","calendar","persian","locale","persian_fa","months","persianMonthOptions","e","Date","toDate","getFullYear","getMonth","getDate","Field","inst","instId","then","newOptions","filter","dep","department_ids","reduce","acc","cur","i","add","Set","has","fetchInstDepts","d","class_ids","map","c","includes","InputMask","mask","target","_Fragment","min","max","InputGroupAddon","addonType","FormControl"],"sourceRoot":""}