{"version":3,"file":"static/js/4670.d1d46914.chunk.js","mappings":"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","sources":["config/styling.js","containers/form-validations/FormikFields.js","components/form_components/form_components.jsx","views/app/students/bio/register.js"],"sourcesContent":["export const inputLabel = { fontSize: 16, fontWeight: 'bold' };\nexport const buttonStyle = { fontSize: 16 };\n","import React from 'react';\nimport Select from 'react-select';\nimport { CustomInput } from 'reactstrap';\nimport IntlMessages from 'helpers/IntlMessages';\n\nimport TagsInput from 'react-tagsinput';\nimport 'react-tagsinput/react-tagsinput.css';\nimport Switch from 'rc-switch';\nimport 'rc-switch/assets/index.css';\n\nimport DatePicker from 'react-multi-date-picker';\n\nimport 'react-datepicker/dist/react-datepicker.css';\nimport { Input } from 'antd';\n\nconst FormikReactSelect = ({\n  name,\n  value,\n  options,\n  isMulti,\n  className,\n  onChange,\n  onBlur,\n  onClick,\n  defaultValue,\n  isDisabled,\n  isLoading,\n  isClearable,\n  isRtl,\n  isSearchable,\n  placeholder,\n}) => {\n  const handleChange = (val) => {\n    onChange(name, val);\n  };\n\n  const handleBlur = () => {\n    onBlur(name, true);\n  };\n\n  return (\n    <Select\n      className={`react-select ${className}`}\n      classNamePrefix=\"react-select\"\n      placeholder={\n        placeholder || <IntlMessages id=\"forms.EducationLevelDefaultValue\" />\n      }\n      options={options}\n      isMulti={isMulti}\n      initial\n      onChange={handleChange}\n      onBlur={handleBlur}\n      value={value}\n      defaultValue={defaultValue}\n      isDisabled={isDisabled}\n      isLoading={isLoading}\n      isClearable={isClearable}\n      isRtl={isRtl}\n      isSearchable={isSearchable}\n    />\n  );\n};\n\nconst FormikCheckboxGroup = ({\n  name,\n  value,\n  options,\n  inline = false,\n  onChange,\n  onBlur,\n}) => {\n  const handleChange = (val) => {\n    const valueArray = [...value] || [];\n    if (!valueArray.includes(val)) {\n      valueArray.push(val);\n    } else {\n      valueArray.splice(valueArray.indexOf(val), 1);\n    }\n    onChange(name, valueArray);\n  };\n\n  const handleBlur = () => {\n    onBlur(name, true);\n  };\n\n  return (\n    <>\n      {options.map((child, index) => {\n        return (\n          <div\n            key={`${name}_${child.value}_${index}`}\n            className={`position-relative form-check ${\n              inline ? 'form-check-inline' : ''\n            }`}\n          >\n            <input\n              name={name}\n              type=\"checkbox\"\n              className=\"form-check-input\"\n              onChange={() => handleChange(child.value)}\n              onBlur={handleBlur}\n              defaultChecked={value.includes(child.value)}\n              disabled={child.disabled}\n            />\n            <label className=\"form-check-label\">{child.label}</label>\n          </div>\n        );\n      })}\n    </>\n  );\n};\n\nconst FormikCustomCheckboxGroup = ({\n  name,\n  value,\n  options,\n  inline = false,\n  onChange,\n  onBlur,\n}) => {\n  const handleChange = (val) => {\n    const valueArray = [...value] || [];\n    if (!valueArray.includes(val)) {\n      valueArray.push(val);\n    } else {\n      valueArray.splice(valueArray.indexOf(val), 1);\n    }\n    onChange(name, valueArray);\n  };\n\n  const handleBlur = () => {\n    onBlur(name, true);\n  };\n\n  return (\n    <>\n      {options.map((child, index) => {\n        return (\n          <CustomInput\n            key={`${name}_${child.value}_${index}`}\n            id={`${name}_${child.value}_${index}`}\n            type=\"checkbox\"\n            name={child.name}\n            label={child.label}\n            onChange={() => handleChange(child.value)}\n            onBlur={handleBlur}\n            checked={value.includes(child.value)}\n            disabled={child.disabled}\n            inline={inline}\n          />\n        );\n      })}\n    </>\n  );\n};\n\nconst FormikCheckbox = ({ name, value, disabled, label, onChange, onBlur }) => {\n  const handleChange = (_event) => {\n    onChange(name, !value);\n  };\n  const handleBlur = () => {\n    onBlur(name, true);\n  };\n  return (\n    <div className=\"position-relative form-check form-check-inline\">\n      <input\n        name={name}\n        type=\"checkbox\"\n        className=\"form-check-input\"\n        onChange={handleChange}\n        onBlur={handleBlur}\n        checked={value}\n        disabled={disabled}\n      />\n      <label className=\"form-check-label\">{label}</label>\n    </div>\n  );\n};\n\nconst FormikCustomCheckbox = ({\n  name,\n  value,\n  disabled,\n  label,\n  onChange,\n  onBlur,\n}) => {\n  const handleChange = (_event) => {\n    onChange(name, !value);\n  };\n  const handleBlur = () => {\n    onBlur(name, true);\n  };\n  return (\n    <CustomInput\n      type=\"checkbox\"\n      id={name}\n      name={name}\n      label={label}\n      onChange={handleChange}\n      onBlur={handleBlur}\n      checked={value}\n      disabled={disabled}\n      inline\n    />\n  );\n};\n\nconst FormikRadioButtonGroup = ({\n  name,\n  value,\n  options,\n  inline = false,\n  onChange,\n  onBlur,\n}) => {\n  const handleChange = (val) => {\n    onChange(name, val);\n  };\n\n  const handleBlur = () => {\n    onBlur(name, true);\n  };\n\n  return (\n    <>\n      {options.map((child, index) => {\n        return (\n          <div\n            key={`${name}_${child.value}_${index}`}\n            className={`position-relative form-check ${\n              inline ? 'form-check-inline' : ''\n            }`}\n          >\n            <input\n              id={child.value}\n              name={name}\n              type=\"radio\"\n              className=\"form-check-input\"\n              onChange={() => handleChange(child.value)}\n              onBlur={handleBlur}\n              defaultChecked={value === child.value}\n              disabled={child.disabled}\n            />\n            <label className=\"form-check-label\">{child.label}</label>\n          </div>\n        );\n      })}\n    </>\n  );\n};\n\nconst FormikCustomRadioGroup = ({\n  name,\n  value,\n  options,\n  inline = false,\n  onChange,\n  onBlur,\n}) => {\n  const handleChange = (val) => {\n    onChange(name, val);\n  };\n\n  const handleBlur = () => {\n    onBlur(name, true);\n  };\n\n  return (\n    <>\n      {options.map((child, index) => {\n        return (\n          <CustomInput\n            key={`${name}_${child.value}_${index}`}\n            type=\"radio\"\n            id={`${name}_${child.value}_${index}`}\n            name={child.name}\n            label={child.label}\n            onChange={() => handleChange(child.value)}\n            onBlur={handleBlur}\n            checked={value === child.value}\n            disabled={child.disabled}\n            inline={inline}\n          />\n        );\n      })}\n    </>\n  );\n};\n\nconst FormikTagsInput = ({ name, value, onChange, onBlur }) => {\n  const handleChange = (val) => {\n    onBlur(name, true);\n    onChange(name, val);\n  };\n\n  return <TagsInput name={name} value={value} onChange={handleChange} />;\n};\n\nconst FormikInputText = ({ name, value, onChange, onBlur, ...otherProps }) => {\n  // const handleChange = (val) => {\n  //   onBlur(name, true);\n  //   onChange(name, val);\n  // };\n  return (\n    <Input\n      name={name}\n      value={value}\n      onChange={onChange}\n      style={{ height: 48, borderRadius: 0 }}\n      {...otherProps}\n    />\n  );\n};\n\nconst FormikSwitch = ({ name, value, className, onChange, onBlur }) => {\n  const handleChange = (val) => {\n    onBlur(name, true);\n    onChange(name, val);\n  };\n\n  return (\n    <Switch\n      name={name}\n      className={className}\n      checked={value}\n      onChange={handleChange}\n    />\n  );\n};\n\nconst FormikDatePicker = ({ name, value, className, onChange, onBlur }) => {\n  const handleChange = (val) => {\n    onChange(name, val);\n  };\n\n  const handleBlur = (_val) => {\n    onBlur(name, true);\n  };\n\n  return (\n    <DatePicker\n      name={name}\n      className={className}\n      selected={value}\n      onChange={handleChange}\n      onBlur={handleBlur}\n    />\n  );\n};\n\nexport {\n  FormikReactSelect,\n  FormikCheckboxGroup,\n  FormikCustomCheckboxGroup,\n  FormikCheckbox,\n  FormikCustomCheckbox,\n  FormikRadioButtonGroup,\n  FormikCustomRadioGroup,\n  FormikTagsInput,\n  FormikInputText,\n  FormikSwitch,\n  FormikDatePicker,\n};\n","import { inputLabel } from 'config/styling';\nimport { FormGroup, Label } from 'reactstrap';\n\nexport const MyFormGroup = ({ children, ...props }) => (\n  <FormGroup className=\"form-group has-float-label error-l-100 \" {...props}>\n    {children}\n  </FormGroup>\n);\n\nexport const MyLabel = ({ children, required, ...props }) => (\n  <Label style={inputLabel} {...props}>\n    {children}\n    {required && <span style={{ color: 'red' }}>*</span>}\n  </Label>\n);\n\nexport const MyErrorLabel = ({ children, hide, ...props }) => {\n  if (hide) return null;\n  return (\n    <div\n      className=\"invalid-feedback d-block bg-danger text-white messageStyle\"\n      {...props}\n    >\n      {children}\n    </div>\n  );\n};\n\nexport const RequiredHash = () => <span style={{ color: 'red' }}>*</span>;\n","import React, { useState, useContext } from 'react';\n// import { NavLink } from 'react-router-dom';\nimport { FormControl } from 'react-bootstrap';\nimport './../../.././../assets/css/global-style.css';\nimport { InputMask } from 'primereact/inputmask';\nimport {\n  fetchDistricts,\n  genderOptions,\n  mediumOfInstructionOptions,\n  StdInteranceOptions,\n  StudentTypeOptions,\n  studyTimeOptions,\n  tazkiraOptions,\n  educationLevelOptions,\n  disabilityOptions,\n  persianMonthOptions,\n} from '../../global-data/options';\nimport DatePicker from 'react-multi-date-picker';\nimport persian from 'react-date-object/calendars/persian';\nimport persian_fa from 'react-date-object/locales/persian_fa';\nimport { useHistory } from 'react-router-dom/cjs/react-router-dom.min';\nimport {\n  Row,\n  Card,\n  CardBody,\n  CardHeader,\n  FormGroup,\n  Label,\n  // Spinner,\n  Button,\n  InputGroupAddon,\n  Spinner,\n} from 'reactstrap';\n// import { Wizard, Steps, Step } from 'react-albus';\n\nimport {\n  studentRegisterFormStep_1,\n  // studentRegisterFormStep_2,\n  // studentRegisterFormStep_3,\n} from '../../global-data/forms-validation';\nimport { FormikReactSelect } from 'containers/form-validations/FormikFields';\nimport { injectIntl } from 'react-intl';\nimport { Formik, Form, Field } from 'formik';\nimport IntlMessages from 'helpers/IntlMessages';\n// import BottomNavigation from 'components/wizard/BottomNavigation';\nimport { NotificationManager } from 'components/common/react-notifications';\n\nimport { Colxx } from 'components/common/CustomBootstrap';\nimport callApi from 'helpers/callApi';\nimport { AuthContext } from 'context/AuthContext';\nimport { message } from 'antd';\nimport { inputLabel } from 'config/styling';\nimport {\n  MyErrorLabel,\n  MyFormGroup,\n  MyLabel,\n  RequiredHash,\n} from 'components/form_components/form_components';\n\nconst StudentRegistration = ({ intl }, values) => {\n  const {\n    provinces,\n    districts,\n    institutes,\n    classes: classs,\n    contextFields: fieldList,\n    sectors,\n    departments,\n  } = useContext(AuthContext);\n\n  const [selectedFile, setSelectedFile] = useState(null);\n\n  const [instituteDeps, setInstituteDeps] = useState([]);\n  const history = useHistory();\n  // const [fields, setFields] = useState({\n  //   name1: '',\n  //   fatherName: '',\n  //   lastName: '',\n  //   lastNameEng: '',\n  //   fatherDuty: '',\n  //   englishName: '',\n  //   fatherEngName: '',\n  //   grandFatherName: '',\n  //   fatherDutyLocation: '',\n  //   placeOfBirth: '',\n  //   DoB: '',\n  //   monthOfBirth: '',\n  //   dayOfBirth: '',\n  //   gender: '',\n  //   tazkiraNo: '',\n  //   phoneNo: '',\n  //   email: '',\n  //   idCardPageNo: '',\n  //   sabtNo: '',\n  //   sokokNo: '',\n  //   idCardJoldNo: '',\n  //   tazkiraType: tazkiraOptions[0],\n  //   levelOfEducation: '',\n  //   preSchool: '',\n  //   graduationYear: '',\n  //   schoolProvince: '',\n  //   province: '',\n  //   C_Province: '',\n  //   C_District: '',\n  //   district: '',\n  //   village: '',\n  //   C_Village: '',\n  //   institute: '',\n  //   class: '',\n  //   educationalYear: '',\n  //   department: '',\n  //   mediumOfInstruction: '',\n  //   // kankorId: initialKankorId,\n  //   studentId: '',\n  //   studyTime: '',\n  //   interanceType: '',\n  //   studentType: '',\n  //   batch: '',\n  //   field: '',\n  //   sector: '',\n  //   file: '',\n  // });\n\n  const [mainDistrictOptions, setMainDistrictOptions] = useState([]);\n  const [currentDistrictOptions, setCurrentDistrictOptions] = useState([]);\n\n  const [loading, setLoading] = useState(false);\n  const [isSuccess, setIsSuccess] = useState(false);\n  const [instDepartmentOptions, setInstDepartmentOptions] = useState([]);\n  // get data of each step from localstorage\n  const formValues = JSON.parse(localStorage.getItem('formData'));\n  // used arrays as intial values because other things will throw error\n  const [initialValues, setInitialValues] = useState({\n    maktoobNumber: formValues?.maktoobNumber || '',\n    maktoobDate: formValues?.maktoobDate || '',\n    kankorId: formValues?.kankorId || '',\n    name1: formValues?.name1 || '',\n    englishName: formValues?.englishName || '',\n    lastName: formValues?.lastName || '',\n    lastNameEng: formValues?.lastNameEng || '',\n    fatherName: formValues?.fatherName || '',\n    fatherDuty: formValues?.fatherDuty || '',\n    fatherEngName: formValues?.fatherEngName || '',\n    grandFatherName: formValues?.grandFatherName || '',\n    fatherDutyLocation: formValues?.fatherDutyLocation || '',\n    DoB: formValues?.DoB || '',\n    monthOfBirth: formValues?.monthOfBirth || '',\n    dayOfBirth: formValues?.dayOfBirth || '',\n    gender:\n      genderOptions.find((op) => op.value == formValues?.gender?.value) || [],\n    tazkiraNo: formValues?.tazkiraNo || '',\n    sokokNo: formValues?.sokokNo || '',\n    idCardPageNo: formValues?.idCardPageNo || '',\n    idCardJoldNo: formValues?.idCardJoldNo || '',\n    sabtNo: formValues?.sabtNo || '',\n    tazkiraType:\n      tazkiraOptions.find(\n        (op) => op.value === formValues?.tazkiraType?.value,\n      ) || tazkiraOptions[0],\n    phoneNo: formValues?.phoneNo || '',\n    email: formValues?.email || '',\n    placeOfBirth: formValues?.placeOfBirth || '',\n\n    levelOfEducation:\n      educationLevelOptions.find(\n        (op) => op.value === formValues?.levelOfEducation?.value,\n      ) || [],\n    preSchool: formValues?.preSchool || '',\n    graduationYear: formValues?.graduationYear || '',\n    schoolProvince:\n      provinces.find((op) => op.value === formValues?.schoolProvince?.value) ||\n      [],\n    province:\n      provinces.find((op) => op.value === formValues?.province?.value) || [],\n    C_Province:\n      provinces.find((op) => op.value === formValues?.C_Province?.value) || [],\n    C_District:\n      districts.find((op) => op.value === formValues?.C_District?.value) || [],\n    district:\n      districts.find((op) => op.value === formValues?.district?.value) || [],\n    village: formValues?.village || '',\n    C_Village: formValues?.C_Village || '',\n\n    institute:\n      institutes.find((op) => op.value === formValues?.institute?.value) || [],\n\n    class: classs.find((op) => op.value === formValues?.class?.value) || [],\n\n    educationalYear: formValues?.educationalYear || '',\n    department:\n      departments.find((op) => op.value === formValues?.department?.value) ||\n      [],\n\n    mediumOfInstruction:\n      mediumOfInstructionOptions.find(\n        (op) => op.value === formValues?.mediumOfInstruction?.value,\n      ) || [],\n\n    studentId: '',\n    studyTime:\n      studyTimeOptions.find(\n        (op) => op.value === formValues?.studyTime?.value,\n      ) || [],\n\n    interanceType:\n      StdInteranceOptions.find(\n        (op) => op.value === formValues?.interanceType?.value,\n      ) || [],\n\n    studentType:\n      StudentTypeOptions.find(\n        (op) => op.value === formValues?.studentType?.value,\n      ) || [],\n    // batch: [],\n    // field: [],\n    sector: sectors.find((op) => op.value === formValues?.sector?.value) || [],\n    file: [],\n    disability:\n      disabilityOptions.find(\n        (op) => op.value === formValues?.disability?.value,\n      ) || [],\n  });\n\n  // fetch department based on selected institute\n  const fetchInstDepts = (inst) => {\n    const instId = inst.value;\n    callApi(`institute/${instId}/departments/`).then((inst) => {\n      console.log('Institutes Departments: ', inst.data);\n      setInstituteDeps(inst.data);\n      const newOptions = departments.filter((dep) => {\n        // if department id is in data.department\n        let department_ids = inst.data.reduce(\n          (acc, cur, i) => acc.add(cur.department),\n          new Set(),\n        );\n        console.log(department_ids);\n        return department_ids.has(dep.value);\n      });\n      setInstDepartmentOptions(newOptions);\n    });\n  };\n\n  const handleFileChange = (event) => {\n    const file = event.currentTarget.files[0];\n    setSelectedFile(file);\n  };\n\n  const handleProvinceChange = async (name, value, setFieldValue) => {\n    console.log('name is ', name);\n    console.log('value is ', value);\n    const districts = await fetchDistricts(value.value);\n    console.log('Filtered Districts: ', districts);\n    if (name === 'C_Province') {\n      setCurrentDistrictOptions(districts);\n      setFieldValue('C_District', []);\n    } else {\n      setMainDistrictOptions(districts);\n      setFieldValue('district', []);\n    }\n  };\n\n  const createNotification = (type, className) => {\n    const cName = className || '';\n    switch (type) {\n      case 'success':\n        NotificationManager.success(\n          'شاگرد په بریالیتوب ثبت شو',\n          'موفقیت',\n          3000,\n          null,\n          null,\n          cName,\n        );\n        break;\n      case 'error':\n        NotificationManager.error(\n          'شاگرد ثبت نشو، بیا کوشش وکری',\n          'خطا',\n          9000,\n          () => {\n            // alert('callback');\n          },\n          null,\n          cName,\n        );\n        break;\n      default:\n        NotificationManager.info('Info message');\n        break;\n    }\n  };\n\n  const storeDataToLocalStorage = (data) => {\n    localStorage.setItem('formData', JSON.stringify(data));\n  };\n  // post student record to server\n  const postStudentRecord = async (newFields, { setFieldError }) => {\n    // localStorage.setItem('formData', JSON.stringify(newFields));\n    const localStorageData = {\n      interanceType: newFields.interanceType,\n      institute: newFields.institute,\n      educationalYear: newFields.educationalYear,\n      mediumOfInstruction: newFields.mediumOfInstruction,\n      studyTime: newFields.studyTime,\n      department: newFields.department,\n      class: newFields.class,\n      studentType: newFields.studentType,\n      maktoobDate: newFields.maktoobDate,\n      maktoobNumber: newFields.maktoobNumber,\n    };\n\n    storeDataToLocalStorage(localStorageData);\n    const data = {\n      //personal info,\n      maktob_date: newFields.maktoobDate,\n      maktob_number: newFields.maktoobNumber,\n      name: newFields.name1,\n      student_id: newFields.studentId,\n      kankor_id: newFields.kankorId,\n      previous_grade_year: newFields.graduationYear.label,\n      previous_school_name: newFields.preSchool,\n      previous_school_province: newFields.schoolProvince.value,\n      previous_grade: newFields.levelOfEducation.value,\n      student_type: newFields.studentType.value,\n      english_name: newFields.englishName,\n      last_name: newFields.lastName,\n      english_last_name: newFields.lastNameEng,\n      father_name: newFields.fatherName,\n      english_father_name: newFields.fatherEngName,\n      phone_number: newFields.phoneNo,\n      email: newFields.email,\n      grandfather_name: newFields.grandFatherName,\n      cover_number: newFields.idCardJoldNo || null,\n      page_number: newFields.idCardPageNo || null,\n      sabt_number: newFields.sabtNo || null,\n      tazkira_type: newFields.tazkiraType.value,\n      registration_number: newFields.tazkiraNo,\n      sokok_number: newFields.sokokNo || null,\n      main_province: newFields.province.value,\n      main_district: newFields.district.value,\n      main_village: newFields.village,\n      current_province: newFields.C_Province.value,\n      current_district: newFields.C_District.value,\n      current_village: newFields.C_Village,\n      year_of_birth: newFields.DoB,\n      month_of_birth: newFields.monthOfBirth || null,\n      day_of_birth: newFields.dayOfBirth || null,\n      father_profession: newFields.fatherDuty,\n      father_place_of_duty: newFields.fatherDutyLocation,\n      admission_method: newFields.interanceType.value,\n      // students_status: 'active',\n      gender: newFields.gender.value,\n      institute: newFields.institute.value,\n      educational_year: newFields.educationalYear,\n      teaching_language: newFields.mediumOfInstruction.value,\n      shift: newFields.studyTime.value,\n\n      // fields info\n      department: newFields.department.value,\n      // field_of_study: newFields.field.value,\n\n      // sector:\n      sector: newFields?.sector.value, //not included in form\n      // batch: newFields.batch.value, // not included in form\n\n      // class info,\n      classs: newFields.class.value,\n      place_of_birth: newFields.placeOfBirth,\n    };\n    console.log('Form Data', data);\n    setLoading(true);\n    try {\n      const response = await callApi('students/register/', 'POST', data);\n\n      // const stdId = response?.data.id;\n      // history.push(`/app/students/student/${stdId}`);\n      createNotification('success', 'filled');\n      setIsSuccess(true);\n      setLoading(false);\n    } catch (error) {\n      setIsSuccess(false);\n      console.log('error.response', error.response);\n      if (error?.response?.data?.errors?.registration_number) {\n        setFieldError('tazkiraNo', 'شاگرد به ای تذکره نمبر وجود دارد');\n      }\n      if (error?.response?.data?.errors?.student_id) {\n        setFieldError('studentId', 'شاگرد به ای شماره اساس وجود دارد');\n      }\n      createNotification('error', 'filled');\n    }\n  };\n\n  const resetformFields = () => {\n    if (localStorage.getItem('formData')) {\n      localStorage.removeItem('formData');\n      window.location.reload();\n    } else message.warning('فورم پاک هست');\n  };\n\n  // const handleInitialValues = (steps, step) => {\n  //   console.log('steps is ', steps);\n  //   const formIndex = steps.indexOf(step);\n  //   if (formIndex > 2) return;\n  //   const form = forms[formIndex].current;\n\n  //   console.log('step is ', step);\n  //   const initialValuesCopy = [\n  //     { ...initialValues[0] },\n  //     { ...initialValues[1] },\n  //     { ...initialValues[2] },\n  //   ];\n  //   initialValuesCopy[steps.indexOf(step)] = form.values;\n  //   setInitialValues(initialValuesCopy);\n  // };\n\n  // handle when user clicks on next button\n  // const onClickNext = (goToNext, steps, step, values) => {\n  //   console.log('inside goToNext function');\n  //   // if last step, do nothing\n  //   const isLastStep = steps.length - 1 <= steps.indexOf(step);\n  //   if (isLastStep) {\n  //     console.log('last step, do nothing');\n  //     return;\n  //   }\n\n  //   const formIndex = steps.indexOf(step);\n  //   const form = forms[formIndex].current;\n  //   console.log('ref form value: ', form);\n  //   console.log('form values of index ${formIndex}: ', form.values);\n  //   // submitForm() only triggers formik validation\n  //   form.submitForm().then(() => {\n  //     if (!form.isDirty && form.isValid) {\n  //       // add step's data into fields state\n  //       // add fields of this step to the fields state\n  //       console.log('form values: ', form.values);\n  //       const newFields = { ...fields, ...form.values };\n  //       handleInitialValues(steps, step);\n  //       setFields(newFields);\n  //       // store data in localstorage data loss prevention\n  //       localStorage.setItem('step' + formIndex, JSON.stringify(form.values));\n\n  //       // if last step, submit the form\n  //       // if next on last step is clicked, call the api to register student\n  //       if (steps.length - 2 <= steps.indexOf(step)) {\n  //         // setBottomNavHidden(true);\n  //         console.log('new fields', newFields);\n\n  //         const data = {\n  //           //personal info,\n  //           name: newFields.name1,\n  //           student_id: newFields.studentId,\n  //           kankor_id: newFields.kankorId,\n  //           previous_grade_year: newFields.graduationYear.label,\n  //           previous_school_name: newFields.preSchool,\n  //           previous_school_province: newFields.schoolProvince.value,\n  //           previous_grade: newFields.levelOfEducation.value,\n  //           student_type: newFields.studentType.value,\n  //           english_name: newFields.englishName,\n  //           last_name: newFields.lastName,\n  //           english_last_name: newFields.lastNameEng,\n  //           father_name: newFields.fatherName,\n  //           english_father_name: newFields.fatherEngName,\n  //           phone_number: newFields.phoneNo,\n  //           email: newFields.email,\n  //           grandfather_name: newFields.grandFatherName,\n  //           cover_number: newFields.idCardJoldNo,\n  //           page_number: newFields.idCardPageNo,\n  //           sabt_number: newFields.sabtNo,\n  //           tazkira_type: newFields.tazkiraType.value,\n  //           registration_number: newFields.tazkiraNo,\n  //           sokok_number: newFields.sokokNo,\n  //           main_province: newFields.province.value,\n  //           main_district: newFields.district.value,\n  //           main_village: newFields.village,\n  //           current_province: newFields.C_Province.value,\n  //           current_district: newFields.C_District.value,\n  //           current_village: newFields.C_Village,\n  //           year_of_birth: newFields.DoB,\n  //           month_of_birth: newFields.monthOfBirth,\n  //           day_of_birth: newFields.dayOfBirth,\n  //           father_profession: newFields.fatherDuty,\n  //           father_place_of_duty: newFields.fatherDutyLocation,\n  //           admission_method: newFields.interanceType.value,\n  //           // students_status: 'active',\n  //           gender: newFields.gender.value,\n  //           institute: newFields.institute.value,\n  //           educational_year: newFields.educationalYear,\n  //           teaching_language: newFields.mediumOfInstruction.value,\n  //           shift: newFields.studyTime.value,\n\n  //           // fields info\n  //           department: newFields.department.value,\n  //           field_of_study: newFields.field.value,\n\n  //           // sector:\n  //           sector: newFields.sector.value,\n  //           batch: newFields.batch.value,\n\n  //           // class info,\n  //           classs: newFields.class.value,\n  //           place_of_birth: newFields.placeOfBirth,\n  //         };\n\n  //         // check if a file is selected\n  //         if (selectedFile) {\n  //           console.log(selectedFile);\n  //           data['photo'] = selectedFile;\n  //         }\n  //         if (newFields.disability) {\n  //           data['disability'] = newFields.disability.value;\n  //         }\n\n  //         const formValues2 = new formValues();\n  //         for (let key in data) {\n  //           // remove undefined values from data that's being sent to the server\n  //           if (data[key]) {\n  //             formValues2.append(key, data[key]);\n  //           }\n  //         }\n\n  //         console.log('formValues: ', formValues2.entries());\n\n  //         for (const entry of formValues2.entries()) {\n  //           console.log(entry);\n  //         }\n\n  //         // posting data to the server\n  //         postStudentRecord(formValues2);\n  //       }\n  //       scrollToTop();\n  //       goToNext();\n  //       step.isDone = true;\n  //     }\n  //   });\n  // };\n\n  // handle when user clicks on previous button\n  // const onClickPrev = (goToPrev, steps, step) => {\n  //   handleInitialValues(steps, step);\n  //   console.log('initialValues: ', initialValues);\n  //   if (steps.indexOf(step) <= 0) {\n  //     return;\n  //   }\n  //   scrollToTop();\n  //   goToPrev();\n  // };\n\n  const [classOptions, setClassOptions] = useState([]);\n\n  return (\n    <Card>\n      <CardHeader className=\"px-4\">\n        <h2 className=\"mt-5  titleStyle\">\n          {<IntlMessages id=\"forms.studentRegisterTitle\" />}\n        </h2>\n      </CardHeader>\n      {!isSuccess ? (\n        <CardBody className=\"wizard wizard-default\">\n          <div\n            style={{\n              width: '90%',\n              display: 'flex',\n              justifyContent: 'flex-end',\n            }}\n          >\n            <Button onClick={() => resetformFields()}>پاک کردن فورم</Button>\n          </div>\n          {/* <Wizard>\n   <Steps>\n     <Step id=\"step1\"> */}\n          <div>\n            <h3>معلومات شخصی</h3>\n            <hr />\n            <Formik\n              enableReinitialize={true}\n              initialValues={initialValues}\n              validationSchema={studentRegisterFormStep_1}\n              onSubmit={postStudentRecord}\n            >\n              {({\n                errors,\n                touched,\n                values,\n                handleSubmit,\n                setFieldTouched,\n                setFieldValue,\n                setFieldError,\n              }) => (\n                <Form className=\"av-tooltip tooltip-label-right has-float-label error-l-100 style \">\n                  <Row>\n                    <Colxx xxs=\"12\">\n                      <div className=\"p-3 w-50\">\n                        <FormGroup className=\"form-group has-float-label \">\n                          <Label style={inputLabel}>مکتوب تاریخ</Label>\n                          <DatePicker\n                            style={{\n                              width: '100%',\n                              height: 40,\n                              borderRadius: 0,\n                              border: 'none',\n                            }}\n                            containerClassName=\"form-control fieldStyle\"\n                            name=\"maktoobDate\"\n                            calendar={persian}\n                            locale={persian_fa}\n                            value={values.maktoobDate}\n                            months={persianMonthOptions}\n                            onChange={(e) =>\n                              setFieldValue(\n                                'maktoobDate',\n                                new Date(e.toDate()).getFullYear() +\n                                  '-' +\n                                  (new Date(e.toDate()).getMonth() + 1) +\n                                  '-' +\n                                  new Date(e.toDate()).getDate(),\n                              )\n                            }\n                          />\n                        </FormGroup>\n                        <FormGroup className=\"form-group has-float-label\">\n                          <Label style={inputLabel}>مکتوب نمبر</Label>\n                          <Field\n                            className=\"form-control fieldStyle\"\n                            name=\"maktoobNumber\"\n                            type=\"number\"\n                          />\n                          {errors.maktoobNumber && touched.maktoobNumber ? (\n                            <div className=\"invalid-feedback d-block  bg-danger text-white messageStyle\">\n                              {errors.maktoobNumber}\n                            </div>\n                          ) : null}\n                        </FormGroup>\n                        {/* Institute Name*/}\n                        <FormGroup className=\" has-float-label \">\n                          <Label style={inputLabel}>\n                            <IntlMessages id=\"forms.InstituteLabel\" />\n                            <span style={{ color: 'red' }}>*</span>\n                          </Label>\n                          <FormikReactSelect\n                            name=\"institute\"\n                            id=\"institute\"\n                            value={values.institute}\n                            options={institutes}\n                            onChange={(name, value) => {\n                              setFieldValue('institute', value);\n                              fetchInstDepts(value);\n                            }}\n                            onBlur={setFieldTouched}\n                            isSearchable={false}\n                          />\n                          {errors.institute && touched.institute ? (\n                            <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                              {errors.institute}\n                            </div>\n                          ) : null}\n                        </FormGroup>\n                        {/* Departement  */}\n                        <FormGroup className=\"form-group has-float-label \">\n                          <Label style={inputLabel}>\n                            <IntlMessages id=\"forms.studyDepartment\" />\n                            <span style={{ color: 'red' }}>*</span>\n                          </Label>\n                          <FormikReactSelect\n                            name=\"department\"\n                            id=\"department\"\n                            value={values.department}\n                            options={instDepartmentOptions}\n                            onChange={(name, value) => {\n                              setFieldValue(name, value);\n                              setFieldValue('class', []);\n                              console.log('selected department: ', value.value);\n                              console.log('institute deps: ', instituteDeps);\n                              // get selected department\n                              const dep = instituteDeps?.find(\n                                (d) => d.department === value.value,\n                              );\n\n                              console.log('departments: ', departments);\n                              // get classes array from department\n                              const class_ids = dep?.classes.map(\n                                (c) => c.classs,\n                              );\n                              console.log('class_ids', class_ids);\n\n                              // filter classes options from context\n                              setClassOptions(\n                                classs.filter((c) =>\n                                  class_ids.includes(c.value),\n                                ),\n                              );\n                            }}\n                            onBlur={setFieldTouched}\n                            isSearchable={false}\n                            required\n                          />\n                          {errors.department && touched.department ? (\n                            <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                              {errors.department}\n                            </div>\n                          ) : null}\n                        </FormGroup>\n\n                        {/*  Class name  */}\n                        <FormGroup className=\"form-group has-float-label \">\n                          <Label style={inputLabel}>\n                            <IntlMessages id=\"curriculum.admissionGrade\" />\n                            <span style={{ color: 'red' }}>*</span>\n                          </Label>\n                          <FormikReactSelect\n                            name=\"class\"\n                            id=\"class\"\n                            value={values.class}\n                            options={classOptions}\n                            onChange={setFieldValue}\n                            onBlur={setFieldTouched}\n                            isSearchable={false}\n                            required\n                          />\n                          {errors.class && touched.class ? (\n                            <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                              {errors.class}\n                            </div>\n                          ) : null}\n                        </FormGroup>\n\n                        {/* Eduactional Year*/}\n                        <FormGroup className=\"form-group has-float-label \">\n                          <Label style={inputLabel}>\n                            <IntlMessages id=\"curriculum.admissionYear\" />\n                            <RequiredHash />\n                          </Label>\n\n                          <Field\n                            className=\"form-control fieldStyle\"\n                            name=\"educationalYear\"\n                            type=\"number\"\n                          />\n                          {errors.educationalYear && touched.educationalYear ? (\n                            <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                              {errors.educationalYear}\n                            </div>\n                          ) : null}\n                        </FormGroup>\n\n                        {/* admission method*/}\n                        <FormGroup className=\"form-group has-float-label error-l-100\">\n                          <Label style={inputLabel}>\n                            <IntlMessages id=\"forms.StdInteranceTypeLabel\" />\n                            <span style={{ color: 'red' }}>*</span>\n                          </Label>\n                          <FormikReactSelect\n                            name=\"interanceType\"\n                            id=\"interanceType\"\n                            value={values.interanceType}\n                            options={StdInteranceOptions}\n                            onChange={setFieldValue}\n                            onBlur={setFieldTouched}\n                            isSearchable={false}\n                          />\n                          {errors.interanceType && touched.interanceType ? (\n                            <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                              {errors.interanceType}\n                            </div>\n                          ) : null}\n                        </FormGroup>\n\n                        {/* medium OfInstruction (Teaching Language) */}\n                        <FormGroup className=\"form-group has-float-label \">\n                          <Label style={inputLabel}>\n                            <IntlMessages id=\"forms.mediumOfInstruction\" />\n                            <span style={{ color: 'red' }}>*</span>\n                          </Label>\n                          <FormikReactSelect\n                            name=\"mediumOfInstruction\"\n                            id=\"mediumOfInstruction\"\n                            value={values.mediumOfInstruction}\n                            options={mediumOfInstructionOptions}\n                            onChange={setFieldValue}\n                            onBlur={setFieldTouched}\n                            isSearchable={false}\n                            required\n                          />\n                          {errors.mediumOfInstruction &&\n                          touched.mediumOfInstruction ? (\n                            <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                              {errors.mediumOfInstruction}\n                            </div>\n                          ) : null}\n                        </FormGroup>\n\n                        {/* Study Time */}\n                        <FormGroup className=\"form-group has-float-label error-l-100\">\n                          <Label style={inputLabel}>\n                            <IntlMessages id=\"forms.StudyTimeLabel\" />\n                            <span style={{ color: 'red' }}>*</span>\n                          </Label>\n                          <FormikReactSelect\n                            name=\"studyTime\"\n                            id=\"studyTime\"\n                            value={values.studyTime}\n                            options={studyTimeOptions}\n                            onChange={setFieldValue}\n                            onBlur={setFieldTouched}\n                            isSearchable={false}\n                          />\n                          {errors.studyTime && touched.studyTime ? (\n                            <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                              {errors.studyTime}\n                            </div>\n                          ) : null}\n                        </FormGroup>\n\n                        {/*Student Type*/}\n                        <FormGroup className=\"form-group has-float-label error-l-100\">\n                          <Label style={inputLabel}>\n                            <IntlMessages id=\"forms.StudentTypeLabel\" />\n                            <span style={{ color: 'red' }}>*</span>\n                          </Label>\n                          <FormikReactSelect\n                            name=\"studentType\"\n                            id=\"studentType\"\n                            value={values.studentType}\n                            options={StudentTypeOptions}\n                            onChange={setFieldValue}\n                            onBlur={setFieldTouched}\n                            isSearchable={false}\n                          />\n                          {errors.studentType && touched.studentType ? (\n                            <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                              {errors.studentType}\n                            </div>\n                          ) : null}\n                        </FormGroup>\n                      </div>\n\n                      <hr />\n                      <div className=\"p-3 w-50\">\n                        {/* Name */}\n                        {/* test it for some time, if successed, use this approach in all forms */}\n                        <MyFormGroup>\n                          <MyLabel required>\n                            <IntlMessages id=\"forms.StdName\" />\n                          </MyLabel>\n                          <Field\n                            className=\"form-control fieldStyle\"\n                            name=\"name1\"\n                          />\n                          <MyErrorLabel hide={!errors.name1 || !touched.name1}>\n                            {errors.name1}\n                          </MyErrorLabel>\n                        </MyFormGroup>\n\n                        {/* lastname */}\n                        <FormGroup className=\"form-group has-float-label\">\n                          <Label style={inputLabel}>\n                            <IntlMessages id=\"forms.lastName\" />\n                          </Label>\n                          <Field\n                            className=\"form-control fieldStyle\"\n                            name=\"lastName\"\n                          />\n                          {errors.lastName && touched.lastName ? (\n                            <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                              {errors.lastName}\n                            </div>\n                          ) : null}\n                        </FormGroup>\n\n                        {/* Father Name */}\n                        <FormGroup className=\"form-group has-float-label error-l-100\">\n                          <Label style={inputLabel}>\n                            <IntlMessages id=\"forms.StdFatherName\" />\n                            <span style={{ color: 'red' }}>*</span>\n                          </Label>\n                          <Field\n                            className=\"form-control fieldStyle\"\n                            name=\"fatherName\"\n                          />\n                          {errors.fatherName && touched.fatherName ? (\n                            <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                              {errors.fatherName}\n                            </div>\n                          ) : null}\n                        </FormGroup>\n\n                        {/* grandFatherName */}\n                        <FormGroup className=\"form-group has-float-label\">\n                          <Label style={inputLabel}>\n                            <IntlMessages id=\"forms.grandFatherName\" />\n                            <span style={{ color: 'red' }}>*</span>\n                          </Label>\n                          <Field\n                            className=\"form-control fieldStyle\"\n                            name=\"grandFatherName\"\n                          />\n                          {errors.grandFatherName && touched.grandFatherName ? (\n                            <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                              {errors.grandFatherName}\n                            </div>\n                          ) : null}\n                        </FormGroup>\n                        {values.interanceType.value === 'general_kankor' && (\n                          <FormGroup className=\"form-group has-float-label error-l-100\">\n                            <Label style={inputLabel}>\n                              کانکورایدی\n                              {/* <span style={{ color: 'red' }}>*</span> */}\n                            </Label>\n                            <Field\n                              className=\"form-control fieldStyle\"\n                              name=\"kankorId\"\n                            />\n                            {errors.kankorId && touched.kankorId ? (\n                              <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                                {errors.kankorId}\n                              </div>\n                            ) : null}\n                          </FormGroup>\n                        )}\n                        {/* Gender */}\n                        <FormGroup className=\"form-group has-float-label error-l-100\">\n                          <Label style={inputLabel}>\n                            <IntlMessages id=\"gender.gender\" />\n                            <span style={{ color: 'red' }}>*</span>\n                          </Label>\n                          <FormikReactSelect\n                            name=\"gender\"\n                            id=\"gender\"\n                            value={values.gender}\n                            options={genderOptions}\n                            onChange={setFieldValue}\n                            onBlur={setFieldTouched}\n                            isSearchable={false}\n                          />\n                          {errors.gender && touched.gender ? (\n                            <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                              {errors.gender}\n                            </div>\n                          ) : null}\n                        </FormGroup>\n\n                        {/* Tazkira Type */}\n                        <FormGroup className=\"form-group has-float-label error-l-100\">\n                          <Label style={inputLabel}>\n                            <IntlMessages id=\"forms.TazkiraType\" />\n                            <span style={{ color: 'red' }}>*</span>\n                          </Label>\n\n                          <FormikReactSelect\n                            name=\"tazkiraType\"\n                            id=\"tazkiraType\"\n                            value={values.tazkiraType}\n                            options={tazkiraOptions}\n                            onChange={setFieldValue}\n                            onBlur={setFieldTouched}\n                            isSearchable={false}\n                          />\n                          {errors.tazkiraType && touched.tazkiraType ? (\n                            <div className=\"invalid-feedback d-block   bg-danger text-white messageStyle\">\n                              {errors.tazkiraType}\n                            </div>\n                          ) : null}\n                        </FormGroup>\n                        {/* Tazkira Number */}\n                        {values.tazkiraType.value === 'electronic' && (\n                          <FormGroup className=\"form-group has-float-label error-l-100\">\n                            <Label style={inputLabel}>\n                              نمبر تذکره الکترونی\n                              <span style={{ color: 'red' }}>*</span>\n                            </Label>\n                            {/* <Field\n                     className=\"form-control fieldStyle\"\n                     name=\"tazkiraNo\"\n                     type=\"text\"\n                     maxLength=\"14\"\n                     minLength=\"12\"\n                   /> */}\n                            <InputMask\n                              style={{ width: '100%' }}\n                              name=\"tazkiraNo\"\n                              value={values.tazkiraNo}\n                              id=\"ssn\"\n                              mask=\"9999-9999-99999\"\n                              placeholder=\"9999-9999-99999\"\n                              onChange={(e) =>\n                                setFieldValue('tazkiraNo', e.target.value)\n                              }\n                            />\n                            {errors.tazkiraNo && touched.tazkiraNo ? (\n                              <div className=\"invalid-feedback d-block  bg-danger text-white messageStyle\">\n                                {errors.tazkiraNo}\n                              </div>\n                            ) : null}\n                          </FormGroup>\n                        )}\n\n                        {values.tazkiraType.value === 'paper' ? (\n                          <>\n                            <div>\n                              {/* Jold Number */}\n                              <div>\n                                <FormGroup className=\"form-group has-float-label error-l-100\">\n                                  <Label style={inputLabel}>\n                                    <IntlMessages id=\"teacher.IdCardJoldNoLabel\" />\n                                    <RequiredHash />\n                                  </Label>\n                                  <Field\n                                    className=\"form-control fieldStyle\"\n                                    name=\"idCardJoldNo\"\n                                    type=\"string\"\n                                  />\n                                  {errors.idCardJoldNo &&\n                                  touched.idCardJoldNo ? (\n                                    <div className=\"invalid-feedback d-block  bg-danger text-white messageStyle\">\n                                      {errors.idCardJoldNo}\n                                    </div>\n                                  ) : null}\n                                </FormGroup>\n                              </div>\n                            </div>\n\n                            <div>\n                              {/* Safha */}\n                              <div>\n                                <FormGroup className=\"form-group has-float-label error-l-100\">\n                                  <Label style={inputLabel}>\n                                    <IntlMessages id=\"teacher.IdCardPageNoLabel\" />\n                                    <RequiredHash />\n                                  </Label>\n                                  <Field\n                                    className=\"form-control fieldStyle\"\n                                    name=\"idCardPageNo\"\n                                    type=\"number\"\n                                  />\n                                  {errors.idCardPageNo &&\n                                  touched.idCardPageNo ? (\n                                    <div className=\"invalid-feedback d-block  bg-danger text-white messageStyle\">\n                                      {errors.idCardPageNo}\n                                    </div>\n                                  ) : null}\n                                </FormGroup>\n                              </div>\n                            </div>\n                            <div>\n                              {/* Sabt */}\n                              <div>\n                                <FormGroup className=\"form-group has-float-label error-l-100\">\n                                  <Label style={inputLabel}>\n                                    شماره ثبت\n                                    <RequiredHash />\n                                  </Label>\n                                  <Field\n                                    className=\"form-control fieldStyle\"\n                                    name=\"sabtNo\"\n                                    type=\"number\"\n                                  />\n                                  {errors.sabtNo && touched.sabtNo ? (\n                                    <div className=\"invalid-feedback d-block  bg-danger text-white messageStyle\">\n                                      {errors.sabtNo}\n                                    </div>\n                                  ) : null}\n                                </FormGroup>\n                              </div>\n                            </div>\n                            <div>\n                              <div>\n                                <FormGroup className=\"form-group has-float-label error-l-100\">\n                                  <Label style={inputLabel}>\n                                    شماره صکوک\n                                    <RequiredHash />\n                                  </Label>\n                                  <Field\n                                    className=\"form-control fieldStyle\"\n                                    name=\"sokokNo\"\n                                    type=\"number\"\n                                  />\n                                  {errors.sokokNo && touched.sokokNo ? (\n                                    <div className=\"invalid-feedback d-block  bg-danger text-white messageStyle\">\n                                      {errors.sokokNo}\n                                    </div>\n                                  ) : null}\n                                </FormGroup>\n                              </div>\n                            </div>\n                          </>\n                        ) : null}\n                        {/* Father Duty */}\n                        <FormGroup className=\"form-group has-float-label error-l-100\">\n                          <Label style={inputLabel}>\n                            <IntlMessages id=\"forms.StdFatherDutyLabel\" />\n                            <span style={{ color: 'red' }}>*</span>\n                          </Label>\n                          <Field\n                            className=\"form-control fieldStyle\"\n                            name=\"fatherDuty\"\n                          />\n                          {errors.fatherDuty && touched.fatherDuty ? (\n                            <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                              {errors.fatherDuty}\n                            </div>\n                          ) : null}\n                        </FormGroup>\n\n                        {/* Father duty place */}\n                        <FormGroup className=\"form-group has-float-label error-l-100\">\n                          <Label style={inputLabel}>\n                            <IntlMessages id=\"forms.StdFatherDutyLocationLabel\" />\n                          </Label>\n                          <Field\n                            className=\"form-control fieldStyle\"\n                            name=\"fatherDutyLocation\"\n                          />\n                          {errors.fatherDutyLocation &&\n                          touched.fatherDutyLocation ? (\n                            <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                              {errors.fatherDutyLocation}\n                            </div>\n                          ) : null}\n                        </FormGroup>\n\n                        {/* year, month and day of birth */}\n                        <FormGroup className=\"form-group has-float-label error-l-100 \">\n                          <Label style={inputLabel}>\n                            <IntlMessages id=\"label.yearOfBirth\" />\n                            <span style={{ color: 'red' }}>*</span>\n                          </Label>\n                          <Field\n                            className=\"form-control fieldStyle\"\n                            name=\"DoB\"\n                            type=\"number\"\n                            min={1300}\n                            max={1450}\n                          />\n                          {errors.DoB && touched.DoB ? (\n                            <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                              {errors.DoB}\n                            </div>\n                          ) : null}\n                        </FormGroup>\n\n                        <FormGroup className=\"form-group has-float-label error-l-100 \">\n                          <Label style={inputLabel}>\n                            <IntlMessages id=\"label.monthOfBirth\" />\n                          </Label>\n                          <Field\n                            className=\"form-control fieldStyle\"\n                            name=\"monthOfBirth\"\n                            type=\"number\"\n                            min={1}\n                            max={12}\n                            required={false}\n                          />\n                          {errors.monthOfBirth && touched.monthOfBirth ? (\n                            <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                              {errors.monthOfBirth}\n                            </div>\n                          ) : null}\n                        </FormGroup>\n\n                        <FormGroup className=\"form-group has-float-label error-l-100 \">\n                          <Label style={inputLabel}>\n                            <IntlMessages id=\"label.dayOfBirth\" />\n                          </Label>\n                          <Field\n                            className=\"form-control fieldStyle\"\n                            name=\"dayOfBirth\"\n                            type=\"number\"\n                            min={1}\n                            max={31}\n                            required={false}\n                          />\n                          {errors.dayOfBirth && touched.dayOfBirth ? (\n                            <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                              {errors.dayOfBirth}\n                            </div>\n                          ) : null}\n                        </FormGroup>\n\n                        {/* Place of birth */}\n                        <FormGroup className=\"form-group has-float-label error-l-100\">\n                          <Label style={inputLabel}>\n                            <IntlMessages id=\"forms.PlaceOfBirthLabel\" />\n                            <span style={{ color: 'red' }}>*</span>\n                          </Label>\n                          <Field\n                            className=\"form-control fieldStyle\"\n                            name=\"placeOfBirth\"\n                          />\n                          {errors.placeOfBirth && touched.placeOfBirth ? (\n                            <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                              {errors.placeOfBirth}\n                            </div>\n                          ) : null}\n                        </FormGroup>\n\n                        {/* Student English Name */}\n                        {/* <FormGroup className=\"form-group has-float-label error-l-100\">\n                          <Label style={inputLabel}>\n                            <IntlMessages id=\"forms.Eng_name\" />\n                          </Label>\n                          <Field\n                            className=\"form-control fieldStyle\"\n                            name=\"englishName\"\n                          />\n                          {errors.englishName && touched.englishName ? (\n                            <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                              {errors.englishName}\n                            </div>\n                          ) : null}\n                        </FormGroup> */}\n\n                        {/* englishLastname */}\n                        {/* <FormGroup className=\"form-group has-float-label\">\n                          <Label style={inputLabel}>\n                            <IntlMessages id=\"forms.lastNameEng\" />\n                          </Label>\n                          <Field\n                            className=\"form-control fieldStyle\"\n                            name=\"lastNameEng\"\n                          />\n                          {errors.lastNameEng && touched.lastNameEng ? (\n                            <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                              {errors.lastNameEng}\n                            </div>\n                          ) : null}\n                        </FormGroup> */}\n\n                        {/*Students Father English Name */}\n                        {/* <FormGroup className=\"form-group has-float-label error-l-100\">\n                          <Label style={inputLabel}>\n                            <IntlMessages id=\"forms.Std_father_Eng_Name\" />\n                          </Label>\n                          <Field\n                            className=\"form-control fieldStyle\"\n                            name=\"fatherEngName\"\n                          />\n                          {errors.fatherEngName && touched.fatherEngName ? (\n                            <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                              {errors.fatherEngName}\n                            </div>\n                          ) : null}\n                        </FormGroup> */}\n\n                        {/* Contact No */}\n                        <FormGroup className=\"form-group has-float-label error-l-100 \">\n                          <Label style={inputLabel}>\n                            <IntlMessages id=\"teacher.PhoneNoLabel\" />\n                            {/* <span style={{ color: 'red' }}>*</span> */}\n                          </Label>\n                          <Field\n                            className=\"form-control fieldStyle\"\n                            name=\"phoneNo\"\n                            type=\"text\"\n                          />\n                          {errors.phoneNo && touched.phoneNo ? (\n                            <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                              {errors.phoneNo}\n                            </div>\n                          ) : null}\n                        </FormGroup>\n\n                        {/* Email Address */}\n                        {/* <FormGroup className=\"form-group has-float-label error-l-100\">\n                          <Label style={inputLabel}>\n                            <IntlMessages id=\"teacher.EmailLabel\" />\n                          </Label>\n                          <Field\n                            className=\"form-control fieldStyle\"\n                            name=\"email\"\n                            type=\"email\"\n                          />\n                          {errors.email && touched.email ? (\n                            <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                              {errors.email}\n                            </div>\n                          ) : null}\n                        </FormGroup> */}\n                        <h6 className=\" mb-4\">\n                          {<IntlMessages id=\"forms.PermanentAddressLabel\" />}\n                        </h6>\n\n                        {/* province permanent*/}\n                        <FormGroup className=\"form-group has-float-label error-l-100\">\n                          <Label style={inputLabel}>\n                            <IntlMessages id=\"forms.ProvinceLabel\" />\n                            <span style={{ color: 'red' }}>*</span>\n                          </Label>\n                          <FormikReactSelect\n                            name=\"province\"\n                            id=\"province\"\n                            value={values.province}\n                            options={provinces}\n                            onChange={(name, value) => {\n                              handleProvinceChange(name, value, setFieldValue);\n                              setFieldValue(name, value);\n                            }}\n                            isSearchable={true}\n                            onBlur={setFieldTouched}\n                          />\n                          {errors.province && touched.province ? (\n                            <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                              {errors.province}\n                            </div>\n                          ) : null}\n                        </FormGroup>\n\n                        {/* District  permanent*/}\n                        <FormGroup className=\"form-group has-float-label error-l-100\">\n                          <Label style={inputLabel}>\n                            <IntlMessages id=\"forms.DistrictLabel\" />\n                            <span style={{ color: 'red' }}>*</span>\n                          </Label>\n                          <FormikReactSelect\n                            name=\"district\"\n                            id=\"district\"\n                            value={values.district}\n                            options={mainDistrictOptions}\n                            onChange={setFieldValue}\n                            onBlur={setFieldTouched}\n                            isSearchable={true}\n                          />\n                          {errors.district && touched.district ? (\n                            <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                              {errors.district}\n                            </div>\n                          ) : null}\n                        </FormGroup>\n\n                        {/* village permanent */}\n                        <FormGroup className=\"form-group has-float-label error-l-100\">\n                          <Label style={inputLabel}>\n                            <IntlMessages id=\"forms.VillageLabel\" />\n                            <span style={{ color: 'red' }}>*</span>\n                          </Label>\n                          <Field\n                            className=\"form-control fieldStyle\"\n                            name=\"village\"\n                          />\n                          {errors.village && touched.village ? (\n                            <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                              {errors.village}\n                            </div>\n                          ) : null}\n                        </FormGroup>\n                        <h6 className=\" mb-4\">\n                          {<IntlMessages id=\"forms.CurrentAddresslabel\" />}\n                        </h6>\n                        {/* Current Address */}\n                        {/* province Current */}\n                        <FormGroup className=\"form-group has-float-label error-l-100\">\n                          <Label style={inputLabel}>\n                            <IntlMessages id=\"forms.ProvinceLabel\" />\n                            <span style={{ color: 'red' }}>*</span>\n                          </Label>\n                          <FormikReactSelect\n                            name=\"C_Province\"\n                            id=\"C_Province\"\n                            value={values.C_Province}\n                            options={provinces}\n                            isSearchable={true}\n                            onChange={(name, value) => {\n                              handleProvinceChange(name, value, setFieldValue);\n                              setFieldValue(name, value);\n                            }}\n                            onBlur={setFieldTouched}\n                          />\n                          {errors.C_Province && touched.C_Province ? (\n                            <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                              {errors.C_Province}\n                            </div>\n                          ) : null}\n                        </FormGroup>\n\n                        {/* District */}\n                        <FormGroup className=\"form-group has-float-label error-l-100\">\n                          <Label style={inputLabel}>\n                            <IntlMessages id=\"forms.DistrictLabel\" />\n                            <span style={{ color: 'red' }}>*</span>\n                          </Label>\n                          <FormikReactSelect\n                            name=\"C_District\"\n                            id=\"C_District\"\n                            value={values.C_District}\n                            options={currentDistrictOptions}\n                            onChange={setFieldValue}\n                            onBlur={setFieldTouched}\n                            isSearchable={true}\n                          />\n                          {errors.C_District && touched.C_District ? (\n                            <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                              {errors.C_District}\n                            </div>\n                          ) : null}\n                        </FormGroup>\n\n                        {/* village */}\n                        <FormGroup className=\"form-group has-float-label error-l-100\">\n                          <Label style={inputLabel}>\n                            <IntlMessages id=\"forms.VillageLabel\" />\n                            <span style={{ color: 'red' }}>*</span>\n                          </Label>\n                          <Field\n                            className=\"form-control fieldStyle\"\n                            name=\"C_Village\"\n                          />\n                          {errors.C_Village && touched.C_Village ? (\n                            <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                              {errors.C_Village}\n                            </div>\n                          ) : null}\n                        </FormGroup>\n                        {/* Education */}\n                        <FormGroup className=\"form-group has-float-label error-l-100\">\n                          <Label style={inputLabel}>\n                            <IntlMessages id=\"teacher.LevelOfEducationLabel\" />\n                            <span style={{ color: 'red' }}>*</span>\n                          </Label>\n                          <FormikReactSelect\n                            name=\"levelOfEducation\"\n                            id=\"levelOfEducation\"\n                            value={values.levelOfEducation}\n                            options={educationLevelOptions}\n                            onChange={setFieldValue}\n                            onBlur={setFieldTouched}\n                            isSearchable={false}\n                          />\n                          {errors.levelOfEducation &&\n                          touched.levelOfEducation ? (\n                            <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                              {errors.levelOfEducation}\n                            </div>\n                          ) : null}\n                        </FormGroup>\n\n                        <FormGroup className=\"form-group has-float-label error-l-100\">\n                          <Label style={inputLabel}>\n                            <IntlMessages id=\"forms.StdGraduationYearLabel\" />\n                            <span style={{ color: 'red' }}>*</span>\n                          </Label>\n                          {/* <FormikReactSelect\n                           name=\"graduationYear\"\n                           id=\"graduationYear\"\n                           value={values.graduationYear}\n                           options={educationalYearsOptions}\n                           onChange={setFieldValue}\n                           onBlur={setFieldTouched}\n                           isSearchable={false}\n                           required\n                         /> */}\n                          <Field\n                            className=\"form-control fieldStyle\"\n                            name=\"graduationYear\"\n                            type=\"number\"\n                          />\n                          {errors.graduationYear && touched.graduationYear ? (\n                            <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                              {errors.graduationYear}\n                            </div>\n                          ) : null}\n                        </FormGroup>\n                        {/* Student Maktab*/}\n                        <FormGroup className=\"form-group has-float-label error-l-100\">\n                          <Label style={inputLabel}>\n                            <IntlMessages id=\"forms.StPreShcoolLabel\" />\n                            <span style={{ color: 'red' }}>*</span>\n                          </Label>\n                          <Field\n                            className=\"form-control fieldStyle\"\n                            name=\"preSchool\"\n                          />\n                          {errors.preSchool && touched.preSchool ? (\n                            <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                              {errors.preSchool}\n                            </div>\n                          ) : null}\n                        </FormGroup>\n\n                        {/*School province*/}\n                        <FormGroup className=\"form-group has-float-label error-l-100\">\n                          <Label style={inputLabel}>\n                            <IntlMessages id=\"forms.StdSchoolProvinceLabel\" />\n                            <span style={{ color: 'red' }}>*</span>\n                          </Label>\n                          <FormikReactSelect\n                            name=\"schoolProvince\"\n                            id=\"schoolProvince\"\n                            value={values.schoolProvince}\n                            options={provinces}\n                            onChange={setFieldValue}\n                            onBlur={setFieldTouched}\n                            isSearchable={true}\n                          />\n                          {errors.schoolProvince && touched.schoolProvince ? (\n                            <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                              {errors.schoolProvince}\n                            </div>\n                          ) : null}\n                        </FormGroup>\n\n                        <FormGroup className=\"form-group has-float-label error-l-100 \">\n                          <Label style={inputLabel}>معلولیت/معیوبیت</Label>\n                          <FormikReactSelect\n                            name=\"disability\"\n                            id=\"disability\"\n                            value={values.disability}\n                            options={disabilityOptions}\n                            onChange={setFieldValue}\n                            onBlur={setFieldTouched}\n                            isSearchable={false}\n                            isClearable={true}\n                            // style={{ fontSize: '100%' }}\n                          />\n                          {errors.disability && touched.disability ? (\n                            <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                              {errors.disability}\n                            </div>\n                          ) : null}\n                        </FormGroup>\n\n                        {/* Student Id */}\n                        <FormGroup className=\"form-group has-float-label\">\n                          <Label style={inputLabel}>\n                            <IntlMessages id=\"student.studentId\" />\n                            <span style={{ color: 'red' }}>*</span>\n                          </Label>\n                          <Field\n                            className=\"form-control fieldStyle\"\n                            name=\"studentId\"\n                            type=\"number\"\n                          />\n                          {errors.studentId && touched.studentId ? (\n                            <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                              {errors.studentId}\n                            </div>\n                          ) : null}\n                        </FormGroup>\n\n                        {/* Upload Photo */}\n                        <FormGroup className=\"form-group has-float-label error-l-100\">\n                          <InputGroupAddon addonType=\"prepend\">\n                            <IntlMessages id=\"student.uploadPhoto\" />\n                          </InputGroupAddon>\n                          <FormControl\n                            name=\"file\"\n                            type=\"file\"\n                            className=\"form-control fieldStyle\"\n                            onChange={handleFileChange}\n                          />\n                          {errors.file && touched.file ? (\n                            <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                              {errors.file}\n                            </div>\n                          ) : null}\n                        </FormGroup>\n                      </div>\n                    </Colxx>\n                  </Row>\n                  <button className=\"btn btn-primary\" onClick={handleSubmit}>\n                    ثبت\n                    {loading && <Spinner />}\n                  </button>\n                </Form>\n              )}\n            </Formik>\n          </div>\n          {/* </Step>\n   </Steps>\n </Wizard> */}\n        </CardBody>\n      ) : (\n        <div\n          className=\"wizard-basic-step text-center pt-3 \"\n          style={{ minHeight: '400px' }}\n        >\n          <div>\n            <h1 className=\"mb-2\">\n              <IntlMessages id=\"wizard.content-thanks\" />\n            </h1>\n            <h3>\n              <IntlMessages id=\"wizard.registered\" />\n            </h3>\n            <Button\n              className=\"m-5 bg-primary\"\n              onClick={() => setIsSuccess(false)}\n            >\n              {loading ? <Spinner /> : <IntlMessages id=\"button.back\" />}\n            </Button>\n          </div>\n        </div>\n      )}\n    </Card>\n  );\n};\nexport default injectIntl(StudentRegistration);\n"],"names":["inputLabel","fontSize","fontWeight","buttonStyle","FormikReactSelect","_ref","name","value","options","isMulti","className","onChange","onBlur","defaultValue","onClick","isDisabled","isLoading","isClearable","isRtl","isSearchable","placeholder","_jsx","Select","concat","classNamePrefix","IntlMessages","id","initial","val","FormikInputText","_ref9","otherProps","_objectWithoutProperties","_excluded","Input","_objectSpread","style","height","borderRadius","FormikDatePicker","_ref11","DatePicker","selected","_val","MyFormGroup","children","props","FormGroup","MyLabel","_ref2","required","_excluded2","_jsxs","Label","color","MyErrorLabel","_ref3","hide","_excluded3","RequiredHash","injectIntl","values","intl","_useContext","useContext","AuthContext","provinces","districts","institutes","classs","classes","sectors","contextFields","departments","_useState","useState","_useState2","_slicedToArray","setSelectedFile","_useState3","_useState4","instituteDeps","setInstituteDeps","_useState5","useHistory","_useState6","mainDistrictOptions","setMainDistrictOptions","_useState7","_useState8","currentDistrictOptions","setCurrentDistrictOptions","_useState9","_useState10","loading","setLoading","_useState11","_useState12","isSuccess","setIsSuccess","_useState13","_useState14","instDepartmentOptions","setInstDepartmentOptions","formValues","JSON","parse","localStorage","getItem","_useState15","maktoobNumber","maktoobDate","kankorId","name1","englishName","lastName","lastNameEng","fatherName","fatherDuty","fatherEngName","grandFatherName","fatherDutyLocation","DoB","monthOfBirth","dayOfBirth","gender","genderOptions","find","op","_formValues$gender","tazkiraNo","sokokNo","idCardPageNo","idCardJoldNo","sabtNo","tazkiraType","tazkiraOptions","_formValues$tazkiraTy","phoneNo","email","placeOfBirth","levelOfEducation","educationLevelOptions","_formValues$levelOfEd","preSchool","graduationYear","schoolProvince","_formValues$schoolPro","province","_formValues$province","C_Province","_formValues$C_Provinc","C_District","_formValues$C_Distric","district","_formValues$district","village","C_Village","institute","_formValues$institute","class","_formValues$class","educationalYear","department","_formValues$departmen","mediumOfInstruction","mediumOfInstructionOptions","_formValues$mediumOfI","studentId","studyTime","studyTimeOptions","_formValues$studyTime","interanceType","StdInteranceOptions","_formValues$interance","studentType","StudentTypeOptions","_formValues$studentTy","sector","_formValues$sector","file","disability","disabilityOptions","_formValues$disabilit","_useState16","initialValues","handleFileChange","event","currentTarget","files","handleProvinceChange","_asyncToGenerator","_regeneratorRuntime","mark","_callee","setFieldValue","wrap","_context","prev","next","console","log","fetchDistricts","sent","stop","_x","_x2","_x3","apply","arguments","createNotification","type","cName","NotificationManager","success","error","info","storeDataToLocalStorage","data","setItem","stringify","postStudentRecord","_ref4","_callee2","newFields","setFieldError","localStorageData","_error$response","_error$response$data","_error$response$data$","_error$response2","_error$response2$data","_error$response2$data2","_context2","maktob_date","maktob_number","student_id","kankor_id","previous_grade_year","label","previous_school_name","previous_school_province","previous_grade","student_type","english_name","last_name","english_last_name","father_name","english_father_name","phone_number","grandfather_name","cover_number","page_number","sabt_number","tazkira_type","registration_number","sokok_number","main_province","main_district","main_village","current_province","current_district","current_village","year_of_birth","month_of_birth","day_of_birth","father_profession","father_place_of_duty","admission_method","educational_year","teaching_language","shift","place_of_birth","callApi","t0","response","errors","_x4","_x5","_useState17","_useState18","classOptions","setClassOptions","Card","CardHeader","minHeight","Button","Spinner","CardBody","width","display","justifyContent","removeItem","window","location","reload","message","warning","Formik","enableReinitialize","validationSchema","studentRegisterFormStep_1","onSubmit","_ref5","touched","handleSubmit","setFieldTouched","Form","Row","Colxx","xxs","border","containerClassName","calendar","persian","locale","persian_fa","months","persianMonthOptions","e","Date","toDate","getFullYear","getMonth","getDate","Field","inst","instId","then","newOptions","filter","dep","department_ids","reduce","acc","cur","i","add","Set","has","fetchInstDepts","d","class_ids","map","c","includes","InputMask","mask","target","_Fragment","min","max","InputGroupAddon","addonType","FormControl"],"sourceRoot":""}