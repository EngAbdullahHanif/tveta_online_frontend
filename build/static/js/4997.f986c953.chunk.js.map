{"version":3,"file":"static/js/4997.f986c953.chunk.js","mappings":"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","sources":["components/wizard/BottomNavigation.js","config/styling.js","../node_modules/react-bootstrap/esm/Feedback.js","../node_modules/react-bootstrap/esm/FormContext.js","../node_modules/react-bootstrap/esm/FormControl.js","views/app/students/bio/register.js","../node_modules/react-bootstrap/esm/ThemeProvider.js","../node_modules/react-bootstrap/node_modules/classnames/index.js","../node_modules/reactstrap/es/CardHeader.js","../node_modules/reactstrap/es/InputGroupAddon.js","../node_modules/reactstrap/es/InputGroupText.js"],"sourcesContent":["import React from 'react';\nimport { WithWizard } from 'react-albus';\nimport { Row, Button } from 'reactstrap';\nimport { Colxx } from 'components/common/CustomBootstrap';\nimport IntlMessages from 'helpers/IntlMessages';\n\nconst BottomNavigation = ({\n  className,\n  onClickPrev,\n  prevLabel,\n  onClickNext,\n  nextLabel,\n}) => {\n  return (\n    <WithWizard\n      render={({ next, previous, step, steps }) => (\n        <Row className={`wizard-buttons ${className}`}>\n          <Colxx>\n            <Button\n              color=\"primary\"\n              style={{\n                fontSize: '140%',\n                fontWeight: 'bold',\n                paddingInline: '7%',\n              }}\n              className={`mr-1 ${\n                steps.indexOf(step) <= 0 ? 'disabled  m-4 ml-4' : ' m-4 ml-4'\n              }`}\n              onClick={() => {\n                onClickPrev(previous, steps, step);\n              }}\n            >\n              <IntlMessages id=\"button.Back\" />\n            </Button>\n          </Colxx>\n          <Colxx>\n            <Button\n              color=\"primary\"\n              style={{\n                fontSize: '140%',\n                fontWeight: 'bold',\n                paddingInline: '7%',\n              }}\n              className={\n                steps.indexOf(step) >= steps.length - 1\n                  ? 'disabled float-right m-4'\n                  : ' float-right m-4'\n              }\n              onClick={() => {\n                onClickNext(next, steps, step);\n              }}\n            >\n              {steps.indexOf(step) >= steps.length - 2 ? (\n                <IntlMessages id=\"button.SubmitButton\" />\n              ) : (\n                <IntlMessages id=\"button.Next\" />\n              )}\n            </Button>\n          </Colxx>\n        </Row>\n      )}\n    />\n  );\n};\nexport default BottomNavigation;\n","export const inputLabel = { fontSize: 16, fontWeight: 'bold' };\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst propTypes = {\n  /**\n   * Specify whether the feedback is for valid or invalid fields\n   *\n   * @type {('valid'|'invalid')}\n   */\n  type: PropTypes.string,\n  /** Display feedback as a tooltip. */\n  tooltip: PropTypes.bool,\n  as: PropTypes.elementType\n};\nconst Feedback = /*#__PURE__*/React.forwardRef(\n// Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  as: Component = 'div',\n  className,\n  type = 'valid',\n  tooltip = false,\n  ...props\n}, ref) => /*#__PURE__*/_jsx(Component, {\n  ...props,\n  ref: ref,\n  className: classNames(className, `${type}-${tooltip ? 'tooltip' : 'feedback'}`)\n}));\nFeedback.displayName = 'Feedback';\nFeedback.propTypes = propTypes;\nexport default Feedback;","import * as React from 'react';\n\n// TODO\n\nconst FormContext = /*#__PURE__*/React.createContext({});\nexport default FormContext;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport warning from 'warning';\nimport Feedback from './Feedback';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormControl = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  type,\n  size,\n  htmlSize,\n  id,\n  className,\n  isValid = false,\n  isInvalid = false,\n  plaintext,\n  readOnly,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'input',\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-control');\n  let classes;\n  if (plaintext) {\n    classes = {\n      [`${bsPrefix}-plaintext`]: true\n    };\n  } else {\n    classes = {\n      [bsPrefix]: true,\n      [`${bsPrefix}-${size}`]: size\n    };\n  }\n  process.env.NODE_ENV !== \"production\" ? warning(controlId == null || !id, '`controlId` is ignored on `<FormControl>` when `id` is specified.') : void 0;\n  return /*#__PURE__*/_jsx(Component, {\n    ...props,\n    type: type,\n    size: htmlSize,\n    ref: ref,\n    readOnly: readOnly,\n    id: id || controlId,\n    className: classNames(className, classes, isValid && `is-valid`, isInvalid && `is-invalid`, type === 'color' && `${bsPrefix}-color`)\n  });\n});\nFormControl.displayName = 'FormControl';\nexport default Object.assign(FormControl, {\n  Feedback\n});","import React, { createRef, useState, useContext } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { FormControl } from 'react-bootstrap';\nimport './../../.././../assets/css/global-style.css';\n\nimport { fetchDistricts, langOptions } from '../../global-data/options';\n\nimport {\n  Row,\n  Card,\n  CardBody,\n  CardHeader,\n  FormGroup,\n  Label,\n  Spinner,\n  Button,\n  InputGroupAddon,\n} from 'reactstrap';\nimport { Wizard, Steps, Step } from 'react-albus';\nimport {\n  educationalYearsOptions,\n  genderOptions,\n  mediumOfInstructionOptions,\n  StdInteranceOptions,\n  StudentTypeOptions,\n  studyTimeOptions,\n  tazkiraOptions,\n  educationLevelOptions,\n  disabilityOptions,\n} from '../../global-data/options';\nimport {\n  studentRegisterFormStep_1,\n  studentRegisterFormStep_2,\n  studentRegisterFormStep_3,\n} from '../../global-data/forms-validation';\nimport { FormikReactSelect } from 'containers/form-validations/FormikFields';\nimport { injectIntl } from 'react-intl';\nimport { Formik, Form, Field } from 'formik';\nimport IntlMessages from 'helpers/IntlMessages';\nimport BottomNavigation from 'components/wizard/BottomNavigation';\nimport { NotificationManager } from 'components/common/react-notifications';\n\nimport { Colxx } from 'components/common/CustomBootstrap';\nimport callApi from 'helpers/callApi';\nimport { AuthContext } from 'context/AuthContext';\nimport { message } from 'antd';\nimport { inputLabel } from 'config/styling';\n\nconst StudentRegistration = ({ intl }, values) => {\n  const {\n    provinces,\n    districts,\n    institutes,\n    classes: classs,\n    contextFields: fieldList,\n    sectors,\n    departments,\n  } = useContext(AuthContext);\n\n  const [selectedFile, setSelectedFile] = useState(null);\n\n  const [instituteDeps, setInstituteDeps] = useState([]);\n\n  const [fields, setFields] = useState({\n    name1: '',\n    fatherName: '',\n    lastName: '',\n    lastNameEng: '',\n    fatherDuty: '',\n    englishName: '',\n    fatherEngName: '',\n    grandFatherName: '',\n    fatherDutyLocation: '',\n    placeOfBirth: '',\n    DoB: '',\n    monthOfBirth: '',\n    dayOfBirth: '',\n    gender: '',\n    tazkiraNo: '',\n    phoneNo: '',\n    email: '',\n    idCardPageNo: '',\n    sabtNo: '',\n    sokokNo: '',\n    idCardJoldNo: '',\n    tazkiraType: tazkiraOptions[0],\n    levelOfEducation: '',\n    preSchool: '',\n    graduationYear: '',\n    schoolProvince: '',\n    province: '',\n    C_Province: '',\n    C_District: '',\n    district: '',\n    village: '',\n    C_Village: '',\n    institute: '',\n    class: '',\n    educationalYear: '',\n    department: '',\n    mediumOfInstruction: '',\n    // kankorId: initialKankorId,\n    studentId: '',\n    studyTime: '',\n    interanceType: '',\n    studentType: '',\n    batch: '',\n    field: '',\n    sector: '',\n    file: '',\n  });\n\n  const [mainDistrictOptions, setMainDistrictOptions] = useState([]);\n  const [currentDistrictOptions, setCurrentDistrictOptions] = useState([]);\n\n  const [bottomNavHidden, setBottomNavHidden] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [isSuccess, setIsSuccess] = useState(false);\n  const [instDepartmentOptions, setInstDepartmentOptions] = useState([]);\n  // get data of each step from localstorage\n  const step0Data = JSON.parse(localStorage.getItem('step0'));\n  const step1Data = JSON.parse(localStorage.getItem('step1'));\n  const step2Data = JSON.parse(localStorage.getItem('step2'));\n\n  // used arrays as intial values because other things will throw error\n  const [initialValues, setInitialValues] = useState([\n    {\n      name1: step0Data?.name1 || '',\n      englishName: step0Data?.englishName || '',\n      lastName: step0Data?.lastName || '',\n      lastNameEng: step0Data?.lastNameEng || '',\n      fatherName: step0Data?.fatherName || '',\n      fatherDuty: step0Data?.fatherDuty || '',\n      fatherEngName: step0Data?.fatherEngName || '',\n      grandFatherName: step0Data?.grandFatherName || '',\n      fatherDutyLocation: step0Data?.fatherDutyLocation || '',\n      DoB: step0Data?.DoB || '',\n      monthOfBirth: step0Data?.monthOfBirth || '',\n      dayOfBirth: step0Data?.dayOfBirth || '',\n      gender:\n        genderOptions.find((op) => op.value == step0Data?.gender.value) || [],\n      tazkiraNo: step0Data?.tazkiraNo || '',\n      sokokNo: step0Data?.sokokNo || '',\n      idCardPageNo: step0Data?.idCardPageNo || '',\n      idCardJoldNo: step0Data?.idCardJoldNo || '',\n      sabtNo: step0Data?.sabtNo || '',\n      tazkiraType:\n        tazkiraOptions.find(\n          (op) => op.value === step0Data?.tazkiraType.value,\n        ) || tazkiraOptions[0],\n      phoneNo: step0Data?.phoneNo || '',\n      email: step0Data?.email || '',\n      placeOfBirth: step0Data?.placeOfBirth || '',\n    },\n    {\n      levelOfEducation:\n        educationLevelOptions.find(\n          (op) => op.value === step1Data?.levelOfEducation.value,\n        ) || [],\n      preSchool: step1Data?.preSchool || '',\n      graduationYear:\n        educationalYearsOptions.find(\n          (op) => op.value === step1Data?.graduationYear.value,\n        ) || [],\n      schoolProvince:\n        provinces.find((op) => op.value === step1Data?.schoolProvince.value) ||\n        [],\n      province:\n        provinces.find((op) => op.value === step1Data?.province.value) || [],\n      C_Province:\n        provinces.find((op) => op.value === step1Data?.C_Province.value) || [],\n      C_District:\n        districts.find((op) => op.value === step1Data?.C_District.value) || [],\n      district:\n        districts.find((op) => op.value === step1Data?.district.value) || [],\n      village: step1Data?.village || '',\n      C_Village: step1Data?.C_Village || '',\n    },\n    {\n      institute:\n        institutes.find((op) => op.value === step2Data?.institute.value) || [],\n      class: classs.find((op) => op.value === step2Data?.class.value) || [],\n      educationalYear:\n        educationalYearsOptions.find(\n          (op) => op.value === step2Data?.educationalYear.value,\n        ) || [],\n      department:\n        departments.find((op) => op.value === step2Data?.department.value) ||\n        [],\n      mediumOfInstruction:\n        langOptions.find(\n          (op) => op.value === step2Data?.mediumOfInstruction.value,\n        ) || [],\n      studentId: '',\n      studyTime:\n        studyTimeOptions.find(\n          (op) => op.value === step2Data?.studyTime.value,\n        ) || [],\n      interanceType:\n        StdInteranceOptions.find(\n          (op) => op.value === step2Data?.interanceType.value,\n        ) || [],\n      studentType:\n        StudentTypeOptions.find(\n          (op) => op.value === step2Data?.studentType.value,\n        ) || [],\n      // batch: [],\n      // field: [],\n      sector: sectors.find((op) => op.value === step2Data?.sector.value) || [],\n      file: [],\n      disability:\n        disabilityOptions.find(\n          (op) => op.value === step2Data?.disability?.value,\n        ) || [],\n    },\n  ]);\n\n  const fetchInstDepts = (inst) => {\n    const instId = inst.value;\n    callApi(`institute/${instId}/departments/`).then((inst) => {\n      console.log('Institutes Departments: ', inst.data);\n      setInstituteDeps(inst.data);\n      const newOptions = departments.filter((dep) => {\n        // if department id is in data.department\n        let department_ids = inst.data.reduce(\n          (acc, cur, i) => acc.add(cur.department),\n          new Set(),\n        );\n        console.log(department_ids);\n        return department_ids.has(dep.value);\n      });\n      setInstDepartmentOptions(newOptions);\n    });\n  };\n\n  const forms = [createRef(null), createRef(null), createRef(null)];\n\n  const handleFileChange = (event) => {\n    const file = event.currentTarget.files[0];\n    setSelectedFile(file);\n  };\n\n  const handleProvinceChange = async (name, value, setFieldValue) => {\n    console.log('name is ', name);\n    console.log('value is ', value);\n    const districts = await fetchDistricts(value.value);\n    if (name === 'C_Province') {\n      setCurrentDistrictOptions(districts);\n      setFieldValue('C_District', '');\n    } else {\n      setMainDistrictOptions(districts);\n      setFieldValue('district', '');\n    }\n  };\n  const createNotification = (type, className) => {\n    const cName = className || '';\n    switch (type) {\n      case 'success':\n        NotificationManager.success(\n          'شاگرد په بریالیتوب ثبت شو',\n          'موفقیت',\n          3000,\n          null,\n          null,\n          cName,\n        );\n        break;\n      case 'error':\n        NotificationManager.error(\n          'شاگرد ثبت نشو، بیا کوشش وکری',\n          'خطا',\n          9000,\n          () => {\n            // alert('callback');\n          },\n          null,\n          cName,\n        );\n        break;\n      default:\n        NotificationManager.info('Info message');\n        break;\n    }\n  };\n\n  // post student record to server\n  const postStudentRecord = async (data) => {\n    setLoading(true);\n    try {\n      const response = await callApi('students/register/', 'POST', data);\n      createNotification('success', 'filled');\n      console.log('success message', response.data);\n      setIsSuccess(true);\n\n      // history.push(`app/students/student/${response.data.id}`);\n    } catch (error) {\n      setIsSuccess(false);\n      createNotification('error', 'filled');\n      console.log('class error');\n      console.log('error from student registration: ', error.response);\n    }\n    setLoading(false);\n  };\n\n  const resetformFields = () => {\n    if (\n      localStorage.getItem('step0') ||\n      localStorage.getItem('step1') ||\n      localStorage.getItem('step2')\n    ) {\n      localStorage.removeItem('step0');\n      localStorage.removeItem('step1');\n      localStorage.removeItem('step2');\n      window.location.reload();\n    } else message.warning('فورم پاک هست');\n  };\n\n  const handleInitialValues = (steps, step) => {\n    console.log('steps is ', steps);\n    const formIndex = steps.indexOf(step);\n    if (formIndex > 2) return;\n    const form = forms[formIndex].current;\n\n    console.log('step is ', step);\n    const initialValuesCopy = [\n      { ...initialValues[0] },\n      { ...initialValues[1] },\n      { ...initialValues[2] },\n    ];\n    initialValuesCopy[steps.indexOf(step)] = form.values;\n    setInitialValues(initialValuesCopy);\n  };\n\n  // handle when user clicks on next button\n  const onClickNext = (goToNext, steps, step, values) => {\n    console.log('inside goToNext function');\n    // if last step, do nothing\n    const isLastStep = steps.length - 1 <= steps.indexOf(step);\n    if (isLastStep) {\n      console.log('last step, do nothing');\n      return;\n    }\n\n    const formIndex = steps.indexOf(step);\n    const form = forms[formIndex].current;\n    console.log('ref form value: ', form);\n    console.log('form values of index ${formIndex}: ', form.values);\n    // submitForm() only triggers formik validation\n    form.submitForm().then(() => {\n      if (!form.isDirty && form.isValid) {\n        // add step's data into fields state\n        // add fields of this step to the fields state\n        console.log('form values: ', form.values);\n        const newFields = { ...fields, ...form.values };\n        handleInitialValues(steps, step);\n        setFields(newFields);\n        // store data in localstorage data loss prevention\n        localStorage.setItem('step' + formIndex, JSON.stringify(form.values));\n\n        // if last step, submit the form\n        // if next on last step is clicked, call the api to register student\n        if (steps.length - 2 <= steps.indexOf(step)) {\n          // setBottomNavHidden(true);\n          console.log('new fields', newFields);\n\n          const data = {\n            //personal info,\n            name: newFields.name1,\n            student_id: newFields.studentId,\n            kankor_id: newFields.kankorId,\n            previous_grade_year: newFields.graduationYear.label,\n            previous_school_name: newFields.preSchool,\n            previous_school_province: newFields.schoolProvince.value,\n            previous_grade: newFields.levelOfEducation.value,\n            student_type: newFields.studentType.value,\n            english_name: newFields.englishName,\n            last_name: newFields.lastName,\n            english_last_name: newFields.lastNameEng,\n            father_name: newFields.fatherName,\n            english_father_name: newFields.fatherEngName,\n            phone_number: newFields.phoneNo,\n            email: newFields.email,\n            grandfather_name: newFields.grandFatherName,\n            cover_number: newFields.idCardJoldNo,\n            page_number: newFields.idCardPageNo,\n            sabt_number: newFields.sabtNo,\n            tazkira_type: newFields.tazkiraType.value,\n            registration_number: newFields.tazkiraNo,\n            sokok_number: newFields.sokokNo,\n            main_province: newFields.province.value,\n            main_district: newFields.district.value,\n            main_village: newFields.village,\n            current_province: newFields.C_Province.value,\n            current_district: newFields.C_District.value,\n            current_village: newFields.C_Village,\n            year_of_birth: newFields.DoB,\n            month_of_birth: newFields.monthOfBirth,\n            day_of_birth: newFields.dayOfBirth,\n            father_profession: newFields.fatherDuty,\n            father_place_of_duty: newFields.fatherDutyLocation,\n            admission_method: newFields.interanceType.value,\n            // students_status: 'active',\n            gender: newFields.gender.value,\n            institute: newFields.institute.value,\n            educational_year: newFields.educationalYear.label,\n            student_type: newFields.studentType.value,\n            teaching_language: newFields.mediumOfInstruction.value,\n            shift: newFields.studyTime.value,\n\n            // fields info\n            department: newFields.department.value,\n            field_of_study: newFields.field.value,\n\n            // sector:\n            sector: newFields.sector.value,\n            batch: newFields.batch.value,\n\n            // class info,\n            classs: newFields.class.value,\n            place_of_birth: newFields.placeOfBirth,\n          };\n\n          // check if a file is selected\n          if (selectedFile) {\n            console.log(selectedFile);\n            data['photo'] = selectedFile;\n          }\n          if (newFields.disability) {\n            data['disability'] = newFields.disability.value;\n          }\n\n          const formData2 = new FormData();\n          for (let key in data) {\n            // remove undefined values from data that's being sent to the server\n            if (data[key]) {\n              formData2.append(key, data[key]);\n            }\n          }\n\n          console.log('formdata: ', formData2.entries());\n\n          for (const entry of formData2.entries()) {\n            console.log(entry);\n          }\n\n          // posting data to the server\n          postStudentRecord(formData2);\n        }\n        goToNext();\n        step.isDone = true;\n      }\n    });\n  };\n\n  // handle when user clicks on previous button\n  const onClickPrev = (goToPrev, steps, step) => {\n    handleInitialValues(steps, step);\n    console.log('initialValues: ', initialValues);\n    if (steps.indexOf(step) <= 0) {\n      return;\n    }\n    goToPrev();\n  };\n\n  const [classOptions, setClassOptions] = useState([]);\n\n  const { messages } = intl;\n\n  return (\n    <Card>\n      <CardHeader className=\"px-4\">\n        <h2 className=\"mt-5  titleStyle\">\n          {<IntlMessages id=\"forms.studentRegisterTitle\" />}\n        </h2>\n      </CardHeader>\n\n      <CardBody className=\"wizard wizard-default\">\n        <div\n          style={{\n            width: '90%',\n            display: 'flex',\n            justifyContent: 'flex-end',\n          }}\n        >\n          <Button onClick={() => resetformFields()}>پاک کردن فورم</Button>\n        </div>\n        <Wizard>\n          <Steps>\n            <Step id=\"step1\">\n              <div className=\"wizard-basic-step\">\n                <h3>معلومات شخصی</h3>\n                <hr />\n                <Formik\n                  innerRef={forms[0]}\n                  enableReinitialize={true}\n                  initialValues={initialValues[0]}\n                  validateOnMount\n                  validationSchema={studentRegisterFormStep_1}\n                  onSubmit={() => {}}\n                >\n                  {({\n                    errors,\n                    touched,\n                    values,\n                    onBlur,\n                    handleChange,\n                    handleBlur,\n                    setFieldTouched,\n                    setFieldValue,\n                    isSubmitting,\n                  }) => (\n                    <Form className=\"av-tooltip tooltip-label-right has-float-label error-l-100 style \">\n                      <Row>\n                        <Colxx xxs=\"6\">\n                          <div className=\"p-3\">\n                            {/* Name */}\n                            <FormGroup className=\"form-group has-float-label error-l-100 \">\n                              <Label style={inputLabel}>\n                                <IntlMessages id=\"forms.StdName\" />\n                                <span style={{ color: 'red' }}>*</span>\n                              </Label>\n                              <Field\n                                className=\"form-control fieldStyle\"\n                                name=\"name1\"\n                                // style={{ fontSize: '100%' }}\n                              />\n                              {errors.name1 && touched.name1 ? (\n                                <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                                  {errors.name1}\n                                </div>\n                              ) : null}\n                            </FormGroup>\n\n                            {/* lastname */}\n                            <FormGroup className=\"form-group has-float-label\">\n                              <Label style={inputLabel}>\n                                <IntlMessages id=\"forms.lastName\" />\n                                <span style={{ color: 'red' }}>*</span>\n                              </Label>\n                              <Field\n                                className=\"form-control fieldStyle\"\n                                name=\"lastName\"\n                              />\n                              {errors.lastName && touched.lastName ? (\n                                <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                                  {errors.lastName}\n                                </div>\n                              ) : null}\n                            </FormGroup>\n\n                            {/* Father Name */}\n                            <FormGroup className=\"form-group has-float-label error-l-100\">\n                              <Label style={inputLabel}>\n                                <IntlMessages id=\"forms.StdFatherName\" />\n                                <span style={{ color: 'red' }}>*</span>\n                              </Label>\n                              <Field\n                                className=\"form-control fieldStyle\"\n                                name=\"fatherName\"\n                              />\n                              {errors.fatherName && touched.fatherName ? (\n                                <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                                  {errors.fatherName}\n                                </div>\n                              ) : null}\n                            </FormGroup>\n\n                            {/* grandFatherName */}\n                            <FormGroup className=\"form-group has-float-label\">\n                              <Label style={inputLabel}>\n                                <IntlMessages id=\"forms.grandFatherName\" />\n                                <span style={{ color: 'red' }}>*</span>\n                              </Label>\n                              <Field\n                                className=\"form-control fieldStyle\"\n                                name=\"grandFatherName\"\n                              />\n                              {errors.grandFatherName &&\n                              touched.grandFatherName ? (\n                                <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                                  {errors.grandFatherName}\n                                </div>\n                              ) : null}\n                            </FormGroup>\n                            {/* Father Duty */}\n                            <FormGroup className=\"form-group has-float-label error-l-100\">\n                              <Label style={inputLabel}>\n                                <IntlMessages id=\"forms.StdFatherDutyLabel\" />\n                                <span style={{ color: 'red' }}>*</span>\n                              </Label>\n                              <Field\n                                className=\"form-control fieldStyle\"\n                                name=\"fatherDuty\"\n                              />\n                              {errors.fatherDuty && touched.fatherDuty ? (\n                                <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                                  {errors.fatherDuty}\n                                </div>\n                              ) : null}\n                            </FormGroup>\n\n                            {/* Father duty place */}\n                            <FormGroup className=\"form-group has-float-label error-l-100\">\n                              <Label style={inputLabel}>\n                                <IntlMessages id=\"forms.StdFatherDutyLocationLabel\" />\n                                <span style={{ color: 'red' }}>*</span>\n                              </Label>\n                              <Field\n                                className=\"form-control fieldStyle\"\n                                name=\"fatherDutyLocation\"\n                              />\n                              {errors.fatherDutyLocation &&\n                              touched.fatherDutyLocation ? (\n                                <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                                  {errors.fatherDutyLocation}\n                                </div>\n                              ) : null}\n                            </FormGroup>\n\n                            {/* year, month and day of birth */}\n                            <FormGroup className=\"form-group has-float-label error-l-100 \">\n                              <Label style={inputLabel}>\n                                <IntlMessages id=\"label.yearOfBirth\" />\n                                <span style={{ color: 'red' }}>*</span>\n                              </Label>\n                              <Field\n                                className=\"form-control fieldStyle\"\n                                name=\"DoB\"\n                                type=\"number\"\n                                min={1300}\n                                max={1450}\n                              />\n                              {errors.DoB && touched.DoB ? (\n                                <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                                  {errors.DoB}\n                                </div>\n                              ) : null}\n                            </FormGroup>\n\n                            <FormGroup className=\"form-group has-float-label error-l-100 \">\n                              <Label style={inputLabel}>\n                                <IntlMessages id=\"label.monthOfBirth\" />\n                              </Label>\n                              <Field\n                                className=\"form-control fieldStyle\"\n                                name=\"monthOfBirth\"\n                                type=\"number\"\n                                min={1}\n                                max={12}\n                                required={false}\n                              />\n                              {errors.monthOfBirth && touched.monthOfBirth ? (\n                                <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                                  {errors.monthOfBirth}\n                                </div>\n                              ) : null}\n                            </FormGroup>\n\n                            <FormGroup className=\"form-group has-float-label error-l-100 \">\n                              <Label style={inputLabel}>\n                                <IntlMessages id=\"label.dayOfBirth\" />\n                              </Label>\n                              <Field\n                                className=\"form-control fieldStyle\"\n                                name=\"dayOfBirth\"\n                                type=\"number\"\n                                min={1}\n                                max={31}\n                                required={false}\n                              />\n                              {errors.dayOfBirth && touched.dayOfBirth ? (\n                                <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                                  {errors.dayOfBirth}\n                                </div>\n                              ) : null}\n                            </FormGroup>\n\n                            {/* Place of birth */}\n                            <FormGroup className=\"form-group has-float-label error-l-100\">\n                              <Label style={inputLabel}>\n                                <IntlMessages id=\"forms.PlaceOfBirthLabel\" />\n                                <span style={{ color: 'red' }}>*</span>\n                              </Label>\n                              <Field\n                                className=\"form-control fieldStyle\"\n                                name=\"placeOfBirth\"\n                              />\n                              {errors.placeOfBirth && touched.placeOfBirth ? (\n                                <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                                  {errors.placeOfBirth}\n                                </div>\n                              ) : null}\n                            </FormGroup>\n                          </div>\n                        </Colxx>\n                        <Colxx xxs=\"6\">\n                          <div className=\"p-3\">\n                            {/* Student English Name */}\n                            <FormGroup className=\"form-group has-float-label error-l-100\">\n                              <Label style={inputLabel}>\n                                <IntlMessages id=\"forms.Eng_name\" />\n                              </Label>\n                              <Field\n                                className=\"form-control fieldStyle\"\n                                name=\"englishName\"\n                              />\n                              {errors.englishName && touched.englishName ? (\n                                <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                                  {errors.englishName}\n                                </div>\n                              ) : null}\n                            </FormGroup>\n\n                            {/* englishLastname */}\n                            <FormGroup className=\"form-group has-float-label\">\n                              <Label style={inputLabel}>\n                                <IntlMessages id=\"forms.lastNameEng\" />\n                              </Label>\n                              <Field\n                                className=\"form-control fieldStyle\"\n                                name=\"lastNameEng\"\n                              />\n                              {errors.lastNameEng && touched.lastNameEng ? (\n                                <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                                  {errors.lastNameEng}\n                                </div>\n                              ) : null}\n                            </FormGroup>\n\n                            {/*Students Father English Name */}\n                            <FormGroup className=\"form-group has-float-label error-l-100\">\n                              <Label style={inputLabel}>\n                                <IntlMessages id=\"forms.Std_father_Eng_Name\" />\n                              </Label>\n                              <Field\n                                className=\"form-control fieldStyle\"\n                                name=\"fatherEngName\"\n                              />\n                              {errors.fatherEngName && touched.fatherEngName ? (\n                                <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                                  {errors.fatherEngName}\n                                </div>\n                              ) : null}\n                            </FormGroup>\n\n                            {/* Gender */}\n                            <FormGroup className=\"form-group has-float-label error-l-100\">\n                              <Label style={inputLabel}>\n                                <IntlMessages id=\"gender.gender\" />\n                                <span style={{ color: 'red' }}>*</span>\n                              </Label>\n                              <FormikReactSelect\n                                name=\"gender\"\n                                id=\"gender\"\n                                value={values.gender}\n                                options={genderOptions}\n                                onChange={setFieldValue}\n                                onBlur={setFieldTouched}\n                                isSearchable={false}\n                              />\n                              {errors.gender && touched.gender ? (\n                                <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                                  {errors.gender}\n                                </div>\n                              ) : null}\n                            </FormGroup>\n\n                            {/* Tazkira Type */}\n                            <FormGroup className=\"form-group has-float-label error-l-100\">\n                              <Label style={inputLabel}>\n                                <IntlMessages id=\"forms.TazkiraType\" />\n                                <span style={{ color: 'red' }}>*</span>\n                              </Label>\n\n                              <FormikReactSelect\n                                name=\"tazkiraType\"\n                                id=\"tazkiraType\"\n                                value={values.tazkiraType}\n                                // defaultValue={}\n                                options={tazkiraOptions}\n                                onChange={setFieldValue}\n                                onBlur={setFieldTouched}\n                                isSearchable={false}\n                              />\n                              {errors.tazkiraType && touched.tazkiraType ? (\n                                <div className=\"invalid-feedback d-block   bg-danger text-white messageStyle\">\n                                  {errors.tazkiraType}\n                                </div>\n                              ) : null}\n                            </FormGroup>\n                            {/* Tazkira Number */}\n                            {values.tazkiraType.value === 'electronic' && (\n                              <FormGroup className=\"form-group has-float-label error-l-100\">\n                                <Label style={inputLabel}>\n                                  نمبر تذکره الکترونی\n                                  <span style={{ color: 'red' }}>*</span>\n                                </Label>\n                                <Field\n                                  className=\"form-control fieldStyle\"\n                                  name=\"tazkiraNo\"\n                                  type=\"text\"\n                                  maxLength=\"14\"\n                                  minLength=\"12\"\n                                />\n                                {errors.tazkiraNo && touched.tazkiraNo ? (\n                                  <div className=\"invalid-feedback d-block  bg-danger text-white messageStyle\">\n                                    {errors.tazkiraNo}\n                                  </div>\n                                ) : null}\n                              </FormGroup>\n                            )}\n\n                            {values.tazkiraType.value === 'paper' ? (\n                              <>\n                                <div>\n                                  {/* Jold Number */}\n                                  <div>\n                                    <FormGroup className=\"form-group has-float-label error-l-100\">\n                                      <Label style={inputLabel}>\n                                        <IntlMessages id=\"teacher.IdCardJoldNoLabel\" />\n                                      </Label>\n                                      <Field\n                                        className=\"form-control fieldStyle\"\n                                        name=\"idCardJoldNo\"\n                                        type=\"string\"\n                                      />\n                                      {errors.idCardJoldNo &&\n                                      touched.idCardJoldNo ? (\n                                        <div className=\"invalid-feedback d-block  bg-danger text-white messageStyle\">\n                                          {errors.idCardJoldNo}\n                                        </div>\n                                      ) : null}\n                                    </FormGroup>\n                                  </div>\n                                </div>\n\n                                <div>\n                                  {/* Safha */}\n                                  <div>\n                                    <FormGroup className=\"form-group has-float-label error-l-100\">\n                                      <Label style={inputLabel}>\n                                        <IntlMessages id=\"teacher.IdCardPageNoLabel\" />\n                                      </Label>\n                                      <Field\n                                        className=\"form-control fieldStyle\"\n                                        name=\"idCardPageNo\"\n                                        type=\"number\"\n                                      />\n                                      {errors.idCardPageNo &&\n                                      touched.idCardPageNo ? (\n                                        <div className=\"invalid-feedback d-block  bg-danger text-white messageStyle\">\n                                          {errors.idCardPageNo}\n                                        </div>\n                                      ) : null}\n                                    </FormGroup>\n                                  </div>\n                                </div>\n                                <div>\n                                  {/* Sabt */}\n                                  <div>\n                                    <FormGroup className=\"form-group has-float-label error-l-100\">\n                                      <Label style={inputLabel}>\n                                        شماره ثبت\n                                      </Label>\n                                      <Field\n                                        className=\"form-control fieldStyle\"\n                                        name=\"sabtNo\"\n                                        type=\"number\"\n                                      />\n                                      {errors.sabtNo && touched.sabtNo ? (\n                                        <div className=\"invalid-feedback d-block  bg-danger text-white messageStyle\">\n                                          {errors.sabtNo}\n                                        </div>\n                                      ) : null}\n                                    </FormGroup>\n                                  </div>\n                                </div>\n                                <div>\n                                  <div>\n                                    <FormGroup className=\"form-group has-float-label error-l-100\">\n                                      <Label style={inputLabel}>\n                                        شماره صکوک\n                                      </Label>\n                                      <Field\n                                        className=\"form-control fieldStyle\"\n                                        name=\"sokokNo\"\n                                        type=\"number\"\n                                      />\n                                      {errors.sokokNo && touched.sokokNo ? (\n                                        <div className=\"invalid-feedback d-block  bg-danger text-white messageStyle\">\n                                          {errors.sokokNo}\n                                        </div>\n                                      ) : null}\n                                    </FormGroup>\n                                  </div>\n                                </div>\n                              </>\n                            ) : null}\n\n                            {/* Contact No */}\n                            <FormGroup className=\"form-group has-float-label error-l-100 \">\n                              <Label style={inputLabel}>\n                                <IntlMessages id=\"teacher.PhoneNoLabel\" />\n                                {/* <span style={{ color: 'red' }}>*</span> */}\n                              </Label>\n                              <Field\n                                className=\"form-control fieldStyle\"\n                                name=\"phoneNo\"\n                                type=\"text\"\n                              />\n                              {errors.phoneNo && touched.phoneNo ? (\n                                <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                                  {errors.phoneNo}\n                                </div>\n                              ) : null}\n                            </FormGroup>\n\n                            {/* Email Address */}\n                            <FormGroup className=\"form-group has-float-label error-l-100\">\n                              <Label style={inputLabel}>\n                                <IntlMessages id=\"teacher.EmailLabel\" />\n                                {/* <span style={{ color: 'red' }}>*</span> */}\n                              </Label>\n                              <Field\n                                className=\"form-control fieldStyle\"\n                                name=\"email\"\n                                type=\"email\"\n                              />\n                              {errors.email && touched.email ? (\n                                <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                                  {errors.email}\n                                </div>\n                              ) : null}\n                            </FormGroup>\n                          </div>\n                        </Colxx>\n                      </Row>\n                    </Form>\n                  )}\n                </Formik>\n              </div>\n            </Step>\n\n            <Step id=\"step2\">\n              <h3>سکونت</h3>\n              <hr />\n              <div className=\"wizard-basic-step\">\n                <Formik\n                  innerRef={forms[1]}\n                  enableReinitialize={true}\n                  initialValues={initialValues[1]}\n                  onSubmit={() => {}}\n                  validationSchema={studentRegisterFormStep_2}\n                  validateOnMount\n                >\n                  {({\n                    errors,\n                    touched,\n                    values,\n                    setFieldTouched,\n                    setFieldValue,\n                  }) => (\n                    <Form className=\"av-tooltip tooltip-label-right style\">\n                      <>\n                        {/* Address */}\n                        <Row style={{ marginInline: '2%' }}>\n                          <Colxx xxs=\"6\">\n                            <div className=\"square  p-3\">\n                              <h6 className=\" mb-4\">\n                                {\n                                  <IntlMessages id=\"forms.PermanentAddressLabel\" />\n                                }\n                              </h6>\n\n                              {/* province permanent*/}\n                              <FormGroup className=\"form-group has-float-label error-l-100\">\n                                <Label style={inputLabel}>\n                                  <IntlMessages id=\"forms.ProvinceLabel\" />\n                                  <span style={{ color: 'red' }}>*</span>\n                                </Label>\n                                <FormikReactSelect\n                                  name=\"province\"\n                                  id=\"province\"\n                                  value={values.province}\n                                  options={provinces}\n                                  onChange={(name, value) => {\n                                    handleProvinceChange(\n                                      name,\n                                      value,\n                                      setFieldValue,\n                                    );\n                                    setFieldValue(name, value);\n                                  }}\n                                  isSearchable={true}\n                                  onBlur={setFieldTouched}\n                                />\n                                {errors.province && touched.province ? (\n                                  <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                                    {errors.province}\n                                  </div>\n                                ) : null}\n                              </FormGroup>\n\n                              {/* District  permanent*/}\n                              <FormGroup className=\"form-group has-float-label error-l-100\">\n                                <Label style={inputLabel}>\n                                  <IntlMessages id=\"forms.DistrictLabel\" />\n                                  <span style={{ color: 'red' }}>*</span>\n                                </Label>\n                                <FormikReactSelect\n                                  name=\"district\"\n                                  id=\"district\"\n                                  value={values.district}\n                                  options={mainDistrictOptions}\n                                  onChange={setFieldValue}\n                                  onBlur={setFieldTouched}\n                                  isSearchable={true}\n                                />\n                                {errors.district && touched.district ? (\n                                  <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                                    {errors.district}\n                                  </div>\n                                ) : null}\n                              </FormGroup>\n\n                              {/* village permanent */}\n                              <FormGroup className=\"form-group has-float-label error-l-100\">\n                                <Label style={inputLabel}>\n                                  <IntlMessages id=\"forms.VillageLabel\" />\n                                  <span style={{ color: 'red' }}>*</span>\n                                </Label>\n                                <Field\n                                  className=\"form-control fieldStyle\"\n                                  name=\"village\"\n                                />\n                                {errors.village && touched.village ? (\n                                  <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                                    {errors.village}\n                                  </div>\n                                ) : null}\n                              </FormGroup>\n                            </div>\n                          </Colxx>\n\n                          <Colxx xxs=\"6\">\n                            <div className=\"square p-3 \">\n                              <h6 className=\" mb-4\">\n                                {' '}\n                                {\n                                  <IntlMessages id=\"forms.CurrentAddresslabel\" />\n                                }\n                              </h6>\n\n                              {/* Current Address */}\n                              {/* province Current */}\n                              <FormGroup className=\"form-group has-float-label error-l-100\">\n                                <Label style={inputLabel}>\n                                  <IntlMessages id=\"forms.ProvinceLabel\" />\n                                  <span style={{ color: 'red' }}>*</span>\n                                </Label>\n                                <FormikReactSelect\n                                  name=\"C_Province\"\n                                  id=\"C_Province\"\n                                  value={values.C_Province}\n                                  options={provinces}\n                                  isSearchable={true}\n                                  onChange={(name, value) => {\n                                    handleProvinceChange(\n                                      name,\n                                      value,\n                                      setFieldValue,\n                                    );\n                                    setFieldValue(name, value);\n                                  }}\n                                  onBlur={setFieldTouched}\n                                />\n                                {errors.C_Province && touched.C_Province ? (\n                                  <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                                    {errors.C_Province}\n                                  </div>\n                                ) : null}\n                              </FormGroup>\n\n                              {/* District */}\n                              <FormGroup className=\"form-group has-float-label error-l-100\">\n                                <Label style={inputLabel}>\n                                  <IntlMessages id=\"forms.DistrictLabel\" />\n                                  <span style={{ color: 'red' }}>*</span>\n                                </Label>\n                                <FormikReactSelect\n                                  name=\"C_District\"\n                                  id=\"C_District\"\n                                  value={values.C_District}\n                                  options={currentDistrictOptions}\n                                  onChange={setFieldValue}\n                                  onBlur={setFieldTouched}\n                                  isSearchable={true}\n                                />\n                                {errors.C_District && touched.C_District ? (\n                                  <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                                    {errors.C_District}\n                                  </div>\n                                ) : null}\n                              </FormGroup>\n\n                              {/* village */}\n                              <FormGroup className=\"form-group has-float-label error-l-100\">\n                                <Label style={inputLabel}>\n                                  <IntlMessages id=\"forms.VillageLabel\" />\n                                  <span style={{ color: 'red' }}>*</span>\n                                </Label>\n                                <Field\n                                  className=\"form-control fieldStyle\"\n                                  name=\"C_Village\"\n                                />\n                                {errors.C_Village && touched.C_Village ? (\n                                  <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                                    {errors.C_Village}\n                                  </div>\n                                ) : null}\n                              </FormGroup>\n                            </div>\n                          </Colxx>\n                        </Row>\n\n                        <h3>تعلیمات قبلی</h3>\n                        <hr />\n\n                        <Row style={{ marginInline: '2%' }}>\n                          <Colxx xxs=\"6\" className=\"pt-3\">\n                            <div className=\"square p-3 \">\n                              {/*School province*/}\n                              <FormGroup className=\"form-group has-float-label error-l-100\">\n                                <Label style={inputLabel}>\n                                  <IntlMessages id=\"forms.StdSchoolProvinceLabel\" />\n                                  <span style={{ color: 'red' }}>*</span>\n                                </Label>\n                                <FormikReactSelect\n                                  name=\"schoolProvince\"\n                                  id=\"schoolProvince\"\n                                  value={values.schoolProvince}\n                                  options={provinces}\n                                  onChange={setFieldValue}\n                                  onBlur={setFieldTouched}\n                                  isSearchable={true}\n                                />\n                                {errors.schoolProvince &&\n                                touched.schoolProvince ? (\n                                  <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                                    {errors.schoolProvince}\n                                  </div>\n                                ) : null}\n                              </FormGroup>\n                              <FormGroup className=\"form-group has-float-label error-l-100 \">\n                                <Label style={inputLabel}>\n                                  <IntlMessages id=\"forms.StdGraduationYearLabel\" />\n                                  <span style={{ color: 'red' }}>*</span>\n                                </Label>\n                                <FormikReactSelect\n                                  name=\"graduationYear\"\n                                  id=\"graduationYear\"\n                                  value={values.graduationYear}\n                                  options={educationalYearsOptions}\n                                  onChange={setFieldValue}\n                                  onBlur={setFieldTouched}\n                                  isSearchable={false}\n                                  required\n                                />\n                                {errors.graduationYear &&\n                                touched.graduationYear ? (\n                                  <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                                    {errors.graduationYear}\n                                  </div>\n                                ) : null}\n                              </FormGroup>\n                            </div>\n                          </Colxx>{' '}\n                          <Colxx xxs=\"6\" className=\"pt-3\">\n                            <div className=\"p-3\">\n                              {/* Education */}\n                              <FormGroup className=\"form-group has-float-label error-l-100 \">\n                                <Label style={inputLabel}>\n                                  <IntlMessages id=\"teacher.LevelOfEducationLabel\" />\n                                  <span style={{ color: 'red' }}>*</span>\n                                </Label>\n                                <FormikReactSelect\n                                  name=\"levelOfEducation\"\n                                  id=\"levelOfEducation\"\n                                  value={values.levelOfEducation}\n                                  options={educationLevelOptions}\n                                  onChange={setFieldValue}\n                                  onBlur={setFieldTouched}\n                                  isSearchable={false}\n                                />\n                                {errors.levelOfEducation &&\n                                touched.levelOfEducation ? (\n                                  <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                                    {errors.levelOfEducation}\n                                  </div>\n                                ) : null}\n                              </FormGroup>\n\n                              {/* Student Maktab*/}\n                              <FormGroup className=\"form-group has-float-label error-l-100\">\n                                <Label style={inputLabel}>\n                                  <IntlMessages id=\"forms.StPreShcoolLabel\" />\n                                  <span style={{ color: 'red' }}>*</span>\n                                </Label>\n                                <Field\n                                  className=\"form-control fieldStyle\"\n                                  name=\"preSchool\"\n                                />\n                                {errors.preSchool && touched.preSchool ? (\n                                  <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                                    {errors.preSchool}\n                                  </div>\n                                ) : null}\n                              </FormGroup>\n                            </div>\n                          </Colxx>\n                        </Row>\n                      </>\n                    </Form>\n                  )}\n                </Formik>\n              </div>\n            </Step>\n\n            <Step id=\"step3\" hideTopNav>\n              <h3>معلومات شمولیت جدید</h3>\n              <hr />\n              <div className=\"wizard-basic-step\">\n                <Formik\n                  innerRef={forms[2]}\n                  enableReinitialize={true}\n                  initialValues={initialValues[2]}\n                  onSubmit={() => {}}\n                  validationSchema={studentRegisterFormStep_3}\n                  validateOnMount\n                >\n                  {({\n                    errors,\n                    touched,\n                    values,\n                    setFieldTouched,\n                    setFieldValue,\n                  }) => (\n                    <Form className=\"av-tooltip tooltip-label-right error-l-100 style\">\n                      <>\n                        <Row style={{ marginInline: '2%' }}>\n                          {' '}\n                          <Colxx xxs=\"6\">\n                            {/* Institute Name*/}\n                            <FormGroup className=\" has-float-label \">\n                              <Label style={inputLabel}>\n                                <IntlMessages id=\"forms.InstituteLabel\" />\n                                <span style={{ color: 'red' }}>*</span>\n                              </Label>\n                              <FormikReactSelect\n                                name=\"institute\"\n                                id=\"institute\"\n                                value={values.institute}\n                                options={institutes}\n                                onChange={(name, value) => {\n                                  setFieldValue('institute', value);\n                                  fetchInstDepts(value);\n                                }}\n                                onBlur={setFieldTouched}\n                                isSearchable={false}\n                              />\n                              {errors.institute && touched.institute ? (\n                                <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                                  {errors.institute}\n                                </div>\n                              ) : null}\n                            </FormGroup>\n                            {/* Departement  */}\n                            <FormGroup className=\"form-group has-float-label \">\n                              <Label style={inputLabel}>\n                                <IntlMessages id=\"forms.studyDepartment\" />\n                                <span style={{ color: 'red' }}>*</span>\n                              </Label>\n                              <FormikReactSelect\n                                name=\"department\"\n                                id=\"department\"\n                                value={values.department}\n                                options={instDepartmentOptions}\n                                onChange={(name, value) => {\n                                  setFieldValue(name, value);\n                                  setFieldValue('class', '');\n                                  console.log(\n                                    'selected department: ',\n                                    value.value,\n                                  );\n                                  console.log(\n                                    'institute deps: ',\n                                    instituteDeps,\n                                  );\n                                  // get selected department\n                                  const dep = instituteDeps?.find(\n                                    (d) => d.department === value.value,\n                                  );\n\n                                  console.log('departments: ', departments);\n                                  // get classes array from department\n                                  const class_ids = dep?.classes.map(\n                                    (c) => c.classs,\n                                  );\n                                  console.log('class_ids', class_ids);\n\n                                  // filter classes options from context\n                                  setClassOptions(\n                                    classs.filter((c) =>\n                                      class_ids.includes(c.value),\n                                    ),\n                                  );\n                                }}\n                                onBlur={setFieldTouched}\n                                isSearchable={false}\n                                required\n                              />\n                              {errors.department && touched.department ? (\n                                <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                                  {errors.department}\n                                </div>\n                              ) : null}\n                            </FormGroup>\n\n                            {/*  Class name  */}\n                            {console.log('CLASSES: ', classs)}\n                            <FormGroup className=\"form-group has-float-label \">\n                              <Label style={inputLabel}>\n                                <IntlMessages id=\"marks.ClassLabel\" />\n                                <span style={{ color: 'red' }}>*</span>\n                              </Label>\n                              <FormikReactSelect\n                                name=\"class\"\n                                id=\"class\"\n                                value={values.class}\n                                options={classOptions}\n                                onChange={setFieldValue}\n                                onBlur={setFieldTouched}\n                                isSearchable={false}\n                                required\n                              />\n                              {errors.class && touched.class ? (\n                                <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                                  {errors.class}\n                                </div>\n                              ) : null}\n                            </FormGroup>\n\n                            <FormGroup className=\"form-group has-float-label error-l-100 \">\n                              <Label style={inputLabel}>معلولیت/معیوبیت</Label>\n                              <FormikReactSelect\n                                name=\"disability\"\n                                id=\"disability\"\n                                value={values.disability}\n                                options={disabilityOptions}\n                                onChange={setFieldValue}\n                                onBlur={setFieldTouched}\n                                isSearchable={false}\n                                isClearable={true}\n                                // style={{ fontSize: '100%' }}\n                              />\n                              {errors.disability && touched.disability ? (\n                                <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                                  {errors.disability}\n                                </div>\n                              ) : null}\n                            </FormGroup>\n\n                            {/* Student Id */}\n                            <FormGroup className=\"form-group has-float-label\">\n                              <Label style={inputLabel}>\n                                <IntlMessages id=\"student.studentId\" />\n                                <span style={{ color: 'red' }}>*</span>\n                              </Label>\n                              <Field\n                                className=\"form-control fieldStyle\"\n                                name=\"studentId\"\n                                type=\"number\"\n                              />\n                              {errors.studentId && touched.studentId ? (\n                                <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                                  {errors.studentId}\n                                </div>\n                              ) : null}\n                            </FormGroup>\n\n                            {/* Eduactional Year*/}\n                            <FormGroup className=\"form-group has-float-label \">\n                              <Label style={inputLabel}>\n                                <IntlMessages id=\"curriculum.eduactionalYearLabel\" />\n                              </Label>\n                              <FormikReactSelect\n                                name=\"educationalYear\"\n                                id=\"educationalYear\"\n                                value={values.educationalYear}\n                                options={educationalYearsOptions}\n                                onChange={setFieldValue}\n                                onBlur={setFieldTouched}\n                                isSearchable={false}\n                                required\n                              />\n                              {errors.educationalYear &&\n                              touched.educationalYear ? (\n                                <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                                  {errors.educationalYear}\n                                </div>\n                              ) : null}\n                            </FormGroup>\n\n                            {/* Sector */}\n                            {/* <FormGroup className=\"form-group has-float-label \">\n                              <span style={{ color: 'red' }}>*</span>\n                              <Label style={inputLabel}>\n                                <IntlMessages id=\"forms.sector\" />\n                              </Label>\n                              <FormikReactSelect\n                                name=\"sector\"\n                                id=\"sector\"\n                                value={values.sector}\n                                options={sectors}\n                                onChange={setFieldValue}\n                                onBlur={setFieldTouched}\n                                isSearchable={false}\n                                required\n                              />\n                              {errors.sector && touched.sector ? (\n                                <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                                  {errors.sector}\n                                </div>\n                              ) : null}\n                            </FormGroup> */}\n\n                            {/* kankor Id */}\n                            {/* <FormGroup className=\"form-group has-float-label\">\n                              <Label style={inputLabel}>\n                                <IntlMessages id=\"forms.kankorId\" />\n                              </Label>\n                              <Field className=\"form-control\" name=\"kankorId\" />\n                              {errors.kankorId && touched.kankorId ? (\n                                <div className=\"invalid-feedback d-block bg-danger text-white\">\n                                  {errors.kankorId}\n                                </div>\n                              ) : null}\n                            </FormGroup> */}\n\n                            {/* internse type*/}\n                            <FormGroup className=\"form-group has-float-label error-l-100\">\n                              <Label style={inputLabel}>\n                                <IntlMessages id=\"forms.StdInteranceTypeLabel\" />\n                                <span style={{ color: 'red' }}>*</span>\n                              </Label>\n                              <FormikReactSelect\n                                name=\"interanceType\"\n                                id=\"interanceType\"\n                                value={values.interanceType}\n                                options={StdInteranceOptions}\n                                onChange={setFieldValue}\n                                onBlur={setFieldTouched}\n                                isSearchable={false}\n                              />\n                              {errors.interanceType && touched.interanceType ? (\n                                <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                                  {errors.interanceType}\n                                </div>\n                              ) : null}\n                            </FormGroup>\n\n                            {/* Upload Photo */}\n                            <FormGroup className=\"form-group has-float-label error-l-100\">\n                              <InputGroupAddon addonType=\"prepend\">\n                                <IntlMessages id=\"student.uploadPhoto\" />\n                              </InputGroupAddon>\n                              <FormControl\n                                name=\"file\"\n                                type=\"file\"\n                                className=\"form-control fieldStyle\"\n                                onChange={handleFileChange}\n                              />\n                              {errors.file && touched.file ? (\n                                <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                                  {errors.file}\n                                </div>\n                              ) : null}\n                            </FormGroup>\n                          </Colxx>\n                          <Colxx xxs=\"6\">\n                            {/* field  */}\n                            {/* <FormGroup className=\"form-group has-float-label \">\n                              <Label style={inputLabel}>\n                                <IntlMessages id=\"dash.field-1\" />\n                                <span style={{ color: 'red' }}>*</span>\n                              </Label>\n                              <FormikReactSelect\n                                name=\"field\"\n                                id=\"field\"\n                                value={values.field}\n                                options={fieldList}\n                                onChange={setFieldValue}\n                                onBlur={setFieldTouched}\n                                isSearchable={false}\n                                required\n                              />\n                              {errors.field && touched.field ? (\n                                <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                                  {errors.field}\n                                </div>\n                              ) : null}\n                            </FormGroup> */}\n\n                            {/* Batch */}\n                            {/* <FormGroup className=\"form-group has-float-label \">\n                              <Label style={inputLabel}>\n                                <IntlMessages id=\"forms.batch\" />\n                                <span style={{ color: 'red' }}>*</span>\n                              </Label>\n                              <FormikReactSelect\n                                name=\"batch\"\n                                id=\"batch\"\n                                value={values.batch}\n                                options={batchOptions}\n                                onChange={setFieldValue}\n                                onBlur={setFieldTouched}\n                                isSearchable={false}\n                                required\n                              />\n                              {errors.batch && touched.batch ? (\n                                <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                                  {errors.batch}\n                                </div>\n                              ) : null}\n                            </FormGroup> */}\n\n                            {/* medium OfInstruction (Teaching Language) */}\n                            <FormGroup className=\"form-group has-float-label \">\n                              <Label style={inputLabel}>\n                                <IntlMessages id=\"forms.mediumOfInstruction\" />\n                                <span style={{ color: 'red' }}>*</span>\n                              </Label>\n                              <FormikReactSelect\n                                name=\"mediumOfInstruction\"\n                                id=\"mediumOfInstruction\"\n                                value={values.mediumOfInstruction}\n                                options={mediumOfInstructionOptions}\n                                onChange={setFieldValue}\n                                onBlur={setFieldTouched}\n                                isSearchable={false}\n                                required\n                              />\n                              {errors.mediumOfInstruction &&\n                              touched.mediumOfInstruction ? (\n                                <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                                  {errors.mediumOfInstruction}\n                                </div>\n                              ) : null}\n                            </FormGroup>\n\n                            {/* Study Time */}\n                            <FormGroup className=\"form-group has-float-label error-l-100\">\n                              <Label style={inputLabel}>\n                                <IntlMessages id=\"forms.StudyTimeLabel\" />\n                                <span style={{ color: 'red' }}>*</span>\n                              </Label>\n                              <FormikReactSelect\n                                name=\"studyTime\"\n                                id=\"studyTime\"\n                                value={values.studyTime}\n                                options={studyTimeOptions}\n                                onChange={setFieldValue}\n                                onBlur={setFieldTouched}\n                                isSearchable={false}\n                              />\n                              {errors.studyTime && touched.studyTime ? (\n                                <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                                  {errors.studyTime}\n                                </div>\n                              ) : null}\n                            </FormGroup>\n\n                            {/*Student Type*/}\n                            <FormGroup className=\"form-group has-float-label error-l-100\">\n                              <Label style={inputLabel}>\n                                <IntlMessages id=\"forms.StudentTypeLabel\" />\n                                <span style={{ color: 'red' }}>*</span>\n                              </Label>\n                              <FormikReactSelect\n                                name=\"studentType\"\n                                id=\"studentType\"\n                                value={values.studentType}\n                                options={StudentTypeOptions}\n                                onChange={setFieldValue}\n                                onBlur={setFieldTouched}\n                                isSearchable={false}\n                              />\n                              {errors.studentType && touched.studentType ? (\n                                <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                                  {errors.studentType}\n                                </div>\n                              ) : null}\n                            </FormGroup>\n                          </Colxx>\n                        </Row>\n                      </>\n                    </Form>\n                  )}\n                </Formik>\n              </div>\n            </Step>\n\n            <Step id=\"step4\" hideTopNav>\n              <div className=\"wizard-basic-step text-center pt-3\">\n                {loading && (\n                  <div>\n                    <Spinner color=\"primary\" className=\"mb-1\" />\n                    <p>\n                      <IntlMessages id=\"submit.waitmessage\" />\n                    </p>\n                  </div>\n                )}\n                {isSuccess ? (\n                  <div>\n                    <h1 className=\"mb-2\">\n                      <IntlMessages id=\"wizard.content-thanks\" />\n                    </h1>\n                    <h3>\n                      <IntlMessages id=\"wizard.registered\" />\n                    </h3>\n                    <NavLink\n                      to={{\n                        pathname: '/app/students/register-1',\n                        state: { data: 'STUDENT' },\n                      }}\n                    >\n                      <Button className=\"mt-5 bg-primary\">\n                        <IntlMessages id=\"button.back\" />\n                      </Button>\n                    </NavLink>\n                  </div>\n                ) : (\n                  <div>\n                    <h1 className=\"mb-2\">شاګرد ثبت نشو/نشد</h1>\n                    <h3>بیرته لاړ شی او</h3>\n                    <NavLink\n                      to={{\n                        pathname: '/app/students/register-1',\n                        state: { data: 'STUDENT' },\n                      }}\n                    >\n                      <Button className=\"mt-5 bg-primary\">\n                        <IntlMessages id=\"button.back\" />\n                      </Button>\n                    </NavLink>\n                  </div>\n                )}\n              </div>\n            </Step>\n          </Steps>\n          {!isSuccess && (\n            <BottomNavigation\n              onClickNext={onClickNext}\n              onClickPrev={onClickPrev}\n              className={` m-5  ${bottomNavHidden && 'invisible'}`}\n              prevLabel={messages['wizard.prev']}\n              nextLabel={messages['wizard.next']}\n            />\n          )}\n        </Wizard>\n      </CardBody>\n    </Card>\n  );\n};\nexport default injectIntl(StudentRegistration);\n","import * as React from 'react';\nimport { useContext, useMemo } from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const DEFAULT_BREAKPOINTS = ['xxl', 'xl', 'lg', 'md', 'sm', 'xs'];\nexport const DEFAULT_MIN_BREAKPOINT = 'xs';\nconst ThemeContext = /*#__PURE__*/React.createContext({\n  prefixes: {},\n  breakpoints: DEFAULT_BREAKPOINTS,\n  minBreakpoint: DEFAULT_MIN_BREAKPOINT\n});\nconst {\n  Consumer,\n  Provider\n} = ThemeContext;\nfunction ThemeProvider({\n  prefixes = {},\n  breakpoints = DEFAULT_BREAKPOINTS,\n  minBreakpoint = DEFAULT_MIN_BREAKPOINT,\n  dir,\n  children\n}) {\n  const contextValue = useMemo(() => ({\n    prefixes: {\n      ...prefixes\n    },\n    breakpoints,\n    minBreakpoint,\n    dir\n  }), [prefixes, breakpoints, minBreakpoint, dir]);\n  return /*#__PURE__*/_jsx(Provider, {\n    value: contextValue,\n    children: children\n  });\n}\nexport function useBootstrapPrefix(prefix, defaultPrefix) {\n  const {\n    prefixes\n  } = useContext(ThemeContext);\n  return prefix || prefixes[defaultPrefix] || defaultPrefix;\n}\nexport function useBootstrapBreakpoints() {\n  const {\n    breakpoints\n  } = useContext(ThemeContext);\n  return breakpoints;\n}\nexport function useBootstrapMinBreakpoint() {\n  const {\n    minBreakpoint\n  } = useContext(ThemeContext);\n  return minBreakpoint;\n}\nexport function useIsRTL() {\n  const {\n    dir\n  } = useContext(ThemeContext);\n  return dir === 'rtl';\n}\nfunction createBootstrapComponent(Component, opts) {\n  if (typeof opts === 'string') opts = {\n    prefix: opts\n  };\n  const isClassy = Component.prototype && Component.prototype.isReactComponent;\n  // If it's a functional component make sure we don't break it with a ref\n  const {\n    prefix,\n    forwardRefAs = isClassy ? 'ref' : 'innerRef'\n  } = opts;\n  const Wrapped = /*#__PURE__*/React.forwardRef(({\n    ...props\n  }, ref) => {\n    props[forwardRefAs] = ref;\n    const bsPrefix = useBootstrapPrefix(props.bsPrefix, prefix);\n    return /*#__PURE__*/_jsx(Component, {\n      ...props,\n      bsPrefix: bsPrefix\n    });\n  });\n  Wrapped.displayName = `Bootstrap(${Component.displayName || Component.name})`;\n  return Wrapped;\n}\nexport { createBootstrapComponent, Consumer as ThemeConsumer };\nexport default ThemeProvider;","/*!\n\tCopyright (c) 2018 Jed Watson.\n\tLicensed under the MIT License (MIT), see\n\thttp://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\tvar nativeCodeString = '[native code]';\n\n\tfunction classNames() {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tif (arg.length) {\n\t\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\t\tif (inner) {\n\t\t\t\t\t\tclasses.push(inner);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tif (arg.toString !== Object.prototype.toString && !arg.toString.toString().includes('[native code]')) {\n\t\t\t\t\tclasses.push(arg.toString());\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"tag\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardHeader = function CardHeader(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var classes = mapToCssModules(classNames(className, 'card-header'), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nCardHeader.propTypes = propTypes;\nCardHeader.defaultProps = defaultProps;\nexport default CardHeader;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"tag\", \"addonType\", \"children\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nimport InputGroupText from './InputGroupText';\nvar propTypes = {\n  tag: tagPropType,\n  addonType: PropTypes.oneOf(['prepend', 'append']).isRequired,\n  children: PropTypes.node,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar InputGroupAddon = function InputGroupAddon(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      addonType = props.addonType,\n      children = props.children,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var classes = mapToCssModules(classNames(className, 'input-group-' + addonType), cssModule); // Convenience to assist with transition\n\n  if (typeof children === 'string') {\n    return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n      className: classes\n    }), /*#__PURE__*/React.createElement(InputGroupText, {\n      children: children\n    }));\n  }\n\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    children: children\n  }));\n};\n\nInputGroupAddon.propTypes = propTypes;\nInputGroupAddon.defaultProps = defaultProps;\nexport default InputGroupAddon;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"tag\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'span'\n};\n\nvar InputGroupText = function InputGroupText(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var classes = mapToCssModules(classNames(className, 'input-group-text'), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nInputGroupText.propTypes = propTypes;\nInputGroupText.defaultProps = defaultProps;\nexport default InputGroupText;"],"names":["_ref","className","onClickPrev","onClickNext","prevLabel","nextLabel","_jsx","WithWizard","render","_ref2","next","previous","step","steps","_jsxs","Row","concat","children","Colxx","Button","color","style","fontSize","fontWeight","paddingInline","indexOf","onClick","IntlMessages","id","length","inputLabel","propTypes","type","PropTypes","tooltip","as","Feedback","React","ref","_ref$as","Component","_ref$type","_ref$tooltip","props","_objectWithoutProperties","_excluded","_objectSpread","classNames","displayName","FormControl","classes","_classes2","bsPrefix","size","htmlSize","_ref$isValid","isValid","_ref$isInvalid","isInvalid","plaintext","readOnly","controlId","useContext","FormContext","useBootstrapPrefix","_defineProperty","Object","assign","injectIntl","values","intl","_useContext","AuthContext","provinces","districts","institutes","classs","sectors","contextFields","departments","_useState","useState","_useState2","_slicedToArray","selectedFile","setSelectedFile","_useState3","_useState4","instituteDeps","setInstituteDeps","_useState5","name1","fatherName","lastName","lastNameEng","fatherDuty","englishName","fatherEngName","grandFatherName","fatherDutyLocation","placeOfBirth","DoB","monthOfBirth","dayOfBirth","gender","tazkiraNo","phoneNo","email","idCardPageNo","sabtNo","sokokNo","idCardJoldNo","tazkiraType","tazkiraOptions","levelOfEducation","preSchool","graduationYear","schoolProvince","province","C_Province","C_District","district","village","C_Village","institute","class","educationalYear","department","mediumOfInstruction","studentId","studyTime","interanceType","studentType","batch","field","sector","file","_useState6","fields","setFields","_useState7","_useState8","mainDistrictOptions","setMainDistrictOptions","_useState9","_useState10","currentDistrictOptions","setCurrentDistrictOptions","_useState11","_useState12","bottomNavHidden","_useState13","_useState14","loading","setLoading","_useState15","_useState16","isSuccess","setIsSuccess","_useState17","_useState18","instDepartmentOptions","setInstDepartmentOptions","step0Data","JSON","parse","localStorage","getItem","step1Data","step2Data","_useState19","genderOptions","find","op","value","educationLevelOptions","educationalYearsOptions","langOptions","studyTimeOptions","StdInteranceOptions","StudentTypeOptions","disability","disabilityOptions","_step2Data$disability","_useState20","initialValues","setInitialValues","forms","createRef","handleFileChange","event","currentTarget","files","handleProvinceChange","_asyncToGenerator","_regeneratorRuntime","mark","_callee","name","setFieldValue","wrap","_context","prev","console","log","fetchDistricts","sent","stop","_x","_x2","_x3","apply","arguments","createNotification","cName","NotificationManager","success","error","info","postStudentRecord","_ref3","_callee2","data","response","_context2","callApi","t0","_x4","handleInitialValues","formIndex","form","current","initialValuesCopy","_useState21","_useState22","classOptions","setClassOptions","messages","Card","CardHeader","CardBody","width","display","justifyContent","removeItem","window","location","reload","message","warning","Wizard","Steps","Step","Formik","innerRef","enableReinitialize","validateOnMount","validationSchema","studentRegisterFormStep_1","onSubmit","_ref4","errors","touched","setFieldTouched","onBlur","handleChange","handleBlur","isSubmitting","Form","xxs","FormGroup","Label","Field","min","max","required","FormikReactSelect","options","onChange","isSearchable","maxLength","minLength","_Fragment","studentRegisterFormStep_2","_ref5","marginInline","hideTopNav","studentRegisterFormStep_3","_ref6","inst","instId","then","newOptions","filter","dep","department_ids","reduce","acc","cur","i","add","Set","has","fetchInstDepts","d","class_ids","map","c","includes","isClearable","InputGroupAddon","addonType","mediumOfInstructionOptions","Spinner","NavLink","to","pathname","state","BottomNavigation","goToNext","submitForm","isDirty","newFields","setItem","stringify","_data","student_id","kankor_id","kankorId","previous_grade_year","label","previous_school_name","previous_school_province","previous_grade","student_type","english_name","last_name","english_last_name","father_name","english_father_name","phone_number","grandfather_name","cover_number","page_number","sabt_number","tazkira_type","registration_number","sokok_number","main_province","main_district","main_village","current_province","current_district","current_village","year_of_birth","month_of_birth","day_of_birth","father_profession","father_place_of_duty","admission_method","educational_year","formData2","FormData","key","append","entries","_step","_iterator","_createForOfIteratorHelper","s","n","done","entry","err","e","f","isDone","goToPrev","DEFAULT_BREAKPOINTS","ThemeContext","prefixes","breakpoints","minBreakpoint","Consumer","Provider","prefix","defaultPrefix","hasOwn","hasOwnProperty","arg","argType","push","Array","isArray","inner","toString","prototype","call","join","module","exports","default","tag","tagPropType","cssModule","Tag","attributes","_objectWithoutPropertiesLoose","mapToCssModules","_extends","defaultProps","isRequired","InputGroupText"],"sourceRoot":""}