{"version":3,"file":"static/js/5648.4394d33a.chunk.js","mappings":"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","sources":["config/index.js","config/production.js","containers/form-validations/FormikFields.js","views/app/institutes/institute-profile.js"],"sourcesContent":["let config;\n\nif (process.env.NODE_ENV) {\n  if (process.env.NODE_ENV === 'production') {\n    config = require('./production');\n  } else {\n    config = require('./development');\n  }\n} else {\n  config = require('./development');\n}\n\nexport default config;\n","const API_URL = 'http://103.132.98.58:8000';\n\nexport { API_URL };\n","import React from 'react';\nimport Select from 'react-select';\nimport { CustomInput } from 'reactstrap';\nimport IntlMessages from 'helpers/IntlMessages';\n\nimport TagsInput from 'react-tagsinput';\nimport 'react-tagsinput/react-tagsinput.css';\nimport Switch from 'rc-switch';\nimport 'rc-switch/assets/index.css';\n\nimport DatePicker from 'react-multi-date-picker';\n\nimport 'react-datepicker/dist/react-datepicker.css';\nimport { Input } from 'antd';\n\nconst FormikReactSelect = ({\n  name,\n  value,\n  options,\n  isMulti,\n  className,\n  onChange,\n  onBlur,\n  onClick,\n  defaultValue,\n  isDisabled,\n  isLoading,\n  isClearable,\n  isRtl,\n  isSearchable,\n  placeholder,\n}) => {\n  const handleChange = (val) => {\n    onChange(name, val);\n  };\n\n  const handleBlur = () => {\n    onBlur(name, true);\n  };\n\n  return (\n    <Select\n      className={`react-select ${className}`}\n      classNamePrefix=\"react-select\"\n      placeholder={\n        placeholder || <IntlMessages id=\"forms.EducationLevelDefaultValue\" />\n      }\n      options={options}\n      isMulti={isMulti}\n      initial\n      onChange={handleChange}\n      onBlur={handleBlur}\n      value={value}\n      defaultValue={defaultValue}\n      isDisabled={isDisabled}\n      isLoading={isLoading}\n      isClearable={isClearable}\n      isRtl={isRtl}\n      isSearchable={isSearchable}\n    />\n  );\n};\n\nconst FormikCheckboxGroup = ({\n  name,\n  value,\n  options,\n  inline = false,\n  onChange,\n  onBlur,\n}) => {\n  const handleChange = (val) => {\n    const valueArray = [...value] || [];\n    if (!valueArray.includes(val)) {\n      valueArray.push(val);\n    } else {\n      valueArray.splice(valueArray.indexOf(val), 1);\n    }\n    onChange(name, valueArray);\n  };\n\n  const handleBlur = () => {\n    onBlur(name, true);\n  };\n\n  return (\n    <>\n      {options.map((child, index) => {\n        return (\n          <div\n            key={`${name}_${child.value}_${index}`}\n            className={`position-relative form-check ${\n              inline ? 'form-check-inline' : ''\n            }`}\n          >\n            <input\n              name={name}\n              type=\"checkbox\"\n              className=\"form-check-input\"\n              onChange={() => handleChange(child.value)}\n              onBlur={handleBlur}\n              defaultChecked={value.includes(child.value)}\n              disabled={child.disabled}\n            />\n            <label className=\"form-check-label\">{child.label}</label>\n          </div>\n        );\n      })}\n    </>\n  );\n};\n\nconst FormikCustomCheckboxGroup = ({\n  name,\n  value,\n  options,\n  inline = false,\n  onChange,\n  onBlur,\n}) => {\n  const handleChange = (val) => {\n    const valueArray = [...value] || [];\n    if (!valueArray.includes(val)) {\n      valueArray.push(val);\n    } else {\n      valueArray.splice(valueArray.indexOf(val), 1);\n    }\n    onChange(name, valueArray);\n  };\n\n  const handleBlur = () => {\n    onBlur(name, true);\n  };\n\n  return (\n    <>\n      {options.map((child, index) => {\n        return (\n          <CustomInput\n            key={`${name}_${child.value}_${index}`}\n            id={`${name}_${child.value}_${index}`}\n            type=\"checkbox\"\n            name={child.name}\n            label={child.label}\n            onChange={() => handleChange(child.value)}\n            onBlur={handleBlur}\n            checked={value.includes(child.value)}\n            disabled={child.disabled}\n            inline={inline}\n          />\n        );\n      })}\n    </>\n  );\n};\n\nconst FormikCheckbox = ({ name, value, disabled, label, onChange, onBlur }) => {\n  const handleChange = (_event) => {\n    onChange(name, !value);\n  };\n  const handleBlur = () => {\n    onBlur(name, true);\n  };\n  return (\n    <div className=\"position-relative form-check form-check-inline\">\n      <input\n        name={name}\n        type=\"checkbox\"\n        className=\"form-check-input\"\n        onChange={handleChange}\n        onBlur={handleBlur}\n        checked={value}\n        disabled={disabled}\n      />\n      <label className=\"form-check-label\">{label}</label>\n    </div>\n  );\n};\n\nconst FormikCustomCheckbox = ({\n  name,\n  value,\n  disabled,\n  label,\n  onChange,\n  onBlur,\n}) => {\n  const handleChange = (_event) => {\n    onChange(name, !value);\n  };\n  const handleBlur = () => {\n    onBlur(name, true);\n  };\n  return (\n    <CustomInput\n      type=\"checkbox\"\n      id={name}\n      name={name}\n      label={label}\n      onChange={handleChange}\n      onBlur={handleBlur}\n      checked={value}\n      disabled={disabled}\n      inline\n    />\n  );\n};\n\nconst FormikRadioButtonGroup = ({\n  name,\n  value,\n  options,\n  inline = false,\n  onChange,\n  onBlur,\n}) => {\n  const handleChange = (val) => {\n    onChange(name, val);\n  };\n\n  const handleBlur = () => {\n    onBlur(name, true);\n  };\n\n  return (\n    <>\n      {options.map((child, index) => {\n        return (\n          <div\n            key={`${name}_${child.value}_${index}`}\n            className={`position-relative form-check ${\n              inline ? 'form-check-inline' : ''\n            }`}\n          >\n            <input\n              id={child.value}\n              name={name}\n              type=\"radio\"\n              className=\"form-check-input\"\n              onChange={() => handleChange(child.value)}\n              onBlur={handleBlur}\n              defaultChecked={value === child.value}\n              disabled={child.disabled}\n            />\n            <label className=\"form-check-label\">{child.label}</label>\n          </div>\n        );\n      })}\n    </>\n  );\n};\n\nconst FormikCustomRadioGroup = ({\n  name,\n  value,\n  options,\n  inline = false,\n  onChange,\n  onBlur,\n}) => {\n  const handleChange = (val) => {\n    onChange(name, val);\n  };\n\n  const handleBlur = () => {\n    onBlur(name, true);\n  };\n\n  return (\n    <>\n      {options.map((child, index) => {\n        return (\n          <CustomInput\n            key={`${name}_${child.value}_${index}`}\n            type=\"radio\"\n            id={`${name}_${child.value}_${index}`}\n            name={child.name}\n            label={child.label}\n            onChange={() => handleChange(child.value)}\n            onBlur={handleBlur}\n            checked={value === child.value}\n            disabled={child.disabled}\n            inline={inline}\n          />\n        );\n      })}\n    </>\n  );\n};\n\nconst FormikTagsInput = ({ name, value, onChange, onBlur }) => {\n  const handleChange = (val) => {\n    onBlur(name, true);\n    onChange(name, val);\n  };\n\n  return <TagsInput name={name} value={value} onChange={handleChange} />;\n};\n\nconst FormikInputText = ({ name, value, onChange, onBlur, ...otherProps }) => {\n  // const handleChange = (val) => {\n  //   onBlur(name, true);\n  //   onChange(name, val);\n  // };\n  return (\n    <Input\n      name={name}\n      value={value}\n      onChange={onChange}\n      style={{ height: 48, borderRadius: 0 }}\n      {...otherProps}\n    />\n  );\n};\n\nconst FormikSwitch = ({ name, value, className, onChange, onBlur }) => {\n  const handleChange = (val) => {\n    onBlur(name, true);\n    onChange(name, val);\n  };\n\n  return (\n    <Switch\n      name={name}\n      className={className}\n      checked={value}\n      onChange={handleChange}\n    />\n  );\n};\n\nconst FormikDatePicker = ({ name, value, className, onChange, onBlur }) => {\n  const handleChange = (val) => {\n    onChange(name, val);\n  };\n\n  const handleBlur = (_val) => {\n    onBlur(name, true);\n  };\n\n  return (\n    <DatePicker\n      name={name}\n      className={className}\n      selected={value}\n      onChange={handleChange}\n      onBlur={handleBlur}\n    />\n  );\n};\n\nexport {\n  FormikReactSelect,\n  FormikCheckboxGroup,\n  FormikCustomCheckboxGroup,\n  FormikCheckbox,\n  FormikCustomCheckbox,\n  FormikRadioButtonGroup,\n  FormikCustomRadioGroup,\n  FormikTagsInput,\n  FormikInputText,\n  FormikSwitch,\n  FormikDatePicker,\n};\n","import React, { useState, useEffect } from 'react';\nimport { Formik, Form } from 'formik';\nimport './../dorms/dorm-register.css';\nimport { useParams } from 'react-router-dom';\nimport callApi from 'helpers/callApi';\n\nimport * as Yup from 'yup';\nimport { Row, Card, CardBody, FormGroup, Label } from 'reactstrap';\n\nimport IntlMessages from 'helpers/IntlMessages';\nimport { Colxx, Separator } from 'components/common/CustomBootstrap';\nimport config from '../../../config';\n\nimport { FormikReactSelect } from 'containers/form-validations/FormikFields';\nimport { useContext } from 'react';\nimport { AuthContext } from 'context/AuthContext';\nimport { message } from 'antd';\n\nconst servicePath = config.API_URL;\nconst instituteApiUrl = `${servicePath}/institute/institute-teachers-students-statistics`;\n\nconst InstituteDetails = (values) => {\n  const { departments, classes: classs } = useContext(AuthContext);\n  const [isNext, setIsNext] = useState(true);\n  const { instituteId } = useParams();\n  const [institute, setInstitute] = useState([]);\n  const [instituteStatistics, setInstituteStatistics] = useState([]);\n  // const [departments, setDepartments] = useState([]);\n  const [instDepartments, setInstDepartments] = useState([]);\n  const [InstDepClasses, setInstDepClasses] = useState([]);\n\n  const schemaValidation = Yup.object().shape({\n    class: Yup.object()\n      .shape({\n        value: Yup.string().required(),\n      })\n      .nullable()\n      .required(<IntlMessages id=\"marks.ClassErr\" />),\n\n    department: Yup.object()\n      .shape({\n        value: Yup.string().required(),\n      })\n      .nullable()\n      .required(<IntlMessages id=\"teacher.departmentIdErr\" />),\n  });\n  const fetchInstDepts = () => {\n    callApi(`institute/${instituteId}/departments/`).then((inst) => {\n      console.log('Institutes Departments: ', inst.data);\n      const newOptions = departments.filter((dep) => {\n        // if department id is in data.department\n        let department_ids = inst.data.reduce(\n          (acc, cur, i) => acc.add(cur.department),\n          new Set(),\n        );\n        console.log(department_ids);\n        return department_ids.has(dep.value);\n      });\n      const new2Options = newOptions.map((op) => {\n        op.instDeps = inst.data.filter(\n          (instdep) => instdep.department === op.value,\n        )[0];\n        return op;\n      });\n      setInstDepClasses(inst.data);\n      console.log('new2Options', new2Options);\n      setInstDepartments(new2Options);\n    });\n  };\n\n  const fetchDepartments = async () => {\n    if (!instituteId) {\n      return;\n    }\n    const response = await callApi(\n      `institute/institite-department/?institute=${instituteId}`,\n      '',\n      null,\n    );\n    // console.log('response of department', response);\n    if (response.data && response.status === 200) {\n      console.log('instituteId', instituteId);\n      console.log('response of department', response);\n      // setDepartments(response.data);\n    } else {\n      console.log('department error');\n    }\n  };\n  async function fetchInstituteInformation() {\n    const instituteResponse = await callApi(\n      `institute/?institute=${instituteId}`,\n      '',\n      null,\n    );\n    if (instituteResponse.data && instituteResponse.status === 200) {\n      const instituteData = await instituteResponse.data;\n      console.log('instituteData', instituteData);\n      setInstitute(instituteData);\n    }\n\n    const instituteStatisticsResponse = await callApi(\n      `reports/institutes/${instituteId}/teacher-students/`,\n      '',\n      null,\n    );\n    if (\n      instituteStatisticsResponse.data &&\n      instituteStatisticsResponse.status === 200\n    ) {\n      const instituteStatisticsData = await instituteStatisticsResponse.data;\n      console.log('INSTTTTTTTTTTTTTTTTTTTT', instituteStatisticsData);\n      console.log('instituteStatisticsData', instituteStatisticsData);\n      setInstituteStatistics(instituteStatisticsData);\n    }\n  }\n  useEffect(() => {\n    // fetchDepartments();\n    fetchInstDepts();\n    fetchInstituteInformation();\n  }, []);\n  const handleClick = (event) => {\n    setIsNext(event);\n  };\n\n  const addClass = async (values) => {\n    const data = {\n      educational_year: 1390,\n      classs: values.class?.value,\n      institute_department: values.department?.instDeps.id,\n    };\n    await callApi(`institute/departments/classes/`, 'post', data)\n      .then((response) => {\n        console.log('Response Class Add: ', response.data);\n        fetchInstDepts();\n      })\n      .catch((err) => {\n        message.error('Error in adding class');\n      });\n  };\n\n  return (\n    <>\n      <h2 className=\"mt-5 m-3\">\n        {<IntlMessages id=\"institute.detailsTitle\" />}\n      </h2>\n\n      <Separator className=\"mb-5\" />\n      {instituteStatistics && (\n        <Row>\n          <Colxx xxs=\"6\" sm=\"4\" md=\"3\" className=\"mb-4\">\n            <Card>\n              <CardBody className=\"text-center\">\n                <b>\n                  <p>\n                    <IntlMessages id=\"institute.totalStudents\" />\n                  </p>\n                </b>\n                <Row className=\"\">\n                  <Colxx>\n                    <b>\n                      {' '}\n                      <IntlMessages id=\"institute.totalStudentsMale\" />\n                    </b>\n                    <p>\n                      {instituteStatistics.male_students_12 +\n                        instituteStatistics.male_students_14}\n                    </p>\n                  </Colxx>\n                  <Colxx>\n                    <b>\n                      <IntlMessages id=\"institute.totalStudentsFemale\" />\n                    </b>\n                    <p>\n                      {instituteStatistics.female_students_12 +\n                        instituteStatistics.female_students_14}\n                    </p>\n                  </Colxx>\n                </Row>\n              </CardBody>\n            </Card>\n          </Colxx>\n          <Colxx xxs=\"6\" sm=\"4\" md=\"3\" className=\"mb-4\">\n            <Card>\n              <CardBody className=\"text-center\">\n                <b>\n                  <p>\n                    <IntlMessages id=\"institute.totalTeachers\" />\n                  </p>\n                </b>\n                <Row className=\"\">\n                  <Colxx>\n                    <b>\n                      {' '}\n                      <IntlMessages id=\"institute.totalStudentsMale\" />\n                    </b>\n                    <p>{instituteStatistics.male_teachers}</p>\n                  </Colxx>\n                  <Colxx>\n                    <b>\n                      <IntlMessages id=\"institute.totalStudentsFemale\" />\n                    </b>\n                    <p>{instituteStatistics.female_teachers}</p>\n                  </Colxx>\n                </Row>\n              </CardBody>\n            </Card>\n          </Colxx>\n          <Colxx xxs=\"6\" sm=\"4\" md=\"3\" className=\"mb-4\">\n            <Card>\n              <CardBody className=\"text-center\">\n                <b>\n                  <p>\n                    <IntlMessages id=\"institute.Greduated_12\" />\n                  </p>\n                </b>\n                <Row className=\"\">\n                  <Colxx>\n                    <b>\n                      {' '}\n                      <IntlMessages id=\"institute.totalStudentsMale\" />\n                    </b>\n                    <p>{instituteStatistics.male_students_12}</p>\n                  </Colxx>\n                  <Colxx>\n                    <b>\n                      <IntlMessages id=\"institute.totalStudentsFemale\" />\n                    </b>\n                    <p>{instituteStatistics.female_students_12}</p>\n                  </Colxx>\n                </Row>\n              </CardBody>\n            </Card>\n          </Colxx>\n          <Colxx xxs=\"6\" sm=\"4\" md=\"3\" className=\"mb-4\">\n            <Card>\n              <CardBody className=\"text-center\">\n                <b>\n                  <p>\n                    <IntlMessages id=\"institute.Greduated_14\" />\n                  </p>\n                </b>\n                <Row className=\"\">\n                  <Colxx>\n                    <b>\n                      {' '}\n                      <IntlMessages id=\"institute.totalStudentsMale\" />\n                    </b>\n                    <p>{instituteStatistics.male_students_14}</p>\n                  </Colxx>\n                  <Colxx>\n                    <b>\n                      <IntlMessages id=\"institute.totalStudentsFemale\" />\n                    </b>\n                    <p>{instituteStatistics.female_students_14}</p>\n                  </Colxx>\n                </Row>\n              </CardBody>\n            </Card>\n          </Colxx>\n\n          <Colxx xxs=\"6\" sm=\"4\" md=\"3\" className=\"col-md-12\">\n            <Card>\n              <CardBody className=\"text-center\">\n                <b>\n                  <p>\n                    <IntlMessages id=\"institute.totalDepartments\" />\n                  </p>\n                </b>\n                <Row className=\"d-block\">\n                  {console.log('DEPTS', instDepartments)}\n                  {departments &&\n                    instDepartments?.map((item) => {\n                      return (\n                        <Colxx key={item.value}>\n                          {item.label}\n\n                          {item.instDeps.classes.map((cl) => {\n                            return (\n                              <li key={cl.classs}>\n                                {\n                                  classs.find((cls) => cls.value === cl.classs)\n                                    .label\n                                }\n                              </li>\n                            );\n                          })}\n                        </Colxx>\n                      );\n                    })}\n                </Row>\n              </CardBody>\n            </Card>\n\n            <br />\n            <Card\n              style={{\n                padding: 10,\n                display: 'flex',\n                flexDirection: 'row',\n              }}\n            >\n              <Formik\n                enableReinitialize={true}\n                initialValues={{ class: [], department: [] }}\n                onSubmit={addClass}\n                validationSchema={schemaValidation}\n              >\n                {({\n                  errors,\n                  touched,\n                  values,\n                  setFieldTouched,\n                  handleSubmit,\n                  setFieldValue,\n                }) => (\n                  <Form className=\"av-tooltip tooltip-label-right error-l-100 style w-100\">\n                    <>\n                      <Row style={{ marginInline: '2%' }}>\n                        {' '}\n                        <Colxx>\n                          <div>\n                            <h2>\n                              ډیپارټمنټ ته د ټولګي زیاتول / اضافه کردن صنف به\n                              دیپارتمنت\n                            </h2>\n                            <FormGroup className=\"form-group has-float-label w-100\">\n                              <Label>\n                                <IntlMessages id=\"forms.studyDepartment\" />\n                                <span style={{ color: 'red' }}>*</span>\n                              </Label>\n                              <FormikReactSelect\n                                name=\"department\"\n                                id=\"department\"\n                                value={values.department}\n                                options={instDepartments}\n                                onChange={setFieldValue}\n                                onBlur={setFieldTouched}\n                                isSearchable={false}\n                                required\n                              />\n                              {errors.department && touched.department ? (\n                                <p style={{ color: 'red' }}>\n                                  {errors.department}\n                                </p>\n                              ) : null}\n                            </FormGroup>\n                          </div>\n                          <div>\n                            <FormGroup className=\"form-group has-float-label w-100\">\n                              <Label>\n                                <IntlMessages id=\"marks.ClassLabel\" />\n                                <span style={{ color: 'red' }}>*</span>\n                              </Label>\n                              <FormikReactSelect\n                                name=\"class\"\n                                id=\"class\"\n                                value={values.class}\n                                options={classs}\n                                onChange={setFieldValue}\n                                onBlur={setFieldTouched}\n                                isSearchable={false}\n                                required\n                              />\n                              {errors.class && touched.class ? (\n                                <p style={{ color: 'red' }}>{errors.class}</p>\n                              ) : null}\n                            </FormGroup>\n                          </div>\n                          <button\n                            className=\"btn btn-primary\"\n                            onClick={handleSubmit}\n                          >\n                            Add Class\n                          </button>\n                        </Colxx>\n                      </Row>\n                    </>\n                  </Form>\n                )}\n              </Formik>\n            </Card>\n          </Colxx>\n        </Row>\n      )}\n    </>\n  );\n};\n\nexport default InstituteDetails;\n"],"names":["config","require","API_URL","FormikReactSelect","_ref","name","value","options","isMulti","className","onChange","onBlur","defaultValue","onClick","isDisabled","isLoading","isClearable","isRtl","isSearchable","placeholder","_jsx","Select","concat","classNamePrefix","IntlMessages","id","initial","val","FormikInputText","_ref9","otherProps","_objectWithoutProperties","_excluded","Input","_objectSpread","style","height","borderRadius","FormikDatePicker","_ref11","DatePicker","selected","_val","servicePath","values","_useContext","useContext","AuthContext","departments","classs","classes","_useState","useState","_useState2","_slicedToArray","instituteId","useParams","_useState3","_useState4","setInstitute","_useState5","_useState6","instituteStatistics","setInstituteStatistics","_useState7","_useState8","instDepartments","setInstDepartments","_useState9","_useState10","setInstDepClasses","schemaValidation","Yup","shape","class","required","nullable","department","fetchInstDepts","callApi","then","inst","console","log","data","new2Options","filter","dep","department_ids","reduce","acc","cur","i","add","Set","has","map","op","instDeps","instdep","_fetchInstituteInformation","_asyncToGenerator","_regeneratorRuntime","mark","_callee3","instituteResponse","instituteData","instituteStatisticsResponse","instituteStatisticsData","wrap","_context3","prev","next","sent","status","stop","apply","arguments","useEffect","fetchInstituteInformation","addClass","_ref2","_callee2","_values$class","_values$department","_context2","educational_year","institute_department","response","catch","err","message","error","_x","_jsxs","_Fragment","children","Separator","Row","Colxx","xxs","sm","md","Card","CardBody","male_students_12","male_students_14","female_students_12","female_students_14","male_teachers","female_teachers","item","label","cl","find","cls","padding","display","flexDirection","Formik","enableReinitialize","initialValues","onSubmit","validationSchema","_ref3","errors","touched","setFieldTouched","handleSubmit","setFieldValue","Form","marginInline","FormGroup","Label","color"],"sourceRoot":""}