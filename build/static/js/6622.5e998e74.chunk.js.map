{"version":3,"file":"static/js/6622.5e998e74.chunk.js","mappings":"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","sources":["views/app/teachers/bio/teacher-register.js"],"sourcesContent":["/* eslint-disable no-param-reassign */\nimport React, { createRef, useState, useEffect, useContext } from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\nimport callApi from 'helpers/callApi';\nimport {\n  stepOptions,\n  gradeOptions,\n  genderOptions,\n  tazkiraOptions,\n  teacherCurrentStatusOptions,\n  dateOfBirthOptoions,\n} from '../../global-data/options';\nimport { teacherRegisterFormStep_1 } from '../../global-data/forms-validation';\nimport { NavLink } from 'react-router-dom';\nimport './../../../../assets/css/global-style.css';\nimport { Row, Card, CardBody, FormGroup, Label, Button } from 'reactstrap';\nimport { FormikReactSelect } from 'containers/form-validations/FormikFields';\nimport { injectIntl } from 'react-intl';\nimport { Formik, Form, Field } from 'formik';\nimport IntlMessages from 'helpers/IntlMessages';\nimport { NotificationManager } from 'components/common/react-notifications';\nimport { Colxx } from 'components/common/CustomBootstrap';\nimport { message } from 'antd';\nimport { AuthContext } from 'context/AuthContext';\nimport { inputLabel } from 'config/styling';\n\nconst TeacherRegister = ({ intl }, values) => {\n  // why used seperate states for each field?\n  const { provinces, districts } = useContext(AuthContext);\n  const [initialName, setInitialName] = useState('');\n  const [initiallast_name, setInitiallast_name] = useState('');\n  const [initialenglish_name, setInitialenglish_name] = useState('');\n  const [initialenglish_last_name, setInitialenglish_last_name] = useState('');\n  const [initialenglish_father_name, setInitialenglish_father_name] =\n    useState('');\n  const [initialfather_name, setInitialfather_name] = useState('');\n  const [initialGender, setInitialGender] = useState([]);\n  const [initialGrandfather_name, setInitialGrandfather_name] = useState('');\n  const [initialregistration_number, setInitialregistration_number] =\n    useState('');\n  const [initialphone_number, setInitialphone_number] = useState('');\n  const [year_of_birth, setyear_of_birth] = useState([]);\n  const [initialplace_of_birth, setInitialplace_of_birth] = useState('');\n  const [initialEmail, setInitialEmail] = useState('');\n  const [initialpage_number, setInitialpage_number] = useState('');\n  const [initialcover_number, setInitialcover_number] = useState('');\n  const [initialStatus, setinitialStatus] = useState([]);\n  const [initialGrade, setInitialGrade] = useState([]);\n  const [initialStep, setInitialStep] = useState([]);\n  const [initialcurrent_province, setInitialcurrent_province] = useState([]);\n  const [initialcurrent_district, setInitialcurrent_district] = useState([]);\n  const [initialcurrent_village, setInitialcurrent_village] = useState('');\n  const [initialmain_province, setInitialmain_province] = useState([]);\n  const [initialmain_district, setInitialmain_district] = useState([]);\n  const [initialmain_village, setInitialmain_village] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [isUpdateForm, setIsUpdateForm] = useState(false);\n\n  const [initialValues, setinitialValues] = useState({\n    name: '',\n    english_name: '',\n    last_name: '',\n    english_last_name: '',\n    father_name: '',\n    english_father_name: '',\n    grandfather_name: '',\n    year_of_birth: '',\n    month_of_birth: '',\n    day_of_birth: '',\n    place_of_birth: '',\n    phone_number: '',\n    email: '',\n    gender: [],\n    tazkiraNo: '',\n    idCardPageNo: '',\n    sabtNo: '',\n    idCardJoldNo: '',\n    tazkiraType: tazkiraOptions[0],\n    sokokNo: '',\n    grade: [],\n    step: [],\n    current_district: [],\n    current_province: [],\n    main_province: [],\n    main_district: [],\n    current_village: [],\n    main_village: [],\n    status: [],\n  });\n\n  const forms = [createRef(null), createRef(null), createRef(null)];\n  const history = useHistory();\n  const { teacherId } = useParams();\n  async function fetchTeacher() {\n    setIsLoading(true);\n    const { data } = await callApi(`teachers/${teacherId}`, '', null);\n    const initialUpdateValues = data;\n\n    initialUpdateValues.tazkira_type = tazkiraOptions.find(\n      (option) => option.value === data.tazkira_type,\n    );\n\n    dateOfBirthOptoions.map((teacherBirth) => {\n      if (teacherBirth.value === data.year_of_birth) {\n        initialUpdateValues.year_of_birth = teacherBirth;\n      }\n    });\n\n    gradeOptions.forEach((teacherGrade) => {\n      if (teacherGrade.value === data.grade) {\n        initialUpdateValues.grade = teacherGrade;\n      }\n    });\n    genderOptions.forEach((teacherGender) => {\n      if (teacherGender.value === data.gender) {\n        initialUpdateValues.gender = teacherGender;\n      }\n    });\n\n    teacherCurrentStatusOptions.forEach((teacherStatus) => {\n      if (teacherStatus.value == data.status) {\n        initialUpdateValues.status = teacherStatus;\n      }\n    });\n\n    provinces.forEach((province) => {\n      if (province.value == data.current_province) {\n        initialUpdateValues.current_province = province;\n      }\n    });\n    provinces.forEach((province) => {\n      if (province.value == data.main_province) {\n        initialUpdateValues.main_province = province;\n      }\n    });\n\n    districts.forEach((district) => {\n      if (district.value == data.main_district) {\n        initialUpdateValues.main_district = district;\n      }\n    });\n    districts.forEach((district) => {\n      if (district.value == data.current_district) {\n        initialUpdateValues.current_district = district;\n      }\n    });\n\n    stepOptions.forEach((teacherStep) => {\n      if (teacherStep.value == data.step) {\n        initialUpdateValues.step = teacherStep;\n      }\n    });\n\n    setinitialValues(initialUpdateValues);\n    setIsLoading(false);\n  }\n  // if teacher id is present, then it is an update form\n  useEffect(() => {\n    if (teacherId) {\n      setIsUpdateForm(true);\n    }\n    fetchTeacher();\n  }, [teacherId]);\n\n  const createNotification = (type, className) => {\n    const cName = className || '';\n    switch (type) {\n      case 'success':\n        NotificationManager.success(\n          'استاد موفقانه رجستر شو',\n          'موفقیت',\n          3000,\n          null,\n          null,\n          cName,\n        );\n        break;\n      case 'error':\n        NotificationManager.error(\n          'استاد ثبت نشو،لطفا معلومات دقیق دننه کی',\n          'خطا',\n          5000,\n          () => {\n            // alert('callback');\n          },\n          null,\n          cName,\n        );\n        break;\n      default:\n        NotificationManager.info('Info message');\n        break;\n    }\n  };\n\n  const RegisterTeacher = async (newFields) => {\n    // setIsLoading(true);\n    let apiParams = {\n      endPoint: 'teachers/',\n      method: 'POST',\n    };\n\n    if (isUpdateForm && teacherId) {\n      apiParams.endPoint = `teachers/${teacherId}/`;\n      apiParams.method = 'PATCH';\n    }\n\n    let data = {};\n    console.log('newFields: ', newFields);\n    // if object and not empty, get value,\n    for (const key in newFields) {\n      if (typeof newFields[key] === 'object' && newFields[key] !== null) {\n        data[key] = newFields[key].value;\n      } else {\n        data[key] = newFields[key];\n      }\n    }\n\n    data = {\n      ...data,\n      cover_number: newFields.idCardJoldNo || undefined,\n      page_number: newFields.idCardPageNo || undefined,\n      sabt_number: newFields.sabtNo || undefined,\n      tazkira_type: newFields.tazkiraType.value,\n      registration_number: newFields.tazkiraNo || null,\n      sokok_number: newFields.sokokNo || undefined,\n    };\n\n    // remove all key-value pairs where value is undefined\n    if (isUpdateForm && teacherId) {\n      Object.keys(data).forEach(\n        (key) => data[key] === undefined && delete data[key],\n      );\n    }\n\n    console.log('teacher data: ', data);\n    try {\n      const response = await callApi(\n        apiParams.endPoint,\n        apiParams.method,\n        data,\n      );\n      message.success('استاد ثبت شو');\n      // nagivate back to teacher profile\n      history.push(`/app/teachers/teacher/${response.data.id}`);\n    } catch (error) {\n      if (error?.response) {\n        // set field error which is send from server\n        Object.keys(error.response.data).forEach((key) => {\n          forms[0].current.setFieldError(key, error.response.data[key]);\n        });\n      }\n      message.error('استاد ثبت نشو/استاد ثبت نشد');\n      return true;\n    } finally {\n      // setIsLoading(false);\n      // return false;\n    }\n  };\n\n  return (\n    <Card>\n      <div className=\"mt-4 ml-5\">\n        <h2 className=\"mt-5 m-5 titleStyle\">\n          {<IntlMessages id=\"teacher.RegisterTitle\" />}\n        </h2>\n      </div>\n      <CardBody className=\"wizard wizard-default\">\n        <div className=\"wizard-basic-step\">\n          <Formik\n            enableReinitialize={true}\n            innerRef={forms[0]}\n            disabled={isLoading}\n            initialValues={initialValues}\n            validateOnMount\n            validationSchema={teacherRegisterFormStep_1}\n            onSubmit={RegisterTeacher}\n          >\n            {({\n              errors,\n              touched,\n              values,\n              setFieldTouched,\n              setFieldValue,\n              isSubmitting,\n              handleSubmit,\n            }) => (\n              <Form className=\"av-tooltip tooltip-label-right style\">\n                <Row className=\"justify-content-center\">\n                  <Colxx xxs=\"5\" className=\"ml-5\">\n                    <FormGroup className=\"form-group has-float-label error-l-175\">\n                      <Label style={inputLabel}>\n                        <IntlMessages id=\"forms.teacherName\" />\n                        <span style={{ color: 'red' }}>*</span>\n                      </Label>\n                      <Field className=\"form-control fieldStyle\" name=\"name\" />\n                      {errors.name && touched.name ? (\n                        <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                          {errors.name}\n                        </div>\n                      ) : null}\n                    </FormGroup>\n\n                    {/* last_name */}\n                    <FormGroup className=\"form-group has-float-label\">\n                      <Label style={inputLabel}>\n                        <IntlMessages id=\"forms.lastName\" />\n                        <span style={{ color: 'red' }}>*</span>\n                      </Label>\n                      <Field\n                        className=\"form-control fieldStyle\"\n                        name=\"last_name\"\n                      />\n                      {errors.last_name && touched.last_name ? (\n                        <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                          {errors.last_name}\n                        </div>\n                      ) : null}\n                    </FormGroup>\n\n                    {/* Father Name */}\n                    <FormGroup className=\"form-group has-float-label error-l-175\">\n                      <Label style={inputLabel}>\n                        <IntlMessages id=\"forms.StdFatherName\" />\n                        <span style={{ color: 'red' }}>*</span>\n                      </Label>\n                      <Field\n                        className=\"form-control fieldStyle\"\n                        name=\"father_name\"\n                      />\n                      {errors.father_name && touched.father_name ? (\n                        <div className=\"invalid-feedback d-block  bg-danger text-white messageStyle\">\n                          {errors.father_name}\n                        </div>\n                      ) : null}\n                    </FormGroup>\n\n                    {/* Tazkira Type */}\n                    <FormGroup className=\"form-group has-float-label error-l-100\">\n                      <Label style={inputLabel}>\n                        <IntlMessages id=\"forms.TazkiraType\" />\n                        <span style={{ color: 'red' }}>*</span>\n                      </Label>\n\n                      <FormikReactSelect\n                        name=\"tazkiraType\"\n                        id=\"tazkiraType\"\n                        value={values.tazkiraType}\n                        // defaultValue={}\n                        options={tazkiraOptions}\n                        onChange={setFieldValue}\n                        onBlur={setFieldTouched}\n                        isSearchable={false}\n                      />\n                      {errors.tazkiraType && touched.tazkiraType ? (\n                        <div className=\"invalid-feedback d-block   bg-danger text-white messageStyle\">\n                          {errors.tazkiraType}\n                        </div>\n                      ) : null}\n                    </FormGroup>\n                    {/* Tazkira Number */}\n                    {values.tazkiraType?.value === 'electronic' && (\n                      <FormGroup className=\"form-group has-float-label error-l-100\">\n                        <Label style={inputLabel}>\n                          نمبر تذکره الکترونی\n                          <span style={{ color: 'red' }}>*</span>\n                        </Label>\n                        <Field\n                          className=\"form-control fieldStyle\"\n                          name=\"tazkiraNo\"\n                          type=\"text\"\n                          maxLength=\"14\"\n                          minLength=\"12\"\n                        />\n                        {errors.tazkiraNo && touched.tazkiraNo ? (\n                          <div className=\"invalid-feedback d-block  bg-danger text-white messageStyle\">\n                            {errors.tazkiraNo}\n                          </div>\n                        ) : null}\n                      </FormGroup>\n                    )}\n\n                    {values.tazkiraType?.value === 'paper' ? (\n                      <>\n                        <div>\n                          {/* Jold Number */}\n                          <div>\n                            <FormGroup className=\"form-group has-float-label error-l-100\">\n                              <Label style={inputLabel}>\n                                <IntlMessages id=\"teacher.IdCardJoldNoLabel\" />\n                              </Label>\n                              <Field\n                                className=\"form-control fieldStyle\"\n                                name=\"idCardJoldNo\"\n                                type=\"string\"\n                              />\n                              {errors.idCardJoldNo && touched.idCardJoldNo ? (\n                                <div className=\"invalid-feedback d-block  bg-danger text-white messageStyle\">\n                                  {errors.idCardJoldNo}\n                                </div>\n                              ) : null}\n                            </FormGroup>\n                          </div>\n                        </div>\n\n                        <div>\n                          {/* Safha */}\n                          <div>\n                            <FormGroup className=\"form-group has-float-label error-l-100\">\n                              <Label style={inputLabel}>\n                                <IntlMessages id=\"teacher.IdCardPageNoLabel\" />\n                              </Label>\n                              <Field\n                                className=\"form-control fieldStyle\"\n                                name=\"idCardPageNo\"\n                                type=\"number\"\n                              />\n                              {errors.idCardPageNo && touched.idCardPageNo ? (\n                                <div className=\"invalid-feedback d-block  bg-danger text-white messageStyle\">\n                                  {errors.idCardPageNo}\n                                </div>\n                              ) : null}\n                            </FormGroup>\n                          </div>\n                        </div>\n                        <div>\n                          {/* Sabt */}\n                          <div>\n                            <FormGroup className=\"form-group has-float-label error-l-100\">\n                              <Label style={inputLabel}>شماره ثبت</Label>\n                              <Field\n                                className=\"form-control fieldStyle\"\n                                name=\"sabtNo\"\n                                type=\"number\"\n                              />\n                              {errors.sabtNo && touched.sabtNo ? (\n                                <div className=\"invalid-feedback d-block  bg-danger text-white messageStyle\">\n                                  {errors.sabtNo}\n                                </div>\n                              ) : null}\n                            </FormGroup>\n                          </div>\n                        </div>\n                        <div>\n                          <div>\n                            <FormGroup className=\"form-group has-float-label error-l-100\">\n                              <Label style={inputLabel}>شماره صکوک</Label>\n                              <Field\n                                className=\"form-control fieldStyle\"\n                                name=\"sokokNo\"\n                                type=\"number\"\n                              />\n                              {errors.sokokNo && touched.sokokNo ? (\n                                <div className=\"invalid-feedback d-block  bg-danger text-white messageStyle\">\n                                  {errors.sokokNo}\n                                </div>\n                              ) : null}\n                            </FormGroup>\n                          </div>\n                        </div>\n                      </>\n                    ) : null}\n\n                    <FormGroup className=\"form-group has-float-label error-l-100 \">\n                      <Label style={inputLabel}>\n                        <IntlMessages id=\"label.yearOfBirth\" />\n\n                        <span style={{ color: 'red' }}>*</span>\n                      </Label>\n                      <Field\n                        className=\"form-control fieldStyle\"\n                        name=\"year_of_birth\"\n                        type=\"number\"\n                        min={1300}\n                        max={1450}\n                      />\n                      {errors.year_of_birth && touched.year_of_birth ? (\n                        <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                          {errors.year_of_birth}\n                        </div>\n                      ) : null}\n                    </FormGroup>\n                    <FormGroup className=\"form-group has-float-label error-l-100 \">\n                      <Label style={inputLabel}>\n                        <IntlMessages id=\"label.monthOfBirth\" />\n                      </Label>\n                      <Field\n                        className=\"form-control fieldStyle\"\n                        name=\"month_of_birth\"\n                        type=\"number\"\n                        min={1}\n                        max={12}\n                        required={false}\n                      />\n                      {errors.month_of_birth && touched.month_of_birth ? (\n                        <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                          {errors.month_of_birth}\n                        </div>\n                      ) : null}\n                    </FormGroup>\n\n                    <FormGroup className=\"form-group has-float-label error-l-100 \">\n                      <Label style={inputLabel}>\n                        <IntlMessages id=\"label.dayOfBirth\" />\n                      </Label>\n                      <Field\n                        className=\"form-control fieldStyle\"\n                        name=\"day_of_birth\"\n                        type=\"number\"\n                        min={1}\n                        max={31}\n                        required={false}\n                      />\n                      {errors.day_of_birth && touched.day_of_birth ? (\n                        <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                          {errors.day_of_birth}\n                        </div>\n                      ) : null}\n                    </FormGroup>\n\n                    {/* Education */}\n                    <FormGroup className=\"form-group has-float-label error-l-175\">\n                      <Label style={inputLabel}>\n                        <IntlMessages id=\"teacher.GradeLabel\" />\n                        <span style={{ color: 'red' }}>*</span>\n                      </Label>\n                      <FormikReactSelect\n                        name=\"grade\"\n                        id=\"grade\"\n                        value={values.grade}\n                        onChange={setFieldValue}\n                        onBlur={setFieldTouched}\n                        options={gradeOptions}\n                        required\n                      />\n                      {errors.grade && touched.grade ? (\n                        <div className=\"invalid-feedback d-block  bg-danger text-white messageStyle\">\n                          {errors.grade}\n                        </div>\n                      ) : null}\n                    </FormGroup>\n                    <FormGroup className=\"form-group has-float-label error-l-175\">\n                      <Label style={inputLabel}>\n                        <IntlMessages id=\"teacher.StepLabel\" />\n                        <span style={{ color: 'red' }}>*</span>\n                      </Label>\n                      <FormikReactSelect\n                        name=\"step\"\n                        id=\"step\"\n                        value={values.step}\n                        options={stepOptions}\n                        onChange={setFieldValue}\n                        onBlur={setFieldTouched}\n                        required\n                      />\n                      {errors.step && touched.step ? (\n                        <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                          {errors.step}\n                        </div>\n                      ) : null}\n                    </FormGroup>\n                    <FormGroup className=\"form-group has-float-label error-l-175\">\n                      <Label style={inputLabel}>\n                        <IntlMessages id=\"teacher.StatusLabel\" />\n                        <span style={{ color: 'red' }}>*</span>\n                      </Label>\n                      <FormikReactSelect\n                        name=\"status\"\n                        id=\"status\"\n                        value={values.status}\n                        options={teacherCurrentStatusOptions}\n                        onChange={setFieldValue}\n                        onBlur={setFieldTouched}\n                        required\n                      />\n                      {errors.status && touched.status ? (\n                        <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                          {errors.status}\n                        </div>\n                      ) : null}\n                    </FormGroup>\n                  </Colxx>\n                  <Colxx xxs=\"5\" className=\"mr-5\">\n                    {/* Teacher English Name */}\n                    <FormGroup className=\"form-group has-float-label error-l-100\">\n                      <Label style={inputLabel}>\n                        <IntlMessages id=\"forms.Eng_name\" />\n                      </Label>\n                      <Field\n                        className=\"form-control fieldStyle\"\n                        name=\"english_name\"\n                      />\n                      {errors.english_name && touched.english_name ? (\n                        <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                          {errors.english_name}\n                        </div>\n                      ) : null}\n                    </FormGroup>\n\n                    {/* english_last_name */}\n                    <FormGroup className=\"form-group has-float-label\">\n                      <Label style={inputLabel}>\n                        <IntlMessages id=\"forms.lastNameEng\" />\n                      </Label>\n                      <Field\n                        className=\"form-control fieldStyle\"\n                        name=\"english_last_name\"\n                      />\n                      {errors.english_last_name && touched.english_last_name ? (\n                        <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                          {errors.english_last_name}\n                        </div>\n                      ) : null}\n                    </FormGroup>\n\n                    {/* Teacher Father English Name */}\n                    <FormGroup className=\"form-group has-float-label error-l-100\">\n                      <Label style={inputLabel}>\n                        <IntlMessages id=\"forms.Std_father_Eng_Name\" />\n                      </Label>\n                      <Field\n                        className=\"form-control fieldStyle\"\n                        name=\"english_father_name\"\n                      />\n                      {errors.english_father_name &&\n                      touched.english_father_name ? (\n                        <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                          {errors.english_father_name}\n                        </div>\n                      ) : null}\n                    </FormGroup>\n                    {/* Grand Father Name */}\n                    <FormGroup className=\"form-group has-float-label error-l-175\">\n                      <Label style={inputLabel}>\n                        <IntlMessages id=\"forms.grandFatherName\" />\n                        <span style={{ color: 'red' }}>*</span>\n                      </Label>\n                      <Field\n                        className=\"form-control fieldStyle\"\n                        name=\"grandfather_name\"\n                      />\n                      {errors.grandfather_name && touched.grandfather_name ? (\n                        <div className=\"invalid-feedback d-block  bg-danger text-white messageStyle\">\n                          {errors.grandfather_name}\n                        </div>\n                      ) : null}\n                    </FormGroup>\n                    {/* Gender */}\n\n                    <FormGroup className=\"form-group has-float-label error-l-175\">\n                      <Label style={inputLabel}>\n                        <IntlMessages id=\"gender.gender\" />\n                        <span style={{ color: 'red' }}>*</span>\n                      </Label>\n                      <FormikReactSelect\n                        name=\"gender\"\n                        id=\"gender\"\n                        value={values.gender}\n                        options={genderOptions}\n                        onChange={setFieldValue}\n                        onBlur={setFieldTouched}\n                      />\n                      {touched.gender && errors.gender ? (\n                        <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                          {errors.gender}\n                        </div>\n                      ) : null}\n                    </FormGroup>\n\n                    {/* Contact No */}\n                    <FormGroup className=\"form-group has-float-label error-l-175 \">\n                      <Label style={inputLabel}>\n                        <IntlMessages id=\"teacher.PhoneNoLabel\" />\n                        <span style={{ color: 'red' }}>*</span>\n                      </Label>\n                      <Field\n                        className=\"form-control fieldStyle\"\n                        name=\"phone_number\"\n                      />\n                      {errors.phone_number && touched.phone_number ? (\n                        <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                          {errors.phone_number}\n                        </div>\n                      ) : null}\n                    </FormGroup>\n                    {/* Email Address */}\n                    <FormGroup className=\"form-group has-float-label error-l-175\">\n                      <Label style={inputLabel}>\n                        <IntlMessages id=\"teacher.EmailLabel\" />\n                        {/* <span style={{ color: 'red' }}>*</span> */}\n                      </Label>\n                      <Field\n                        className=\"form-control fieldStyle\"\n                        name=\"email\"\n                        type=\"email\"\n                      />\n                      {errors.email && touched.email ? (\n                        <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                          {errors.email}\n                        </div>\n                      ) : null}\n                    </FormGroup>\n                    {/* Place of birth */}\n                    <FormGroup className=\"form-group has-float-label error-l-100\">\n                      <Label style={inputLabel}>\n                        <IntlMessages id=\"forms.PlaceOfBirthLabel\" />\n                        <span style={{ color: 'red' }}>*</span>\n                      </Label>\n                      <Field\n                        className=\"form-control fieldStyle\"\n                        name=\"place_of_birth\"\n                      />\n                      {errors.place_of_birth && touched.place_of_birth ? (\n                        <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                          {errors.place_of_birth}\n                        </div>\n                      ) : null}\n                    </FormGroup>\n                  </Colxx>\n                </Row>\n\n                <Row className=\"justify-content-center\">\n                  <Colxx xxs=\"5\">\n                    <div className=\"pt-5\">\n                      <h1 className=\" mb-4\">\n                        {<IntlMessages id=\"forms.PermanentAddressLabel\" />}\n                      </h1>\n\n                      {/* province permanent*/}\n                      <FormGroup className=\"form-group has-float-label error-l-175\">\n                        <Label style={inputLabel}>\n                          <IntlMessages id=\"forms.ProvinceLabel\" />\n                          <span style={{ color: 'red' }}>*</span>\n                        </Label>\n                        <FormikReactSelect\n                          name=\"main_province\"\n                          id=\"main_province\"\n                          value={values.main_province}\n                          options={provinces}\n                          onChange={(name, value) => {\n                            setFieldValue('main_district', '');\n                            setFieldValue(name, value);\n                          }}\n                          onBlur={setFieldTouched}\n                        />\n                        {errors.main_province && touched.main_province ? (\n                          <div className=\"invalid-feedback d-block   bg-danger text-white messageStyle\">\n                            {errors.main_province}\n                          </div>\n                        ) : null}\n                      </FormGroup>\n\n                      {/* District  permanent*/}\n                      <FormGroup className=\"form-group has-float-label error-l-175\">\n                        <Label style={inputLabel}>\n                          <IntlMessages id=\"forms.DistrictLabel\" />\n                        </Label>\n                        <FormikReactSelect\n                          name=\"main_district\"\n                          id=\"main_district\"\n                          value={values.main_district}\n                          options={districts?.filter(\n                            (district) =>\n                              district.province === values.main_province.value,\n                          )}\n                          onChange={setFieldValue}\n                          onBlur={setFieldTouched}\n                        />\n                        {errors.main_district && touched.main_district ? (\n                          <div className=\"invalid-feedback d-block bg-danger text-white\">\n                            {errors.main_district}\n                          </div>\n                        ) : null}\n                      </FormGroup>\n                      {/* Village  Main*/}\n                      <FormGroup className=\"form-group has-float-label error-l-100\">\n                        <Label style={inputLabel}>\n                          <IntlMessages id=\"forms.VillageLabel\" />\n                        </Label>\n                        <Field\n                          className=\"form-control fieldStyle\"\n                          name=\"main_village\"\n                        />\n                        {errors.english_name && touched.english_name ? (\n                          <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                            {errors.english_name}\n                          </div>\n                        ) : null}\n                      </FormGroup>\n                    </div>\n                  </Colxx>\n\n                  <Colxx xxs=\"5\">\n                    <div className=\"pt-5\">\n                      <h1 className=\" mb-4\">\n                        {<IntlMessages id=\"forms.CurrentAddresslabel\" />}\n                      </h1>\n\n                      {/* Current Address */}\n                      {/* province Current */}\n                      <FormGroup className=\"form-group has-float-label error-l-175\">\n                        <Label style={inputLabel}>\n                          <IntlMessages id=\"forms.ProvinceLabel\" />\n                          <span style={{ color: 'red' }}>*</span>\n                        </Label>\n                        <FormikReactSelect\n                          name=\"current_province\"\n                          id=\"current_province\"\n                          value={values.current_province}\n                          options={provinces}\n                          onChange={(name, value) => {\n                            setFieldValue('current_district', '');\n                            setFieldValue(name, value);\n                          }}\n                          onBlur={setFieldTouched}\n                        />\n                        {errors.current_province && touched.current_province ? (\n                          <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                            {errors.current_province}\n                          </div>\n                        ) : null}\n                      </FormGroup>\n\n                      {/* Current District */}\n                      <FormGroup className=\"form-group has-float-label error-l-175\">\n                        <Label style={inputLabel}>\n                          <IntlMessages id=\"forms.DistrictLabel\" />\n                        </Label>\n                        <FormikReactSelect\n                          name=\"current_district\"\n                          id=\"current_district\"\n                          value={values.current_district}\n                          options={districts.filter(\n                            (district) =>\n                              district.province ===\n                              values.current_province.value,\n                          )}\n                          onChange={setFieldValue}\n                          onBlur={setFieldTouched}\n                        />\n                        {errors.current_district && touched.current_district ? (\n                          <div className=\"invalid-feedback d-block bg-danger text-white\">\n                            {errors.current_district}\n                          </div>\n                        ) : null}\n                      </FormGroup>\n                      {/* Village  Current*/}\n                      <FormGroup className=\"form-group has-float-label error-l-100\">\n                        <Label style={inputLabel}>\n                          <IntlMessages id=\"forms.VillageLabel\" />\n                        </Label>\n                        <Field\n                          className=\"form-control fieldStyle\"\n                          name=\"current_village\"\n                        />\n                        {errors.english_name && touched.english_name ? (\n                          <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                            {errors.english_name}\n                          </div>\n                        ) : null}\n                      </FormGroup>\n                    </div>\n                  </Colxx>\n                </Row>\n                <NavLink\n                  to={{\n                    pathname: `app/teachers/`,\n                    state: { data: 'TEACHER' },\n                  }}\n                >\n                  <Button className=\"mt-5 bg-primary\" onClick={handleSubmit}>\n                    ثبت\n                  </Button>\n                </NavLink>\n              </Form>\n            )}\n          </Formik>\n        </div>\n      </CardBody>\n    </Card>\n  );\n};\nexport default injectIntl(TeacherRegister);\n"],"names":["injectIntl","_ref","values","intl","_useContext","useContext","AuthContext","provinces","districts","_useState","useState","_useState2","_slicedToArray","_useState3","_useState4","_useState5","_useState6","_useState7","_useState8","_useState9","_useState10","_useState11","_useState12","_useState13","_useState14","_useState15","_useState16","_useState17","_useState18","_useState19","_useState20","_useState21","_useState22","_useState23","_useState24","_useState25","_useState26","_useState27","_useState28","_useState29","_useState30","_useState31","_useState32","_useState33","_useState34","_useState35","_useState36","_useState37","_useState38","_useState39","_useState40","_useState41","_useState42","_useState43","_useState44","_useState45","_useState46","_useState47","_useState48","_useState49","_useState50","isLoading","setIsLoading","_useState51","_useState52","isUpdateForm","setIsUpdateForm","_useState53","name","english_name","last_name","english_last_name","father_name","english_father_name","grandfather_name","year_of_birth","month_of_birth","day_of_birth","place_of_birth","phone_number","email","gender","tazkiraNo","idCardPageNo","sabtNo","idCardJoldNo","tazkiraType","tazkiraOptions","sokokNo","grade","step","current_district","current_province","main_province","main_district","current_village","main_village","status","_useState54","initialValues","setinitialValues","forms","createRef","history","useHistory","teacherId","useParams","_fetchTeacher","_asyncToGenerator","_regeneratorRuntime","mark","_callee2","_yield$callApi","data","initialUpdateValues","wrap","_context2","prev","next","callApi","concat","sent","tazkira_type","find","option","value","dateOfBirthOptoions","map","teacherBirth","gradeOptions","forEach","teacherGrade","genderOptions","teacherGender","teacherCurrentStatusOptions","teacherStatus","province","district","stepOptions","teacherStep","stop","apply","arguments","useEffect","fetchTeacher","RegisterTeacher","_ref2","_callee","newFields","apiParams","key","response","_context","endPoint","method","console","log","_objectSpread","cover_number","undefined","page_number","sabt_number","registration_number","sokok_number","Object","keys","message","success","push","id","t0","current","setFieldError","error","abrupt","finish","_x","_jsxs","Card","children","_jsx","className","IntlMessages","CardBody","Formik","enableReinitialize","innerRef","disabled","validateOnMount","validationSchema","teacherRegisterFormStep_1","onSubmit","_ref3","_values$tazkiraType","_values$tazkiraType2","errors","touched","setFieldTouched","setFieldValue","handleSubmit","isSubmitting","Form","Row","Colxx","xxs","FormGroup","Label","style","inputLabel","color","Field","FormikReactSelect","options","onChange","onBlur","isSearchable","type","maxLength","minLength","_Fragment","min","max","required","filter","NavLink","to","pathname","state","Button","onClick"],"sourceRoot":""}