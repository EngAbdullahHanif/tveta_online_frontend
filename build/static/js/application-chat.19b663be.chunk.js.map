{"version":3,"file":"static/js/application-chat.19b663be.chunk.js","mappings":"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","sources":["components/common/ApplicationMenu.js","containers/applications/ChatApplicationMenu.js","components/applications/ChatHeading.js","components/applications/MessageCard.js","components/applications/SaySomething.js","views/app/applications/chat.js","../node_modules/reactstrap/es/CardHeader.js","../node_modules/reactstrap/es/Input.js","../node_modules/reactstrap/es/TabContent.js","../node_modules/reactstrap/es/TabContext.js","../node_modules/reactstrap/es/TabPane.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport { NavLink } from 'reactstrap';\n\nconst ApplicationMenu = ({ children }) => {\n  const containerRef = useRef();\n  const [isOpen, setIsOpen] = useState(false);\n\n  const handleDocumentClick = (e) => {\n    if (isOpen) {\n      const container = containerRef.current;\n      if (container.contains(e.target) || container === e.target) {\n        return;\n      }\n      setIsOpen(false);\n    }\n  };\n\n  useEffect(() => {\n    ['click', 'touchstart'].forEach((event) =>\n      document.addEventListener(event, handleDocumentClick, false),\n    );\n\n    return () => {\n      ['click', 'touchstart'].forEach((event) =>\n        document.removeEventListener(event, handleDocumentClick, false),\n      );\n    };\n  }, [isOpen]);\n\n  return (\n    <div ref={containerRef} className={`app-menu ${isOpen ? 'shown' : ''}`}>\n      {children}\n      <NavLink\n        className=\"app-menu-button d-inline-block d-xl-none\"\n        onClick={() => setIsOpen(!isOpen)}\n      >\n        <i className=\"simple-icon-options\" />\n      </NavLink>\n    </div>\n  );\n};\n\nexport default ApplicationMenu;\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { injectIntl } from 'react-intl';\nimport { Nav, TabContent, TabPane, CardHeader, NavItem } from 'reactstrap';\nimport { NavLink } from 'react-router-dom';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport classnames from 'classnames';\n\nimport IntlMessages from 'helpers/IntlMessages';\nimport ApplicationMenu from 'components/common/ApplicationMenu';\n\nimport {\n  changeConversation,\n  createConversation,\n  searchContact,\n} from 'redux/actions';\n\nconst ChatApplicationMenu = ({\n  intl,\n  activeTab,\n  toggleAppMenu,\n  contacts,\n  allContacts,\n  conversations,\n  loadingConversations,\n  loadingContacts,\n  currentUser,\n\n  changeConversationAction,\n  createConversationAction,\n  searchContactAction,\n}) => {\n  const [searchKey, setSearchKey] = useState('');\n\n  const handleSearchContact = (keyword) => {\n    setSearchKey(keyword);\n\n    if (keyword.length > 0) {\n      if (activeTab !== 'contacts') {\n        toggleAppMenu('contacts');\n      }\n      searchContactAction(keyword);\n    } else {\n      searchContactAction('');\n    }\n  };\n\n  const toggleMenu = (tab) => {\n    if (activeTab !== tab) {\n      toggleAppMenu(tab);\n    }\n    if (tab === 'messages') {\n      handleSearchContact('');\n    }\n  };\n\n  const handleConversationClick = (e, selectedUserId) => {\n    changeConversationAction(selectedUserId);\n    handleSearchContact('');\n  };\n\n  const handleContactClick = (userId) => {\n    if (activeTab !== 'messages') {\n      toggleAppMenu('messages');\n      searchContactAction('');\n    }\n\n    const conversation = conversations.find(\n      (x) => x.users.includes(currentUser.id) && x.users.includes(userId),\n    );\n    if (conversation) {\n      changeConversationAction(userId);\n    } else {\n      createConversationAction(currentUser.id, userId, conversations);\n      changeConversationAction(userId);\n    }\n  };\n\n  const { messages } = intl;\n\n  return (\n    <ApplicationMenu>\n      <CardHeader className=\"pl-0 pr-0\">\n        <Nav tabs className=\"card-header-tabs ml-0 mr-0\">\n          <NavItem className=\"w-50 text-center\">\n            <NavLink\n              to=\"#\"\n              location={{}}\n              className={classnames({\n                active: activeTab === 'messages',\n                'nav-link': true,\n              })}\n              onClick={() => toggleMenu('messages')}\n            >\n              <IntlMessages id=\"chat.messages\" />\n            </NavLink>\n          </NavItem>\n          <NavItem className=\"w-50 text-center\">\n            <NavLink\n              to=\"#\"\n              location={{}}\n              className={classnames({\n                active: activeTab === 'contacts',\n                'nav-link': true,\n              })}\n              onClick={() => toggleAppMenu('contacts')}\n            >\n              <IntlMessages id=\"chat.contacts\" />\n            </NavLink>\n          </NavItem>\n        </Nav>\n      </CardHeader>\n\n      <div className=\"pt-4 pr-4 pl-4 pb-0\">\n        <div className=\"form-group\">\n          <input\n            type=\"text\"\n            className=\"form-control rounded\"\n            placeholder={messages['menu.search']}\n            value={searchKey}\n            onChange={(e) => handleSearchContact(e.target.value)}\n          />\n        </div>\n      </div>\n\n      <TabContent activeTab={activeTab} className=\"chat-app-tab-content\">\n        <TabPane tabId=\"messages\" className=\"chat-app-tab-pane\">\n          <PerfectScrollbar\n            options={{ suppressScrollX: true, wheelPropagation: false }}\n          >\n            <div className=\"pt-2 pr-4 pl-4 pb-2\">\n              {loadingContacts &&\n                loadingConversations &&\n                conversations.map((item, index) => {\n                  const otherUser = allContacts.find(\n                    (u) =>\n                      u.id === item.users.find((x) => x !== currentUser.id),\n                  );\n                  return (\n                    <div\n                      key={index}\n                      className=\"d-flex flex-row mb-1 border-bottom pb-3 mb-3\"\n                    >\n                      <NavLink\n                        className=\"d-flex\"\n                        to=\"#\"\n                        location={{}}\n                        onClick={(e) =>\n                          handleConversationClick(e, otherUser.id)\n                        }\n                      >\n                        <img\n                          alt={otherUser.name}\n                          src={otherUser.thumb}\n                          className=\"img-thumbnail border-0 rounded-circle mr-3 list-thumbnail align-self-center xsmall\"\n                        />\n                        <div className=\"d-flex flex-grow-1 min-width-zero\">\n                          <div className=\"pl-0 align-self-center d-flex flex-column flex-lg-row justify-content-between min-width-zero\">\n                            <div className=\"min-width-zero\">\n                              <p className=\" mb-0 truncate\">{otherUser.name}</p>\n                              <p className=\"mb-1 text-muted text-small\">\n                                {item.lastMessageTime}\n                              </p>\n                            </div>\n                          </div>\n                        </div>\n                      </NavLink>\n                    </div>\n                  );\n                })}\n            </div>\n          </PerfectScrollbar>\n        </TabPane>\n        <TabPane tabId=\"contacts\" className=\"chat-app-tab-pane\">\n          <PerfectScrollbar\n            options={{ suppressScrollX: true, wheelPropagation: false }}\n          >\n            <div className=\"pt-2 pr-4 pl-4 pb-2\">\n              {loadingContacts &&\n                contacts\n                  .filter((x) => x.id !== currentUser.id)\n                  .map((item, index) => {\n                    return (\n                      <div\n                        key={index}\n                        className=\"d-flex flex-row mb-3 border-bottom pb-3\"\n                      >\n                        <NavLink\n                          className=\"d-flex\"\n                          to=\"#\"\n                          location={{}}\n                          onClick={() => handleContactClick(item.id)}\n                        >\n                          <img\n                            alt={item.name}\n                            src={item.thumb}\n                            className=\"img-thumbnail border-0 rounded-circle mr-3 list-thumbnail align-self-center xsmall\"\n                          />\n                          <div className=\"d-flex flex-grow-1 min-width-zero\">\n                            <div className=\"m-2 pl-0 align-self-center d-flex flex-column flex-lg-row justify-content-between min-width-zero\">\n                              <div className=\"min-width-zero\">\n                                <p className=\"mb-0 truncate\">{item.name}</p>\n                              </div>\n                            </div>\n                          </div>\n                        </NavLink>\n                      </div>\n                    );\n                  })}\n            </div>\n          </PerfectScrollbar>\n        </TabPane>\n      </TabContent>\n    </ApplicationMenu>\n  );\n};\n\nconst mapStateToProps = ({ chatApp }) => {\n  const {\n    contacts,\n    allContacts,\n    conversations,\n    loadingConversations,\n    loadingContacts,\n    currentUser,\n  } = chatApp;\n  return {\n    contacts,\n    allContacts,\n    conversations,\n    loadingConversations,\n    loadingContacts,\n    currentUser,\n  };\n};\nexport default injectIntl(\n  connect(mapStateToProps, {\n    changeConversationAction: changeConversation,\n    createConversationAction: createConversation,\n    searchContactAction: searchContact,\n  })(ChatApplicationMenu),\n);\n","import React from 'react';\n\nconst ChatHeading = ({ name, thumb, lastSeenDate }) => {\n  return (\n    <>\n      <div className=\"d-flex flex-row chat-heading\">\n        <div className=\"d-flex\">\n          <img\n            alt={name}\n            src={thumb}\n            className=\"img-thumbnail border-0 rounded-circle ml-0 mr-4 list-thumbnail align-self-center small\"\n          />\n        </div>\n        <div className=\" d-flex min-width-zero\">\n          <div className=\"card-body pl-0 align-self-center d-flex flex-column flex-lg-row justify-content-between min-width-zero\">\n            <div className=\"min-width-zero\">\n              <div>\n                <p className=\"list-item-heading mb-1 truncate \">{name}</p>\n              </div>\n              <p className=\"mb-0 text-muted text-small\">\n                {lastSeenDate === '0' ? '-' : lastSeenDate}\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"separator mb-5\" />\n    </>\n  );\n};\n\nexport default React.memo(ChatHeading);\n","import React from 'react';\nimport { Card, CardBody } from 'reactstrap';\n\nconst MessageCard = ({ sender, item, currentUserid }) => {\n  return (\n    <>\n      <Card\n        className={`d-inline-block mb-3 float-${\n          item.sender !== currentUserid ? 'left' : 'right'\n        }`}\n      >\n        <div className=\"position-absolute  pt-1 pr-2 r-0\">\n          <span className=\"text-extra-small text-muted\">{item.time}</span>\n        </div>\n        <CardBody>\n          <div className=\"d-flex flex-row pb-1\">\n            <img\n              alt={sender.name}\n              src={sender.thumb}\n              className=\"img-thumbnail border-0 rounded-circle mr-3 list-thumbnail align-self-center xsmall\"\n            />\n            <div className=\" d-flex flex-grow-1 min-width-zero\">\n              <div className=\"m-2 pl-0 align-self-center d-flex flex-column flex-lg-row justify-content-between min-width-zero\">\n                <div className=\"min-width-zero\">\n                  <p className=\"mb-0 truncate list-item-heading\">\n                    {sender.name}\n                  </p>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"chat-text-left\">\n            <p className=\"mb-0 text-semi-muted\">{item.text}</p>\n          </div>\n        </CardBody>\n      </Card>\n      <div className=\"clearfix\" />\n    </>\n  );\n};\n\nexport default React.memo(MessageCard);\n","import React from 'react';\nimport { Input, Button } from 'reactstrap';\n\nconst SaySomething = ({\n  placeholder,\n  messageInput,\n  handleChatInputPress,\n  handleChatInputChange,\n  handleSendButtonClick,\n}) => {\n  return (\n    <div className=\"chat-input-container d-flex justify-content-between align-items-center\">\n      <Input\n        className=\"form-control flex-grow-1\"\n        type=\"text\"\n        placeholder={placeholder}\n        value={messageInput}\n        onKeyPress={(e) => handleChatInputPress(e)}\n        onChange={(e) => handleChatInputChange(e)}\n      />\n      <div>\n        <Button outline color=\"primary\" className=\"icon-button large ml-1\">\n          <i className=\"simple-icon-paper-clip\" />\n        </Button>\n\n        <Button\n          color=\"primary\"\n          className=\"icon-button large ml-1\"\n          onClick={() => handleSendButtonClick()}\n        >\n          <i className=\"simple-icon-arrow-right\" />\n        </Button>\n      </div>\n    </div>\n  );\n};\nexport default React.memo(SaySomething);\n","import React, { useState, useEffect, useRef } from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { Row } from 'reactstrap';\n\nimport { Colxx } from 'components/common/CustomBootstrap';\n\nimport {\n  getContacts,\n  getConversations,\n  changeConversation,\n  addMessageToConversation,\n} from 'redux/actions';\nimport ChatApplicationMenu from 'containers/applications/ChatApplicationMenu';\nimport ChatHeading from 'components/applications/ChatHeading';\nimport MessageCard from 'components/applications/MessageCard';\nimport SaySomething from 'components/applications/SaySomething';\n\nconst ChatApp = ({\n  intl,\n  allContacts,\n  conversations,\n  loadingConversations,\n  loadingContacts,\n  currentUser,\n  selectedUser,\n  selectedUserId,\n\n  getContactsAction,\n  getConversationsAction,\n  changeConversationAction,\n  addMessageToConversationAction,\n}) => {\n  const [activeTab, setActiveTab] = useState('messages');\n  const [messageInput, setMessageInput] = useState('');\n  const scrollBarRef = useRef(null);\n  useEffect(() => {\n    document.body.classList.add('no-footer');\n    const currentUserId = 0;\n    getContactsAction();\n    getConversationsAction(currentUserId);\n\n    return () => {\n      document.body.classList.remove('no-footer');\n    };\n  }, [getContactsAction, getConversationsAction]);\n\n  const focusScrollBottom = () => {\n    setTimeout(() => {\n      if (scrollBarRef.current) {\n        scrollBarRef.current._ps.element.scrollTop =\n          scrollBarRef.current._ps.contentHeight;\n      }\n    }, 100);\n  };\n\n  useEffect(() => {\n    if (loadingConversations && loadingContacts && selectedUser == null) {\n      changeConversationAction(selectedUserId);\n      focusScrollBottom();\n    }\n  }, [\n    changeConversationAction,\n    loadingContacts,\n    loadingConversations,\n    selectedUser,\n    selectedUserId,\n  ]);\n\n  useEffect(() => {\n    focusScrollBottom();\n  }, [selectedUserId]);\n\n  const handleChatInputPress = (e) => {\n    if (e.key === 'Enter') {\n      if (messageInput.length > 0) {\n        addMessageToConversationAction(\n          currentUser.id,\n          selectedUser.id,\n          messageInput,\n          conversations,\n        );\n        setMessageInput('');\n        setActiveTab('messages');\n        focusScrollBottom();\n      }\n    }\n  };\n\n  const handleSendButtonClick = () => {\n    if (messageInput.length > 0) {\n      addMessageToConversationAction(\n        currentUser.id,\n        selectedUser.id,\n        messageInput,\n        conversations,\n      );\n      setMessageInput('');\n      setActiveTab('messages');\n      focusScrollBottom();\n    }\n  };\n\n  const { messages } = intl;\n\n  const selectedConversation =\n    loadingConversations && loadingContacts && selectedUser\n      ? conversations.find(\n          (x) =>\n            x.users.includes(currentUser.id) &&\n            x.users.includes(selectedUser.id),\n        )\n      : null;\n\n  return loadingConversations && loadingContacts ? (\n    <>\n      <Row className=\"app-row\">\n        <Colxx xxs=\"12\" className=\"chat-app\">\n          {loadingConversations && selectedUser && (\n            <ChatHeading\n              name={selectedUser.name}\n              thumb={selectedUser.thumb}\n              lastSeenDate={selectedUser.lastSeenDate}\n            />\n          )}\n\n          {selectedConversation && (\n            <PerfectScrollbar\n              ref={scrollBarRef}\n              // containerRef={(ref) => {}}\n              options={{ suppressScrollX: true, wheelPropagation: false }}\n            >\n              {selectedConversation.messages.map((item, index) => {\n                const sender = allContacts.find((x) => x.id === item.sender);\n                return (\n                  <MessageCard\n                    key={index}\n                    sender={sender}\n                    item={item}\n                    currentUserid={currentUser.id}\n                  />\n                );\n              })}\n            </PerfectScrollbar>\n          )}\n        </Colxx>\n      </Row>\n      <SaySomething\n        placeholder={messages['chat.saysomething']}\n        messageInput={messageInput}\n        handleChatInputPress={handleChatInputPress}\n        handleChatInputChange={(e) => {\n          setMessageInput(e.target.value);\n        }}\n        handleSendButtonClick={handleSendButtonClick}\n      />\n      <ChatApplicationMenu activeTab={activeTab} toggleAppMenu={setActiveTab} />\n    </>\n  ) : (\n    <div className=\"loading\" />\n  );\n};\n\nconst mapStateToProps = ({ chatApp }) => {\n  const {\n    allContacts,\n    conversations,\n    loadingConversations,\n    loadingContacts,\n    currentUser,\n    selectedUser,\n    selectedUserId,\n  } = chatApp;\n\n  return {\n    allContacts,\n    conversations,\n    loadingConversations,\n    loadingContacts,\n    currentUser,\n    selectedUser,\n    selectedUserId,\n  };\n};\nexport default injectIntl(\n  connect(mapStateToProps, {\n    getContactsAction: getContacts,\n    getConversationsAction: getConversations,\n    changeConversationAction: changeConversation,\n    addMessageToConversationAction: addMessageToConversation,\n  })(ChatApp),\n);\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"tag\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardHeader = function CardHeader(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var classes = mapToCssModules(classNames(className, 'card-header'), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nCardHeader.propTypes = propTypes;\nCardHeader.defaultProps = defaultProps;\nexport default CardHeader;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"type\", \"bsSize\", \"valid\", \"invalid\", \"tag\", \"addon\", \"plaintext\", \"innerRef\"];\n\n/* eslint react/prefer-stateless-function: 0 */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, warnOnce, tagPropType } from './utils';\nvar propTypes = {\n  children: PropTypes.node,\n  type: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  bsSize: PropTypes.string,\n  valid: PropTypes.bool,\n  invalid: PropTypes.bool,\n  tag: tagPropType,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.func, PropTypes.string]),\n  plaintext: PropTypes.bool,\n  addon: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  type: 'text'\n};\n\nvar Input = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(Input, _React$Component);\n\n  function Input(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n    _this.getRef = _this.getRef.bind(_assertThisInitialized(_this));\n    _this.focus = _this.focus.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  var _proto = Input.prototype;\n\n  _proto.getRef = function getRef(ref) {\n    if (this.props.innerRef) {\n      this.props.innerRef(ref);\n    }\n\n    this.ref = ref;\n  };\n\n  _proto.focus = function focus() {\n    if (this.ref) {\n      this.ref.focus();\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        className = _this$props.className,\n        cssModule = _this$props.cssModule,\n        type = _this$props.type,\n        bsSize = _this$props.bsSize,\n        valid = _this$props.valid,\n        invalid = _this$props.invalid,\n        tag = _this$props.tag,\n        addon = _this$props.addon,\n        plaintext = _this$props.plaintext,\n        innerRef = _this$props.innerRef,\n        attributes = _objectWithoutPropertiesLoose(_this$props, _excluded);\n\n    var checkInput = ['radio', 'checkbox'].indexOf(type) > -1;\n    var isNotaNumber = new RegExp('\\\\D', 'g');\n    var fileInput = type === 'file';\n    var textareaInput = type === 'textarea';\n    var selectInput = type === 'select';\n    var rangeInput = type === 'range';\n    var Tag = tag || (selectInput || textareaInput ? type : 'input');\n    var formControlClass = 'form-control';\n\n    if (plaintext) {\n      formControlClass = formControlClass + \"-plaintext\";\n      Tag = tag || 'input';\n    } else if (fileInput) {\n      formControlClass = formControlClass + \"-file\";\n    } else if (rangeInput) {\n      formControlClass = formControlClass + \"-range\";\n    } else if (checkInput) {\n      if (addon) {\n        formControlClass = null;\n      } else {\n        formControlClass = 'form-check-input';\n      }\n    }\n\n    if (attributes.size && isNotaNumber.test(attributes.size)) {\n      warnOnce('Please use the prop \"bsSize\" instead of the \"size\" to bootstrap\\'s input sizing.');\n      bsSize = attributes.size;\n      delete attributes.size;\n    }\n\n    var classes = mapToCssModules(classNames(className, invalid && 'is-invalid', valid && 'is-valid', bsSize ? \"form-control-\" + bsSize : false, formControlClass), cssModule);\n\n    if (Tag === 'input' || tag && typeof tag === 'function') {\n      attributes.type = type;\n    }\n\n    if (attributes.children && !(plaintext || type === 'select' || typeof Tag !== 'string' || Tag === 'select')) {\n      warnOnce(\"Input with a type of \\\"\" + type + \"\\\" cannot have children. Please use \\\"value\\\"/\\\"defaultValue\\\" instead.\");\n      delete attributes.children;\n    }\n\n    return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n      ref: innerRef,\n      className: classes,\n      \"aria-invalid\": invalid\n    }));\n  };\n\n  return Input;\n}(React.Component);\n\nInput.propTypes = propTypes;\nInput.defaultProps = defaultProps;\nexport default Input;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { TabContext } from './TabContext';\nimport { mapToCssModules, omit, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  activeTab: PropTypes.any,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar TabContent = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(TabContent, _Component);\n\n  TabContent.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, prevState) {\n    if (prevState.activeTab !== nextProps.activeTab) {\n      return {\n        activeTab: nextProps.activeTab\n      };\n    }\n\n    return null;\n  };\n\n  function TabContent(props) {\n    var _this;\n\n    _this = _Component.call(this, props) || this;\n    _this.state = {\n      activeTab: _this.props.activeTab\n    };\n    return _this;\n  }\n\n  var _proto = TabContent.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        className = _this$props.className,\n        cssModule = _this$props.cssModule,\n        Tag = _this$props.tag;\n    var attributes = omit(this.props, Object.keys(propTypes));\n    var classes = mapToCssModules(classNames('tab-content', className), cssModule);\n    return /*#__PURE__*/React.createElement(TabContext.Provider, {\n      value: {\n        activeTabId: this.state.activeTab\n      }\n    }, /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n      className: classes\n    })));\n  };\n\n  return TabContent;\n}(Component);\n\nexport default TabContent;\nTabContent.propTypes = propTypes;\nTabContent.defaultProps = defaultProps;","import React from 'react';\n/**\n * TabContext\n * {\n *  activeTabId: PropTypes.any\n * }\n */\n\nexport var TabContext = /*#__PURE__*/React.createContext({});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"tabId\", \"tag\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { TabContext } from './TabContext';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  tabId: PropTypes.any\n};\nvar defaultProps = {\n  tag: 'div'\n};\nexport default function TabPane(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      tabId = props.tabId,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var getClasses = function getClasses(activeTabId) {\n    return mapToCssModules(classNames('tab-pane', className, {\n      active: tabId === activeTabId\n    }), cssModule);\n  };\n\n  return /*#__PURE__*/React.createElement(TabContext.Consumer, null, function (_ref) {\n    var activeTabId = _ref.activeTabId;\n    return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n      className: getClasses(activeTabId)\n    }));\n  });\n}\nTabPane.propTypes = propTypes;\nTabPane.defaultProps = defaultProps;"],"names":["_ref","children","containerRef","useRef","_useState","useState","_useState2","_slicedToArray","isOpen","setIsOpen","handleDocumentClick","e","container","current","contains","target","useEffect","forEach","event","document","addEventListener","removeEventListener","_jsxs","ref","className","concat","_jsx","NavLink","onClick","injectIntl","connect","_ref2","chatApp","contacts","allContacts","conversations","loadingConversations","loadingContacts","currentUser","changeConversationAction","changeConversation","createConversationAction","createConversation","searchContactAction","searchContact","intl","activeTab","toggleAppMenu","searchKey","setSearchKey","handleSearchContact","keyword","length","messages","ApplicationMenu","CardHeader","Nav","tabs","NavItem","to","location","classnames","active","tab","IntlMessages","id","type","placeholder","value","onChange","TabContent","TabPane","tabId","PerfectScrollbar","options","suppressScrollX","wheelPropagation","map","item","index","otherUser","find","u","users","x","selectedUserId","alt","name","src","thumb","lastMessageTime","filter","userId","includes","ChatHeading","lastSeenDate","_Fragment","React","MessageCard","sender","currentUserid","Card","time","CardBody","text","SaySomething","messageInput","handleChatInputPress","handleChatInputChange","handleSendButtonClick","Input","onKeyPress","Button","outline","color","selectedUser","getContactsAction","getContacts","getConversationsAction","getConversations","addMessageToConversationAction","addMessageToConversation","setActiveTab","_useState3","_useState4","setMessageInput","scrollBarRef","body","classList","add","remove","focusScrollBottom","setTimeout","_ps","element","scrollTop","contentHeight","selectedConversation","Row","Colxx","xxs","key","ChatApplicationMenu","_excluded","propTypes","tag","tagPropType","PropTypes","cssModule","props","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","_extends","defaultProps","size","bsSize","valid","invalid","innerRef","plaintext","addon","_React$Component","_this","call","this","getRef","bind","_assertThisInitialized","focus","_inheritsLoose","_proto","prototype","render","_this$props","checkInput","indexOf","isNotaNumber","RegExp","formControlClass","test","warnOnce","_Component","state","getDerivedStateFromProps","nextProps","prevState","omit","Object","keys","TabContext","Provider","activeTabId","Component","getClasses","Consumer"],"sourceRoot":""}