{"version":3,"sources":["containers/navs/Breadcrumb.js","components/applications/SurveyListItem.js","containers/applications/AddNewSurveyModal.js","containers/applications/SurveyApplicationMenu.js","views/app/applications/survey.js","components/common/CustomSelectInput.js","../node_modules/reactstrap/es/Breadcrumb.js","../node_modules/reactstrap/es/BreadcrumbItem.js","../node_modules/reactstrap/es/ButtonDropdown.js","../node_modules/reactstrap/es/Input.js","components/common/ApplicationMenu.js"],"names":["getMenuTitle","sub","concat","adminRoot","_jsx","IntlMessages","id","getUrl","path","split","BreadcrumbItems","_ref2","match","substr","paths","length","indexOf","filter","x","_Fragment","children","Breadcrumb","className","map","index","BreadcrumbItem","active","NavLink","to","BreadcrumbContainer","_ref","heading","_jsxs","SurveyListItem","item","handleCheckChange","isSelected","Colxx","xxs","Card","CardBody","status","title","category","createDate","Badge","color","labelColor","pill","label","CustomInput","type","checked","onChange","event","React","memo","initialState","connect","surveyListApp","labels","categories","addSurveyItemAction","addSurveyItem","modalOpen","toggleModal","_useState","useState","_useState2","_slicedToArray","state","setState","Modal","isOpen","toggle","wrapClassName","backdrop","ModalHeader","ModalBody","Label","Input","defaultValue","_objectSpread","target","value","Select","components","CustomSelectInput","classNamePrefix","name","options","i","key","val","ModalFooter","Button","outline","onClick","newItem","addNetItem","surveyItems","allSurveyItems","loading","getSurveyListWithFilterAction","getSurveyListWithFilter","addFilter","column","ApplicationMenu","PerfectScrollbar","suppressScrollX","wheelPropagation","NavItem","classnames","location","c","defaultChecked","l","getIndex","arr","prop","injectIntl","searchKeyword","orderColumn","orderColumns","selectedItems","getSurveyListAction","getSurveyList","getSurveyListWithOrderAction","getSurveyListWithOrder","getSurveyListSearchAction","getSurveyListSearch","selectedSurveyItemsChangeAction","selectedSurveyItemsChange","intl","setModalOpen","_useState3","_useState4","dropdownSplitOpen","setDropdownSplitOpen","_useState5","_useState6","lastChecked","setLastChecked","_useState7","_useState8","displayOptionsIsOpen","setDisplayOptionsIsOpen","useEffect","document","body","classList","add","remove","selectedList","Object","assign","includes","push","shiftKey","_selectedList","items","start","end","slice","Math","min","max","apply","_toConsumableArray","Array","from","Set","handleChangeSelectAll","messages","Row","size","ButtonDropdown","DropdownToggle","caret","DropdownMenu","right","DropdownItem","Collapse","UncontrolledDropdown","o","placeholder","onKeyPress","e","Separator","SurveyApplicationMenu","AddNewSurveyModal","props","customProps","autoCorrect","autoCapitalize","propTypes","tag","tagPropType","listTag","PropTypes","string","listClassName","cssModule","object","node","Tag","ListTag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","listClasses","createElement","_extends","defaultProps","bool","undefined","Dropdown","group","oneOfType","number","bsSize","valid","invalid","innerRef","func","plaintext","addon","_React$Component","_this","call","this","getRef","bind","_assertThisInitialized","focus","_inheritsLoose","_proto","prototype","ref","render","_this$props","checkInput","isNotaNumber","RegExp","formControlClass","test","warnOnce","Component","containerRef","useRef","setIsOpen","handleDocumentClick","container","current","contains","forEach","addEventListener","removeEventListener"],"mappings":"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","file":"static/js/application-survey.2adf2fc0.chunk.js","sourcesContent":["/* eslint-disable react/no-array-index-key */\nimport React from 'react';\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\nimport { NavLink } from 'react-router-dom';\nimport IntlMessages from 'helpers/IntlMessages';\nimport { adminRoot } from 'constants/defaultValues';\n\nconst getMenuTitle = (sub) => {\n  if (`/${sub}` === adminRoot) return <IntlMessages id=\"menu.home\" />;\n  return <IntlMessages id={`menu.${sub}`} />;\n};\n\nconst getUrl = (path, sub) => {\n  return path.split(sub)[0] + sub;\n};\n\nconst BreadcrumbContainer = ({ heading, match }) => {\n  return (\n    <>\n      {heading && (\n        <h1>\n          <IntlMessages id={heading} />\n        </h1>\n      )}\n      <BreadcrumbItems match={match} />\n    </>\n  );\n};\n\nconst BreadcrumbItems = ({ match }) => {\n  const path = match.path.substr(1);\n  let paths = path.split('/');\n  if (paths[paths.length - 1].indexOf(':') > -1) {\n    paths = paths.filter((x) => x.indexOf(':') === -1);\n  }\n  return (\n    <>\n      <Breadcrumb className=\"pt-0 breadcrumb-container d-none d-sm-block d-lg-inline-block\">\n        {paths.map((sub, index) => {\n          return (\n            <BreadcrumbItem key={index} active={paths.length === index + 1}>\n              {paths.length !== index + 1 ? (\n                <NavLink to={`/${getUrl(path, sub, index)}`}>\n                  {getMenuTitle(sub)}\n                </NavLink>\n              ) : (\n                getMenuTitle(sub)\n              )}\n            </BreadcrumbItem>\n          );\n        })}\n      </Breadcrumb>\n    </>\n  );\n};\n\nexport default BreadcrumbContainer;\n","import React from 'react';\nimport { Card, CardBody, Badge, CustomInput } from 'reactstrap';\nimport { NavLink } from 'react-router-dom';\n\nimport { adminRoot } from 'constants/defaultValues';\nimport { Colxx } from '../common/CustomBootstrap';\n\nconst SurveyListItem = ({ item, handleCheckChange, isSelected }) => {\n  return (\n    <Colxx xxs=\"12\">\n      <Card className=\"card d-flex flex-row mb-3\">\n        <div className=\"d-flex flex-grow-1 min-width-zero\">\n          <CardBody className=\"align-self-center d-flex flex-column flex-md-row justify-content-between min-width-zero align-items-md-center\">\n            <NavLink\n              to={`${adminRoot}/applications/survey/${item.id}`}\n              className=\"list-item-heading mb-0 truncate w-40 w-xs-100  mb-1 mt-1\"\n            >\n              <i\n                className={`${\n                  item.status === 'COMPLETED'\n                    ? 'simple-icon-check heading-icon'\n                    : 'simple-icon-refresh heading-icon'\n                }`}\n              />\n              <span className=\"align-middle d-inline-block\">{item.title}</span>\n            </NavLink>\n            <p className=\"mb-1 text-muted text-small w-15 w-xs-100\">\n              {item.category}\n            </p>\n            <p className=\"mb-1 text-muted text-small w-15 w-xs-100\">\n              {item.createDate}\n            </p>\n            <div className=\"w-15 w-xs-100\">\n              <Badge color={item.labelColor} pill>\n                {item.label}\n              </Badge>\n            </div>\n          </CardBody>\n          <div className=\"custom-control custom-checkbox pl-1 align-self-center mr-4\">\n            <CustomInput\n              className=\"itemCheck mb-0\"\n              type=\"checkbox\"\n              id={`check_${item.id}`}\n              checked={isSelected}\n              onChange={(event) => handleCheckChange(event, item.id)}\n              label=\"\"\n            />\n          </div>\n        </div>\n      </Card>\n    </Colxx>\n  );\n};\n\nexport default React.memo(SurveyListItem);\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport {\n  CustomInput,\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Input,\n  Label,\n} from 'reactstrap';\nimport Select from 'react-select';\nimport CustomSelectInput from 'components/common/CustomSelectInput';\nimport IntlMessages from 'helpers/IntlMessages';\n\nimport { addSurveyItem } from 'redux/actions';\n\nconst initialState = {\n  title: '',\n  label: {},\n  category: {},\n  status: 'ACTIVE',\n};\n\nconst AddNewSurveyModal = ({\n  modalOpen,\n  toggleModal,\n  labels,\n  categories,\n  addSurveyItemAction,\n}) => {\n  const [state, setState] = useState(initialState);\n\n  const addNetItem = () => {\n    const newItem = {\n      title: state.title,\n      label: state.label.value,\n      labelColor: state.label.color,\n      category: state.category.value,\n      status: state.status,\n    };\n    addSurveyItemAction(newItem);\n    toggleModal();\n    setState(initialState);\n  };\n\n  return (\n    <Modal\n      isOpen={modalOpen}\n      toggle={toggleModal}\n      wrapClassName=\"modal-right\"\n      backdrop=\"static\"\n    >\n      <ModalHeader toggle={toggleModal}>\n        <IntlMessages id=\"survey.add-new-title\" />\n      </ModalHeader>\n      <ModalBody>\n        <Label className=\"mt-4\">\n          <IntlMessages id=\"survey.title\" />\n        </Label>\n        <Input\n          type=\"text\"\n          defaultValue={state.title}\n          onChange={(event) =>\n            setState({ ...state, title: event.target.value })\n          }\n        />\n\n        <Label className=\"mt-4\">\n          <IntlMessages id=\"survey.category\" />\n        </Label>\n        <Select\n          components={{ Input: CustomSelectInput }}\n          className=\"react-select\"\n          classNamePrefix=\"react-select\"\n          name=\"form-field-name\"\n          options={categories.map((x, i) => {\n            return { label: x, value: x, key: i };\n          })}\n          value={state.category}\n          onChange={(val) => setState({ ...state, category: val })}\n        />\n        <Label className=\"mt-4\">\n          <IntlMessages id=\"survey.label\" />\n        </Label>\n        <Select\n          components={{ Input: CustomSelectInput }}\n          className=\"react-select\"\n          classNamePrefix=\"react-select\"\n          name=\"form-field-name\"\n          options={labels.map((x, i) => {\n            return {\n              label: x.label,\n              value: x.label,\n              key: i,\n              color: x.color,\n            };\n          })}\n          value={state.label}\n          onChange={(val) => setState({ ...state, label: val })}\n        />\n\n        <Label className=\"mt-4\">\n          <IntlMessages id=\"survey.status\" />\n        </Label>\n        <CustomInput\n          type=\"radio\"\n          id=\"exCustomRadio\"\n          name=\"customRadio\"\n          label=\"COMPLETED\"\n          checked={state.status === 'COMPLETED'}\n          onChange={(event) =>\n            setState({\n              ...state,\n              status: event.target.value === 'on' ? 'COMPLETED' : 'ACTIVE',\n            })\n          }\n        />\n        <CustomInput\n          type=\"radio\"\n          id=\"exCustomRadio2\"\n          name=\"customRadio2\"\n          label=\"ACTIVE\"\n          checked={state.status === 'ACTIVE'}\n          onChange={(event) =>\n            setState({\n              ...state,\n              status: event.target.value !== 'on' ? 'COMPLETED' : 'ACTIVE',\n            })\n          }\n        />\n      </ModalBody>\n      <ModalFooter>\n        <Button color=\"secondary\" outline onClick={toggleModal}>\n          <IntlMessages id=\"survey.cancel\" />\n        </Button>\n        <Button color=\"primary\" onClick={() => addNetItem()}>\n          <IntlMessages id=\"survey.submit\" />\n        </Button>\n      </ModalFooter>\n    </Modal>\n  );\n};\n\nconst mapStateToProps = ({ surveyListApp }) => {\n  const { labels, categories } = surveyListApp;\n  return {\n    labels,\n    categories,\n  };\n};\nexport default connect(mapStateToProps, {\n  addSurveyItemAction: addSurveyItem,\n})(AddNewSurveyModal);\n","/* eslint-disable jsx-a11y/click-events-have-key-events */\n/* eslint-disable jsx-a11y/no-static-element-interactions */\n/* eslint-disable jsx-a11y/label-has-associated-control */\n/* eslint-disable jsx-a11y/label-has-for */\n/* eslint-disable react/no-array-index-key */\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { NavItem, Badge } from 'reactstrap';\nimport { NavLink } from 'react-router-dom';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport classnames from 'classnames';\n\nimport IntlMessages from 'helpers/IntlMessages';\nimport ApplicationMenu from 'components/common/ApplicationMenu';\n\nimport { getSurveyListWithFilter } from 'redux/actions';\n\nconst SurveyApplicationMenu = ({\n  surveyItems,\n  filter,\n  allSurveyItems,\n  loading,\n  labels,\n  categories,\n  getSurveyListWithFilterAction,\n}) => {\n  const addFilter = (column, value) => {\n    getSurveyListWithFilterAction(column, value);\n  };\n\n  return (\n    <ApplicationMenu>\n      <PerfectScrollbar\n        options={{ suppressScrollX: true, wheelPropagation: false }}\n      >\n        <div className=\"p-4\">\n          <p className=\"text-muted text-small\">\n            <IntlMessages id=\"survey.status\" />\n            Status\n          </p>\n          <ul className=\"list-unstyled mb-5\">\n            <NavItem className={classnames({ active: !filter })}>\n              <NavLink to=\"#\" onClick={() => addFilter('', '')} location={{}}>\n                <i className=\"simple-icon-reload\" />\n                <IntlMessages id=\"survey.all-surveys\" />\n                <span className=\"float-right\">\n                  {loading && allSurveyItems.length}\n                </span>\n              </NavLink>\n            </NavItem>\n            <NavItem\n              className={classnames({\n                active:\n                  filter &&\n                  filter.column === 'status' &&\n                  filter.value === 'ACTIVE',\n              })}\n            >\n              <NavLink\n                to=\"#\"\n                location={{}}\n                onClick={() => addFilter('status', 'ACTIVE')}\n              >\n                <i className=\"simple-icon-refresh\" />\n                <IntlMessages id=\"survey.active-surveys\" />\n                <span className=\"float-right\">\n                  {loading &&\n                    surveyItems.filter((x) => x.status === 'ACTIVE').length}\n                </span>\n              </NavLink>\n            </NavItem>\n            <NavItem\n              className={classnames({\n                active:\n                  filter &&\n                  filter.column === 'status' &&\n                  filter.value === 'COMPLETED',\n              })}\n            >\n              <NavLink\n                to=\"#\"\n                location={{}}\n                onClick={() => addFilter('status', 'COMPLETED')}\n              >\n                <i className=\"simple-icon-check\" />\n                <IntlMessages id=\"survey.completed-surveys\" />\n                <span className=\"float-right\">\n                  {loading &&\n                    surveyItems.filter((x) => x.status === 'COMPLETED').length}\n                </span>\n              </NavLink>\n            </NavItem>\n          </ul>\n          <p className=\"text-muted text-small\">\n            <IntlMessages id=\"survey.categories\" />\n          </p>\n          <ul className=\"list-unstyled mb-5\">\n            {categories.map((c, index) => {\n              return (\n                <NavItem key={index}>\n                  <div onClick={() => addFilter('category', c)}>\n                    <div className=\"custom-control custom-radio\">\n                      <input\n                        type=\"radio\"\n                        className=\"custom-control-input\"\n                        defaultChecked={\n                          filter &&\n                          filter.column === 'category' &&\n                          filter.value === c\n                        }\n                      />\n                      <label className=\"custom-control-label\">{c}</label>\n                    </div>\n                  </div>\n                </NavItem>\n              );\n            })}\n          </ul>\n          <p className=\"text-muted text-small\">\n            <IntlMessages id=\"survey.labels\" />\n          </p>\n          <div>\n            {labels.map((l, index) => {\n              return (\n                <p className=\"d-sm-inline-block mb-1\" key={index}>\n                  <NavLink\n                    to=\"#\"\n                    location={{}}\n                    onClick={() => addFilter('label', l.label)}\n                  >\n                    <Badge\n                      className=\"mb-1\"\n                      color={`${\n                        filter &&\n                        filter.column === 'label' &&\n                        filter.value === l.label\n                          ? l.color\n                          : `outline-${l.color}`\n                      }`}\n                      pill\n                    >\n                      {l.label}\n                    </Badge>\n                  </NavLink>\n                </p>\n              );\n            })}\n          </div>\n        </div>\n      </PerfectScrollbar>\n    </ApplicationMenu>\n  );\n};\nconst mapStateToProps = ({ surveyListApp }) => {\n  const { surveyItems, filter, allSurveyItems, loading, labels, categories } =\n    surveyListApp;\n\n  return {\n    surveyItems,\n    filter,\n    allSurveyItems,\n    loading,\n    labels,\n    categories,\n  };\n};\nexport default connect(mapStateToProps, {\n  getSurveyListWithFilterAction: getSurveyListWithFilter,\n})(SurveyApplicationMenu);\n","/* eslint-disable react/no-array-index-key */\nimport React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { injectIntl } from 'react-intl';\nimport {\n  Row,\n  Button,\n  UncontrolledDropdown,\n  DropdownToggle,\n  DropdownItem,\n  DropdownMenu,\n  Collapse,\n  ButtonDropdown,\n  CustomInput,\n} from 'reactstrap';\n\nimport IntlMessages from 'helpers/IntlMessages';\nimport { Colxx, Separator } from 'components/common/CustomBootstrap';\nimport Breadcrumb from 'containers/navs/Breadcrumb';\n\nimport {\n  getSurveyList,\n  getSurveyListWithOrder,\n  getSurveyListSearch,\n  selectedSurveyItemsChange,\n} from 'redux/actions';\n\nimport SurveyListItem from 'components/applications/SurveyListItem';\nimport AddNewSurveyModal from 'containers/applications/AddNewSurveyModal';\nimport SurveyApplicationMenu from 'containers/applications/SurveyApplicationMenu';\n\nconst getIndex = (value, arr, prop) => {\n  for (let i = 0; i < arr.length; i += 1) {\n    if (arr[i][prop] === value) {\n      return i;\n    }\n  }\n  return -1;\n};\n\nconst SurveyApp = ({\n  match,\n  intl,\n  surveyItems,\n  searchKeyword,\n  loading,\n  orderColumn,\n  orderColumns,\n  selectedItems,\n\n  getSurveyListAction,\n  getSurveyListWithOrderAction,\n  getSurveyListSearchAction,\n  selectedSurveyItemsChangeAction,\n}) => {\n  const [modalOpen, setModalOpen] = useState(false);\n  const [dropdownSplitOpen, setDropdownSplitOpen] = useState(false);\n  const [lastChecked, setLastChecked] = useState(null);\n  const [displayOptionsIsOpen, setDisplayOptionsIsOpen] = useState(false);\n\n  useEffect(() => {\n    document.body.classList.add('right-menu');\n    getSurveyListAction();\n\n    return () => {\n      document.body.classList.remove('right-menu');\n    };\n  }, [getSurveyListAction]);\n\n  const handleCheckChange = (event, id) => {\n    if (lastChecked == null) {\n      setLastChecked(id);\n    }\n\n    let selectedList = Object.assign([], selectedItems);\n    if (selectedList.includes(id)) {\n      selectedList = selectedList.filter((x) => x !== id);\n    } else {\n      selectedList.push(id);\n    }\n    selectedSurveyItemsChangeAction(selectedList);\n\n    if (event.shiftKey) {\n      let items = surveyItems;\n      const start = getIndex(id, items, 'id');\n      const end = getIndex(lastChecked, items, 'id');\n      items = items.slice(Math.min(start, end), Math.max(start, end) + 1);\n      selectedList.push(\n        ...items.map((item) => {\n          return item.id;\n        })\n      );\n      selectedList = Array.from(new Set(selectedList));\n      selectedSurveyItemsChangeAction(selectedList);\n    }\n  };\n\n  const handleChangeSelectAll = () => {\n    if (loading) {\n      if (selectedItems.length >= surveyItems.length) {\n        selectedSurveyItemsChangeAction([]);\n      } else {\n        selectedSurveyItemsChangeAction(surveyItems.map((x) => x.id));\n      }\n    }\n  };\n\n  const { messages } = intl;\n\n  return (\n    <>\n      <Row className=\"app-row survey-app\">\n        <Colxx xxs=\"12\">\n          <div className=\"mb-2\">\n            <h1>\n              <IntlMessages id=\"menu.survey\" />\n            </h1>\n\n            {loading && (\n              <div className=\"text-zero top-right-button-container\">\n                <Button\n                  color=\"primary\"\n                  size=\"lg\"\n                  className=\"top-right-button mr-1\"\n                  onClick={() => setModalOpen(true)}\n                >\n                  <IntlMessages id=\"survey.add-new\" />\n                </Button>\n                <ButtonDropdown\n                  isOpen={dropdownSplitOpen}\n                  toggle={() => setDropdownSplitOpen(!dropdownSplitOpen)}\n                >\n                  <div className=\"btn btn-primary btn-lg pl-4 pr-0 check-button check-all\">\n                    <CustomInput\n                      className=\"custom-checkbox mb-0 d-inline-block\"\n                      type=\"checkbox\"\n                      id=\"checkAll\"\n                      checked={selectedItems.length >= surveyItems.length}\n                      onClick={() => handleChangeSelectAll()}\n                      onChange={() => handleChangeSelectAll()}\n                      label={\n                        <span\n                          className={`custom-control-label ${\n                            selectedItems.length > 0 &&\n                            selectedItems.length < surveyItems.length\n                              ? 'indeterminate'\n                              : ''\n                          }`}\n                        />\n                      }\n                    />\n                  </div>\n                  <DropdownToggle\n                    caret\n                    color=\"primary\"\n                    className=\"dropdown-toggle-split btn-lg\"\n                  />\n                  <DropdownMenu right>\n                    <DropdownItem>\n                      <IntlMessages id=\"survey.delete\" />\n                    </DropdownItem>\n                    <DropdownItem>\n                      <IntlMessages id=\"survey.another-action\" />\n                    </DropdownItem>\n                  </DropdownMenu>\n                </ButtonDropdown>\n              </div>\n            )}\n\n            <Breadcrumb match={match} />\n          </div>\n\n          <div className=\"mb-2\">\n            <Button\n              color=\"empty\"\n              className=\"pt-0 pl-0 d-inline-block d-md-none\"\n              onClick={() => {\n                setDisplayOptionsIsOpen(!displayOptionsIsOpen);\n              }}\n            >\n              <IntlMessages id=\"survey.display-options\" />{' '}\n              <i className=\"simple-icon-arrow-down align-middle\" />\n            </Button>\n\n            <Collapse\n              id=\"displayOptions\"\n              className=\"d-md-block mb-2\"\n              isOpen={displayOptionsIsOpen}\n            >\n              <div className=\"d-block d-md-inline-block\">\n                <UncontrolledDropdown className=\"mr-1 float-md-left btn-group mb-1\">\n                  <DropdownToggle caret color=\"outline-dark\" size=\"xs\">\n                    <IntlMessages id=\"survey.orderby\" />\n                    {orderColumn ? orderColumn.label : ''}\n                  </DropdownToggle>\n                  <DropdownMenu>\n                    {orderColumns.map((o, index) => {\n                      return (\n                        <DropdownItem\n                          key={index}\n                          onClick={() => getSurveyListWithOrderAction(o.column)}\n                        >\n                          {o.label}\n                        </DropdownItem>\n                      );\n                    })}\n                  </DropdownMenu>\n                </UncontrolledDropdown>\n                <div className=\"search-sm d-inline-block float-md-left mr-1 mb-1 align-top\">\n                  <input\n                    type=\"text\"\n                    name=\"keyword\"\n                    id=\"search\"\n                    placeholder={messages['menu.search']}\n                    defaultValue={searchKeyword}\n                    onKeyPress={(e) => {\n                      if (e.key === 'Enter') {\n                        getSurveyListSearchAction(e.target.value);\n                      }\n                    }}\n                  />\n                </div>\n              </div>\n            </Collapse>\n          </div>\n          <Separator className=\"mb-5\" />\n          <Row>\n            {loading ? (\n              surveyItems.map((item, index) => {\n                return (\n                  <SurveyListItem\n                    key={`todo_item_${index}`}\n                    item={item}\n                    handleCheckChange={handleCheckChange}\n                    isSelected={\n                      loading ? selectedItems.includes(item.id) : false\n                    }\n                  />\n                );\n              })\n            ) : (\n              <div className=\"loading\" />\n            )}\n          </Row>\n        </Colxx>\n      </Row>\n\n      {loading && <SurveyApplicationMenu />}\n      <AddNewSurveyModal\n        toggleModal={() => setModalOpen(!modalOpen)}\n        modalOpen={modalOpen}\n      />\n    </>\n  );\n};\nconst mapStateToProps = ({ surveyListApp }) => {\n  const {\n    surveyItems,\n    searchKeyword,\n    loading,\n    orderColumn,\n    orderColumns,\n    selectedItems,\n  } = surveyListApp;\n\n  return {\n    surveyItems,\n    searchKeyword,\n    loading,\n    orderColumn,\n    orderColumns,\n    selectedItems,\n  };\n};\nexport default injectIntl(\n  connect(mapStateToProps, {\n    getSurveyListAction: getSurveyList,\n    getSurveyListWithOrderAction: getSurveyListWithOrder,\n    getSurveyListSearchAction: getSurveyListSearch,\n    selectedSurveyItemsChangeAction: selectedSurveyItemsChange,\n  })(SurveyApp)\n);\n","import React from 'react';\nimport { components } from 'react-select';\n\nconst CustomSelectInput = (props) => {\n  const customProps = { ...props };\n  delete customProps.autoCorrect;\n  delete customProps.autoCapitalize;\n  return <components.Input {...customProps} />;\n};\n\nexport default CustomSelectInput;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  listTag: tagPropType,\n  className: PropTypes.string,\n  listClassName: PropTypes.string,\n  cssModule: PropTypes.object,\n  children: PropTypes.node,\n  'aria-label': PropTypes.string\n};\nvar defaultProps = {\n  tag: 'nav',\n  listTag: 'ol',\n  'aria-label': 'breadcrumb'\n};\n\nvar Breadcrumb = function Breadcrumb(props) {\n  var className = props.className,\n      listClassName = props.listClassName,\n      cssModule = props.cssModule,\n      children = props.children,\n      Tag = props.tag,\n      ListTag = props.listTag,\n      label = props['aria-label'],\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"listClassName\", \"cssModule\", \"children\", \"tag\", \"listTag\", \"aria-label\"]);\n\n  var classes = mapToCssModules(classNames(className), cssModule);\n  var listClasses = mapToCssModules(classNames('breadcrumb', listClassName), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    \"aria-label\": label\n  }), /*#__PURE__*/React.createElement(ListTag, {\n    className: listClasses\n  }, children));\n};\n\nBreadcrumb.propTypes = propTypes;\nBreadcrumb.defaultProps = defaultProps;\nexport default Breadcrumb;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  active: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'li'\n};\n\nvar BreadcrumbItem = function BreadcrumbItem(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      active = props.active,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"active\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, active ? 'active' : false, 'breadcrumb-item'), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    \"aria-current\": active ? 'page' : undefined\n  }));\n};\n\nBreadcrumbItem.propTypes = propTypes;\nBreadcrumbItem.defaultProps = defaultProps;\nexport default BreadcrumbItem;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Dropdown from './Dropdown';\nvar propTypes = {\n  children: PropTypes.node\n};\n\nvar ButtonDropdown = function ButtonDropdown(props) {\n  return /*#__PURE__*/React.createElement(Dropdown, _extends({\n    group: true\n  }, props));\n};\n\nButtonDropdown.propTypes = propTypes;\nexport default ButtonDropdown;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\n\n/* eslint react/prefer-stateless-function: 0 */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, warnOnce, tagPropType } from './utils';\nvar propTypes = {\n  children: PropTypes.node,\n  type: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  bsSize: PropTypes.string,\n  valid: PropTypes.bool,\n  invalid: PropTypes.bool,\n  tag: tagPropType,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.func, PropTypes.string]),\n  plaintext: PropTypes.bool,\n  addon: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  type: 'text'\n};\n\nvar Input = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(Input, _React$Component);\n\n  function Input(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n    _this.getRef = _this.getRef.bind(_assertThisInitialized(_this));\n    _this.focus = _this.focus.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  var _proto = Input.prototype;\n\n  _proto.getRef = function getRef(ref) {\n    if (this.props.innerRef) {\n      this.props.innerRef(ref);\n    }\n\n    this.ref = ref;\n  };\n\n  _proto.focus = function focus() {\n    if (this.ref) {\n      this.ref.focus();\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        className = _this$props.className,\n        cssModule = _this$props.cssModule,\n        type = _this$props.type,\n        bsSize = _this$props.bsSize,\n        valid = _this$props.valid,\n        invalid = _this$props.invalid,\n        tag = _this$props.tag,\n        addon = _this$props.addon,\n        plaintext = _this$props.plaintext,\n        innerRef = _this$props.innerRef,\n        attributes = _objectWithoutPropertiesLoose(_this$props, [\"className\", \"cssModule\", \"type\", \"bsSize\", \"valid\", \"invalid\", \"tag\", \"addon\", \"plaintext\", \"innerRef\"]);\n\n    var checkInput = ['radio', 'checkbox'].indexOf(type) > -1;\n    var isNotaNumber = new RegExp('\\\\D', 'g');\n    var fileInput = type === 'file';\n    var textareaInput = type === 'textarea';\n    var selectInput = type === 'select';\n    var rangeInput = type === 'range';\n    var Tag = tag || (selectInput || textareaInput ? type : 'input');\n    var formControlClass = 'form-control';\n\n    if (plaintext) {\n      formControlClass = formControlClass + \"-plaintext\";\n      Tag = tag || 'input';\n    } else if (fileInput) {\n      formControlClass = formControlClass + \"-file\";\n    } else if (rangeInput) {\n      formControlClass = formControlClass + \"-range\";\n    } else if (checkInput) {\n      if (addon) {\n        formControlClass = null;\n      } else {\n        formControlClass = 'form-check-input';\n      }\n    }\n\n    if (attributes.size && isNotaNumber.test(attributes.size)) {\n      warnOnce('Please use the prop \"bsSize\" instead of the \"size\" to bootstrap\\'s input sizing.');\n      bsSize = attributes.size;\n      delete attributes.size;\n    }\n\n    var classes = mapToCssModules(classNames(className, invalid && 'is-invalid', valid && 'is-valid', bsSize ? \"form-control-\" + bsSize : false, formControlClass), cssModule);\n\n    if (Tag === 'input' || tag && typeof tag === 'function') {\n      attributes.type = type;\n    }\n\n    if (attributes.children && !(plaintext || type === 'select' || typeof Tag !== 'string' || Tag === 'select')) {\n      warnOnce(\"Input with a type of \\\"\" + type + \"\\\" cannot have children. Please use \\\"value\\\"/\\\"defaultValue\\\" instead.\");\n      delete attributes.children;\n    }\n\n    return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n      ref: innerRef,\n      className: classes,\n      \"aria-invalid\": invalid\n    }));\n  };\n\n  return Input;\n}(React.Component);\n\nInput.propTypes = propTypes;\nInput.defaultProps = defaultProps;\nexport default Input;","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useState, useRef, useEffect } from 'react';\nimport { NavLink } from 'reactstrap';\n\nconst ApplicationMenu = ({ children }) => {\n  const containerRef = useRef();\n  const [isOpen, setIsOpen] = useState(false);\n\n  const handleDocumentClick = (e) => {\n    if (isOpen) {\n      const container = containerRef.current;\n      if (container.contains(e.target) || container === e.target) {\n        return;\n      }\n      setIsOpen(false);\n    }\n  };\n\n  useEffect(() => {\n    ['click', 'touchstart'].forEach((event) =>\n      document.addEventListener(event, handleDocumentClick, false)\n    );\n\n    return () => {\n      ['click', 'touchstart'].forEach((event) =>\n        document.removeEventListener(event, handleDocumentClick, false)\n      );\n    };\n  }, [isOpen]);\n \n  return (\n    <div ref={containerRef} className={`app-menu ${isOpen ? 'shown' : ''}`}>\n      {children}\n      <NavLink\n        className=\"app-menu-button d-inline-block d-xl-none\"\n        onClick={() => setIsOpen(!isOpen)}\n      >\n        <i className=\"simple-icon-options\" />\n      </NavLink>\n    </div>\n  );\n};\n\nexport default ApplicationMenu;\n"],"sourceRoot":""}