{"version":3,"file":"static/js/application-todo.2d9d4664.chunk.js","mappings":"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","sources":["components/common/ApplicationMenu.js","components/common/CustomSelectInput.js","containers/navs/Breadcrumb.js","components/applications/TodoListItem.js","containers/applications/AddNewTodoModal.js","containers/applications/TodoApplicationMenu.js","views/app/applications/todo.js","../node_modules/reactstrap/es/Breadcrumb.js","../node_modules/reactstrap/es/BreadcrumbItem.js","../node_modules/reactstrap/es/ButtonDropdown.js","../node_modules/reactstrap/es/Input.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport { NavLink } from 'reactstrap';\n\nconst ApplicationMenu = ({ children }) => {\n  const containerRef = useRef();\n  const [isOpen, setIsOpen] = useState(false);\n\n  const handleDocumentClick = (e) => {\n    if (isOpen) {\n      const container = containerRef.current;\n      if (container.contains(e.target) || container === e.target) {\n        return;\n      }\n      setIsOpen(false);\n    }\n  };\n\n  useEffect(() => {\n    ['click', 'touchstart'].forEach((event) =>\n      document.addEventListener(event, handleDocumentClick, false),\n    );\n\n    return () => {\n      ['click', 'touchstart'].forEach((event) =>\n        document.removeEventListener(event, handleDocumentClick, false),\n      );\n    };\n  }, [isOpen]);\n\n  return (\n    <div ref={containerRef} className={`app-menu ${isOpen ? 'shown' : ''}`}>\n      {children}\n      <NavLink\n        className=\"app-menu-button d-inline-block d-xl-none\"\n        onClick={() => setIsOpen(!isOpen)}\n      >\n        <i className=\"simple-icon-options\" />\n      </NavLink>\n    </div>\n  );\n};\n\nexport default ApplicationMenu;\n","import React from 'react';\nimport { components } from 'react-select';\n\nconst CustomSelectInput = (props) => {\n  const customProps = { ...props };\n  delete customProps.autoCorrect;\n  delete customProps.autoCapitalize;\n  return <components.Input {...customProps} />;\n};\n\nexport default CustomSelectInput;\n","import React from 'react';\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\nimport { NavLink } from 'react-router-dom';\nimport IntlMessages from 'helpers/IntlMessages';\nimport { adminRoot } from 'constants/defaultValues';\n\nconst getMenuTitle = (sub) => {\n  if (`/${sub}` === adminRoot) return <IntlMessages id=\"menu.home\" />;\n  return <IntlMessages id={`menu.${sub}`} />;\n};\n\nconst getUrl = (path, sub) => {\n  return path.split(sub)[0] + sub;\n};\n\nconst BreadcrumbContainer = ({ heading, match }) => {\n  return (\n    <>\n      {heading && (\n        <h1>\n          <IntlMessages id={heading} />\n        </h1>\n      )}\n      <BreadcrumbItems match={match} />\n    </>\n  );\n};\n\nconst BreadcrumbItems = ({ match }) => {\n  const path = match.path.substr(1);\n  let paths = path.split('/');\n  if (paths[paths.length - 1].indexOf(':') > -1) {\n    paths = paths.filter((x) => x.indexOf(':') === -1);\n  }\n  return (\n    <>\n      <Breadcrumb className=\"pt-0 breadcrumb-container d-none d-sm-block d-lg-inline-block\">\n        {paths.map((sub, index) => {\n          return (\n            <BreadcrumbItem key={index} active={paths.length === index + 1}>\n              {paths.length !== index + 1 ? (\n                <NavLink to={`/${getUrl(path, sub, index)}`}>\n                  {getMenuTitle(sub)}\n                </NavLink>\n              ) : (\n                getMenuTitle(sub)\n              )}\n            </BreadcrumbItem>\n          );\n        })}\n      </Breadcrumb>\n    </>\n  );\n};\n\nexport default BreadcrumbContainer;\n","import React from 'react';\nimport { Card, CardBody, Badge, CustomInput } from 'reactstrap';\nimport { NavLink } from 'react-router-dom';\n\nimport { Colxx } from '../common/CustomBootstrap';\n\nconst TodoListItem = ({ item, handleCheckChange, isSelected }) => {\n  return (\n    <Colxx xxs=\"12\">\n      <Card className=\"card d-flex mb-3\">\n        <div className=\"d-flex flex-grow-1 min-width-zero\">\n          <CardBody className=\"align-self-center d-flex flex-column flex-md-row justify-content-between min-width-zero align-items-md-center\">\n            <NavLink\n              to=\"#\"\n              location={{}}\n              id={`toggler${item.id}`}\n              className=\"list-item-heading mb-0 truncate w-40 w-xs-100  mb-1 mt-1\"\n            >\n              <i\n                className={`${\n                  item.status === 'COMPLETED'\n                    ? 'simple-icon-check heading-icon'\n                    : 'simple-icon-refresh heading-icon'\n                }`}\n              />\n              <span className=\"align-middle d-inline-block\">{item.title}</span>\n            </NavLink>\n            <p className=\"mb-1 text-muted text-small w-15 w-xs-100\">\n              {item.category}\n            </p>\n            <p className=\"mb-1 text-muted text-small w-15 w-xs-100\">\n              {item.createDate}\n            </p>\n            <div className=\"w-15 w-xs-100\">\n              <Badge color={item.labelColor} pill>\n                {item.label}\n              </Badge>\n            </div>\n          </CardBody>\n          <div className=\"custom-control custom-checkbox pl-1 align-self-center mr-4\">\n            <CustomInput\n              className=\"itemCheck mb-0\"\n              type=\"checkbox\"\n              id={`check_${item.id}`}\n              checked={isSelected}\n              onChange={(event) => handleCheckChange(event, item.id)}\n              label=\"\"\n            />\n          </div>\n        </div>\n        <div className=\"card-body pt-1\">\n          <p className=\"mb-0\">{item.detail}</p>\n        </div>\n      </Card>\n    </Colxx>\n  );\n};\n\nexport default React.memo(TodoListItem);\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport {\n  CustomInput,\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Input,\n  Label,\n} from 'reactstrap';\nimport Select from 'react-select';\nimport CustomSelectInput from 'components/common/CustomSelectInput';\nimport IntlMessages from 'helpers/IntlMessages';\n\nimport { addTodoItem } from 'redux/actions';\n\nconst initialState = {\n  title: '',\n  detail: '',\n  label: {},\n  category: {},\n  status: 'PENDING',\n};\n\nconst AddNewTodoModal = ({\n  modalOpen,\n  toggleModal,\n  labels,\n  categories,\n  addTodoItemAction,\n}) => {\n  const [state, setState] = useState(initialState);\n\n  const addNetItem = () => {\n    const newItem = {\n      title: state.title,\n      detail: state.detail,\n      label: state.label.value,\n      labelColor: state.label.color,\n      category: state.category.value,\n      status: state.status,\n    };\n    addTodoItemAction(newItem);\n    toggleModal();\n    setState(initialState);\n  };\n\n  return (\n    <Modal\n      isOpen={modalOpen}\n      toggle={toggleModal}\n      wrapClassName=\"modal-right\"\n      backdrop=\"static\"\n    >\n      <ModalHeader toggle={toggleModal}>\n        <IntlMessages id=\"todo.add-new-title\" />\n      </ModalHeader>\n      <ModalBody>\n        <Label className=\"mt-4\">\n          <IntlMessages id=\"todo.title\" />\n        </Label>\n        <Input\n          type=\"text\"\n          defaultValue={state.title}\n          onChange={(event) =>\n            setState({ ...state, title: event.target.value })\n          }\n        />\n        <Label className=\"mt-4\">\n          <IntlMessages id=\"todo.detail\" />\n        </Label>\n        <Input\n          type=\"textarea\"\n          defaultValue={state.detail}\n          onChange={(event) =>\n            setState({ ...state, detail: event.target.value })\n          }\n        />\n\n        <Label className=\"mt-4\">\n          <IntlMessages id=\"todo.category\" />\n        </Label>\n        <Select\n          components={{ Input: CustomSelectInput }}\n          className=\"react-select\"\n          classNamePrefix=\"react-select\"\n          name=\"form-field-name\"\n          options={categories.map((x, i) => {\n            return { label: x, value: x, key: i };\n          })}\n          value={state.category}\n          onChange={(val) => setState({ ...state, category: val })}\n        />\n        <Label className=\"mt-4\">\n          <IntlMessages id=\"todo.label\" />\n        </Label>\n        <Select\n          components={{ Input: CustomSelectInput }}\n          className=\"react-select\"\n          classNamePrefix=\"react-select\"\n          name=\"form-field-name\"\n          options={labels.map((x, i) => {\n            return {\n              label: x.label,\n              value: x.label,\n              key: i,\n              color: x.color,\n            };\n          })}\n          value={state.label}\n          onChange={(val) => setState({ ...state, label: val })}\n        />\n\n        <Label className=\"mt-4\">\n          <IntlMessages id=\"todo.status\" />\n        </Label>\n        <CustomInput\n          type=\"radio\"\n          id=\"exCustomRadio\"\n          name=\"customRadio\"\n          label=\"COMPLETED\"\n          checked={state.status === 'COMPLETED'}\n          onChange={(event) =>\n            setState({\n              ...state,\n              status: event.target.value === 'on' ? 'COMPLETED' : 'PENDING',\n            })\n          }\n        />\n        <CustomInput\n          type=\"radio\"\n          id=\"exCustomRadio2\"\n          name=\"customRadio2\"\n          label=\"PENDING\"\n          defaultChecked={state.status === 'PENDING'}\n          onChange={(event) =>\n            setState({\n              ...state,\n              status: event.target.value !== 'on' ? 'COMPLETED' : 'PENDING',\n            })\n          }\n        />\n      </ModalBody>\n      <ModalFooter>\n        <Button color=\"secondary\" outline onClick={toggleModal}>\n          <IntlMessages id=\"todo.cancel\" />\n        </Button>\n        <Button color=\"primary\" onClick={() => addNetItem()}>\n          <IntlMessages id=\"todo.submit\" />\n        </Button>{' '}\n      </ModalFooter>\n    </Modal>\n  );\n};\n\nconst mapStateToProps = ({ todoApp }) => {\n  const { labels, categories } = todoApp;\n  return {\n    labels,\n    categories,\n  };\n};\nexport default connect(mapStateToProps, {\n  addTodoItemAction: addTodoItem,\n})(AddNewTodoModal);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { NavItem, Badge } from 'reactstrap';\nimport { NavLink } from 'react-router-dom';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport classnames from 'classnames';\n\nimport IntlMessages from 'helpers/IntlMessages';\nimport ApplicationMenu from 'components/common/ApplicationMenu';\nimport { getTodoListWithFilter } from 'redux/actions';\n\nconst TodoApplicationMenu = ({\n  todoItems,\n  filter,\n  allTodoItems,\n  loading,\n  labels,\n  categories,\n  getTodoListWithFilterAction,\n}) => {\n  const addFilter = (column, value) => {\n    getTodoListWithFilterAction(column, value);\n  };\n\n  return (\n    <ApplicationMenu>\n      <PerfectScrollbar\n        options={{ suppressScrollX: true, wheelPropagation: false }}\n      >\n        <div className=\"p-4\">\n          <p className=\"text-muted text-small\">\n            <IntlMessages id=\"todo.status\" />\n          </p>\n          <ul className=\"list-unstyled mb-5\">\n            <NavItem className={classnames({ active: !filter })}>\n              <NavLink to=\"#\" onClick={() => addFilter('', '')} location={{}}>\n                <i className=\"simple-icon-reload\" />\n                <IntlMessages id=\"todo.all-tasks\" />\n                <span className=\"float-right\">\n                  {loading && allTodoItems.length}\n                </span>\n              </NavLink>\n            </NavItem>\n            <NavItem\n              className={classnames({\n                active:\n                  filter &&\n                  filter.column === 'status' &&\n                  filter.value === 'PENDING',\n              })}\n            >\n              <NavLink\n                location={{}}\n                to=\"#\"\n                onClick={() => addFilter('status', 'PENDING')}\n              >\n                <i className=\"simple-icon-refresh\" />\n                <IntlMessages id=\"todo.pending-tasks\" />\n                <span className=\"float-right\">\n                  {loading &&\n                    todoItems.filter((x) => x.status === 'PENDING').length}\n                </span>\n              </NavLink>\n            </NavItem>\n            <NavItem\n              className={classnames({\n                active:\n                  filter &&\n                  filter.column === 'status' &&\n                  filter.value === 'COMPLETED',\n              })}\n            >\n              <NavLink\n                to=\"#\"\n                location={{}}\n                onClick={() => addFilter('status', 'COMPLETED')}\n              >\n                <i className=\"simple-icon-check\" />\n                <IntlMessages id=\"todo.completed-tasks\" />\n                <span className=\"float-right\">\n                  {loading &&\n                    todoItems.filter((x) => x.status === 'COMPLETED').length}\n                </span>\n              </NavLink>\n            </NavItem>\n          </ul>\n          <p className=\"text-muted text-small\">\n            <IntlMessages id=\"todo.categories\" />\n          </p>\n          <ul className=\"list-unstyled mb-5\">\n            {categories.map((c, index) => {\n              return (\n                <NavItem key={index}>\n                  <div onClick={() => addFilter('category', c)}>\n                    <div className=\"custom-control custom-radio\">\n                      <input\n                        type=\"radio\"\n                        className=\"custom-control-input\"\n                        defaultChecked={\n                          filter &&\n                          filter.column === 'category' &&\n                          filter.value === c\n                        }\n                      />\n                      <label className=\"custom-control-label\">{c}</label>\n                    </div>\n                  </div>\n                </NavItem>\n              );\n            })}\n          </ul>\n          <p className=\"text-muted text-small\">\n            <IntlMessages id=\"todo.labels\" />\n          </p>\n          <div>\n            {labels.map((l, index) => {\n              return (\n                <p className=\"d-sm-inline-block mb-1\" key={index}>\n                  <NavLink\n                    to=\"#\"\n                    location={{}}\n                    onClick={() => addFilter('label', l.label)}\n                  >\n                    <Badge\n                      className=\"mb-1\"\n                      color={`${\n                        filter &&\n                        filter.column === 'label' &&\n                        filter.value === l.label\n                          ? l.color\n                          : `outline-${l.color}`\n                      }`}\n                      pill\n                    >\n                      {l.label}\n                    </Badge>\n                  </NavLink>\n                </p>\n              );\n            })}\n          </div>\n        </div>\n      </PerfectScrollbar>\n    </ApplicationMenu>\n  );\n};\n\nconst mapStateToProps = ({ todoApp }) => {\n  const { todoItems, filter, allTodoItems, loading, labels, categories } =\n    todoApp;\n\n  return {\n    todoItems,\n    filter,\n    allTodoItems,\n    loading,\n    labels,\n    categories,\n  };\n};\nexport default connect(mapStateToProps, {\n  getTodoListWithFilterAction: getTodoListWithFilter,\n})(TodoApplicationMenu);\n","import React, { useState, useEffect } from 'react';\nimport {\n  Row,\n  Button,\n  UncontrolledDropdown,\n  DropdownToggle,\n  DropdownItem,\n  DropdownMenu,\n  Collapse,\n  ButtonDropdown,\n  CustomInput,\n} from 'reactstrap';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\n\nimport IntlMessages from 'helpers/IntlMessages';\nimport { Colxx, Separator } from 'components/common/CustomBootstrap';\nimport Breadcrumb from 'containers/navs/Breadcrumb';\n\nimport {\n  getTodoList,\n  getTodoListWithOrder,\n  getTodoListSearch,\n  selectedTodoItemsChange,\n} from 'redux/actions';\nimport TodoListItem from 'components/applications/TodoListItem';\nimport AddNewTodoModal from 'containers/applications/AddNewTodoModal';\nimport TodoApplicationMenu from 'containers/applications/TodoApplicationMenu';\n\nconst getIndex = (value, arr, prop) => {\n  for (let i = 0; i < arr.length; i += 1) {\n    if (arr[i][prop] === value) {\n      return i;\n    }\n  }\n  return -1;\n};\n\nconst TodoApp = ({\n  match,\n  intl,\n  todoItems,\n  searchKeyword,\n  loading,\n  orderColumn,\n  orderColumns,\n  selectedItems,\n  getTodoListAction,\n  getTodoListWithOrderAction,\n  getTodoListSearchAction,\n  selectedTodoItemsChangeAction,\n}) => {\n  const [modalOpen, setModalOpen] = useState(false);\n  const [dropdownSplitOpen, setDropdownSplitOpen] = useState(false);\n  const [displayOptionsIsOpen, setDisplayOptionsIsOpen] = useState(false);\n  const [lastChecked, setLastChecked] = useState(null);\n\n  useEffect(() => {\n    document.body.classList.add('right-menu');\n    getTodoListAction();\n\n    return () => {\n      document.body.classList.remove('right-menu');\n    };\n  }, [getTodoListAction]);\n\n  const handleCheckChange = (event, id) => {\n    if (lastChecked == null) {\n      setLastChecked(id);\n    }\n\n    let selectedList = Object.assign([], selectedItems);\n    if (selectedList.includes(id)) {\n      selectedList = selectedList.filter((x) => x !== id);\n    } else {\n      selectedList.push(id);\n    }\n    selectedTodoItemsChangeAction(selectedList);\n\n    if (event.shiftKey) {\n      let items = todoItems;\n      const start = getIndex(id, items, 'id');\n      const end = getIndex(lastChecked, items, 'id');\n      items = items.slice(Math.min(start, end), Math.max(start, end) + 1);\n      selectedList.push(\n        ...items.map((item) => {\n          return item.id;\n        }),\n      );\n      selectedList = Array.from(new Set(selectedList));\n      selectedTodoItemsChangeAction(selectedList);\n    }\n  };\n\n  const handleChangeSelectAll = () => {\n    if (loading) {\n      if (selectedItems.length >= todoItems.length) {\n        selectedTodoItemsChangeAction([]);\n      } else {\n        selectedTodoItemsChangeAction(todoItems.map((x) => x.id));\n      }\n    }\n  };\n\n  const { messages } = intl;\n\n  return (\n    <>\n      <Row className=\"app-row survey-app\">\n        <Colxx xxs=\"12\">\n          <div className=\"mb-2\">\n            <h1>\n              <IntlMessages id=\"menu.todo\" />\n            </h1>\n            {loading && (\n              <div className=\"text-zero top-right-button-container\">\n                <Button\n                  color=\"primary\"\n                  size=\"lg\"\n                  className=\"top-right-button\"\n                  onClick={() => setModalOpen(true)}\n                >\n                  <IntlMessages id=\"todo.add-new\" />\n                </Button>{' '}\n                <ButtonDropdown\n                  isOpen={dropdownSplitOpen}\n                  toggle={() => setDropdownSplitOpen(!dropdownSplitOpen)}\n                >\n                  <div className=\"btn btn-primary btn-lg pl-4 pr-0 check-button check-all\">\n                    <CustomInput\n                      className=\"custom-checkbox mb-0 d-inline-block\"\n                      type=\"checkbox\"\n                      id=\"checkAll\"\n                      checked={selectedItems.length >= todoItems.length}\n                      onClick={() => handleChangeSelectAll()}\n                      onChange={() => handleChangeSelectAll()}\n                      label={\n                        <span\n                          className={`custom-control-label ${\n                            selectedItems.length > 0 &&\n                            selectedItems.length < todoItems.length\n                              ? 'indeterminate'\n                              : ''\n                          }`}\n                        />\n                      }\n                    />\n                  </div>\n                  <DropdownToggle\n                    caret\n                    color=\"primary\"\n                    className=\"dropdown-toggle-split btn-lg\"\n                  />\n                  <DropdownMenu right>\n                    <DropdownItem>\n                      <IntlMessages id=\"todo.action\" />\n                    </DropdownItem>\n                    <DropdownItem>\n                      <IntlMessages id=\"todo.another-action\" />\n                    </DropdownItem>\n                  </DropdownMenu>\n                </ButtonDropdown>\n              </div>\n            )}\n            <Breadcrumb match={match} />\n          </div>\n\n          <div className=\"mb-2\">\n            <Button\n              color=\"empty\"\n              className=\"pt-0 pl-0 d-inline-block d-md-none\"\n              onClick={() => setDisplayOptionsIsOpen(!displayOptionsIsOpen)}\n            >\n              <IntlMessages id=\"todo.display-options\" />{' '}\n              <i className=\"simple-icon-arrow-down align-middle\" />\n            </Button>\n            <Collapse\n              id=\"displayOptions\"\n              className=\"d-md-block\"\n              isOpen={displayOptionsIsOpen}\n            >\n              <div className=\"d-block mb-2 d-md-inline-block\">\n                <UncontrolledDropdown className=\"mr-1 float-md-left btn-group mb-1\">\n                  <DropdownToggle caret color=\"outline-dark\" size=\"xs\">\n                    <IntlMessages id=\"todo.orderby\" />\n                    {orderColumn ? orderColumn.label : ''}\n                  </DropdownToggle>\n                  <DropdownMenu>\n                    {orderColumns.map((o, index) => {\n                      return (\n                        <DropdownItem\n                          key={index}\n                          onClick={() => getTodoListWithOrderAction(o.column)}\n                        >\n                          {o.label}\n                        </DropdownItem>\n                      );\n                    })}\n                  </DropdownMenu>\n                </UncontrolledDropdown>\n                <div className=\"search-sm d-inline-block float-md-left mr-1 mb-1 align-top\">\n                  <input\n                    type=\"text\"\n                    name=\"keyword\"\n                    id=\"search\"\n                    placeholder={messages['menu.search']}\n                    defaultValue={searchKeyword}\n                    onKeyPress={(e) => {\n                      if (e.key === 'Enter') {\n                        getTodoListSearchAction(e.target.value);\n                      }\n                    }}\n                  />\n                </div>\n              </div>\n            </Collapse>\n          </div>\n          <Separator className=\"mb-5\" />\n          <Row>\n            {loading ? (\n              todoItems.map((item, index) => (\n                <TodoListItem\n                  key={`todo_item_${index}`}\n                  item={item}\n                  handleCheckChange={handleCheckChange}\n                  isSelected={loading ? selectedItems.includes(item.id) : false}\n                />\n              ))\n            ) : (\n              <div className=\"loading\" />\n            )}\n          </Row>\n        </Colxx>\n      </Row>\n      {loading && <TodoApplicationMenu />}\n      <AddNewTodoModal\n        toggleModal={() => setModalOpen(!modalOpen)}\n        modalOpen={modalOpen}\n      />\n    </>\n  );\n};\n\nconst mapStateToProps = ({ todoApp }) => {\n  const {\n    todoItems,\n    searchKeyword,\n    loading,\n    orderColumn,\n    orderColumns,\n    selectedItems,\n  } = todoApp;\n  return {\n    todoItems,\n    searchKeyword,\n    loading,\n    orderColumn,\n    orderColumns,\n    selectedItems,\n  };\n};\nexport default injectIntl(\n  connect(mapStateToProps, {\n    getTodoListAction: getTodoList,\n    getTodoListWithOrderAction: getTodoListWithOrder,\n    getTodoListSearchAction: getTodoListSearch,\n    selectedTodoItemsChangeAction: selectedTodoItemsChange,\n  })(TodoApp),\n);\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"listClassName\", \"cssModule\", \"children\", \"tag\", \"listTag\", \"aria-label\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  listTag: tagPropType,\n  className: PropTypes.string,\n  listClassName: PropTypes.string,\n  cssModule: PropTypes.object,\n  children: PropTypes.node,\n  'aria-label': PropTypes.string\n};\nvar defaultProps = {\n  tag: 'nav',\n  listTag: 'ol',\n  'aria-label': 'breadcrumb'\n};\n\nvar Breadcrumb = function Breadcrumb(props) {\n  var className = props.className,\n      listClassName = props.listClassName,\n      cssModule = props.cssModule,\n      children = props.children,\n      Tag = props.tag,\n      ListTag = props.listTag,\n      label = props['aria-label'],\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var classes = mapToCssModules(classNames(className), cssModule);\n  var listClasses = mapToCssModules(classNames('breadcrumb', listClassName), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    \"aria-label\": label\n  }), /*#__PURE__*/React.createElement(ListTag, {\n    className: listClasses\n  }, children));\n};\n\nBreadcrumb.propTypes = propTypes;\nBreadcrumb.defaultProps = defaultProps;\nexport default Breadcrumb;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"active\", \"tag\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  active: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'li'\n};\n\nvar BreadcrumbItem = function BreadcrumbItem(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      active = props.active,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var classes = mapToCssModules(classNames(className, active ? 'active' : false, 'breadcrumb-item'), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    \"aria-current\": active ? 'page' : undefined\n  }));\n};\n\nBreadcrumbItem.propTypes = propTypes;\nBreadcrumbItem.defaultProps = defaultProps;\nexport default BreadcrumbItem;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Dropdown from './Dropdown';\nvar propTypes = {\n  children: PropTypes.node\n};\n\nvar ButtonDropdown = function ButtonDropdown(props) {\n  return /*#__PURE__*/React.createElement(Dropdown, _extends({\n    group: true\n  }, props));\n};\n\nButtonDropdown.propTypes = propTypes;\nexport default ButtonDropdown;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"type\", \"bsSize\", \"valid\", \"invalid\", \"tag\", \"addon\", \"plaintext\", \"innerRef\"];\n\n/* eslint react/prefer-stateless-function: 0 */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, warnOnce, tagPropType } from './utils';\nvar propTypes = {\n  children: PropTypes.node,\n  type: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  bsSize: PropTypes.string,\n  valid: PropTypes.bool,\n  invalid: PropTypes.bool,\n  tag: tagPropType,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.func, PropTypes.string]),\n  plaintext: PropTypes.bool,\n  addon: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  type: 'text'\n};\n\nvar Input = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(Input, _React$Component);\n\n  function Input(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n    _this.getRef = _this.getRef.bind(_assertThisInitialized(_this));\n    _this.focus = _this.focus.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  var _proto = Input.prototype;\n\n  _proto.getRef = function getRef(ref) {\n    if (this.props.innerRef) {\n      this.props.innerRef(ref);\n    }\n\n    this.ref = ref;\n  };\n\n  _proto.focus = function focus() {\n    if (this.ref) {\n      this.ref.focus();\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        className = _this$props.className,\n        cssModule = _this$props.cssModule,\n        type = _this$props.type,\n        bsSize = _this$props.bsSize,\n        valid = _this$props.valid,\n        invalid = _this$props.invalid,\n        tag = _this$props.tag,\n        addon = _this$props.addon,\n        plaintext = _this$props.plaintext,\n        innerRef = _this$props.innerRef,\n        attributes = _objectWithoutPropertiesLoose(_this$props, _excluded);\n\n    var checkInput = ['radio', 'checkbox'].indexOf(type) > -1;\n    var isNotaNumber = new RegExp('\\\\D', 'g');\n    var fileInput = type === 'file';\n    var textareaInput = type === 'textarea';\n    var selectInput = type === 'select';\n    var rangeInput = type === 'range';\n    var Tag = tag || (selectInput || textareaInput ? type : 'input');\n    var formControlClass = 'form-control';\n\n    if (plaintext) {\n      formControlClass = formControlClass + \"-plaintext\";\n      Tag = tag || 'input';\n    } else if (fileInput) {\n      formControlClass = formControlClass + \"-file\";\n    } else if (rangeInput) {\n      formControlClass = formControlClass + \"-range\";\n    } else if (checkInput) {\n      if (addon) {\n        formControlClass = null;\n      } else {\n        formControlClass = 'form-check-input';\n      }\n    }\n\n    if (attributes.size && isNotaNumber.test(attributes.size)) {\n      warnOnce('Please use the prop \"bsSize\" instead of the \"size\" to bootstrap\\'s input sizing.');\n      bsSize = attributes.size;\n      delete attributes.size;\n    }\n\n    var classes = mapToCssModules(classNames(className, invalid && 'is-invalid', valid && 'is-valid', bsSize ? \"form-control-\" + bsSize : false, formControlClass), cssModule);\n\n    if (Tag === 'input' || tag && typeof tag === 'function') {\n      attributes.type = type;\n    }\n\n    if (attributes.children && !(plaintext || type === 'select' || typeof Tag !== 'string' || Tag === 'select')) {\n      warnOnce(\"Input with a type of \\\"\" + type + \"\\\" cannot have children. Please use \\\"value\\\"/\\\"defaultValue\\\" instead.\");\n      delete attributes.children;\n    }\n\n    return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n      ref: innerRef,\n      className: classes,\n      \"aria-invalid\": invalid\n    }));\n  };\n\n  return Input;\n}(React.Component);\n\nInput.propTypes = propTypes;\nInput.defaultProps = defaultProps;\nexport default Input;"],"names":["_ref","children","containerRef","useRef","_useState","useState","_useState2","_slicedToArray","isOpen","setIsOpen","handleDocumentClick","e","container","current","contains","target","useEffect","forEach","event","document","addEventListener","removeEventListener","_jsxs","ref","className","concat","_jsx","NavLink","onClick","props","customProps","_objectSpread","autoCorrect","autoCapitalize","components","Input","getMenuTitle","sub","adminRoot","IntlMessages","id","getUrl","path","split","BreadcrumbItems","_ref2","match","substr","paths","length","indexOf","filter","x","_Fragment","Breadcrumb","map","index","BreadcrumbItem","active","to","heading","TodoListItem","item","handleCheckChange","isSelected","Colxx","xxs","Card","CardBody","location","status","title","category","createDate","Badge","color","labelColor","pill","label","CustomInput","type","checked","onChange","detail","React","initialState","connect","todoApp","labels","categories","addTodoItemAction","addTodoItem","modalOpen","toggleModal","state","setState","Modal","toggle","wrapClassName","backdrop","ModalHeader","ModalBody","Label","defaultValue","value","Select","CustomSelectInput","classNamePrefix","name","options","i","key","val","defaultChecked","ModalFooter","Button","outline","newItem","addNetItem","todoItems","allTodoItems","loading","getTodoListWithFilterAction","getTodoListWithFilter","addFilter","column","ApplicationMenu","PerfectScrollbar","suppressScrollX","wheelPropagation","NavItem","classnames","c","l","getIndex","arr","prop","injectIntl","searchKeyword","orderColumn","orderColumns","selectedItems","getTodoListAction","getTodoList","getTodoListWithOrderAction","getTodoListWithOrder","getTodoListSearchAction","getTodoListSearch","selectedTodoItemsChangeAction","selectedTodoItemsChange","intl","setModalOpen","_useState3","_useState4","dropdownSplitOpen","setDropdownSplitOpen","_useState5","_useState6","displayOptionsIsOpen","setDisplayOptionsIsOpen","_useState7","_useState8","lastChecked","setLastChecked","body","classList","add","remove","selectedList","Object","assign","includes","push","shiftKey","_selectedList","items","start","end","slice","Math","min","max","apply","_toConsumableArray","Array","from","Set","handleChangeSelectAll","messages","Row","size","ButtonDropdown","DropdownToggle","caret","DropdownMenu","right","DropdownItem","Collapse","UncontrolledDropdown","o","placeholder","onKeyPress","Separator","TodoApplicationMenu","AddNewTodoModal","_excluded","propTypes","tag","tagPropType","listTag","PropTypes","listClassName","cssModule","Tag","ListTag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","listClasses","_extends","defaultProps","undefined","Dropdown","group","bsSize","valid","invalid","innerRef","plaintext","addon","_React$Component","_this","call","this","getRef","bind","_assertThisInitialized","focus","_inheritsLoose","_proto","prototype","render","_this$props","checkInput","isNotaNumber","RegExp","formControlClass","test","warnOnce"],"sourceRoot":""}