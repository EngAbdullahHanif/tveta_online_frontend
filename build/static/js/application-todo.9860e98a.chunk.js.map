{"version":3,"sources":["components/applications/TodoListItem.js","containers/applications/AddNewTodoModal.js","containers/applications/TodoApplicationMenu.js","views/app/applications/todo.js","containers/navs/Breadcrumb.js","components/common/CustomSelectInput.js","../node_modules/reactstrap/es/Breadcrumb.js","../node_modules/reactstrap/es/BreadcrumbItem.js","../node_modules/reactstrap/es/ButtonDropdown.js","../node_modules/reactstrap/es/Input.js","components/common/ApplicationMenu.js"],"names":["TodoListItem","_ref","item","handleCheckChange","isSelected","_jsx","Colxx","xxs","children","_jsxs","Card","className","CardBody","NavLink","to","location","id","concat","status","title","category","createDate","Badge","color","labelColor","pill","label","CustomInput","type","checked","onChange","event","detail","React","memo","initialState","connect","_ref2","todoApp","labels","categories","addTodoItemAction","addTodoItem","modalOpen","toggleModal","_useState","useState","_useState2","_slicedToArray","state","setState","Modal","isOpen","toggle","wrapClassName","backdrop","ModalHeader","IntlMessages","ModalBody","Label","Input","defaultValue","_objectSpread","target","value","Select","components","CustomSelectInput","classNamePrefix","name","options","map","x","i","key","val","defaultChecked","ModalFooter","Button","outline","onClick","newItem","addNetItem","todoItems","filter","allTodoItems","loading","getTodoListWithFilterAction","getTodoListWithFilter","addFilter","column","ApplicationMenu","PerfectScrollbar","suppressScrollX","wheelPropagation","NavItem","classnames","active","length","c","index","l","getIndex","arr","prop","injectIntl","searchKeyword","orderColumn","orderColumns","selectedItems","getTodoListAction","getTodoList","getTodoListWithOrderAction","getTodoListWithOrder","getTodoListSearchAction","getTodoListSearch","selectedTodoItemsChangeAction","selectedTodoItemsChange","match","intl","setModalOpen","_useState3","_useState4","dropdownSplitOpen","setDropdownSplitOpen","_useState5","_useState6","displayOptionsIsOpen","setDisplayOptionsIsOpen","_useState7","_useState8","lastChecked","setLastChecked","useEffect","document","body","classList","add","remove","selectedList","Object","assign","includes","push","shiftKey","_selectedList","items","start","end","slice","Math","min","max","apply","_toConsumableArray","Array","from","Set","handleChangeSelectAll","messages","_Fragment","Row","size","ButtonDropdown","DropdownToggle","caret","DropdownMenu","right","DropdownItem","Breadcrumb","Collapse","UncontrolledDropdown","o","placeholder","onKeyPress","e","Separator","TodoApplicationMenu","AddNewTodoModal","getMenuTitle","sub","adminRoot","getUrl","path","split","BreadcrumbItems","substr","paths","indexOf","BreadcrumbItem","BreadcrumbContainer","heading","props","customProps","autoCorrect","autoCapitalize","propTypes","tag","tagPropType","listTag","PropTypes","string","listClassName","cssModule","object","node","Tag","ListTag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","listClasses","createElement","_extends","defaultProps","bool","undefined","Dropdown","group","oneOfType","number","bsSize","valid","invalid","innerRef","func","plaintext","addon","_React$Component","_this","call","this","getRef","bind","_assertThisInitialized","focus","_inheritsLoose","_proto","prototype","ref","render","_this$props","checkInput","isNotaNumber","RegExp","formControlClass","test","warnOnce","Component","containerRef","useRef","setIsOpen","handleDocumentClick","container","current","contains","forEach","addEventListener","removeEventListener"],"mappings":"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","file":"static/js/application-todo.9860e98a.chunk.js","sourcesContent":["import React from 'react';\nimport { Card, CardBody, Badge, CustomInput } from 'reactstrap';\nimport { NavLink } from 'react-router-dom';\n\nimport { Colxx } from '../common/CustomBootstrap';\n\nconst TodoListItem = ({ item, handleCheckChange, isSelected }) => {\n  return (\n    <Colxx xxs=\"12\">\n      <Card className=\"card d-flex mb-3\">\n        <div className=\"d-flex flex-grow-1 min-width-zero\">\n          <CardBody className=\"align-self-center d-flex flex-column flex-md-row justify-content-between min-width-zero align-items-md-center\">\n            <NavLink\n              to=\"#\"\n              location={{}}\n              id={`toggler${item.id}`}\n              className=\"list-item-heading mb-0 truncate w-40 w-xs-100  mb-1 mt-1\"\n            >\n              <i\n                className={`${\n                  item.status === 'COMPLETED'\n                    ? 'simple-icon-check heading-icon'\n                    : 'simple-icon-refresh heading-icon'\n                }`}\n              />\n              <span className=\"align-middle d-inline-block\">{item.title}</span>\n            </NavLink>\n            <p className=\"mb-1 text-muted text-small w-15 w-xs-100\">\n              {item.category}\n            </p>\n            <p className=\"mb-1 text-muted text-small w-15 w-xs-100\">\n              {item.createDate}\n            </p>\n            <div className=\"w-15 w-xs-100\">\n              <Badge color={item.labelColor} pill>\n                {item.label}\n              </Badge>\n            </div>\n          </CardBody>\n          <div className=\"custom-control custom-checkbox pl-1 align-self-center mr-4\">\n            <CustomInput\n              className=\"itemCheck mb-0\"\n              type=\"checkbox\"\n              id={`check_${item.id}`}\n              checked={isSelected}\n              onChange={(event) => handleCheckChange(event, item.id)}\n              label=\"\"\n            />\n          </div>\n        </div>\n        <div className=\"card-body pt-1\">\n          <p className=\"mb-0\">{item.detail}</p>\n        </div>\n      </Card>\n    </Colxx>\n  );\n};\n\nexport default React.memo(TodoListItem);\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport {\n  CustomInput,\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Input,\n  Label,\n} from 'reactstrap';\nimport Select from 'react-select';\nimport CustomSelectInput from 'components/common/CustomSelectInput';\nimport IntlMessages from 'helpers/IntlMessages';\n\nimport { addTodoItem } from 'redux/actions';\n\nconst initialState = {\n  title: '',\n  detail: '',\n  label: {},\n  category: {},\n  status: 'PENDING',\n};\n\nconst AddNewTodoModal = ({\n  modalOpen,\n  toggleModal,\n  labels,\n  categories,\n  addTodoItemAction,\n}) => {\n  const [state, setState] = useState(initialState);\n\n  const addNetItem = () => {\n    const newItem = {\n      title: state.title,\n      detail: state.detail,\n      label: state.label.value,\n      labelColor: state.label.color,\n      category: state.category.value,\n      status: state.status,\n    };\n    addTodoItemAction(newItem);\n    toggleModal();\n    setState(initialState);\n  };\n\n  return (\n    <Modal\n      isOpen={modalOpen}\n      toggle={toggleModal}\n      wrapClassName=\"modal-right\"\n      backdrop=\"static\"\n    >\n      <ModalHeader toggle={toggleModal}>\n        <IntlMessages id=\"todo.add-new-title\" />\n      </ModalHeader>\n      <ModalBody>\n        <Label className=\"mt-4\">\n          <IntlMessages id=\"todo.title\" />\n        </Label>\n        <Input\n          type=\"text\"\n          defaultValue={state.title}\n          onChange={(event) =>\n            setState({ ...state, title: event.target.value })\n          }\n        />\n        <Label className=\"mt-4\">\n          <IntlMessages id=\"todo.detail\" />\n        </Label>\n        <Input\n          type=\"textarea\"\n          defaultValue={state.detail}\n          onChange={(event) =>\n            setState({ ...state, detail: event.target.value })\n          }\n        />\n\n        <Label className=\"mt-4\">\n          <IntlMessages id=\"todo.category\" />\n        </Label>\n        <Select\n          components={{ Input: CustomSelectInput }}\n          className=\"react-select\"\n          classNamePrefix=\"react-select\"\n          name=\"form-field-name\"\n          options={categories.map((x, i) => {\n            return { label: x, value: x, key: i };\n          })}\n          value={state.category}\n          onChange={(val) => setState({ ...state, category: val })}\n        />\n        <Label className=\"mt-4\">\n          <IntlMessages id=\"todo.label\" />\n        </Label>\n        <Select\n          components={{ Input: CustomSelectInput }}\n          className=\"react-select\"\n          classNamePrefix=\"react-select\"\n          name=\"form-field-name\"\n          options={labels.map((x, i) => {\n            return {\n              label: x.label,\n              value: x.label,\n              key: i,\n              color: x.color,\n            };\n          })}\n          value={state.label}\n          onChange={(val) => setState({ ...state, label: val })}\n        />\n\n        <Label className=\"mt-4\">\n          <IntlMessages id=\"todo.status\" />\n        </Label>\n        <CustomInput\n          type=\"radio\"\n          id=\"exCustomRadio\"\n          name=\"customRadio\"\n          label=\"COMPLETED\"\n          checked={state.status === 'COMPLETED'}\n          onChange={(event) =>\n            setState({\n              ...state,\n              status: event.target.value === 'on' ? 'COMPLETED' : 'PENDING',\n            })\n          }\n        />\n        <CustomInput\n          type=\"radio\"\n          id=\"exCustomRadio2\"\n          name=\"customRadio2\"\n          label=\"PENDING\"\n          defaultChecked={state.status === 'PENDING'}\n          onChange={(event) =>\n            setState({\n              ...state,\n              status: event.target.value !== 'on' ? 'COMPLETED' : 'PENDING',\n            })\n          }\n        />\n      </ModalBody>\n      <ModalFooter>\n        <Button color=\"secondary\" outline onClick={toggleModal}>\n          <IntlMessages id=\"todo.cancel\" />\n        </Button>\n        <Button color=\"primary\" onClick={() => addNetItem()}>\n          <IntlMessages id=\"todo.submit\" />\n        </Button>{' '}\n      </ModalFooter>\n    </Modal>\n  );\n};\n\nconst mapStateToProps = ({ todoApp }) => {\n  const { labels, categories } = todoApp;\n  return {\n    labels,\n    categories,\n  };\n};\nexport default connect(mapStateToProps, {\n  addTodoItemAction: addTodoItem,\n})(AddNewTodoModal);\n","/* eslint-disable jsx-a11y/click-events-have-key-events */\n/* eslint-disable jsx-a11y/no-static-element-interactions */\n/* eslint-disable jsx-a11y/label-has-associated-control */\n/* eslint-disable jsx-a11y/label-has-for */\n/* eslint-disable react/no-array-index-key */\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { NavItem, Badge } from 'reactstrap';\nimport { NavLink } from 'react-router-dom';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport classnames from 'classnames';\n\nimport IntlMessages from 'helpers/IntlMessages';\nimport ApplicationMenu from 'components/common/ApplicationMenu';\nimport { getTodoListWithFilter } from 'redux/actions';\n\nconst TodoApplicationMenu = ({\n  todoItems,\n  filter,\n  allTodoItems,\n  loading,\n  labels,\n  categories,\n  getTodoListWithFilterAction,\n}) => {\n  const addFilter = (column, value) => {\n    getTodoListWithFilterAction(column, value);\n  };\n\n  return (\n    <ApplicationMenu>\n      <PerfectScrollbar\n        options={{ suppressScrollX: true, wheelPropagation: false }}\n      >\n        <div className=\"p-4\">\n          <p className=\"text-muted text-small\">\n            <IntlMessages id=\"todo.status\" />\n          </p>\n          <ul className=\"list-unstyled mb-5\">\n            <NavItem className={classnames({ active: !filter })}>\n              <NavLink to=\"#\" onClick={() => addFilter('', '')} location={{}}>\n                <i className=\"simple-icon-reload\" />\n                <IntlMessages id=\"todo.all-tasks\" />\n                <span className=\"float-right\">\n                  {loading && allTodoItems.length}\n                </span>\n              </NavLink>\n            </NavItem>\n            <NavItem\n              className={classnames({\n                active:\n                  filter &&\n                  filter.column === 'status' &&\n                  filter.value === 'PENDING',\n              })}\n            >\n              <NavLink\n                location={{}}\n                to=\"#\"\n                onClick={() => addFilter('status', 'PENDING')}\n              >\n                <i className=\"simple-icon-refresh\" />\n                <IntlMessages id=\"todo.pending-tasks\" />\n                <span className=\"float-right\">\n                  {loading &&\n                    todoItems.filter((x) => x.status === 'PENDING').length}\n                </span>\n              </NavLink>\n            </NavItem>\n            <NavItem\n              className={classnames({\n                active:\n                  filter &&\n                  filter.column === 'status' &&\n                  filter.value === 'COMPLETED',\n              })}\n            >\n              <NavLink\n                to=\"#\"\n                location={{}}\n                onClick={() => addFilter('status', 'COMPLETED')}\n              >\n                <i className=\"simple-icon-check\" />\n                <IntlMessages id=\"todo.completed-tasks\" />\n                <span className=\"float-right\">\n                  {loading &&\n                    todoItems.filter((x) => x.status === 'COMPLETED').length}\n                </span>\n              </NavLink>\n            </NavItem>\n          </ul>\n          <p className=\"text-muted text-small\">\n            <IntlMessages id=\"todo.categories\" />\n          </p>\n          <ul className=\"list-unstyled mb-5\">\n            {categories.map((c, index) => {\n              return (\n                <NavItem key={index}>\n                  <div onClick={() => addFilter('category', c)}>\n                    <div className=\"custom-control custom-radio\">\n                      <input\n                        type=\"radio\"\n                        className=\"custom-control-input\"\n                        defaultChecked={\n                          filter &&\n                          filter.column === 'category' &&\n                          filter.value === c\n                        }\n                      />\n                      <label className=\"custom-control-label\">{c}</label>\n                    </div>\n                  </div>\n                </NavItem>\n              );\n            })}\n          </ul>\n          <p className=\"text-muted text-small\">\n            <IntlMessages id=\"todo.labels\" />\n          </p>\n          <div>\n            {labels.map((l, index) => {\n              return (\n                <p className=\"d-sm-inline-block mb-1\" key={index}>\n                  <NavLink\n                    to=\"#\"\n                    location={{}}\n                    onClick={() => addFilter('label', l.label)}\n                  >\n                    <Badge\n                      className=\"mb-1\"\n                      color={`${\n                        filter &&\n                        filter.column === 'label' &&\n                        filter.value === l.label\n                          ? l.color\n                          : `outline-${l.color}`\n                      }`}\n                      pill\n                    >\n                      {l.label}\n                    </Badge>\n                  </NavLink>\n                </p>\n              );\n            })}\n          </div>\n        </div>\n      </PerfectScrollbar>\n    </ApplicationMenu>\n  );\n};\n\nconst mapStateToProps = ({ todoApp }) => {\n  const { todoItems, filter, allTodoItems, loading, labels, categories } =\n    todoApp;\n\n  return {\n    todoItems,\n    filter,\n    allTodoItems,\n    loading,\n    labels,\n    categories,\n  };\n};\nexport default connect(mapStateToProps, {\n  getTodoListWithFilterAction: getTodoListWithFilter,\n})(TodoApplicationMenu);\n","/* eslint-disable react/no-array-index-key */\nimport React, { useState, useEffect } from 'react';\nimport {\n  Row,\n  Button,\n  UncontrolledDropdown,\n  DropdownToggle,\n  DropdownItem,\n  DropdownMenu,\n  Collapse,\n  ButtonDropdown,\n  CustomInput,\n} from 'reactstrap';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\n\nimport IntlMessages from 'helpers/IntlMessages';\nimport { Colxx, Separator } from 'components/common/CustomBootstrap';\nimport Breadcrumb from 'containers/navs/Breadcrumb';\n\nimport {\n  getTodoList,\n  getTodoListWithOrder,\n  getTodoListSearch,\n  selectedTodoItemsChange,\n} from 'redux/actions';\nimport TodoListItem from 'components/applications/TodoListItem';\nimport AddNewTodoModal from 'containers/applications/AddNewTodoModal';\nimport TodoApplicationMenu from 'containers/applications/TodoApplicationMenu';\n\nconst getIndex = (value, arr, prop) => {\n  for (let i = 0; i < arr.length; i += 1) {\n    if (arr[i][prop] === value) {\n      return i;\n    }\n  }\n  return -1;\n};\n\nconst TodoApp = ({\n  match,\n  intl,\n  todoItems,\n  searchKeyword,\n  loading,\n  orderColumn,\n  orderColumns,\n  selectedItems,\n  getTodoListAction,\n  getTodoListWithOrderAction,\n  getTodoListSearchAction,\n  selectedTodoItemsChangeAction,\n}) => {\n  const [modalOpen, setModalOpen] = useState(false);\n  const [dropdownSplitOpen, setDropdownSplitOpen] = useState(false);\n  const [displayOptionsIsOpen, setDisplayOptionsIsOpen] = useState(false);\n  const [lastChecked, setLastChecked] = useState(null);\n\n  useEffect(() => {\n    document.body.classList.add('right-menu');\n    getTodoListAction();\n\n    return () => {\n      document.body.classList.remove('right-menu');\n    };\n  }, [getTodoListAction]);\n\n  const handleCheckChange = (event, id) => {\n    if (lastChecked == null) {\n      setLastChecked(id);\n    }\n\n    let selectedList = Object.assign([], selectedItems);\n    if (selectedList.includes(id)) {\n      selectedList = selectedList.filter((x) => x !== id);\n    } else {\n      selectedList.push(id);\n    }\n    selectedTodoItemsChangeAction(selectedList);\n\n    if (event.shiftKey) {\n      let items = todoItems;\n      const start = getIndex(id, items, 'id');\n      const end = getIndex(lastChecked, items, 'id');\n      items = items.slice(Math.min(start, end), Math.max(start, end) + 1);\n      selectedList.push(\n        ...items.map((item) => {\n          return item.id;\n        })\n      );\n      selectedList = Array.from(new Set(selectedList));\n      selectedTodoItemsChangeAction(selectedList);\n    }\n  };\n\n  const handleChangeSelectAll = () => {\n    if (loading) {\n      if (selectedItems.length >= todoItems.length) {\n        selectedTodoItemsChangeAction([]);\n      } else {\n        selectedTodoItemsChangeAction(todoItems.map((x) => x.id));\n      }\n    }\n  };\n\n  const { messages } = intl;\n\n  return (\n    <>\n      <Row className=\"app-row survey-app\">\n        <Colxx xxs=\"12\">\n          <div className=\"mb-2\">\n            <h1>\n              <IntlMessages id=\"menu.todo\" />\n            </h1>\n            {loading && (\n              <div className=\"text-zero top-right-button-container\">\n                <Button\n                  color=\"primary\"\n                  size=\"lg\"\n                  className=\"top-right-button\"\n                  onClick={() => setModalOpen(true)}\n                >\n                  <IntlMessages id=\"todo.add-new\" />\n                </Button>{' '}\n                <ButtonDropdown\n                  isOpen={dropdownSplitOpen}\n                  toggle={() => setDropdownSplitOpen(!dropdownSplitOpen)}\n                >\n                  <div className=\"btn btn-primary btn-lg pl-4 pr-0 check-button check-all\">\n                    <CustomInput\n                      className=\"custom-checkbox mb-0 d-inline-block\"\n                      type=\"checkbox\"\n                      id=\"checkAll\"\n                      checked={selectedItems.length >= todoItems.length}\n                      onClick={() => handleChangeSelectAll()}\n                      onChange={() => handleChangeSelectAll()}\n                      label={\n                        <span\n                          className={`custom-control-label ${\n                            selectedItems.length > 0 &&\n                            selectedItems.length < todoItems.length\n                              ? 'indeterminate'\n                              : ''\n                          }`}\n                        />\n                      }\n                    />\n                  </div>\n                  <DropdownToggle\n                    caret\n                    color=\"primary\"\n                    className=\"dropdown-toggle-split btn-lg\"\n                  />\n                  <DropdownMenu right>\n                    <DropdownItem>\n                      <IntlMessages id=\"todo.action\" />\n                    </DropdownItem>\n                    <DropdownItem>\n                      <IntlMessages id=\"todo.another-action\" />\n                    </DropdownItem>\n                  </DropdownMenu>\n                </ButtonDropdown>\n              </div>\n            )}\n            <Breadcrumb match={match} />\n          </div>\n\n          <div className=\"mb-2\">\n            <Button\n              color=\"empty\"\n              className=\"pt-0 pl-0 d-inline-block d-md-none\"\n              onClick={() => setDisplayOptionsIsOpen(!displayOptionsIsOpen)}\n            >\n              <IntlMessages id=\"todo.display-options\" />{' '}\n              <i className=\"simple-icon-arrow-down align-middle\" />\n            </Button>\n            <Collapse\n              id=\"displayOptions\"\n              className=\"d-md-block\"\n              isOpen={displayOptionsIsOpen}\n            >\n              <div className=\"d-block mb-2 d-md-inline-block\">\n                <UncontrolledDropdown className=\"mr-1 float-md-left btn-group mb-1\">\n                  <DropdownToggle caret color=\"outline-dark\" size=\"xs\">\n                    <IntlMessages id=\"todo.orderby\" />\n                    {orderColumn ? orderColumn.label : ''}\n                  </DropdownToggle>\n                  <DropdownMenu>\n                    {orderColumns.map((o, index) => {\n                      return (\n                        <DropdownItem\n                          key={index}\n                          onClick={() => getTodoListWithOrderAction(o.column)}\n                        >\n                          {o.label}\n                        </DropdownItem>\n                      );\n                    })}\n                  </DropdownMenu>\n                </UncontrolledDropdown>\n                <div className=\"search-sm d-inline-block float-md-left mr-1 mb-1 align-top\">\n                  <input\n                    type=\"text\"\n                    name=\"keyword\"\n                    id=\"search\"\n                    placeholder={messages['menu.search']}\n                    defaultValue={searchKeyword}\n                    onKeyPress={(e) => {\n                      if (e.key === 'Enter') {\n                        getTodoListSearchAction(e.target.value);\n                      }\n                    }}\n                  />\n                </div>\n              </div>\n            </Collapse>\n          </div>\n          <Separator className=\"mb-5\" />\n          <Row>\n            {loading ? (\n              todoItems.map((item, index) => (\n                <TodoListItem\n                  key={`todo_item_${index}`}\n                  item={item}\n                  handleCheckChange={handleCheckChange}\n                  isSelected={loading ? selectedItems.includes(item.id) : false}\n                />\n              ))\n            ) : (\n              <div className=\"loading\" />\n            )}\n          </Row>\n        </Colxx>\n      </Row>\n      {loading && <TodoApplicationMenu />}\n      <AddNewTodoModal\n        toggleModal={() => setModalOpen(!modalOpen)}\n        modalOpen={modalOpen}\n      />\n    </>\n  );\n};\n\nconst mapStateToProps = ({ todoApp }) => {\n  const {\n    todoItems,\n    searchKeyword,\n    loading,\n    orderColumn,\n    orderColumns,\n    selectedItems,\n  } = todoApp;\n  return {\n    todoItems,\n    searchKeyword,\n    loading,\n    orderColumn,\n    orderColumns,\n    selectedItems,\n  };\n};\nexport default injectIntl(\n  connect(mapStateToProps, {\n    getTodoListAction: getTodoList,\n    getTodoListWithOrderAction: getTodoListWithOrder,\n    getTodoListSearchAction: getTodoListSearch,\n    selectedTodoItemsChangeAction: selectedTodoItemsChange,\n  })(TodoApp)\n);\n","/* eslint-disable react/no-array-index-key */\nimport React from 'react';\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\nimport { NavLink } from 'react-router-dom';\nimport IntlMessages from 'helpers/IntlMessages';\nimport { adminRoot } from 'constants/defaultValues';\n\nconst getMenuTitle = (sub) => {\n  if (`/${sub}` === adminRoot) return <IntlMessages id=\"menu.home\" />;\n  return <IntlMessages id={`menu.${sub}`} />;\n};\n\nconst getUrl = (path, sub) => {\n  return path.split(sub)[0] + sub;\n};\n\nconst BreadcrumbContainer = ({ heading, match }) => {\n  return (\n    <>\n      {heading && (\n        <h1>\n          <IntlMessages id={heading} />\n        </h1>\n      )}\n      <BreadcrumbItems match={match} />\n    </>\n  );\n};\n\nconst BreadcrumbItems = ({ match }) => {\n  const path = match.path.substr(1);\n  let paths = path.split('/');\n  if (paths[paths.length - 1].indexOf(':') > -1) {\n    paths = paths.filter((x) => x.indexOf(':') === -1);\n  }\n  return (\n    <>\n      <Breadcrumb className=\"pt-0 breadcrumb-container d-none d-sm-block d-lg-inline-block\">\n        {paths.map((sub, index) => {\n          return (\n            <BreadcrumbItem key={index} active={paths.length === index + 1}>\n              {paths.length !== index + 1 ? (\n                <NavLink to={`/${getUrl(path, sub, index)}`}>\n                  {getMenuTitle(sub)}\n                </NavLink>\n              ) : (\n                getMenuTitle(sub)\n              )}\n            </BreadcrumbItem>\n          );\n        })}\n      </Breadcrumb>\n    </>\n  );\n};\n\nexport default BreadcrumbContainer;\n","import React from 'react';\nimport { components } from 'react-select';\n\nconst CustomSelectInput = (props) => {\n  const customProps = { ...props };\n  delete customProps.autoCorrect;\n  delete customProps.autoCapitalize;\n  return <components.Input {...customProps} />;\n};\n\nexport default CustomSelectInput;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  listTag: tagPropType,\n  className: PropTypes.string,\n  listClassName: PropTypes.string,\n  cssModule: PropTypes.object,\n  children: PropTypes.node,\n  'aria-label': PropTypes.string\n};\nvar defaultProps = {\n  tag: 'nav',\n  listTag: 'ol',\n  'aria-label': 'breadcrumb'\n};\n\nvar Breadcrumb = function Breadcrumb(props) {\n  var className = props.className,\n      listClassName = props.listClassName,\n      cssModule = props.cssModule,\n      children = props.children,\n      Tag = props.tag,\n      ListTag = props.listTag,\n      label = props['aria-label'],\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"listClassName\", \"cssModule\", \"children\", \"tag\", \"listTag\", \"aria-label\"]);\n\n  var classes = mapToCssModules(classNames(className), cssModule);\n  var listClasses = mapToCssModules(classNames('breadcrumb', listClassName), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    \"aria-label\": label\n  }), /*#__PURE__*/React.createElement(ListTag, {\n    className: listClasses\n  }, children));\n};\n\nBreadcrumb.propTypes = propTypes;\nBreadcrumb.defaultProps = defaultProps;\nexport default Breadcrumb;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  active: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'li'\n};\n\nvar BreadcrumbItem = function BreadcrumbItem(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      active = props.active,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"active\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, active ? 'active' : false, 'breadcrumb-item'), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    \"aria-current\": active ? 'page' : undefined\n  }));\n};\n\nBreadcrumbItem.propTypes = propTypes;\nBreadcrumbItem.defaultProps = defaultProps;\nexport default BreadcrumbItem;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Dropdown from './Dropdown';\nvar propTypes = {\n  children: PropTypes.node\n};\n\nvar ButtonDropdown = function ButtonDropdown(props) {\n  return /*#__PURE__*/React.createElement(Dropdown, _extends({\n    group: true\n  }, props));\n};\n\nButtonDropdown.propTypes = propTypes;\nexport default ButtonDropdown;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\n\n/* eslint react/prefer-stateless-function: 0 */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, warnOnce, tagPropType } from './utils';\nvar propTypes = {\n  children: PropTypes.node,\n  type: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  bsSize: PropTypes.string,\n  valid: PropTypes.bool,\n  invalid: PropTypes.bool,\n  tag: tagPropType,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.func, PropTypes.string]),\n  plaintext: PropTypes.bool,\n  addon: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  type: 'text'\n};\n\nvar Input = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(Input, _React$Component);\n\n  function Input(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n    _this.getRef = _this.getRef.bind(_assertThisInitialized(_this));\n    _this.focus = _this.focus.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  var _proto = Input.prototype;\n\n  _proto.getRef = function getRef(ref) {\n    if (this.props.innerRef) {\n      this.props.innerRef(ref);\n    }\n\n    this.ref = ref;\n  };\n\n  _proto.focus = function focus() {\n    if (this.ref) {\n      this.ref.focus();\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        className = _this$props.className,\n        cssModule = _this$props.cssModule,\n        type = _this$props.type,\n        bsSize = _this$props.bsSize,\n        valid = _this$props.valid,\n        invalid = _this$props.invalid,\n        tag = _this$props.tag,\n        addon = _this$props.addon,\n        plaintext = _this$props.plaintext,\n        innerRef = _this$props.innerRef,\n        attributes = _objectWithoutPropertiesLoose(_this$props, [\"className\", \"cssModule\", \"type\", \"bsSize\", \"valid\", \"invalid\", \"tag\", \"addon\", \"plaintext\", \"innerRef\"]);\n\n    var checkInput = ['radio', 'checkbox'].indexOf(type) > -1;\n    var isNotaNumber = new RegExp('\\\\D', 'g');\n    var fileInput = type === 'file';\n    var textareaInput = type === 'textarea';\n    var selectInput = type === 'select';\n    var rangeInput = type === 'range';\n    var Tag = tag || (selectInput || textareaInput ? type : 'input');\n    var formControlClass = 'form-control';\n\n    if (plaintext) {\n      formControlClass = formControlClass + \"-plaintext\";\n      Tag = tag || 'input';\n    } else if (fileInput) {\n      formControlClass = formControlClass + \"-file\";\n    } else if (rangeInput) {\n      formControlClass = formControlClass + \"-range\";\n    } else if (checkInput) {\n      if (addon) {\n        formControlClass = null;\n      } else {\n        formControlClass = 'form-check-input';\n      }\n    }\n\n    if (attributes.size && isNotaNumber.test(attributes.size)) {\n      warnOnce('Please use the prop \"bsSize\" instead of the \"size\" to bootstrap\\'s input sizing.');\n      bsSize = attributes.size;\n      delete attributes.size;\n    }\n\n    var classes = mapToCssModules(classNames(className, invalid && 'is-invalid', valid && 'is-valid', bsSize ? \"form-control-\" + bsSize : false, formControlClass), cssModule);\n\n    if (Tag === 'input' || tag && typeof tag === 'function') {\n      attributes.type = type;\n    }\n\n    if (attributes.children && !(plaintext || type === 'select' || typeof Tag !== 'string' || Tag === 'select')) {\n      warnOnce(\"Input with a type of \\\"\" + type + \"\\\" cannot have children. Please use \\\"value\\\"/\\\"defaultValue\\\" instead.\");\n      delete attributes.children;\n    }\n\n    return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n      ref: innerRef,\n      className: classes,\n      \"aria-invalid\": invalid\n    }));\n  };\n\n  return Input;\n}(React.Component);\n\nInput.propTypes = propTypes;\nInput.defaultProps = defaultProps;\nexport default Input;","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useState, useRef, useEffect } from 'react';\nimport { NavLink } from 'reactstrap';\n\nconst ApplicationMenu = ({ children }) => {\n  const containerRef = useRef();\n  const [isOpen, setIsOpen] = useState(false);\n\n  const handleDocumentClick = (e) => {\n    if (isOpen) {\n      const container = containerRef.current;\n      if (container.contains(e.target) || container === e.target) {\n        return;\n      }\n      setIsOpen(false);\n    }\n  };\n\n  useEffect(() => {\n    ['click', 'touchstart'].forEach((event) =>\n      document.addEventListener(event, handleDocumentClick, false)\n    );\n\n    return () => {\n      ['click', 'touchstart'].forEach((event) =>\n        document.removeEventListener(event, handleDocumentClick, false)\n      );\n    };\n  }, [isOpen]);\n \n  return (\n    <div ref={containerRef} className={`app-menu ${isOpen ? 'shown' : ''}`}>\n      {children}\n      <NavLink\n        className=\"app-menu-button d-inline-block d-xl-none\"\n        onClick={() => setIsOpen(!isOpen)}\n      >\n        <i className=\"simple-icon-options\" />\n      </NavLink>\n    </div>\n  );\n};\n\nexport default ApplicationMenu;\n"],"sourceRoot":""}