{"version":3,"sources":["views/app/students/attendence/resgister.js","helpers/currentUser.js"],"names":["ValidationSchema","Yup","shape","institute","value","required","nullable","_jsx","IntlMessages","id","educationalYear","classs","department","studyTime","initialValues","present","absent","necessaryWork","sickness","totolEducationalDays","present_hours","absent_hours","necessary_work_hours","sickness_hours","StudentAttendance","_ref","match","studentAttendanceId","useParams","console","log","useEffect","_fetchStudent","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_yield$axios$get","data","wrap","_context","prev","next","axios","get","concat","StudentAttendanceAPI","sent","institute_id","name","setInitialEducationalYear","educational_year","setInititalInstitute","label","setInitialClass","class_id","setInitialDepartment","department_id","setInitialSubject","student_id","stop","apply","arguments","fetchStudent","_useState","useState","_useState2","_slicedToArray","_useState3","_useState4","isSubmitted","setIsSubmitted","_useState5","_useState6","isNext","setIsNext","_useState7","_useState8","students","setStudents","_useState9","_useState10","selectedInstitute","setSelectedInstitute","_useState11","_useState12","selectedDepartment","setSelectedDepartment","_useState13","_useState14","selectedClass","setSelectedClass","_useState15","_useState16","selectedSubject","_useState17","_useState18","selecedStudyTime","setSelectedStudyTime","_useState19","_useState20","selectedEducationalYear","setSelectedEducationalYear","_useState21","_useState22","_useState23","_useState24","_useState25","_useState26","_useState27","_useState28","_useState29","_useState30","_useState31","_useState32","_useState33","_useState34","_useState35","_useState36","_useState37","_useState38","arr","setArr","_useContext","useContext","AuthContext","classes","provinces","districts","departments","subjects","institutes","fetchStudentList","contextFields","_ref2","_callee2","response","_context2","callApi","status","createNotification","type","className","cName","NotificationManager","success","error","alert","info","onSubmit","_ref3","_callee3","values","newStudents","instituteId","departmentId","classId","subjectId","_context3","Object","keys","forEach","push","_objectSpread","subject","shift","_x","_Fragment","children","_jsxs","Card","CardBody","Button","onClick","Row","style","marginInline","fontSize","Colxx","xxs","Label","Formik","enableReinitialize","_ref5","errors","touched","handleSubmit","setFieldTouched","setFieldValue","handleChange","Form","overflowY","overflowX","class","colspan","scope","height","length","map","student","index","minWidth","textAlign","father_name","onChange","e","newArr","_defineProperty","target","min","max","StdAbsent","maxWidth","color","size","margin","validationSchema","_ref4","FormGroup","FormikReactSelect","options","onBlur","educationalYearsOptions","studyTimeOptions","currentUser","user","JSON","parse","localStorage","getItem","user_id"],"mappings":"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","file":"static/js/attendance-register.74594b58.chunk.js","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport { Formik, Form, Field } from 'formik';\nimport axios from 'axios';\n// import useSelector\nimport { useSelector } from 'react-redux';\nimport { educationalYearsOptions } from '../../global-data/options';\nimport { studyTimeOptions } from '../../global-data/options';\nimport './../../.././../assets/css/global-style.css';\n\n// Year  and SHift\nimport { useParams } from 'react-router-dom';\n\nimport * as Yup from 'yup';\nimport {\n  Row,\n  Card,\n  CardBody,\n  FormGroup,\n  Label,\n  Button,\n  CardTitle,\n  Input,\n} from 'reactstrap';\nimport Select from 'react-select';\nimport callApi from 'helpers/callApi';\nimport currentUser from 'helpers/currentUser';\nimport IntlMessages from 'helpers/IntlMessages';\nimport { Colxx, Separator } from 'components/common/CustomBootstrap';\nimport {\n  FormikReactSelect,\n  FormikTagsInput,\n  FormikDatePicker,\n} from 'containers/form-validations/FormikFields';\nimport userEvent from '@testing-library/user-event';\nimport { getDirection, getCurrentUser } from './../../../../helpers/Utils';\nimport { NotificationManager } from 'components/common/react-notifications';\nimport { AuthContext } from 'context/AuthContext';\nimport { educationalDaysErr } from 'lang/locales/fa_IR';\n\nconst pageSizes = [10, 20, 40, 80];\n\nconst ValidationSchema = Yup.object().shape({\n  institute: Yup.object()\n    .shape({\n      value: Yup.string().required(),\n    })\n    .nullable()\n    .required(<IntlMessages id=\"forms.InstituteErr\" />),\n\n  educationalYear: Yup.object()\n    .shape({\n      value: Yup.string().required(),\n    })\n    .nullable()\n    .required(<IntlMessages id=\"forms.educationYearErr\" />),\n\n  classs: Yup.object()\n    .shape({\n      value: Yup.string().required(),\n    })\n    .nullable()\n    .required(<IntlMessages id=\"marks.ClassErr\" />),\n\n  department: Yup.object()\n    .shape({\n      value: Yup.string().required(),\n    })\n    .nullable()\n    .required(<IntlMessages id=\"teacher.departmentIdErr\" />),\n  studyTime: Yup.object()\n    .shape({\n      value: Yup.string().required(),\n    })\n    .nullable()\n    .required(<IntlMessages id=\"forms.StudyTimeErr\" />),\n\n  // totolEducationalDays: Yup.string().required(\n  //   <IntlMessages id=\"forms.totolEduactionalDaysErr\" />\n  // ),\n});\n\nconst InnerInpufieldsValidation = Yup.object().shape({\n  present: Yup.number().required(\n    <IntlMessages id=\"forms.totolEduactionalDaysErr\" />\n  ),\n  absent: Yup.number().required(\n    <IntlMessages id=\"forms.totolEduactionalDaysErr\" />\n  ),\n  necessaryWork: Yup.number().required(\n    <IntlMessages id=\"forms.totolEduactionalDaysErr\" />\n  ),\n  sickness: Yup.number().required(\n    <IntlMessages id=\"forms.totolEduactionalDaysErr\" />\n  ),\n});\n\nconst initialValues = {\n  institute: [],\n  studyTime: [],\n  classs: [],\n  department: [],\n  totolEducationalDays: '',\n  educationalYear: [],\n  present_hours: [],\n  absent_hours: [],\n  necessary_work_hours: [],\n  sickness_hours: [],\n};\n\nconst StudentAttendance = ({ match }) => {\n  const { studentAttendanceId } = useParams();\n  console.log('id of the attendacne', studentAttendanceId);\n  if (studentAttendanceId) {\n    useEffect(() => {\n      async function fetchStudent() {\n        const { data } = await axios.get(\n          `${StudentAttendanceAPI}/?id=${studentAttendanceId}`\n        );\n        console.log(data[0].institute_id.name, 'kaknor student data');\n        setInitialEducationalYear(data[0].educational_year),\n          setInititalInstitute([\n            {\n              value: data[0].institute_id.id,\n              label: data[0].institute_id.name,\n            },\n          ]);\n        setInitialClass([\n          { value: data[0].class_id.id, label: data[0].class_id.name },\n        ]);\n        setInitialDepartment([\n          {\n            value: data[0].department_id.id,\n            label: data[0].department_id.name,\n          },\n        ]);\n        setInitialSubject([\n          {\n            value: data[0].student_id.student_id,\n            label: data[0].student_id.name,\n          },\n        ]);\n      }\n      fetchStudent();\n      //setUpdateMode(true);\n    }, []);\n  }\n\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [isSubmitted, setIsSubmitted] = useState(false);\n  const [isNext, setIsNext] = useState(false);\n  const [students, setStudents] = useState([]);\n  const [selectedInstitute, setSelectedInstitute] = useState('');\n  const [selectedDepartment, setSelectedDepartment] = useState('');\n  const [selectedClass, setSelectedClass] = useState('');\n  const [selectedSubject, setSelectedSubject] = useState('');\n  const [selecedStudyTime, setSelectedStudyTime] = useState('');\n  const [selectedEducationalYear, setSelectedEducationalYear] = useState('');\n  const [passingScore, setPassingScore] = useState(55);\n  const [subjectGrad, setSubjectGrad] = useState();\n  const [subjectGPA, setSubjectGPA] = useState();\n  const [initialInstitue, setInititalInstitute] = useState([]);\n  const [initailEducationalYear, setInitialEducationalYear] = useState('');\n  const [initalClass, setInitialClass] = useState([]);\n  const [initailDepartment, setInitialDepartment] = useState([]);\n  const [initalSubject, setInitialSubject] = useState([]);\n  const [arr, setArr] = useState({});\n  const {\n    provinces,\n    districts,\n    classes,\n    subjects,\n    departments,\n    institutes,\n    contextFields: fields,\n  } = useContext(AuthContext);\n\n  // fetch student list for typing attendance\n  const fetchStudentList = async () => {\n    console.log('educatinll yera', selectedEducationalYear);\n    console.log('Div Inner Side');\n    const response = await callApi(\n      `students/class-students-list/?institute=${selectedInstitute.value}&classs=${selectedClass.value}&shift=${selecedStudyTime.value}&department=${selectedDepartment.value}&educational_year=${selectedEducationalYear.value}`,\n      'GET',\n      null\n    );\n    console.log('Div Inner Side', selectedEducationalYear.value);\n    console.log('class repspossdfsde', response);\n    if (response.data && response.status === 200) {\n      setStudents(response.data);\n      setIsNext(true);\n    } else {\n      console.log('class error');\n    }\n  };\n\n  const createNotification = (type, className) => {\n    const cName = className || '';\n    switch (type) {\n      case 'success':\n        NotificationManager.success(\n          'حاضری په بریالیتوب سره ثبت شوه',\n          'موفقیت',\n          3000,\n          null,\n          null,\n          cName\n        );\n        break;\n      case 'error':\n        NotificationManager.error(\n          'حاضری ثبت نه شوه بیا کوشش وکری',\n          'خطا',\n          9000,\n          () => {\n            alert('callback');\n          },\n          null,\n          cName\n        );\n        break;\n      default:\n        NotificationManager.info('Info message');\n        break;\n    }\n  };\n\n  const onSubmit = async (values) => {\n    console.log('values in arr: ', arr);\n\n    const newStudents = [];\n    Object.keys(arr).forEach((id) => {\n      newStudents.push({ student_id: id, ...arr[id] });\n    });\n    console.log('newStudents is: ', newStudents);\n    // setIsSubmitted(true);\n    const educationalYear = selectedEducationalYear.value;\n    const instituteId = selectedInstitute.value;\n    const departmentId = selectedDepartment.value;\n    const classId = selectedClass.value;\n    const subjectId = selectedSubject.value;\n    const studyTime = selecedStudyTime.value;\n    console.log('educationalYear', educationalYear);\n    console.log('instituteId', instituteId);\n    console.log('departmentId', departmentId);\n    console.log('classId', classId);\n    console.log('subjectId', subjectId);\n    //create an array which first node has exam_id and the rest of the nodes has student_id and marks\n    // values.score[student.student_id]\n    console.log('values are: ', values);\n    // const newStudents = students.map((student, index) => {\n    //   return {\n    //     student_id: student.student_id,\n    //     present_hours: values[`present[${student.student_id}]`],\n    //     absent_hours: values[`absent[${student.student_id}]`],\n    //     necessary_work_hours: values[`necessaryWork[${student.student_id}]`],\n    //     sickness_hours: values[`sickness[${student.student_id}]`],\n    //   };\n    // });\n\n    let data = [\n      {\n        educational_year: educationalYear,\n        institute: instituteId,\n        department: departmentId,\n        classs: classId,\n        subject: subjectId,\n        shift: studyTime,\n      },\n      ...newStudents,\n    ];\n\n    console.log('data', data);\n\n    const response = await callApi(\n      'students/class-attendance/create/',\n      'POST',\n      data\n    );\n    if (response.status === 200 || response.status === 201) {\n      setIsSubmitted(true);\n      createNotification('success', 'filled');\n    } else {\n      console.log('marks error');\n      setIsSubmitted(false);\n      createNotification('error', 'filled');\n    }\n  };\n  console.log('isNext, isSubmitted', isNext, isSubmitted);\n\n  return (\n    <>\n      <Card>\n        <div className=\"mt-4 ml-5\">\n          <h2 className=\" m-5  titleStyle\">\n            {<IntlMessages id=\"forms.AttendanceTitle\" />}\n          </h2>\n        </div>\n        <CardBody>\n          {!isNext ? (\n            <Formik\n              enableReinitialize={true}\n              initialValues={initialValues}\n              onSubmit={fetchStudentList}\n              validationSchema={ValidationSchema}\n            >\n              {({\n                errors,\n                touched,\n                values,\n                setFieldTouched,\n                setFieldValue,\n              }) => (\n                <Form className=\"av-tooltip tooltip-label-right style \">\n                  <Row className=\"m-5\">\n                    <Colxx xxs=\"6\">\n                      {/* set if condition, if institutes are loaded */}\n                      <FormGroup className=\"form-group has-float-label error-l-150 \">\n                        <Label>\n                          <IntlMessages id=\"forms.InstituteLabel\" />\n                          <span style={{ color: 'red' }}>*</span>\n                        </Label>\n                        <FormikReactSelect\n                          name=\"institute\"\n                          id=\"institute\"\n                          value={values.institute}\n                          options={institutes}\n                          onChange={setFieldValue}\n                          onBlur={setFieldTouched}\n                          onClick={setSelectedInstitute(values.institute)}\n                        />\n                        {errors.institute && touched.institute ? (\n                          <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                            {errors.institute}\n                          </div>\n                        ) : null}\n                      </FormGroup>\n\n                      <FormGroup className=\"form-group has-float-label mt-5 error-l-150 \">\n                        <Label>\n                          <IntlMessages id=\"curriculum.eduactionalYearLabel\" />\n                          <span style={{ color: 'red' }}>*</span>\n                        </Label>\n                        <FormikReactSelect\n                          name=\"educationalYear\"\n                          id=\"educationalYear\"\n                          value={values.educationalYear}\n                          options={educationalYearsOptions}\n                          onChange={setFieldValue}\n                          onClick={setSelectedEducationalYear(\n                            values.educationalYear\n                          )}\n                          onBlur={setFieldTouched}\n                        />\n                        {errors.educationalYear && touched.educationalYear ? (\n                          <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                            {errors.educationalYear}\n                          </div>\n                        ) : null}\n                      </FormGroup>\n                      <FormGroup className=\"form-group has-float-label mt-5  error-l-150\">\n                        <Label>\n                          <IntlMessages id=\"forms.StudyTimeLabel\" />\n                        </Label>\n                        <FormikReactSelect\n                          name=\"studyTime\"\n                          id=\"studyTime\"\n                          value={values.studyTime}\n                          options={studyTimeOptions}\n                          onChange={setFieldValue}\n                          onBlur={setFieldTouched}\n                          onClick={setSelectedStudyTime(values.studyTime)}\n                        />\n                        {errors.studyTime && touched.studyTime ? (\n                          <div className=\"invalid-feedback d-block bg-danger text-white \">\n                            {errors.studyTime}\n                          </div>\n                        ) : null}\n                      </FormGroup>\n\n                      {/* <FormGroup className=\"form-group has-float-label mt-5 error-l-150\">\n                        <Label>\n                          <IntlMessages id=\"forms.totolEducationalDays\" />\n                          <span style={{ color: 'red' }}>*</span>\n                        </Label>\n                        <Field\n                          type=\"number\"\n                          id=\"totolEducationalDays\"\n                          className=\"form-control fieldStyle\"\n                          name=\"totolEducationalDays\"\n                          // onClick={setSelectedEducationalYear(\n                          //   values.totolEducationalDays\n                          // )}\n                        />\n                        {errors.totolEducationalDays &&\n                        touched.totolEducationalDays ? (\n                          <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                            {errors.totolEducationalDays}\n                          </div>\n                        ) : null}\n                      </FormGroup> */}\n                    </Colxx>\n\n                    <Colxx xxs=\"6\">\n                      <FormGroup className=\"form-group has-float-label error-l-150 \">\n                        <Label>\n                          <IntlMessages id=\"marks.ClassLabel\" />\n                          <span style={{ color: 'red' }}>*</span>\n                        </Label>\n                        <FormikReactSelect\n                          name=\"classs\"\n                          id=\"classs\"\n                          value={values.classs}\n                          options={classes}\n                          onChange={setFieldValue}\n                          onBlur={setFieldTouched}\n                          onClick={setSelectedClass(values.classs)}\n                          required\n                        />\n                        {errors.classs && touched.classs ? (\n                          <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                            {errors.classs}\n                          </div>\n                        ) : null}\n                      </FormGroup>\n\n                      <FormGroup className=\"form-group has-float-label mt-5 error-l-150\">\n                        <Label>\n                          <IntlMessages id=\"forms.studyDepartment\" />\n                          <span style={{ color: 'red' }}>*</span>\n                        </Label>\n                        <FormikReactSelect\n                          name=\"department\"\n                          id=\"department\"\n                          value={values.department}\n                          options={departments}\n                          onChange={setFieldValue}\n                          onBlur={setFieldTouched}\n                          onClick={setSelectedDepartment(values.department)}\n                          required\n                        />\n                        {errors.department && touched.department ? (\n                          <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                            {errors.department}\n                          </div>\n                        ) : null}\n                      </FormGroup>\n                    </Colxx>\n                  </Row>\n                  <Row>\n                    <Colxx>\n                      <Button\n                        color=\"primary\"\n                        className=\"float-right buttonStyle\"\n                        size=\"lg\"\n                        type=\"submit\"\n                        style={{ margin: '3% 0% 10% 8%' }}\n                      >\n                        <span className=\"spinner d-inline-block\">\n                          <span className=\"bounce1\" />\n                          <span className=\"bounce2\" />\n                          <span className=\"bounce3\" />\n                        </span>\n                        <span className=\"label\">\n                          <IntlMessages id=\"button.Next\" />\n                        </span>\n                      </Button>\n                    </Colxx>\n                  </Row>\n                </Form>\n              )}\n            </Formik>\n          ) : (\n            <>\n              {!isSubmitted ? (\n                <>\n                  <Row\n                    className=\"border border bg-primary me-5 p-1 \"\n                    style={{ marginInline: '10%', fontSize: '20px' }}\n                  >\n                    <Colxx xxs=\"2\">\n                      <Label className=\"data-style-1\">\n                        <IntlMessages id=\"menu.institutes\" />\n                      </Label>\n                      <h2>{selectedInstitute.label}</h2>\n                    </Colxx>\n\n                    <Colxx xxs=\"2\">\n                      <Label className=\"data-style-1\">\n                        <IntlMessages id=\"attendance.departmentLabel\" />\n                      </Label>\n                      <h2>{selectedDepartment.label}</h2>\n                    </Colxx>\n\n                    <Colxx xxs=\"2\">\n                      <Label className=\"data-style-1\">\n                        <IntlMessages id=\"marks.ClassLabel\" />\n                      </Label>\n                      <h2>{selectedClass.label}</h2>\n                    </Colxx>\n\n                    <Colxx xxs=\"2\">\n                      <Label className=\"data-style-1\">\n                        <IntlMessages id=\"forms.StudyTimeLabel\" />\n                      </Label>\n                      <h2>{selecedStudyTime.label}</h2>\n                    </Colxx>\n\n                    <Colxx xxs=\"2\">\n                      <Label className=\"data-style-1\">\n                        <IntlMessages id=\"curriculum.eduactionalYearList\" />\n                      </Label>\n                      <h2>{selectedEducationalYear.label}</h2>\n                    </Colxx>\n\n                    <Colxx xxs=\"2\">\n                      <Label className=\"data-style-1\">\n                        <IntlMessages id=\"forms.totolEducationalDays\" />\n                      </Label>\n                      <h2>دینامیک گردد</h2>\n                    </Colxx>\n                  </Row>\n\n                  <Formik\n                    enableReinitialize={true}\n                    initialValues={initialValues}\n                    onSubmit={onSubmit}\n                    // validationSchema={InnerInpufieldsValidation}\n                  >\n                    {({\n                      errors,\n                      touched,\n                      values,\n                      setFieldTouched,\n                      setFieldValue,\n                      handleSubmit,\n                      handleChange,\n                    }) => (\n                      <Form className=\"av-tooltip tooltip-label-right \">\n                        <Row\n                          className=\"justify-content-center  border border\"\n                          style={{\n                            marginInline: '10%',\n                            overflowY: 'scroll',\n                            overflowX: 'hidden',\n                          }}\n                        >\n                          <table class=\"table \">\n                            <thead className=\"thead-dark \">\n                              <tr>\n                                <th\n                                  colspan=\"4\"\n                                  className=\"border text-center list-header-1\"\n                                >\n                                  <IntlMessages id=\"marks.studentChar\" />\n                                </th>\n                                <th\n                                  colspan=\"4\"\n                                  className=\"border text-center list-header-1\"\n                                >\n                                  <IntlMessages id=\"attendance.attendaceDisplayTitle\" />\n                                </th>\n                                {/* <th colspan=\"1\" className=\"border text-center\">\n                            {' '}\n                            <IntlMessages id=\"marks.attendanceResult\" />\n                          </th> */}\n                              </tr>\n                            </thead>\n                            <thead className=\"thead-dark\">\n                              <tr>\n                                <th\n                                  scope=\"col\"\n                                  className=\"border text-center list-header-2 \"\n                                >\n                                  <IntlMessages id=\"marks.No\" />\n                                </th>\n                                <th\n                                  scope=\"col\"\n                                  className=\"border text-center list-header-2\"\n                                >\n                                  <IntlMessages id=\"marks.FullName\" />\n                                </th>\n                                <th\n                                  scope=\"col\"\n                                  className=\"border text-center list-header-2\"\n                                >\n                                  <IntlMessages id=\"marks.FatherName\" />\n                                </th>\n                                <th\n                                  scope=\"col\"\n                                  className=\"border text-center list-header-2\"\n                                >\n                                  <IntlMessages id=\"marks.ID\" />\n                                </th>\n\n                                <th\n                                  scope=\"col\"\n                                  className=\"border text-center list-header-2\"\n                                >\n                                  <IntlMessages id=\"forms.StdPresentLabel\" />\n                                </th>\n                                <th\n                                  scope=\"col\"\n                                  className=\"border text-center list-header-2\"\n                                >\n                                  <IntlMessages id=\"forms.StdAbsentLabel\" />\n                                </th>\n                                <th\n                                  scope=\"col\"\n                                  className=\"border text-center list-header-2\"\n                                >\n                                  <IntlMessages id=\"forms.StdNecessaryWorkLabel\" />\n                                </th>\n                                <th\n                                  scope=\"col\"\n                                  className=\"border text-center list-header-2\"\n                                >\n                                  <IntlMessages id=\"forms.StdSicknessLabel\" />\n                                </th>\n                                {/* <th scope=\"col\" className=\"border text-center\">\n                            <IntlMessages id=\"marks.eligable_Deprive\" />\n                          </th> */}\n                              </tr>\n                            </thead>\n                            <tbody\n                              className=\"border border \"\n                              style={{\n                                height: '200px',\n                                overflowY: 'scroll',\n                                overflowX: 'hidden',\n                              }}\n                            >\n                              {students.length > 0 &&\n                                students.map((student, index) => (\n                                  <tr key={student.id}>\n                                    <th\n                                      style={{\n                                        fontSize: '20px',\n                                        minWidth: '50px',\n                                        textAlign: 'center',\n                                      }}\n                                      className=\"pt-0\"\n                                    >\n                                      {index + 1}\n                                    </th>\n                                    <td\n                                      style={{\n                                        fontSize: '20px',\n                                        minWidth: '150px',\n                                        textAlign: 'center',\n                                      }}\n                                      className=\"pt-0\"\n                                    >\n                                      {student.name}\n                                    </td>\n                                    <td\n                                      style={{\n                                        fontSize: '20px',\n                                        minWidth: '150px',\n                                        textAlign: 'center',\n                                      }}\n                                      className=\"pt-0\"\n                                    >\n                                      {student.father_name}\n                                    </td>\n                                    <td\n                                      style={{\n                                        fontSize: '20px',\n                                        textAlign: 'center',\n                                        minWidth: '100px',\n                                      }}\n                                      className=\"pt-0\"\n                                    >\n                                      {student.student_id}\n                                    </td>\n                                    <td className=\"mb-2 p-0\">\n                                      {/* Present*/}\n                                      <input\n                                        type=\"number\"\n                                        className=\"form-control\"\n                                        // name={`present[${student.student_id}]`}\n                                        name=\"present_hours\"\n                                        onChange={(e) => {\n                                          const newArr = arr;\n                                          newArr[student.student_id] = {\n                                            ...newArr[student.student_id],\n                                            [e.target.name]: e.target.value,\n                                          };\n                                          setArr(newArr);\n                                        }}\n                                        min={0}\n                                        max={300}\n                                        required\n                                      />\n                                      {errors.present && touched.present ? (\n                                        <div className=\"invalid-feedback d-block\">\n                                          {errors.present}\n                                        </div>\n                                      ) : null}\n                                    </td>\n                                    <td className=\"p-0\">\n                                      {/* Absent */}\n                                      <input\n                                        type=\"number\"\n                                        className=\"form-control\"\n                                        // name={`absent[${student.student_id}]`}\n                                        name=\"absent_hours\"\n                                        min=\"0\"\n                                        max=\"300\"\n                                        required\n                                        // onChange={handleChange('absent')}\n                                        onChange={(e) => {\n                                          const newArr = arr;\n                                          newArr[student.student_id] = {\n                                            ...newArr[student.student_id],\n                                            [e.target.name]: e.target.value,\n                                          };\n                                          setArr(newArr);\n                                        }}\n                                      />\n                                      {errors.absent && touched.absent ? (\n                                        <div className=\"invalid-feedback d-block\">\n                                          {errors.StdAbsent}\n                                        </div>\n                                      ) : null}\n                                    </td>\n                                    <td className=\"p-0\">\n                                      {/* Necessary Work */}\n                                      <input\n                                        type=\"number\"\n                                        className=\"form-control\"\n                                        // name={`necessaryWork[${student.student_id}]`}\n                                        name=\"necessary_work_hours\"\n                                        min=\"0\"\n                                        max=\"300\"\n                                        required\n                                        // onChange={handleChange('necessaryWork')}\n                                        onChange={(e) => {\n                                          const newArr = arr;\n                                          newArr[student.student_id] = {\n                                            ...newArr[student.student_id],\n                                            [e.target.name]: e.target.value,\n                                          };\n                                          setArr(newArr);\n                                        }}\n                                      />\n                                      {errors.necessaryWork &&\n                                      touched.necessaryWork ? (\n                                        <div className=\"invalid-feedback d-block\">\n                                          {errors.necessaryWork}\n                                        </div>\n                                      ) : null}\n                                    </td>\n                                    <td className=\"mb-2 p-0\">\n                                      {/* SickNess */}\n\n                                      <input\n                                        type=\"number\"\n                                        className=\"form-control\"\n                                        // name={`sickness[${student.student_id}]`}\n                                        name=\"sickness_hours\"\n                                        min=\"0\"\n                                        max=\"300\"\n                                        required\n                                        // onChange={handleChange('sickness')}\n                                        onChange={(e) => {\n                                          const newArr = arr;\n                                          newArr[student.student_id] = {\n                                            ...newArr[student.student_id],\n                                            [e.target.name]: e.target.value,\n                                          };\n                                          setArr(newArr);\n                                        }}\n                                      />\n                                      {errors.sickness && touched.sickness ? (\n                                        <div className=\"invalid-feedback d-block\">\n                                          {errors.sickness}\n                                        </div>\n                                      ) : null}\n                                    </td>\n                                    {/* <td className=\"mb-2\">\n                                      DISPLAY MAHROOM OR FULL ATTEND\n                                    </td> */}\n                                    {/* <Separator /> */}\n                                  </tr>\n                                ))}\n                            </tbody>\n                            <tfoot className=\"thead-dark\">\n                              <tr>\n                                <th\n                                  scope=\"col\"\n                                  className=\"border text-center \"\n                                  style={{\n                                    maxWidth: '20px ',\n                                    minWidth: '50px',\n                                  }}\n                                >\n                                  <IntlMessages id=\"marks.No\" />\n                                </th>\n                                <th\n                                  scope=\"col\"\n                                  className=\"border text-center list-header-2\"\n                                >\n                                  <IntlMessages id=\"marks.FullName\" />\n                                </th>\n                                <th\n                                  scope=\"col\"\n                                  className=\"border text-center list-header-2\"\n                                >\n                                  <IntlMessages id=\"marks.FatherName\" />\n                                </th>\n                                <th\n                                  scope=\"col\"\n                                  className=\"border text-center list-header-2\"\n                                >\n                                  <IntlMessages id=\"marks.ID\" />\n                                </th>\n\n                                <th\n                                  scope=\"col\"\n                                  className=\"border text-center list-header-2\"\n                                >\n                                  <IntlMessages id=\"forms.StdPresentLabel\" />\n                                </th>\n                                <th\n                                  scope=\"col\"\n                                  className=\"border text-center list-header-2\"\n                                >\n                                  <IntlMessages id=\"forms.StdAbsentLabel\" />\n                                </th>\n                                <th\n                                  scope=\"col\"\n                                  className=\"border text-center list-header-2\"\n                                >\n                                  <IntlMessages id=\"forms.StdNecessaryWorkLabel\" />\n                                </th>\n                                <th\n                                  scope=\"col\"\n                                  className=\"border text-center list-header-2\"\n                                >\n                                  <IntlMessages id=\"forms.StdSicknessLabel\" />\n                                </th>\n                                {/* <th scope=\"col\" className=\"border text-center\">\n                                  <IntlMessages id=\"marks.eligable_Deprive\" />\n                                </th> */}\n                              </tr>\n                            </tfoot>\n                          </table>\n                        </Row>\n                        <Row className=\" justify-content-center\">\n                          <Colxx xxs=\"10\" className=\"m-5\">\n                            <Button\n                              color=\"primary\"\n                              className=\"buttonStyle1\"\n                              size=\"lg\"\n                              style={{ margin: '5% 6% 10% 8%' }}\n                              onClick={() => setIsNext(false)}\n                            >\n                              <IntlMessages id=\"button.Back\" />\n                            </Button>\n\n                            <Button\n                              color=\"primary\"\n                              className=\" float-right buttonStyle1\"\n                              size=\"lg\"\n                              // type=\"submit\"\n                              style={{ margin: '5% 0% 10% 6%' }}\n                              onClick={handleSubmit}\n                            >\n                              <IntlMessages id=\"button.SubmitButton\" />\n                            </Button>\n                          </Colxx>\n                        </Row>\n                      </Form>\n                    )}\n                  </Formik>\n                </>\n              ) : (\n                <div className=\"wizard-basic-step text-center pt-3\">\n                  <div>\n                    <h1 className=\"mb-2\">\n                      <IntlMessages id=\"wizard.content-thanks\" />\n                    </h1>\n                    <h3>\n                      <IntlMessages id=\"wizard.registered\" />\n                    </h3>\n                    <Button\n                      className=\"m-5 bg-primary\"\n                      // onClick={() => window.location.reload()}\n                      onClick={() => {\n                        setIsNext(false);\n                        setIsSubmitted(false);\n                      }}\n                    >\n                      <IntlMessages id=\"button.Back\" />\n                    </Button>\n                  </div>\n                </div>\n              )}\n            </>\n          )}\n        </CardBody>\n      </Card>\n    </>\n  );\n};\n\nexport default StudentAttendance;\n","const currentUser = () => {\n  const user = JSON.parse(localStorage.getItem('user'));\n  console.log('user is here', user.user_id);\n  return user.user_id;\n};\n\nexport default currentUser;\n"],"sourceRoot":""}