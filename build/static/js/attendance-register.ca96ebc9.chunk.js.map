{"version":3,"sources":["views/app/students/attendence/resgister.js","helpers/currentUser.js"],"names":["ValidationSchema","Yup","shape","institute","value","required","nullable","_jsx","IntlMessages","id","educationalYear","classs","department","studyTime","initialValues","present","absent","necessaryWork","sickness","totolEducationalDays","StudentAttendance","_ref","match","studentAttendanceId","useParams","console","log","useEffect","_fetchStudent","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_yield$axios$get","data","wrap","_context","prev","next","axios","get","concat","StudentAttendanceAPI","sent","institute_id","name","setInitialEducationalYear","educational_year","setInititalInstitute","label","setInitialClass","class_id","setInitialDepartment","department_id","setInitialSubject","student_id","stop","apply","arguments","fetchStudent","_useState","useState","_useState2","_slicedToArray","_useState3","_useState4","isSubmitted","setIsSubmitted","_useState5","_useState6","isNext","setIsNext","_useState7","_useState8","setFields","_useState9","_useState10","institutes","setInstitutes","_useState11","_useState12","departments","setDepartments","_useState13","_useState14","classes","setClasses","_useState15","_useState16","setSubjects","_useState17","_useState18","students","setStudents","_useState19","_useState20","selectedInstitute","setSelectedInstitute","_useState21","_useState22","selectedDepartment","setSelectedDepartment","_useState23","_useState24","selectedClass","setSelectedClass","_useState25","_useState26","selectedSubject","_useState27","_useState28","selecedStudyTime","setSelectedStudyTime","_useState29","_useState30","selectedEducationalYear","setSelectedEducationalYear","_useState31","_useState32","_useState33","_useState34","_useState35","_useState36","_useState37","_useState38","_useState39","_useState40","_useState41","_useState42","_useState43","_useState44","_useState45","_useState46","fetchInstitutes","_ref2","_callee2","response","updatedData","_context2","callApi","status","map","item","fetchFields","_ref3","_callee3","_context3","fetchDepartments","_ref4","_callee4","_context4","fetchClasses","_ref5","_callee5","_context5","semester","section","fetchSubjects","_ref6","_callee6","_context6","fetchStudentList","_ref7","_callee7","_context7","createNotification","type","className","cName","NotificationManager","success","error","alert","info","onSubmit","_ref8","_callee8","values","instituteId","departmentId","classId","subjectId","newStudents","_context8","student","index","present_hours","absent_hours","necessary_work_hours","sickness_hours","subject","shift","_toConsumableArray","_x","_Fragment","children","_jsxs","Card","CardBody","Button","onClick","Row","style","marginInline","fontSize","Colxx","xxs","Label","Formik","_ref10","errors","touched","setFieldTouched","setFieldValue","Form","overflowY","overflowX","class","colspan","scope","height","length","minWidth","textAlign","father_name","Field","min","max","StdAbsent","maxWidth","color","size","margin","enableReinitialize","validationSchema","_ref9","FormGroup","FormikReactSelect","options","onChange","onBlur","educationalYearsOptions","studyTimeOptions","currentUser","user","JSON","parse","localStorage","getItem","user_id"],"mappings":"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","file":"static/js/attendance-register.ca96ebc9.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Formik, Form, Field } from 'formik';\nimport axios from 'axios';\n// import useSelector\nimport { useSelector } from 'react-redux';\nimport { educationalYearsOptions } from '../../global-data/options';\nimport { studyTimeOptions } from '../../global-data/options';\nimport './../../.././../assets/css/global-style.css';\n\n// Year  and SHift\nimport { useParams } from 'react-router-dom';\n\nimport * as Yup from 'yup';\nimport {\n  Row,\n  Card,\n  CardBody,\n  FormGroup,\n  Label,\n  Button,\n  CardTitle,\n  Input,\n} from 'reactstrap';\nimport Select from 'react-select';\nimport callApi from 'helpers/callApi';\nimport currentUser from 'helpers/currentUser';\nimport IntlMessages from 'helpers/IntlMessages';\nimport { Colxx, Separator } from 'components/common/CustomBootstrap';\nimport {\n  FormikReactSelect,\n  FormikTagsInput,\n  FormikDatePicker,\n} from 'containers/form-validations/FormikFields';\nimport userEvent from '@testing-library/user-event';\nimport { getDirection, getCurrentUser } from './../../../../helpers/Utils';\nimport { NotificationManager } from 'components/common/react-notifications';\n\nconst SubjectOptions = [\n  { value: '14th', label: 'Computer Science' },\n  { value: 'bachelor', label: 'Agriculture' },\n  { value: 'master', label: 'BBA' },\n  { value: 'PHD', label: 'Mechenical Engineering' },\n];\n\nconst orderOptions = [\n  { column: 'title', label: 'Product Name' },\n  { column: 'category', label: 'Category' },\n  { column: 'status', label: 'Status' },\n];\nconst pageSizes = [10, 20, 40, 80];\n\nconst ValidationSchema = Yup.object().shape({\n  institute: Yup.object()\n    .shape({\n      value: Yup.string().required(),\n    })\n    .nullable()\n    .required(<IntlMessages id=\"forms.InstituteErr\" />),\n\n  educationalYear: Yup.object()\n    .shape({\n      value: Yup.string().required(),\n    })\n    .nullable()\n    .required(<IntlMessages id=\"forms.educationYearErr\" />),\n\n  classs: Yup.object()\n    .shape({\n      value: Yup.string().required(),\n    })\n    .nullable()\n    .required(<IntlMessages id=\"marks.ClassErr\" />),\n\n  department: Yup.object()\n    .shape({\n      value: Yup.string().required(),\n    })\n    .nullable()\n    .required(<IntlMessages id=\"teacher.departmentIdErr\" />),\n  studyTime: Yup.object()\n    .shape({\n      value: Yup.string().required(),\n    })\n    .nullable()\n    .required(<IntlMessages id=\"forms.StudyTimeErr\" />),\n\n  // totolEducationalDays: Yup.string().required(\n  //   <IntlMessages id=\"forms.totolEduactionalDaysErr\" />\n  // ),\n});\n\nconst InnerInpufieldsValidation = Yup.object().shape({\n  present: Yup.number().required(\n    <IntlMessages id=\"forms.totolEduactionalDaysErr\" />\n  ),\n  absent: Yup.number().required(\n    <IntlMessages id=\"forms.totolEduactionalDaysErr\" />\n  ),\n  necessaryWork: Yup.number().required(\n    <IntlMessages id=\"forms.totolEduactionalDaysErr\" />\n  ),\n  sickness: Yup.number().required(\n    <IntlMessages id=\"forms.totolEduactionalDaysErr\" />\n  ),\n});\n\nconst initialValues = {\n  institute: [],\n  studyTime: [],\n  classs: [],\n  department: [],\n  totolEducationalDays: '',\n  educationalYear: [],\n  present: '',\n  absent: '',\n  necessaryWork: '',\n  sickness: '',\n};\n\nconst StudentAttendance = ({ match }) => {\n  const { studentAttendanceId } = useParams();\n  console.log('id of the attendacne', studentAttendanceId);\n  if (studentAttendanceId) {\n    useEffect(() => {\n      async function fetchStudent() {\n        const { data } = await axios.get(\n          `${StudentAttendanceAPI}/?id=${studentAttendanceId}`\n        );\n        console.log(data[0].institute_id.name, 'kaknor student data');\n        setInitialEducationalYear(data[0].educational_year),\n          setInititalInstitute([\n            {\n              value: data[0].institute_id.id,\n              label: data[0].institute_id.name,\n            },\n          ]);\n        setInitialClass([\n          { value: data[0].class_id.id, label: data[0].class_id.name },\n        ]);\n        setInitialDepartment([\n          {\n            value: data[0].department_id.id,\n            label: data[0].department_id.name,\n          },\n        ]);\n        setInitialSubject([\n          {\n            value: data[0].student_id.student_id,\n            label: data[0].student_id.name,\n          },\n        ]);\n      }\n      fetchStudent();\n      //setUpdateMode(true);\n    }, []);\n  }\n\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [isSubmitted, setIsSubmitted] = useState(false);\n  const [isNext, setIsNext] = useState(false);\n  const [fields, setFields] = useState([]);\n  const [institutes, setInstitutes] = useState([{ label: 1, value: 'he' }]);\n  const [departments, setDepartments] = useState([]);\n  const [classes, setClasses] = useState([]);\n  const [subjects, setSubjects] = useState([]);\n  const [students, setStudents] = useState([]);\n  const [selectedInstitute, setSelectedInstitute] = useState('');\n  const [selectedDepartment, setSelectedDepartment] = useState('');\n  const [selectedClass, setSelectedClass] = useState('');\n  const [selectedSubject, setSelectedSubject] = useState('');\n  const [selecedStudyTime, setSelectedStudyTime] = useState('');\n  const [selectedEducationalYear, setSelectedEducationalYear] = useState('');\n  const [passingScore, setPassingScore] = useState(55);\n  const [subjectGrad, setSubjectGrad] = useState();\n  const [subjectGPA, setSubjectGPA] = useState();\n  const [initialInstitue, setInititalInstitute] = useState([]);\n  const [initailEducationalYear, setInitialEducationalYear] = useState('');\n  const [initalClass, setInitialClass] = useState([]);\n  const [initailDepartment, setInitialDepartment] = useState([]);\n  const [initalSubject, setInitialSubject] = useState([]);\n\n  // fetch institute lists\n  const fetchInstitutes = async () => {\n    const response = await callApi('institute/', '', null);\n    if (response && response.status === 200) {\n      console.log(response.data, 'institute data');\n      const updatedData = await response.data.map((item) => ({\n        value: item.id,\n        label: item.name,\n      }));\n      setInstitutes(updatedData);\n    } else {\n      console.log('institute error');\n    }\n  };\n\n  // fetch fields\n  const fetchFields = async () => {\n    const response = await callApi('institute/field/', 'GET', null);\n    if (response.data && response.status === 200) {\n      const updatedData = await response.data.map((item) => ({\n        value: item.id,\n        label: item.name,\n      }));\n      setFields(updatedData);\n    } else {\n      console.log('field error');\n    }\n  };\n\n  // fetch department list\n  const fetchDepartments = async () => {\n    const response = await callApi('institute/department/', 'GET', null);\n    if (response.data && response.status === 200) {\n      const updatedData = await response.data.map((item) => ({\n        value: item.id,\n        label: item.name,\n      }));\n      setDepartments(updatedData);\n    } else {\n      console.log('department error');\n    }\n  };\n\n  //fetch class list\n  const fetchClasses = async () => {\n    const response = await callApi('institute/classs/', 'GET', null);\n    console.log('class repspossdfsde', response);\n    if (response.data && response.status === 200) {\n      const updatedData = await response.data.map((item) => ({\n        value: item.id,\n        label: item.name + ' - ' + item.semester + ' - ' + item.section,\n      }));\n      setClasses(updatedData);\n    } else {\n      console.log('class error');\n    }\n  };\n\n  //fetch subject list\n  const fetchSubjects = async () => {\n    const response = await callApi('institute/subject/', 'GET', null);\n    console.log('class repspossdfsde', response);\n    if (response.data && response.status === 200) {\n      const updatedData = await response.data.map((item) => ({\n        value: item.id,\n        label: item.name + ' - ' + item.semester + ' - ' + item.section,\n      }));\n      setSubjects(updatedData);\n    } else {\n      console.log('class error');\n    }\n  };\n\n  // fetch student list for typing attendance\n  const fetchStudentList = async () => {\n    console.log('educatinll yera', selectedEducationalYear);\n    console.log('Div Inner Side');\n    const response = await callApi(\n      `students/class-students-list/?institute=${selectedInstitute.value}&classs=${selectedClass.value}&shift=${selecedStudyTime.value}&department=${selectedDepartment.value}&educational_year=${selectedEducationalYear.value}`,\n      'GET',\n      null\n    );\n    console.log('Div Inner Side', selectedEducationalYear.value);\n    console.log('class repspossdfsde', response);\n    if (response.data && response.status === 200) {\n      setStudents(response.data);\n      setIsNext(true);\n    } else {\n      console.log('class error');\n    }\n  };\n\n  useEffect(() => {\n    fetchInstitutes();\n    fetchFields();\n    fetchDepartments();\n    fetchClasses();\n    fetchSubjects();\n  }, []);\n\n  const createNotification = (type, className) => {\n    const cName = className || '';\n    switch (type) {\n      case 'success':\n        NotificationManager.success(\n          'حاضری په بریالیتوب سره ثبت شوه',\n          'موفقیت',\n          3000,\n          null,\n          null,\n          cName\n        );\n        break;\n      case 'error':\n        NotificationManager.error(\n          'حاضری ثبت نه شوه بیا کوشش وکری',\n          'خطا',\n          9000,\n          () => {\n            alert('callback');\n          },\n          null,\n          cName\n        );\n        break;\n      default:\n        NotificationManager.info('Info message');\n        break;\n    }\n  };\n\n  const onSubmit = async (values) => {\n    // setIsSubmitted(true);\n    const educationalYear = selectedEducationalYear.value;\n    const instituteId = selectedInstitute.value;\n    const departmentId = selectedDepartment.value;\n    const classId = selectedClass.value;\n    const subjectId = selectedSubject.value;\n    const studyTime = selecedStudyTime.value;\n    console.log('educationalYear', educationalYear);\n    console.log('instituteId', instituteId);\n    console.log('departmentId', departmentId);\n    console.log('classId', classId);\n    console.log('subjectId', subjectId);\n    //create an array which first node has exam_id and the rest of the nodes has student_id and marks\n    // values.score[student.student_id]\n    const newStudents = students.map((student, index) => {\n      return {\n        student_id: student.student_id,\n        present_hours: values.present[student.student_id],\n        absent_hours: values.absent[student.student_id],\n        necessary_work_hours: values.necessaryWork[student.student_id],\n        sickness_hours: values.sickness[student.student_id],\n      };\n    });\n\n    let data = [\n      {\n        educational_year: educationalYear,\n        institute: instituteId,\n        department: departmentId,\n        classs: classId,\n        subject: subjectId,\n        shift: studyTime,\n      },\n      ...newStudents,\n    ];\n\n    console.log('data', data);\n\n    const response = await callApi(\n      'students/class-attendance/create/',\n      'POST',\n      data\n    );\n    if (response.status === 200 || response.status === 201) {\n      setIsSubmitted(true);\n      createNotification('success', 'filled');\n    } else {\n      console.log('marks error');\n      setIsSubmitted(false);\n      createNotification('error', 'filled');\n    }\n  };\n  console.log('isNext, isSubmitted', isNext, isSubmitted);\n\n  return (\n    <>\n      <Card>\n        <div className=\"mt-4 ml-5\">\n          <h2 className=\" m-5  titleStyle\">\n            {<IntlMessages id=\"forms.AttendanceTitle\" />}\n          </h2>\n        </div>\n        <CardBody>\n          {!isNext ? (\n            <Formik\n              enableReinitialize={true}\n              initialValues={initialValues}\n              onSubmit={fetchStudentList}\n              validationSchema={ValidationSchema}\n            >\n              {({\n                errors,\n                touched,\n                values,\n                setFieldTouched,\n                setFieldValue,\n              }) => (\n                <Form className=\"av-tooltip tooltip-label-right style \">\n                  <Row className=\"m-5\">\n                    <Colxx xxs=\"6\">\n                      {/* set if condition, if institutes are loaded */}\n                      <FormGroup className=\"form-group has-float-label error-l-150 \">\n                        <Label>\n                          <IntlMessages id=\"forms.InstituteLabel\" />\n                          <span style={{ color: 'red' }}>*</span>\n                        </Label>\n                        <FormikReactSelect\n                          name=\"institute\"\n                          id=\"institute\"\n                          value={values.institute}\n                          options={institutes}\n                          onChange={setFieldValue}\n                          onBlur={setFieldTouched}\n                          onClick={setSelectedInstitute(values.institute)}\n                        />\n                        {errors.institute && touched.institute ? (\n                          <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                            {errors.institute}\n                          </div>\n                        ) : null}\n                      </FormGroup>\n\n                      <FormGroup className=\"form-group has-float-label mt-5 error-l-150 \">\n                        <Label>\n                          <IntlMessages id=\"curriculum.eduactionalYearLabel\" />\n                          <span style={{ color: 'red' }}>*</span>\n                        </Label>\n                        <FormikReactSelect\n                          name=\"educationalYear\"\n                          id=\"educationalYear\"\n                          value={values.educationalYear}\n                          options={educationalYearsOptions}\n                          onChange={setFieldValue}\n                          onClick={setSelectedEducationalYear(\n                            values.educationalYear\n                          )}\n                          onBlur={setFieldTouched}\n                        />\n                        {errors.educationalYear && touched.educationalYear ? (\n                          <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                            {errors.educationalYear}\n                          </div>\n                        ) : null}\n                      </FormGroup>\n                      <FormGroup className=\"form-group has-float-label mt-5  error-l-150\">\n                        <Label>\n                          <IntlMessages id=\"forms.StudyTimeLabel\" />\n                        </Label>\n                        <FormikReactSelect\n                          name=\"studyTime\"\n                          id=\"studyTime\"\n                          value={values.studyTime}\n                          options={studyTimeOptions}\n                          onChange={setFieldValue}\n                          onBlur={setFieldTouched}\n                          onClick={setSelectedStudyTime(values.studyTime)}\n                        />\n                        {errors.studyTime && touched.studyTime ? (\n                          <div className=\"invalid-feedback d-block bg-danger text-white \">\n                            {errors.studyTime}\n                          </div>\n                        ) : null}\n                      </FormGroup>\n\n                      {/* <FormGroup className=\"form-group has-float-label mt-5 error-l-150\">\n                        <Label>\n                          <IntlMessages id=\"forms.totolEducationalDays\" />\n                          <span style={{ color: 'red' }}>*</span>\n                        </Label>\n                        <Field\n                          type=\"number\"\n                          id=\"totolEducationalDays\"\n                          className=\"form-control fieldStyle\"\n                          name=\"totolEducationalDays\"\n                          // onClick={setSelectedEducationalYear(\n                          //   values.totolEducationalDays\n                          // )}\n                        />\n                        {errors.totolEducationalDays &&\n                        touched.totolEducationalDays ? (\n                          <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                            {errors.totolEducationalDays}\n                          </div>\n                        ) : null}\n                      </FormGroup> */}\n                    </Colxx>\n\n                    <Colxx xxs=\"6\">\n                      <FormGroup className=\"form-group has-float-label error-l-150 \">\n                        <Label>\n                          <IntlMessages id=\"marks.ClassLabel\" />\n                          <span style={{ color: 'red' }}>*</span>\n                        </Label>\n                        <FormikReactSelect\n                          name=\"classs\"\n                          id=\"classs\"\n                          value={values.classs}\n                          options={classes}\n                          onChange={setFieldValue}\n                          onBlur={setFieldTouched}\n                          onClick={setSelectedClass(values.classs)}\n                          required\n                        />\n                        {errors.classs && touched.classs ? (\n                          <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                            {errors.classs}\n                          </div>\n                        ) : null}\n                      </FormGroup>\n\n                      <FormGroup className=\"form-group has-float-label mt-5 error-l-150\">\n                        <Label>\n                          <IntlMessages id=\"forms.studyDepartment\" />\n                          <span style={{ color: 'red' }}>*</span>\n                        </Label>\n                        <FormikReactSelect\n                          name=\"department\"\n                          id=\"department\"\n                          value={values.department}\n                          options={departments}\n                          onChange={setFieldValue}\n                          onBlur={setFieldTouched}\n                          onClick={setSelectedDepartment(values.department)}\n                          required\n                        />\n                        {errors.department && touched.department ? (\n                          <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                            {errors.department}\n                          </div>\n                        ) : null}\n                      </FormGroup>\n                    </Colxx>\n                  </Row>\n                  <Row>\n                    <Colxx>\n                      <Button\n                        color=\"primary\"\n                        className=\"float-right buttonStyle\"\n                        size=\"lg\"\n                        type=\"submit\"\n                        style={{ margin: '3% 0% 10% 8%' }}\n                      >\n                        <span className=\"spinner d-inline-block\">\n                          <span className=\"bounce1\" />\n                          <span className=\"bounce2\" />\n                          <span className=\"bounce3\" />\n                        </span>\n                        <span className=\"label\">\n                          <IntlMessages id=\"button.Next\" />\n                        </span>\n                      </Button>\n                    </Colxx>\n                  </Row>\n                </Form>\n              )}\n            </Formik>\n          ) : (\n            <>\n              {!isSubmitted ? (\n                <>\n                  <Row\n                    className=\"border border bg-primary me-5 p-1 \"\n                    style={{ marginInline: '10%', fontSize: '20px' }}\n                  >\n                    <Colxx xxs=\"2\">\n                      <Label className=\"data-style-1\">\n                        <IntlMessages id=\"menu.institutes\" />\n                      </Label>\n                      <h2>دینامیک گردد</h2>\n                    </Colxx>\n\n                    <Colxx xxs=\"2\">\n                      <Label className=\"data-style-1\">\n                        <IntlMessages id=\"attendance.departmentLabel\" />\n                      </Label>\n                      <h2>{selectedDepartment.label}</h2>\n                    </Colxx>\n\n                    <Colxx xxs=\"2\">\n                      <Label className=\"data-style-1\">\n                        <IntlMessages id=\"marks.ClassLabel\" />\n                      </Label>\n                      <h2>{selectedClass.label}</h2>\n                    </Colxx>\n\n                    <Colxx xxs=\"2\">\n                      <Label className=\"data-style-1\">\n                        <IntlMessages id=\"forms.StudyTimeLabel\" />\n                      </Label>\n                      <h2>{selecedStudyTime.label}</h2>\n                    </Colxx>\n\n                    <Colxx xxs=\"2\">\n                      <Label className=\"data-style-1\">\n                        <IntlMessages id=\"curriculum.eduactionalYearList\" />\n                      </Label>\n                      <h2>دینامیک گردد</h2>\n                    </Colxx>\n\n                    <Colxx xxs=\"2\">\n                      <Label className=\"data-style-1\">\n                        <IntlMessages id=\"forms.totolEducationalDays\" />\n                      </Label>\n                      <h2>دینامیک گردد</h2>\n                    </Colxx>\n                  </Row>\n\n                  <Formik\n                    initialValues={initialValues}\n                    onSubmit={onSubmit}\n                    // validationSchema={InnerInpufieldsValidation}\n                  >\n                    {({\n                      errors,\n                      touched,\n                      values,\n                      setFieldTouched,\n                      setFieldValue,\n                    }) => (\n                      <Form className=\"av-tooltip tooltip-label-right \">\n                        <Row\n                          className=\"justify-content-center  border border\"\n                          style={{\n                            marginInline: '10%',\n                            overflowY: 'scroll',\n                            overflowX: 'hidden',\n                          }}\n                        >\n                          <table class=\"table \">\n                            <thead className=\"thead-dark \">\n                              <tr>\n                                <th\n                                  colspan=\"4\"\n                                  className=\"border text-center list-header-1\"\n                                >\n                                  <IntlMessages id=\"marks.studentChar\" />\n                                </th>\n                                <th\n                                  colspan=\"4\"\n                                  className=\"border text-center list-header-1\"\n                                >\n                                  <IntlMessages id=\"attendance.attendaceDisplayTitle\" />\n                                </th>\n                                {/* <th colspan=\"1\" className=\"border text-center\">\n                            {' '}\n                            <IntlMessages id=\"marks.attendanceResult\" />\n                          </th> */}\n                              </tr>\n                            </thead>\n                            <thead className=\"thead-dark\">\n                              <tr>\n                                <th\n                                  scope=\"col\"\n                                  className=\"border text-center list-header-2 \"\n                                >\n                                  <IntlMessages id=\"marks.No\" />\n                                </th>\n                                <th\n                                  scope=\"col\"\n                                  className=\"border text-center list-header-2\"\n                                >\n                                  <IntlMessages id=\"marks.FullName\" />\n                                </th>\n                                <th\n                                  scope=\"col\"\n                                  className=\"border text-center list-header-2\"\n                                >\n                                  <IntlMessages id=\"marks.FatherName\" />\n                                </th>\n                                <th\n                                  scope=\"col\"\n                                  className=\"border text-center list-header-2\"\n                                >\n                                  <IntlMessages id=\"marks.ID\" />\n                                </th>\n\n                                <th\n                                  scope=\"col\"\n                                  className=\"border text-center list-header-2\"\n                                >\n                                  <IntlMessages id=\"forms.StdPresentLabel\" />\n                                </th>\n                                <th\n                                  scope=\"col\"\n                                  className=\"border text-center list-header-2\"\n                                >\n                                  <IntlMessages id=\"forms.StdAbsentLabel\" />\n                                </th>\n                                <th\n                                  scope=\"col\"\n                                  className=\"border text-center list-header-2\"\n                                >\n                                  <IntlMessages id=\"forms.StdNecessaryWorkLabel\" />\n                                </th>\n                                <th\n                                  scope=\"col\"\n                                  className=\"border text-center list-header-2\"\n                                >\n                                  <IntlMessages id=\"forms.StdSicknessLabel\" />\n                                </th>\n                                {/* <th scope=\"col\" className=\"border text-center\">\n                            <IntlMessages id=\"marks.eligable_Deprive\" />\n                          </th> */}\n                              </tr>\n                            </thead>\n                            <tbody\n                              className=\"border border \"\n                              style={{\n                                height: '200px',\n                                overflowY: 'scroll',\n                                overflowX: 'hidden',\n                              }}\n                            >\n                              {students.length > 0 &&\n                                students.map((student, index) => (\n                                  <tr>\n                                    <th\n                                      style={{\n                                        fontSize: '20px',\n                                        minWidth: '50px',\n                                        textAlign: 'center',\n                                      }}\n                                      className=\"pt-0\"\n                                    >\n                                      {index + 1}\n                                    </th>\n                                    <td\n                                      style={{\n                                        fontSize: '20px',\n                                        minWidth: '150px',\n                                        textAlign: 'center',\n                                      }}\n                                      className=\"pt-0\"\n                                    >\n                                      {student.name}\n                                    </td>\n                                    <td\n                                      style={{\n                                        fontSize: '20px',\n                                        minWidth: '150px',\n                                        textAlign: 'center',\n                                      }}\n                                      className=\"pt-0\"\n                                    >\n                                      {student.father_name}\n                                    </td>\n                                    <td\n                                      style={{\n                                        fontSize: '20px',\n                                        textAlign: 'center',\n                                        minWidth: '100px',\n                                      }}\n                                      className=\"pt-0\"\n                                    >\n                                      {student.student_id}\n                                    </td>\n                                    <td className=\"mb-2 p-0\">\n                                      {/* Present*/}\n                                      <Field\n                                        type=\"number\"\n                                        className=\"form-control\"\n                                        name={`present[${student.student_id}]`}\n                                        // name=\"present\"\n                                        min=\"0\"\n                                        max=\"300\"\n                                        required\n                                      />\n                                      {errors.present && touched.present ? (\n                                        <div className=\"invalid-feedback d-block\">\n                                          {errors.present}\n                                        </div>\n                                      ) : null}\n                                    </td>\n                                    <td className=\"p-0\">\n                                      {/* Absent */}\n                                      <Field\n                                        type=\"number\"\n                                        className=\"form-control\"\n                                        name={`absent[${student.student_id}]`}\n                                        // name={`${index}`}\n                                        min=\"0\"\n                                        max=\"300\"\n                                        required\n                                      />\n                                      {errors.absent && touched.absent ? (\n                                        <div className=\"invalid-feedback d-block\">\n                                          {errors.StdAbsent}\n                                        </div>\n                                      ) : null}\n                                    </td>\n                                    <td className=\"p-0\">\n                                      {/* Necessary Work */}\n                                      <Field\n                                        type=\"number\"\n                                        className=\"form-control\"\n                                        name={`necessaryWork[${student.student_id}]`}\n                                        // name={`${index}`}\n                                        min=\"0\"\n                                        max=\"300\"\n                                        required\n                                      />\n                                      {errors.necessaryWork &&\n                                      touched.necessaryWork ? (\n                                        <div className=\"invalid-feedback d-block\">\n                                          {errors.necessaryWork}\n                                        </div>\n                                      ) : null}\n                                    </td>\n                                    <td className=\"mb-2 p-0\">\n                                      {/* SickNess */}\n\n                                      <Field\n                                        type=\"number\"\n                                        className=\"form-control\"\n                                        name={`sickness[${student.student_id}]`}\n                                        // name={`${index}`}\n                                        min=\"0\"\n                                        max=\"300\"\n                                        required\n                                      />\n                                      {errors.sickness && touched.sickness ? (\n                                        <div className=\"invalid-feedback d-block\">\n                                          {errors.sickness}\n                                        </div>\n                                      ) : null}\n                                    </td>\n                                    {/* <td className=\"mb-2\">\n                                      DISPLAY MAHROOM OR FULL ATTEND\n                                    </td> */}\n                                    {/* <Separator /> */}\n                                  </tr>\n                                ))}\n                            </tbody>\n                            <tfoot className=\"thead-dark\">\n                              <tr>\n                                <th\n                                  scope=\"col\"\n                                  className=\"border text-center \"\n                                  style={{\n                                    maxWidth: '20px ',\n                                    minWidth: '50px',\n                                  }}\n                                >\n                                  <IntlMessages id=\"marks.No\" />\n                                </th>\n                                <th\n                                  scope=\"col\"\n                                  className=\"border text-center list-header-2\"\n                                >\n                                  <IntlMessages id=\"marks.FullName\" />\n                                </th>\n                                <th\n                                  scope=\"col\"\n                                  className=\"border text-center list-header-2\"\n                                >\n                                  <IntlMessages id=\"marks.FatherName\" />\n                                </th>\n                                <th\n                                  scope=\"col\"\n                                  className=\"border text-center list-header-2\"\n                                >\n                                  <IntlMessages id=\"marks.ID\" />\n                                </th>\n\n                                <th\n                                  scope=\"col\"\n                                  className=\"border text-center list-header-2\"\n                                >\n                                  <IntlMessages id=\"forms.StdPresentLabel\" />\n                                </th>\n                                <th\n                                  scope=\"col\"\n                                  className=\"border text-center list-header-2\"\n                                >\n                                  <IntlMessages id=\"forms.StdAbsentLabel\" />\n                                </th>\n                                <th\n                                  scope=\"col\"\n                                  className=\"border text-center list-header-2\"\n                                >\n                                  <IntlMessages id=\"forms.StdNecessaryWorkLabel\" />\n                                </th>\n                                <th\n                                  scope=\"col\"\n                                  className=\"border text-center list-header-2\"\n                                >\n                                  <IntlMessages id=\"forms.StdSicknessLabel\" />\n                                </th>\n                                {/* <th scope=\"col\" className=\"border text-center\">\n                                  <IntlMessages id=\"marks.eligable_Deprive\" />\n                                </th> */}\n                              </tr>\n                            </tfoot>\n                          </table>\n                        </Row>\n                        <Row className=\" justify-content-center\">\n                          <Colxx xxs=\"10\" className=\"m-5\">\n                            <Button\n                              color=\"primary\"\n                              className=\"buttonStyle1\"\n                              size=\"lg\"\n                              type=\"submit\"\n                              style={{ margin: '5% 6% 10% 8%' }}\n                              onClick={() => setIsNext(false)}\n                            >\n                              <IntlMessages id=\"button.Back\" />\n                            </Button>\n\n                            <Button\n                              color=\"primary\"\n                              className=\" float-right buttonStyle1\"\n                              size=\"lg\"\n                              type=\"submit\"\n                              style={{ margin: '5% 0% 10% 6%' }}\n                            >\n                              <IntlMessages id=\"button.SubmitButton\" />\n                            </Button>\n                          </Colxx>\n                        </Row>\n                      </Form>\n                    )}\n                  </Formik>\n                </>\n              ) : (\n                <div className=\"wizard-basic-step text-center pt-3\">\n                  <div>\n                    <h1 className=\"mb-2\">\n                      <IntlMessages id=\"wizard.content-thanks\" />\n                    </h1>\n                    <h3>\n                      <IntlMessages id=\"wizard.registered\" />\n                    </h3>\n                    <Button\n                      className=\"m-5 bg-primary\"\n                      // onClick={() => window.location.reload()}\n                      onClick={() => {\n                        setIsNext(false);\n                        setIsSubmitted(false);\n                      }}\n                    >\n                      <IntlMessages id=\"button.Back\" />\n                    </Button>\n                  </div>\n                </div>\n              )}\n            </>\n          )}\n        </CardBody>\n      </Card>\n    </>\n  );\n};\n\nexport default StudentAttendance;\n","const currentUser = () => {\n  const user = JSON.parse(localStorage.getItem('user'));\n  console.log('user is here', user.user_id);\n  return user.user_id;\n};\n\nexport default currentUser;\n"],"sourceRoot":""}