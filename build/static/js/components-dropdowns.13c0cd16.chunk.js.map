{"version":3,"sources":["views/app/ui/components/dropdowns.js","containers/navs/Breadcrumb.js","../node_modules/reactstrap/es/Breadcrumb.js","../node_modules/reactstrap/es/BreadcrumbItem.js","../node_modules/reactstrap/es/CardTitle.js","../node_modules/reactstrap/es/ButtonDropdown.js"],"names":["DropDownsUi","_ref","match","_useState","useState","_useState2","_slicedToArray","dropdownBasicOpen","setDropdownBasicOpen","_useState3","_useState4","dropdownSplitOpen","setDropdownSplitOpen","_useState5","_useState6","isOpenSizingLg","setIsOpenSizingLg","_useState7","_useState8","isOpenSizingSm","setIsOpenSizingSm","_useState9","_useState10","isOpenSizingXs","setIsOpenSizingXs","_useState11","_useState12","btnDropUp","setBtnDropUp","_useState13","_useState14","btnDropLeft","setBtnDropLeft","_useState15","_useState16","btnDropRight","setBtnDropRight","_jsxs","_Fragment","children","_jsx","Row","Colxx","xxs","Breadcrumb","heading","Separator","className","Card","CardBody","CardTitle","IntlMessages","id","CardSubtitle","Dropdown","isOpen","toggle","DropdownToggle","caret","color","outline","DropdownMenu","DropdownItem","header","disabled","divider","UncontrolledDropdown","ButtonDropdown","Button","size","direction","right","getMenuTitle","sub","concat","adminRoot","getUrl","path","split","BreadcrumbItems","_ref2","substr","paths","length","indexOf","filter","x","map","index","BreadcrumbItem","active","NavLink","to","BreadcrumbContainer","propTypes","tag","tagPropType","listTag","PropTypes","string","listClassName","cssModule","object","node","props","Tag","ListTag","label","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","listClasses","React","createElement","_extends","defaultProps","bool","undefined","group"],"mappings":"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","file":"static/js/components-dropdowns.13c0cd16.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport {\n  Row,\n  Card,\n  CardBody,\n  CardTitle,\n  Dropdown,\n  DropdownToggle,\n  DropdownItem,\n  DropdownMenu,\n  ButtonDropdown,\n  Button,\n  CardSubtitle,\n  UncontrolledDropdown,\n} from 'reactstrap';\nimport { Colxx, Separator } from 'components/common/CustomBootstrap';\nimport Breadcrumb from 'containers/navs/Breadcrumb';\nimport IntlMessages from 'helpers/IntlMessages';\n\nconst DropDownsUi = ({ match }) => {\n  const [dropdownBasicOpen, setDropdownBasicOpen] = useState(false);\n  const [dropdownSplitOpen, setDropdownSplitOpen] = useState(false);\n  const [isOpenSizingLg, setIsOpenSizingLg] = useState(false);\n  const [isOpenSizingSm, setIsOpenSizingSm] = useState(false);\n  const [isOpenSizingXs, setIsOpenSizingXs] = useState(false);\n  const [btnDropUp, setBtnDropUp] = useState(false);\n  const [btnDropLeft, setBtnDropLeft] = useState(false);\n  const [btnDropRight, setBtnDropRight] = useState(false);\n\n  return (\n    <>\n      <Row>\n        <Colxx xxs=\"12\">\n          <Breadcrumb heading=\"menu.dropdowns\" match={match} />\n          <Separator className=\"mb-5\" />\n        </Colxx>\n      </Row>\n      <Row className=\"mb-4\">\n        <Colxx xxs=\"12\">\n          <Card>\n            <CardBody>\n              <CardTitle>\n                <IntlMessages id=\"dropdowns.basic\" />\n              </CardTitle>\n              <CardSubtitle>\n                <IntlMessages id=\"dropdowns.controlled\" />\n              </CardSubtitle>\n              <Dropdown\n                isOpen={dropdownBasicOpen}\n                toggle={() => setDropdownBasicOpen(!dropdownBasicOpen)}\n                className=\"mb-5\"\n              >\n                <DropdownToggle caret color=\"secondary\" outline>\n                  <IntlMessages id=\"dropdowns.dropdown\" />\n                </DropdownToggle>\n                <DropdownMenu>\n                  <DropdownItem header>\n                    <IntlMessages id=\"dropdowns.header\" />\n                  </DropdownItem>\n                  <DropdownItem disabled>\n                    <IntlMessages id=\"dropdowns.action\" />\n                  </DropdownItem>\n                  <DropdownItem>\n                    <IntlMessages id=\"dropdowns.another-action\" />\n                  </DropdownItem>\n                  <DropdownItem divider />\n                  <DropdownItem>\n                    <IntlMessages id=\"dropdowns.another-action\" />\n                  </DropdownItem>\n                </DropdownMenu>\n              </Dropdown>\n\n              <CardSubtitle>\n                <IntlMessages id=\"dropdowns.uncontrolled\" />\n              </CardSubtitle>\n              <UncontrolledDropdown>\n                <DropdownToggle caret color=\"secondary\" outline>\n                  <IntlMessages id=\"dropdowns.dropdown\" />\n                </DropdownToggle>\n                <DropdownMenu>\n                  <DropdownItem header>\n                    <IntlMessages id=\"dropdowns.header\" />\n                  </DropdownItem>\n                  <DropdownItem disabled>\n                    <IntlMessages id=\"dropdowns.action\" />\n                  </DropdownItem>\n                  <DropdownItem>\n                    <IntlMessages id=\"dropdowns.another-action\" />\n                  </DropdownItem>\n                  <DropdownItem divider />\n                  <DropdownItem>\n                    <IntlMessages id=\"dropdowns.another-action\" />\n                  </DropdownItem>\n                </DropdownMenu>\n              </UncontrolledDropdown>\n            </CardBody>\n          </Card>\n        </Colxx>\n      </Row>\n\n      <Row className=\"mb-4\">\n        <Colxx xxs=\"12\">\n          <Card>\n            <CardBody>\n              <CardTitle>\n                <IntlMessages id=\"dropdowns.split-button\" />\n              </CardTitle>\n              <ButtonDropdown\n                isOpen={dropdownSplitOpen}\n                toggle={() => setDropdownSplitOpen(!dropdownSplitOpen)}\n              >\n                <Button color=\"secondary\">\n                  <IntlMessages id=\"dropdowns.action\" />\n                </Button>\n                <DropdownToggle caret color=\"secondary\" />\n                <DropdownMenu>\n                  <DropdownItem header>\n                    <IntlMessages id=\"dropdowns.header\" />\n                  </DropdownItem>\n                  <DropdownItem disabled>\n                    <IntlMessages id=\"dropdowns.action\" />\n                  </DropdownItem>\n                  <DropdownItem>\n                    <IntlMessages id=\"dropdowns.another-action\" />\n                  </DropdownItem>\n                  <DropdownItem divider />\n                  <DropdownItem>\n                    <IntlMessages id=\"dropdowns.another-action\" />\n                  </DropdownItem>\n                </DropdownMenu>\n              </ButtonDropdown>\n            </CardBody>\n          </Card>\n        </Colxx>\n      </Row>\n\n      <Row className=\"mb-4\">\n        <Colxx xxs=\"12\">\n          <Card>\n            <CardBody>\n              <CardTitle>\n                <IntlMessages id=\"dropdowns.sizing\" />\n              </CardTitle>\n              <ButtonDropdown\n                className=\"mr-1 mb-1\"\n                isOpen={isOpenSizingLg}\n                toggle={() => setIsOpenSizingLg(!isOpenSizingLg)}\n              >\n                <DropdownToggle caret size=\"lg\" outline color=\"info\">\n                  <IntlMessages id=\"dropdowns.large-button\" />\n                </DropdownToggle>\n                <DropdownMenu>\n                  <DropdownItem>\n                    <IntlMessages id=\"dropdowns.another-action\" />\n                  </DropdownItem>\n                  <DropdownItem>\n                    <IntlMessages id=\"dropdowns.another-action\" />\n                  </DropdownItem>\n                </DropdownMenu>\n              </ButtonDropdown>\n\n              <ButtonDropdown\n                className=\"mr-1 mb-1\"\n                isOpen={isOpenSizingSm}\n                toggle={() => setIsOpenSizingSm(!isOpenSizingSm)}\n              >\n                <DropdownToggle caret size=\"sm\" outline color=\"info\">\n                  <IntlMessages id=\"dropdowns.small-button\" />\n                </DropdownToggle>\n                <DropdownMenu>\n                  <DropdownItem>\n                    <IntlMessages id=\"dropdowns.another-action\" />\n                  </DropdownItem>\n                  <DropdownItem>\n                    <IntlMessages id=\"dropdowns.another-action\" />\n                  </DropdownItem>\n                </DropdownMenu>\n              </ButtonDropdown>\n\n              <ButtonDropdown\n                className=\"mr-1 mb-1\"\n                isOpen={isOpenSizingXs}\n                toggle={() => setIsOpenSizingXs(!isOpenSizingXs)}\n              >\n                <DropdownToggle caret size=\"xs\" outline color=\"info\">\n                  <IntlMessages id=\"dropdowns.small-button\" />\n                </DropdownToggle>\n                <DropdownMenu>\n                  <DropdownItem>\n                    <IntlMessages id=\"dropdowns.another-action\" />\n                  </DropdownItem>\n                  <DropdownItem>\n                    <IntlMessages id=\"dropdowns.another-action\" />\n                  </DropdownItem>\n                </DropdownMenu>\n              </ButtonDropdown>\n            </CardBody>\n          </Card>\n        </Colxx>\n      </Row>\n\n      <Row className=\"mb-4\">\n        <Colxx xxs=\"12\">\n          <Card>\n            <CardBody>\n              <CardTitle>\n                <IntlMessages id=\"dropdowns.drop-directions\" />\n              </CardTitle>\n              <ButtonDropdown\n                direction=\"up\"\n                className=\"mr-1 mb-5\"\n                isOpen={btnDropUp}\n                toggle={() => setBtnDropUp(!btnDropUp)}\n              >\n                <DropdownToggle caret>\n                  <IntlMessages id=\"dropdowns.dropup\" />\n                </DropdownToggle>\n                <DropdownMenu>\n                  <DropdownItem>\n                    <IntlMessages id=\"dropdowns.another-action\" />\n                  </DropdownItem>\n                  <DropdownItem>\n                    <IntlMessages id=\"dropdowns.another-action\" />\n                  </DropdownItem>\n                </DropdownMenu>\n              </ButtonDropdown>\n\n              <ButtonDropdown\n                direction=\"left\"\n                className=\"mr-1 mb-5\"\n                isOpen={btnDropLeft}\n                toggle={() => setBtnDropLeft(!btnDropLeft)}\n              >\n                <DropdownToggle caret>\n                  <IntlMessages id=\"dropdowns.dropleft\" />\n                </DropdownToggle>\n                <DropdownMenu>\n                  <DropdownItem>\n                    <IntlMessages id=\"dropdowns.another-action\" />\n                  </DropdownItem>\n                  <DropdownItem>\n                    <IntlMessages id=\"dropdowns.another-action\" />\n                  </DropdownItem>\n                </DropdownMenu>\n              </ButtonDropdown>\n\n              <ButtonDropdown\n                direction=\"right\"\n                className=\"mr-1 mb-5\"\n                isOpen={btnDropRight}\n                toggle={() => setBtnDropRight(!btnDropRight)}\n              >\n                <DropdownToggle caret>\n                  <IntlMessages id=\"dropdowns.dropright\" />\n                </DropdownToggle>\n                <DropdownMenu>\n                  <DropdownItem>\n                    <IntlMessages id=\"dropdowns.another-action\" />\n                  </DropdownItem>\n                  <DropdownItem>\n                    <IntlMessages id=\"dropdowns.another-action\" />\n                  </DropdownItem>\n                </DropdownMenu>\n              </ButtonDropdown>\n            </CardBody>\n          </Card>\n        </Colxx>\n      </Row>\n\n      <Row className=\"mb-4\">\n        <Colxx xxs=\"12\">\n          <Card>\n            <CardBody>\n              <CardTitle>\n                <IntlMessages id=\"dropdowns.drop-directions\" />\n              </CardTitle>\n              <CardSubtitle>\n                <IntlMessages id=\"dropdowns.left\" />\n              </CardSubtitle>\n              <UncontrolledDropdown className=\"mb-5\">\n                <DropdownToggle caret color=\"secondary\" outline>\n                  <IntlMessages id=\"dropdowns.dropdown\" />\n                </DropdownToggle>\n                <DropdownMenu>\n                  <DropdownItem header>\n                    <IntlMessages id=\"dropdowns.header\" />\n                  </DropdownItem>\n                  <DropdownItem disabled>\n                    <IntlMessages id=\"dropdowns.action\" />\n                  </DropdownItem>\n                  <DropdownItem>\n                    <IntlMessages id=\"dropdowns.another-action\" />\n                  </DropdownItem>\n                  <DropdownItem divider />\n                  <DropdownItem>\n                    <IntlMessages id=\"dropdowns.another-action\" />\n                  </DropdownItem>\n                </DropdownMenu>\n              </UncontrolledDropdown>\n\n              <CardSubtitle>\n                <IntlMessages id=\"dropdowns.right\" />\n              </CardSubtitle>\n\n              <UncontrolledDropdown>\n                <DropdownToggle caret color=\"secondary\" outline>\n                  <IntlMessages id=\"dropdowns.dropdown\" />\n                </DropdownToggle>\n                <DropdownMenu right>\n                  <DropdownItem header>\n                    <IntlMessages id=\"dropdowns.header\" />\n                  </DropdownItem>\n                  <DropdownItem disabled>\n                    <IntlMessages id=\"dropdowns.action\" />\n                  </DropdownItem>\n                  <DropdownItem>\n                    <IntlMessages id=\"dropdowns.another-action\" />\n                  </DropdownItem>\n                  <DropdownItem divider />\n                  <DropdownItem>\n                    <IntlMessages id=\"dropdowns.another-action\" />\n                  </DropdownItem>\n                </DropdownMenu>\n              </UncontrolledDropdown>\n            </CardBody>\n          </Card>\n        </Colxx>\n      </Row>\n    </>\n  );\n};\nexport default DropDownsUi;\n","/* eslint-disable react/no-array-index-key */\nimport React from 'react';\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\nimport { NavLink } from 'react-router-dom';\nimport IntlMessages from 'helpers/IntlMessages';\nimport { adminRoot } from 'constants/defaultValues';\n\nconst getMenuTitle = (sub) => {\n  if (`/${sub}` === adminRoot) return <IntlMessages id=\"menu.home\" />;\n  return <IntlMessages id={`menu.${sub}`} />;\n};\n\nconst getUrl = (path, sub) => {\n  return path.split(sub)[0] + sub;\n};\n\nconst BreadcrumbContainer = ({ heading, match }) => {\n  return (\n    <>\n      {heading && (\n        <h1>\n          <IntlMessages id={heading} />\n        </h1>\n      )}\n      <BreadcrumbItems match={match} />\n    </>\n  );\n};\n\nconst BreadcrumbItems = ({ match }) => {\n  const path = match.path.substr(1);\n  let paths = path.split('/');\n  if (paths[paths.length - 1].indexOf(':') > -1) {\n    paths = paths.filter((x) => x.indexOf(':') === -1);\n  }\n  return (\n    <>\n      <Breadcrumb className=\"pt-0 breadcrumb-container d-none d-sm-block d-lg-inline-block\">\n        {paths.map((sub, index) => {\n          return (\n            <BreadcrumbItem key={index} active={paths.length === index + 1}>\n              {paths.length !== index + 1 ? (\n                <NavLink to={`/${getUrl(path, sub, index)}`}>\n                  {getMenuTitle(sub)}\n                </NavLink>\n              ) : (\n                getMenuTitle(sub)\n              )}\n            </BreadcrumbItem>\n          );\n        })}\n      </Breadcrumb>\n    </>\n  );\n};\n\nexport default BreadcrumbContainer;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  listTag: tagPropType,\n  className: PropTypes.string,\n  listClassName: PropTypes.string,\n  cssModule: PropTypes.object,\n  children: PropTypes.node,\n  'aria-label': PropTypes.string\n};\nvar defaultProps = {\n  tag: 'nav',\n  listTag: 'ol',\n  'aria-label': 'breadcrumb'\n};\n\nvar Breadcrumb = function Breadcrumb(props) {\n  var className = props.className,\n      listClassName = props.listClassName,\n      cssModule = props.cssModule,\n      children = props.children,\n      Tag = props.tag,\n      ListTag = props.listTag,\n      label = props['aria-label'],\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"listClassName\", \"cssModule\", \"children\", \"tag\", \"listTag\", \"aria-label\"]);\n\n  var classes = mapToCssModules(classNames(className), cssModule);\n  var listClasses = mapToCssModules(classNames('breadcrumb', listClassName), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    \"aria-label\": label\n  }), /*#__PURE__*/React.createElement(ListTag, {\n    className: listClasses\n  }, children));\n};\n\nBreadcrumb.propTypes = propTypes;\nBreadcrumb.defaultProps = defaultProps;\nexport default Breadcrumb;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  active: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'li'\n};\n\nvar BreadcrumbItem = function BreadcrumbItem(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      active = props.active,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"active\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, active ? 'active' : false, 'breadcrumb-item'), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    \"aria-current\": active ? 'page' : undefined\n  }));\n};\n\nBreadcrumbItem.propTypes = propTypes;\nBreadcrumbItem.defaultProps = defaultProps;\nexport default BreadcrumbItem;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardTitle = function CardTitle(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-title'), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nCardTitle.propTypes = propTypes;\nCardTitle.defaultProps = defaultProps;\nexport default CardTitle;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Dropdown from './Dropdown';\nvar propTypes = {\n  children: PropTypes.node\n};\n\nvar ButtonDropdown = function ButtonDropdown(props) {\n  return /*#__PURE__*/React.createElement(Dropdown, _extends({\n    group: true\n  }, props));\n};\n\nButtonDropdown.propTypes = propTypes;\nexport default ButtonDropdown;"],"sourceRoot":""}