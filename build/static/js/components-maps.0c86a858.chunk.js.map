{"version":3,"sources":["views/app/ui/components/maps.js","containers/navs/Breadcrumb.js"],"names":["MapWithAMarker","withScriptjs","withGoogleMap","_jsx","GoogleMap","defaultZoom","defaultCenter","lat","lng","children","Marker","position","MapsUi","_ref","match","_jsxs","_Fragment","Row","Colxx","xxs","Breadcrumb","heading","Separator","className","Card","CardBody","CardTitle","IntlMessages","id","googleMapURL","loadingElement","containerElement","mapElement","YMaps","query","lang","Map","defaultState","center","zoom","Placemark","defaultGeometry","getMenuTitle","sub","concat","adminRoot","getUrl","path","split","BreadcrumbItems","_ref2","substr","paths","length","indexOf","filter","x","map","index","BreadcrumbItem","active","NavLink","to","BreadcrumbContainer"],"mappings":"sHAAA,4GAaMA,EAAiBC,uBACrBC,yBAAc,kBACZC,cAACC,YAAS,CAACC,YAAa,EAAGC,cAAe,CAAEC,KAAM,OAAQC,IAAK,SAAUC,SACvEN,cAACO,SAAM,CAACC,SAAU,CAAEJ,KAAM,OAAQC,IAAK,YAC7B,KAmDDI,UA/CA,SAAHC,GAAmB,IAAbC,EAAKD,EAALC,MAChB,OACEC,eAAAC,WAAA,CAAAP,SAAA,CACEN,cAACc,IAAG,CAAAR,SACFM,eAACG,IAAK,CAACC,IAAI,KAAIV,SAAA,CACbN,cAACiB,IAAU,CAACC,QAAQ,YAAYP,MAAOA,IACvCX,cAACmB,IAAS,CAACC,UAAU,cAGzBpB,cAACc,IAAG,CAAAR,SACFM,eAACG,IAAK,CAACC,IAAI,KAAIV,SAAA,CACbN,cAACqB,IAAI,CAACD,UAAU,OAAMd,SACpBM,eAACU,IAAQ,CAAAhB,SAAA,CACPN,cAACuB,IAAS,CAAAjB,SACRN,cAACwB,IAAY,CAACC,GAAG,kBAEnBzB,cAACH,EAAc,CACb6B,aAAa,gIACbC,eAAgB3B,cAAA,OAAKoB,UAAU,aAC/BQ,iBAAkB5B,cAAA,OAAKoB,UAAU,aACjCS,WAAY7B,cAAA,OAAKoB,UAAU,oBAKjCpB,cAACqB,IAAI,CAACD,UAAU,OAAMd,SACpBM,eAACU,IAAQ,CAAAhB,SAAA,CACPN,cAACuB,IAAS,CAAAjB,SACRN,cAACwB,IAAY,CAACC,GAAG,kBAEnBzB,cAAA,OAAKoB,UAAU,WAAUd,SACvBN,cAAC8B,IAAK,CAACC,MAAO,CAAEC,KAAM,SAAU1B,SAC9BN,cAACiC,IAAG,CACFb,UAAU,WACVc,aAAc,CAAEC,OAAQ,EAAE,OAAQ,SAAUC,KAAM,GAAI9B,SAEtDN,cAACqC,IAAS,CAACC,gBAAiB,EAAE,OAAQ,6BAU1D,C,mCCnEA,6DAOMC,EAAe,SAACC,GACpB,MAAI,IAAAC,OAAID,KAAUE,IAAkB1C,cAACwB,IAAY,CAACC,GAAG,cAC9CzB,cAACwB,IAAY,CAACC,GAAE,QAAAgB,OAAUD,IACnC,EAEMG,EAAS,SAACC,EAAMJ,GACpB,OAAOI,EAAKC,MAAML,GAAK,GAAKA,CAC9B,EAeMM,EAAkB,SAAHC,GAAmB,IAChCH,EADwBG,EAALpC,MACNiC,KAAKI,OAAO,GAC3BC,EAAQL,EAAKC,MAAM,KAIvB,OAHII,EAAMA,EAAMC,OAAS,GAAGC,QAAQ,MAAQ,IAC1CF,EAAQA,EAAMG,QAAO,SAACC,GAAC,OAAyB,IAApBA,EAAEF,QAAQ,IAAW,KAGjDnD,cAAAa,WAAA,CAAAP,SACEN,cAACiB,IAAU,CAACG,UAAU,gEAA+Dd,SAClF2C,EAAMK,KAAI,SAACd,EAAKe,GACf,OACEvD,cAACwD,IAAc,CAAaC,OAAQR,EAAMC,SAAWK,EAAQ,EAAEjD,SAC5D2C,EAAMC,SAAWK,EAAQ,EACxBvD,cAAC0D,IAAO,CAACC,GAAE,IAAAlB,OAAME,EAAOC,EAAMJ,IAAclC,SACzCiC,EAAaC,KAGhBD,EAAaC,IANIe,EAUzB,OAIR,EAEeK,IAxCa,SAAHlD,GAA4B,IAAtBQ,EAAOR,EAAPQ,QAASP,EAAKD,EAALC,MACtC,OACEC,eAAAC,WAAA,CAAAP,SAAA,CACGY,GACClB,cAAA,MAAAM,SACEN,cAACwB,IAAY,CAACC,GAAIP,MAGtBlB,cAAC8C,EAAe,CAACnC,MAAOA,MAG9B,C","file":"static/js/components-maps.0c86a858.chunk.js","sourcesContent":["import React from 'react';\nimport { Row, Card, CardBody, CardTitle } from 'reactstrap';\nimport { YMaps, Map, Placemark } from 'react-yandex-maps';\nimport {\n  withScriptjs,\n  withGoogleMap,\n  GoogleMap,\n  Marker,\n} from 'react-google-maps';\nimport IntlMessages from 'helpers/IntlMessages';\nimport { Colxx, Separator } from 'components/common/CustomBootstrap';\nimport Breadcrumb from 'containers/navs/Breadcrumb';\n\nconst MapWithAMarker = withScriptjs(\n  withGoogleMap(() => (\n    <GoogleMap defaultZoom={8} defaultCenter={{ lat: -34.397, lng: 150.644 }}>\n      <Marker position={{ lat: -34.397, lng: 150.644 }} />\n    </GoogleMap>\n  ))\n);\n\nconst MapsUi = ({ match }) => {\n  return (\n    <>\n      <Row>\n        <Colxx xxs=\"12\">\n          <Breadcrumb heading=\"menu.maps\" match={match} />\n          <Separator className=\"mb-5\" />\n        </Colxx>\n      </Row>\n      <Row>\n        <Colxx xxs=\"12\">\n          <Card className=\"mb-4\">\n            <CardBody>\n              <CardTitle>\n                <IntlMessages id=\"maps.google\" />\n              </CardTitle>\n              <MapWithAMarker\n                googleMapURL=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyCO8MfadmlotuuHC8wmjwL_46I5QAMIiRU&v=3.exp&libraries=geometry,drawing,places\"\n                loadingElement={<div className=\"map-item\" />}\n                containerElement={<div className=\"map-item\" />}\n                mapElement={<div className=\"map-item\" />}\n              />\n            </CardBody>\n          </Card>\n\n          <Card className=\"mb-4\">\n            <CardBody>\n              <CardTitle>\n                <IntlMessages id=\"maps.yandex\" />\n              </CardTitle>\n              <div className=\"map-item\">\n                <YMaps query={{ lang: 'en-US' }}>\n                  <Map\n                    className=\"map-item\"\n                    defaultState={{ center: [-34.397, 150.644], zoom: 9 }}\n                  >\n                    <Placemark defaultGeometry={[-34.397, 150.644]} />\n                  </Map>\n                </YMaps>\n              </div>\n            </CardBody>\n          </Card>\n        </Colxx>\n      </Row>\n    </>\n  );\n};\nexport default MapsUi;\n","/* eslint-disable react/no-array-index-key */\nimport React from 'react';\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\nimport { NavLink } from 'react-router-dom';\nimport IntlMessages from 'helpers/IntlMessages';\nimport { adminRoot } from 'constants/defaultValues';\n\nconst getMenuTitle = (sub) => {\n  if (`/${sub}` === adminRoot) return <IntlMessages id=\"menu.home\" />;\n  return <IntlMessages id={`menu.${sub}`} />;\n};\n\nconst getUrl = (path, sub) => {\n  return path.split(sub)[0] + sub;\n};\n\nconst BreadcrumbContainer = ({ heading, match }) => {\n  return (\n    <>\n      {heading && (\n        <h1>\n          <IntlMessages id={heading} />\n        </h1>\n      )}\n      <BreadcrumbItems match={match} />\n    </>\n  );\n};\n\nconst BreadcrumbItems = ({ match }) => {\n  const path = match.path.substr(1);\n  let paths = path.split('/');\n  if (paths[paths.length - 1].indexOf(':') > -1) {\n    paths = paths.filter((x) => x.indexOf(':') === -1);\n  }\n  return (\n    <>\n      <Breadcrumb className=\"pt-0 breadcrumb-container d-none d-sm-block d-lg-inline-block\">\n        {paths.map((sub, index) => {\n          return (\n            <BreadcrumbItem key={index} active={paths.length === index + 1}>\n              {paths.length !== index + 1 ? (\n                <NavLink to={`/${getUrl(path, sub, index)}`}>\n                  {getMenuTitle(sub)}\n                </NavLink>\n              ) : (\n                getMenuTitle(sub)\n              )}\n            </BreadcrumbItem>\n          );\n        })}\n      </Breadcrumb>\n    </>\n  );\n};\n\nexport default BreadcrumbContainer;\n"],"sourceRoot":""}