{"version":3,"file":"static/js/forms-components.713bf67e.chunk.js","mappings":"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","sources":["components/common/CustomSelectInput.js","components/common/Rating.js","containers/navs/Breadcrumb.js","containers/forms/CustomInputExample.js","containers/forms/ReactSelectExample.js","components/common/ReactAutoSuggest.js","containers/forms/ReactAutoSugegstExample.js","data/cakes.js","containers/forms/DatePickerExamples.js","containers/forms/DropzoneExample.js","containers/forms/TagsInputExample.js","containers/forms/SwitchExamples.js","components/common/SliderTooltips.js","containers/forms/SliderExamples.js","containers/forms/RatingExamples.js","views/app/ui/forms/components.js"],"sourcesContent":["import React from 'react';\nimport { components } from 'react-select';\n\nconst CustomSelectInput = (props) => {\n  const customProps = { ...props };\n  delete customProps.autoCorrect;\n  delete customProps.autoCapitalize;\n  return <components.Input {...customProps} />;\n};\n\nexport default CustomSelectInput;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Rater from 'react-rater';\nimport 'react-rater/lib/react-rater.css';\n\nconst Rating = (props) => (\n  <Rater {...props}>\n    <Star />\n  </Rater>\n);\n\nconst Star = (props) => {\n  const starProps = { ...props };\n  const nameMap = {\n    isDisabled: 'is-disabled',\n    isActive: 'is-active',\n    isActiveHalf: 'is-active-half',\n    willBeActive: 'will-be-active',\n  };\n\n  const className = Object.keys(nameMap)\n    .filter((prop) => (delete starProps[prop], props[prop]))\n    .map((prop) => nameMap[prop])\n    .join(' ');\n  return <div className={`react-rater-star ${className}`} {...starProps} />;\n};\n\nStar.defaultProps = {\n  willBeActive: false,\n  isActive: false,\n  isActiveHalf: false,\n  isDisabled: false,\n};\n\nStar.propTypes = {\n  isActive: PropTypes.bool,\n  isActiveHalf: PropTypes.bool,\n  willBeActive: PropTypes.bool,\n  isDisabled: PropTypes.bool,\n};\n\nexport default Rating;\n","import React from 'react';\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\nimport { NavLink } from 'react-router-dom';\nimport IntlMessages from 'helpers/IntlMessages';\nimport { adminRoot } from 'constants/defaultValues';\n\nconst getMenuTitle = (sub) => {\n  if (`/${sub}` === adminRoot) return <IntlMessages id=\"menu.home\" />;\n  return <IntlMessages id={`menu.${sub}`} />;\n};\n\nconst getUrl = (path, sub) => {\n  return path.split(sub)[0] + sub;\n};\n\nconst BreadcrumbContainer = ({ heading, match }) => {\n  return (\n    <>\n      {heading && (\n        <h1>\n          <IntlMessages id={heading} />\n        </h1>\n      )}\n      <BreadcrumbItems match={match} />\n    </>\n  );\n};\n\nconst BreadcrumbItems = ({ match }) => {\n  const path = match.path.substr(1);\n  let paths = path.split('/');\n  if (paths[paths.length - 1].indexOf(':') > -1) {\n    paths = paths.filter((x) => x.indexOf(':') === -1);\n  }\n  return (\n    <>\n      <Breadcrumb className=\"pt-0 breadcrumb-container d-none d-sm-block d-lg-inline-block\">\n        {paths.map((sub, index) => {\n          return (\n            <BreadcrumbItem key={index} active={paths.length === index + 1}>\n              {paths.length !== index + 1 ? (\n                <NavLink to={`/${getUrl(path, sub, index)}`}>\n                  {getMenuTitle(sub)}\n                </NavLink>\n              ) : (\n                getMenuTitle(sub)\n              )}\n            </BreadcrumbItem>\n          );\n        })}\n      </Breadcrumb>\n    </>\n  );\n};\n\nexport default BreadcrumbContainer;\n","import React from 'react';\nimport { FormGroup, Label, CustomInput, Form } from 'reactstrap';\nimport IntlMessages from 'helpers/IntlMessages';\n\nconst CustomInputExample = () => {\n  return (\n    <Form>\n      <FormGroup>\n        <Label for=\"exCustomCheckbox\">\n          <IntlMessages id=\"form-components.checkboxes\" />\n        </Label>\n        <div>\n          <CustomInput\n            type=\"checkbox\"\n            id=\"exCustomCheckbox\"\n            label=\"این چک باکس رو علامت بزنین\"\n          />\n          <CustomInput\n            type=\"checkbox\"\n            id=\"exCustomCheckbox2\"\n            label=\"یا این یکی\"\n          />\n          <CustomInput\n            type=\"checkbox\"\n            id=\"exCustomCheckbox3\"\n            label=\"ولی نه این یکی چون غیرفعاله\"\n            disabled\n          />\n        </div>\n      </FormGroup>\n      <FormGroup>\n        <Label for=\"exCustomRadio\">\n          <IntlMessages id=\"form-components.radios\" />\n        </Label>\n        <div>\n          <CustomInput\n            type=\"radio\"\n            id=\"exCustomRadio\"\n            name=\"customRadio\"\n            label=\"این رادیوباتن کاستوم شده رو تیک بزن\"\n          />\n          <CustomInput\n            type=\"radio\"\n            id=\"exCustomRadio2\"\n            name=\"customRadio\"\n            label=\"یا این یکی\"\n          />\n          <CustomInput\n            type=\"radio\"\n            id=\"exCustomRadio3\"\n            label=\"ولی نه این یکی چون غیرفعاله\"\n            disabled\n          />\n        </div>\n      </FormGroup>\n      <FormGroup>\n        <Label for=\"exCustomInline\">\n          <IntlMessages id=\"form-components.inline\" />\n        </Label>\n        <div>\n          <CustomInput\n            type=\"checkbox\"\n            id=\"exCustomInline\"\n            label=\"یه اینپوت خطی\"\n            inline\n          />\n          <CustomInput\n            type=\"checkbox\"\n            id=\"exCustomInline2\"\n            label=\"یکی دیگه کنارش\"\n            inline\n          />\n        </div>\n      </FormGroup>\n    </Form>\n  );\n};\n\nexport default CustomInputExample;\n","import React, { useState } from 'react';\nimport { Row } from 'reactstrap';\nimport Select from 'react-select';\nimport IntlMessages from 'helpers/IntlMessages';\nimport CustomSelectInput from 'components/common/CustomSelectInput';\nimport { Colxx } from 'components/common/CustomBootstrap';\n\nconst selectData = [\n  { label: 'کیک', value: 'cake', key: 0 },\n  { label: 'کاپ کیک', value: 'cupcake', key: 1 },\n  { label: 'دسر', value: 'dessert', key: 2 },\n];\n\nconst ReactSelectExample = () => {\n  const [selectedOption, setSelectedOption] = useState('');\n  const [selectedOptions, setSelectedOptions] = useState([]);\n\n  return (\n    <Row>\n      <Colxx xxs=\"12\" md=\"6\" className=\"mb-5\">\n        <label>\n          <IntlMessages id=\"form-components.state-single\" />\n        </label>\n        <Select\n          components={{ Input: CustomSelectInput }}\n          className=\"react-select\"\n          classNamePrefix=\"react-select\"\n          name=\"form-field-name\"\n          value={selectedOption}\n          onChange={setSelectedOption}\n          options={selectData}\n        />\n      </Colxx>\n      <Colxx xxs=\"12\" md=\"6\">\n        <label>\n          <IntlMessages id=\"form-components.state-multiple\" />\n        </label>\n        <Select\n          components={{ Input: CustomSelectInput }}\n          className=\"react-select\"\n          classNamePrefix=\"react-select\"\n          isMulti\n          name=\"form-field-name\"\n          value={selectedOptions}\n          onChange={setSelectedOptions}\n          options={selectData}\n        />\n      </Colxx>\n    </Row>\n  );\n};\nexport default ReactSelectExample;\n","import React, { useState } from 'react';\nimport Autosuggest from 'react-autosuggest';\n\nconst getSuggestionValue = (suggestion) => suggestion.name;\n\nconst renderSuggestion = (suggestion) => <div>{suggestion.name}</div>;\n\nconst ReactAutoSuggest = ({ data, value, placeholder, onChange }) => {\n  const [valueState, setValueState] = useState(value);\n  const [dataState] = useState(data || []);\n  const [suggestions, setSuggestions] = useState([]);\n\n  const getSuggestions = (val) => {\n    if (val) {\n      const inputValue = val.trim().toLowerCase();\n      const inputLength = inputValue.length;\n\n      return inputLength === 0\n        ? []\n        : dataState.filter(\n            (d) => d.name.toLowerCase().slice(0, inputLength) === inputValue,\n          );\n    }\n    return dataState;\n  };\n\n  const changeInput = (event, { newValue }) => {\n    setValueState(newValue);\n    onChange(newValue);\n  };\n\n  const onSuggestionsFetchRequested = ({ value: val }) => {\n    setSuggestions(getSuggestions(val));\n  };\n\n  const onSuggestionsClearRequested = () => {\n    setSuggestions([]);\n  };\n\n  const inputProps = {\n    placeholder: placeholder || '',\n    value: valueState,\n    onChange: changeInput,\n  };\n\n  return (\n    <Autosuggest\n      suggestions={suggestions}\n      onSuggestionsFetchRequested={onSuggestionsFetchRequested}\n      onSuggestionsClearRequested={onSuggestionsClearRequested}\n      getSuggestionValue={getSuggestionValue}\n      renderSuggestion={renderSuggestion}\n      inputProps={inputProps}\n      theme={{\n        container: 'autosuggest',\n        input: 'form-control',\n        inputOpen: 'react-autosuggest__input--open',\n        suggestionsContainer: 'react-autosuggest__suggestions-container',\n        suggestionsContainerOpen:\n          'react-autosuggest__suggestions-container--open',\n        suggestionsList: `react-autosuggest__suggestions-list ${\n          suggestions.length ? 'show' : ''\n        }`,\n        suggestionFocused: 'active',\n        suggestion: 'react-autosuggest__suggestion',\n      }}\n    />\n  );\n};\n\nexport default ReactAutoSuggest;\n","import React, { useState } from 'react';\nimport { injectIntl } from 'react-intl';\nimport ReactAutoSuggest from 'components/common/ReactAutoSuggest';\nimport cakes from 'data/cakes';\n\nconst data = cakes.map((item) => {\n  return { name: item.name };\n});\n\nconst ReactAutoSugegstExample = ({ intl }) => {\n  const [value, setValue] = useState('');\n  const { messages } = intl;\n\n  return (\n    <ReactAutoSuggest\n      placeholder={messages['form-components.type-a-cake']}\n      value={value}\n      onChange={(val) => setValue(val)}\n      data={data}\n    />\n  );\n};\n\nexport default injectIntl(ReactAutoSugegstExample);\n","import { adminRoot } from '../constants/defaultValues';\n\nconst cakes = [\n  {\n    title: 'کیک اسفنجی و کرم',\n    link: `${adminRoot}/pages/product/details`,\n  },\n  {\n    title: 'کیک سیب',\n    link: `${adminRoot}/pages/product/details`,\n  },\n  {\n    title: 'کیک شکلات',\n    link: `${adminRoot}/pages/product/details`,\n  },\n  {\n    title: 'کیک گیلاس',\n    link: `${adminRoot}/pages/product/details`,\n  },\n  {\n    title: 'کیک فنجانی',\n    link: `${adminRoot}/pages/product/details`,\n  },\n  {\n    title: 'کیک هویج',\n    link: `${adminRoot}/pages/product/details`,\n  },\n  {\n    title: 'کیک قهوه',\n    link: `${adminRoot}/pages/product/details`,\n  },\n  {\n    title: 'فت راسکل',\n    link: `${adminRoot}/pages/product/details`,\n  },\n  {\n    title: 'پارکین',\n    link: `${adminRoot}/pages/product/details`,\n  },\n  {\n    title: 'سالزبورگی',\n    link: `${adminRoot}/pages/product/details`,\n  },\n  {\n    title: 'سوفله',\n    link: `${adminRoot}/pages/product/details`,\n  },\n  {\n    title: 'ناپلئونی',\n    link: `${adminRoot}/pages/product/details`,\n  },\n  {\n    title: 'تارت',\n    link: `${adminRoot}/pages/product/details`,\n  },\n  {\n    title: 'کیک چای',\n    link: `${adminRoot}/pages/product/details`,\n  },\n  {\n    title: 'تیرامیسو',\n    link: `${adminRoot}/pages/product/details`,\n  },\n  {\n    title: 'ناپلئونی',\n    link: `${adminRoot}/pages/product/details`,\n  },\n  {\n    title: 'بوچلاتو',\n    link: `${adminRoot}/pages/product/details`,\n  },\n  {\n    title: 'کیک کره ای',\n    link: `${adminRoot}/pages/product/details`,\n  },\n  {\n    title: 'چیز کیک',\n    link: `${adminRoot}/pages/product/details`,\n  },\n  {\n    title: 'کیک میوه ای',\n    link: `${adminRoot}/pages/product/details`,\n  },\n  {\n    title: 'سالزبورگی',\n    link: `${adminRoot}/pages/product/details`,\n  },\n  {\n    title: 'سوفله',\n    link: `${adminRoot}/pages/product/details`,\n  },\n  {\n    title: 'ناپلئونی',\n    link: `${adminRoot}/pages/product/details`,\n  },\n  {\n    title: 'تارت',\n    link: `${adminRoot}/pages/product/details`,\n  },\n];\nexport default cakes;\n","import React, { useState } from 'react';\nimport { injectIntl } from 'react-intl';\nimport { Row, Card, CardBody, CardTitle } from 'reactstrap';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\n\nimport IntlMessages from 'helpers/IntlMessages';\nimport { Colxx } from 'components/common/CustomBootstrap';\n\nconst DatePickerExamples = ({ intl }) => {\n  const [startDate, setStartDate] = useState(new Date());\n  const [startDateTime, setStartDateTime] = useState(new Date());\n  const [startDateRange, setStartDateRange] = useState(new Date());\n  const [endDateRange, setEndDateRange] = useState(new Date());\n  const [embeddedDate, setEmbeddedDate] = useState(new Date());\n  const { messages } = intl;\n\n  return (\n    <Row>\n      <Colxx xxs=\"12\" xl=\"8\" className=\"mb-4\">\n        <Card>\n          <CardBody>\n            <CardTitle>\n              <IntlMessages id=\"form-components.date-picker\" />\n            </CardTitle>\n            <label>\n              <IntlMessages id=\"form-components.date\" />\n            </label>\n            <div className=\"mb-5\">\n              <DatePicker\n                selected={startDate}\n                onChange={setStartDate}\n                placeholderText={messages['forms.date']}\n              />\n            </div>\n            <label>\n              <IntlMessages id=\"form-components.date-range\" />\n            </label>\n            <Row className=\"mb-5\">\n              <Colxx xxs=\"6\">\n                <DatePicker\n                  selected={startDateRange}\n                  selectsStart\n                  startDate={startDateRange}\n                  endDate={endDateRange}\n                  onChange={setStartDateRange}\n                  placeholderText={messages['form-components.start']}\n                />\n              </Colxx>\n              <Colxx xxs=\"6\">\n                <DatePicker\n                  selected={endDateRange}\n                  selectsEnd\n                  startDate={startDateRange}\n                  endDate={endDateRange}\n                  onChange={setEndDateRange}\n                  placeholderText={messages['form-components.end']}\n                />\n              </Colxx>\n            </Row>\n            <Row className=\"mb-5\">\n              <Colxx xxs=\"12\">\n                <label>\n                  <IntlMessages id=\"form-components.date-with-time\" />\n                </label>\n                <DatePicker\n                  selected={startDateTime}\n                  onChange={setStartDateTime}\n                  placeholderText={messages['forms.date']}\n                  showTimeSelect\n                  timeFormat=\"HH:mm\"\n                  timeIntervals={15}\n                  dateFormat=\"LLL\"\n                  timeCaption=\"Time\"\n                />\n              </Colxx>\n            </Row>\n          </CardBody>\n        </Card>\n      </Colxx>\n\n      <Colxx xxs=\"12\" xl=\"4\" className=\"mb-4\">\n        <Card className=\"h-100\">\n          <CardBody>\n            <CardTitle>\n              <IntlMessages id=\"form-components.embedded\" />\n            </CardTitle>\n            <DatePicker\n              calendarClassName=\"embedded\"\n              inline\n              selected={embeddedDate}\n              onChange={setEmbeddedDate}\n            />\n          </CardBody>\n        </Card>\n      </Colxx>\n    </Row>\n  );\n};\nexport default injectIntl(DatePickerExamples);\n","import React, { Component } from 'react';\nimport DropzoneComponent from 'react-dropzone-component';\nimport 'dropzone/dist/min/dropzone.min.css';\n\nconst ReactDOMServer = require('react-dom/server');\n\nconst dropzoneComponentConfig = {\n  postUrl: 'https://httpbin.org/post',\n};\nconst dropzoneConfig = {\n  thumbnailHeight: 160,\n  maxFilesize: 2,\n  previewTemplate: ReactDOMServer.renderToStaticMarkup(\n    <div className=\"dz-preview dz-file-preview mb-3\">\n      <div className=\"d-flex flex-row \">\n        <div className=\"p-0 w-30 position-relative\">\n          <div className=\"dz-error-mark\">\n            <span>\n              <i />{' '}\n            </span>\n          </div>\n          <div className=\"dz-success-mark\">\n            <span>\n              <i />\n            </span>\n          </div>\n          <div className=\"preview-container\">\n            <img data-dz-thumbnail className=\"img-thumbnail border-0\" />\n            <i className=\"simple-icon-doc preview-icon\" />\n          </div>\n        </div>\n        <div className=\"pl-3 pt-2 pr-2 pb-1 w-70 dz-details position-relative\">\n          <div>\n            {' '}\n            <span data-dz-name />{' '}\n          </div>\n          <div className=\"text-primary text-extra-small\" data-dz-size />\n          <div className=\"dz-progress\">\n            <span className=\"dz-upload\" data-dz-uploadprogress />\n          </div>\n          <div className=\"dz-error-message\">\n            <span data-dz-errormessage />\n          </div>\n        </div>\n      </div>\n      <a href=\"#/\" className=\"remove\" data-dz-remove>\n        {' '}\n        <i className=\"glyph-icon simple-icon-trash\" />{' '}\n      </a>\n    </div>,\n  ),\n  headers: { 'My-Awesome-Header': 'header value' },\n};\n\nexport default class DropzoneExample extends Component {\n  clear() {\n    this.myDropzone.removeAllFiles(true);\n  }\n\n  render() {\n    return (\n      <DropzoneComponent\n        config={dropzoneComponentConfig}\n        djsConfig={dropzoneConfig}\n        eventHandlers={{\n          init: (dropzone) => {\n            this.myDropzone = dropzone;\n          },\n        }}\n      />\n    );\n  }\n}\n","import React, { useState } from 'react';\nimport { injectIntl } from 'react-intl';\nimport TagsInput from 'react-tagsinput';\nimport 'react-tagsinput/react-tagsinput.css';\n\nconst TagsInputExample = ({ intl }) => {\n  const [tags, setTags] = useState([]);\n  const { messages } = intl;\n\n  return (\n    <TagsInput\n      value={tags}\n      onChange={setTags}\n      inputProps={{ placeholder: messages['form-components.tags'] }}\n    />\n  );\n};\nexport default injectIntl(TagsInputExample);\n","import React, { useState } from 'react';\nimport { Card, CardBody, CardTitle, Row } from 'reactstrap';\nimport Switch from 'rc-switch';\nimport 'rc-switch/assets/index.css';\n\nimport IntlMessages from 'helpers/IntlMessages';\nimport { Colxx } from 'components/common/CustomBootstrap';\n\nconst SwitchExamples = () => {\n  const [checkedPrimary, setCheckedPrimary] = useState(false);\n  const [checkedSecondary, setCheckedSecondary] = useState(true);\n  const [checkedPrimaryInverse, setCheckedPrimaryInverse] = useState(true);\n  const [checkedSecondaryInverse, setCheckedSecondaryInverse] = useState(false);\n\n  const [checkedPrimarySmall, setCheckedPrimarySmall] = useState(false);\n  const [checkedSecondarySmall, setCheckedSecondarySmall] = useState(true);\n  const [checkedPrimaryInverseSmall, setCheckedPrimaryInverseSmall] =\n    useState(true);\n  const [checkedSecondaryInverseSmall, setCheckedSecondaryInverseSmall] =\n    useState(false);\n\n  return (\n    <Card>\n      <CardBody>\n        <CardTitle>\n          <IntlMessages id=\"form-components.switch\" />\n        </CardTitle>\n        <Row className=\"mb-4\">\n          <Colxx xxs=\"6\">\n            <label>\n              <IntlMessages id=\"form-components.primary\" />\n            </label>\n            <Switch\n              className=\"custom-switch custom-switch-primary\"\n              checked={checkedPrimary}\n              onChange={(primary) => setCheckedPrimary(primary)}\n            />\n          </Colxx>\n\n          <Colxx xxs=\"6\">\n            <label>\n              <IntlMessages id=\"form-components.secondary\" />\n            </label>\n            <Switch\n              className=\"custom-switch custom-switch-secondary\"\n              checked={checkedSecondary}\n              onChange={(secondary) => setCheckedSecondary(secondary)}\n            />\n          </Colxx>\n        </Row>\n\n        <Row className=\"mb-4\">\n          <Colxx xxs=\"6\">\n            <label>\n              <IntlMessages id=\"form-components.primary-inverse\" />\n            </label>\n            <Switch\n              className=\"custom-switch custom-switch-primary-inverse\"\n              checked={checkedPrimaryInverse}\n              onChange={(primaryInverse) =>\n                setCheckedPrimaryInverse(primaryInverse)\n              }\n            />\n          </Colxx>\n\n          <Colxx xxs=\"6\">\n            <label>\n              <IntlMessages id=\"form-components.secondary-inverse\" />\n            </label>\n            <Switch\n              className=\"custom-switch custom-switch-secondary-inverse\"\n              checked={checkedSecondaryInverse}\n              onChange={(secondaryInverse) =>\n                setCheckedSecondaryInverse(secondaryInverse)\n              }\n            />\n          </Colxx>\n        </Row>\n\n        <Row className=\"mb-4\">\n          <Colxx xxs=\"6\">\n            <label>\n              <IntlMessages id=\"form-components.primary\" />\n            </label>\n            <Switch\n              className=\"custom-switch custom-switch-primary custom-switch-small\"\n              checked={checkedPrimarySmall}\n              onChange={(primary) => setCheckedPrimarySmall(primary)}\n            />\n          </Colxx>\n\n          <Colxx xxs=\"6\">\n            <label>\n              <IntlMessages id=\"form-components.secondary\" />\n            </label>\n            <Switch\n              className=\"custom-switch custom-switch-secondary custom-switch-small\"\n              checked={checkedSecondarySmall}\n              onChange={(secondary) => setCheckedSecondarySmall(secondary)}\n            />\n          </Colxx>\n        </Row>\n\n        <Row className=\"mb-4\">\n          <Colxx xxs=\"6\">\n            <label>\n              <IntlMessages id=\"form-components.primary-inverse\" />\n            </label>\n            <Switch\n              className=\"custom-switch custom-switch-primary-inverse custom-switch-small\"\n              checked={checkedPrimaryInverseSmall}\n              onChange={(primaryInverse) =>\n                setCheckedPrimaryInverseSmall(primaryInverse)\n              }\n            />\n          </Colxx>\n\n          <Colxx xxs=\"6\">\n            <label>\n              <IntlMessages id=\"form-components.secondary-inverse\" />\n            </label>\n            <Switch\n              className=\"custom-switch custom-switch-secondary-inverse custom-switch-small\"\n              checked={checkedSecondaryInverseSmall}\n              onChange={(secondaryInverse) =>\n                setCheckedSecondaryInverseSmall(secondaryInverse)\n              }\n            />\n          </Colxx>\n        </Row>\n      </CardBody>\n    </Card>\n  );\n};\nexport default SwitchExamples;\n","import React from 'react';\nimport Slider from 'rc-slider';\nimport 'rc-slider/assets/index.css';\n\nconst sliderHandle = ({ value, dragging, index, offset, ...restProps }) => {\n  const positionStyle = {\n    position: 'absolute',\n    left: `${offset}%`,\n    top: '150%',\n  };\n  const positionVerticalStyle = {\n    position: 'absolute',\n    top: `${90 - offset}%`,\n  };\n  console.log('...positionStyle', positionStyle);\n\n  return (\n    <span key={index}>\n      <div\n        className=\"rc-slider-tooltip\"\n        style={restProps.vertical ? positionVerticalStyle : positionStyle}\n      >\n        {`${value} تومن`}\n      </div>\n      <Slider.Handle value={value} offset={offset} {...restProps} />\n    </span>\n  );\n};\n\nconst SliderTooltip = (props) => {\n  return <Slider handle={props.handle || sliderHandle} {...props} />;\n};\n\nconst RangeTooltip = (props) => {\n  return <Slider range handle={props.handle || sliderHandle} {...props} />;\n};\nexport { SliderTooltip, RangeTooltip };\n","import React from 'react';\nimport { Row } from 'reactstrap';\nimport { Colxx } from 'components/common/CustomBootstrap';\nimport IntlMessages from 'helpers/IntlMessages';\n\nimport { SliderTooltip, RangeTooltip } from 'components/common/SliderTooltips';\n\nconst SliderExamples = () => {\n  return (\n    <Row>\n      <Colxx xxs=\"12\" sm=\"6\">\n        <label>\n          <IntlMessages id=\"form-components.double-slider\" />\n        </label>\n        <RangeTooltip\n          min={500}\n          max={1500}\n          className=\"mb-5\"\n          defaultValue={[800, 1200]}\n          allowCross={false}\n          pushable={100}\n        />\n      </Colxx>\n\n      <Colxx xxs=\"12\" sm=\"6\">\n        <label>\n          <IntlMessages id=\"form-components.single-slider\" />\n        </label>\n        <SliderTooltip\n          min={0}\n          max={2500}\n          defaultValue={1000}\n          className=\"mb-5\"\n          step={500}\n        />\n      </Colxx>\n\n      <Colxx xxs=\"12\" sm=\"6\">\n        <label>\n          <IntlMessages id=\"form-components.double-slider\" />\n        </label>\n        <RangeTooltip\n          min={500}\n          max={1500}\n          className=\"mb-5\"\n          defaultValue={[800, 1200]}\n          allowCross={false}\n          pushable={100}\n          vertical=\"true\"\n        />\n      </Colxx>\n\n      <Colxx xxs=\"12\" sm=\"6\">\n        <label>\n          <IntlMessages id=\"form-components.single-slider\" />\n        </label>\n        <SliderTooltip\n          min={0}\n          max={2500}\n          defaultValue={1000}\n          className=\"mb-5\"\n          step={500}\n          vertical=\"true\"\n        />\n      </Colxx>\n    </Row>\n  );\n};\n\nexport default SliderExamples;\n","import React from 'react';\nimport { Row } from 'reactstrap';\nimport { Colxx } from 'components/common/CustomBootstrap';\nimport IntlMessages from 'helpers/IntlMessages';\nimport Rating from 'components/common/Rating';\n\nconst RatingExamples = () => {\n  return (\n    <Row>\n      <Colxx xxs=\"12\" sm=\"6\">\n        <label>\n          <IntlMessages id=\"form-components.interactive\" />\n        </label>\n        <Rating total={5} rating={0} onRate={(rating) => {}} />\n      </Colxx>\n      <Colxx xxs=\"12\" sm=\"6\">\n        <label>\n          <IntlMessages id=\"form-components.readonly\" />\n        </label>\n        <Rating total={5} rating={5} interactive={false} />\n      </Colxx>\n    </Row>\n  );\n};\nexport default RatingExamples;\n","import React, { useRef } from 'react';\nimport { Row, Card, CardBody, CardTitle } from 'reactstrap';\n\nimport IntlMessages from 'helpers/IntlMessages';\nimport { Colxx, Separator } from 'components/common/CustomBootstrap';\nimport Breadcrumb from 'containers/navs/Breadcrumb';\n\nimport CustomInputExample from 'containers/forms/CustomInputExample';\nimport ReactSelectExample from 'containers/forms/ReactSelectExample';\nimport ReactAutoSugegstExample from 'containers/forms/ReactAutoSugegstExample';\nimport DatePickerExamples from 'containers/forms/DatePickerExamples';\nimport DropzoneExample from 'containers/forms/DropzoneExample';\nimport TagsInputExample from 'containers/forms/TagsInputExample';\nimport SwitchExamples from 'containers/forms/SwitchExamples';\nimport SliderExamples from 'containers/forms/SliderExamples';\nimport RatingExamples from 'containers/forms/RatingExamples';\n\nconst ComponentsUi = ({ match }) => {\n  const dropzone = useRef();\n  return (\n    <>\n      <Row>\n        <Colxx xxs=\"12\">\n          <Breadcrumb heading=\"menu.form-components\" match={match} />\n          <Separator className=\"mb-5\" />\n        </Colxx>\n      </Row>\n      <Row className=\"mb-4\">\n        <Colxx xxs=\"12\">\n          <Card>\n            <CardBody>\n              <CardTitle>\n                <IntlMessages id=\"form-components.custom-inputs\" />\n              </CardTitle>\n              <CustomInputExample />\n            </CardBody>\n          </Card>\n        </Colxx>\n      </Row>\n\n      <Row className=\"mb-4\">\n        <Colxx xxs=\"12\">\n          <Card>\n            <CardBody>\n              <CardTitle>\n                <IntlMessages id=\"form-components.react-select\" />\n              </CardTitle>\n              <ReactSelectExample />\n            </CardBody>\n          </Card>\n        </Colxx>\n      </Row>\n\n      <Row className=\"mb-4\">\n        <Colxx xxs=\"12\">\n          <Card>\n            <CardBody>\n              <CardTitle>\n                <IntlMessages id=\"form-components.react-autosuggest\" />\n              </CardTitle>\n              <Row className=\"mb-4\">\n                <Colxx xxs=\"12\" sm=\"6\">\n                  <ReactAutoSugegstExample />\n                </Colxx>\n              </Row>\n            </CardBody>\n          </Card>\n        </Colxx>\n      </Row>\n      <DatePickerExamples />\n      <Row className=\"mb-4\">\n        <Colxx xxs=\"12\">\n          <Card>\n            <CardBody>\n              <CardTitle>\n                <IntlMessages id=\"form-components.dropzone\" />\n              </CardTitle>\n              <DropzoneExample ref={dropzone} />\n            </CardBody>\n          </Card>\n        </Colxx>\n      </Row>\n\n      <Row className=\"mb-4\">\n        <Colxx xxs=\"12\">\n          <Card>\n            <CardBody>\n              <CardTitle>\n                <IntlMessages id=\"form-components.tags\" />\n              </CardTitle>\n              <TagsInputExample />\n            </CardBody>\n          </Card>\n        </Colxx>\n      </Row>\n\n      <Row className=\"mb-4\">\n        <Colxx xxs=\"12\">\n          <SwitchExamples />\n        </Colxx>\n      </Row>\n\n      <Row className=\"mb-4\">\n        <Colxx xxs=\"12\">\n          <Card>\n            <CardBody>\n              <CardTitle>\n                <IntlMessages id=\"form-components.slider\" />\n              </CardTitle>\n              <SliderExamples />\n            </CardBody>\n          </Card>\n        </Colxx>\n      </Row>\n\n      <Row className=\"mb-4\">\n        <Colxx xxs=\"12\">\n          <Card>\n            <CardBody>\n              <CardTitle>\n                <IntlMessages id=\"form-components.rating\" />\n              </CardTitle>\n              <RatingExamples />\n            </CardBody>\n          </Card>\n        </Colxx>\n      </Row>\n    </>\n  );\n};\nexport default ComponentsUi;\n"],"names":["props","customProps","_objectSpread","autoCorrect","autoCapitalize","_jsx","components","Input","Star","starProps","nameMap","isDisabled","isActive","isActiveHalf","willBeActive","className","Object","keys","filter","prop","map","join","concat","defaultProps","Rater","children","getMenuTitle","sub","adminRoot","IntlMessages","id","getUrl","path","split","BreadcrumbItems","_ref2","match","substr","paths","length","indexOf","x","_Fragment","Breadcrumb","index","BreadcrumbItem","active","NavLink","to","_ref","heading","_jsxs","Form","FormGroup","Label","for","CustomInput","type","label","disabled","name","inline","selectData","value","key","_useState","useState","_useState2","_slicedToArray","selectedOption","setSelectedOption","_useState3","_useState4","selectedOptions","setSelectedOptions","Row","Colxx","xxs","md","Select","CustomSelectInput","classNamePrefix","onChange","options","isMulti","getSuggestionValue","suggestion","renderSuggestion","data","placeholder","valueState","setValueState","dataState","_useState5","_useState6","suggestions","setSuggestions","inputProps","event","newValue","Autosuggest","onSuggestionsFetchRequested","_ref3","val","inputValue","trim","toLowerCase","inputLength","d","slice","getSuggestions","onSuggestionsClearRequested","theme","container","input","inputOpen","suggestionsContainer","suggestionsContainerOpen","suggestionsList","suggestionFocused","title","link","item","injectIntl","intl","setValue","messages","ReactAutoSuggest","Date","startDate","setStartDate","startDateTime","setStartDateTime","startDateRange","setStartDateRange","_useState7","_useState8","endDateRange","setEndDateRange","_useState9","_useState10","embeddedDate","setEmbeddedDate","xl","Card","CardBody","CardTitle","DatePicker","selected","placeholderText","selectsStart","endDate","selectsEnd","showTimeSelect","timeFormat","timeIntervals","dateFormat","timeCaption","calendarClassName","ReactDOMServer","require","dropzoneComponentConfig","postUrl","dropzoneConfig","thumbnailHeight","maxFilesize","previewTemplate","renderToStaticMarkup","href","headers","DropzoneExample","_Component","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","this","myDropzone","removeAllFiles","_this","DropzoneComponent","config","djsConfig","eventHandlers","init","dropzone","Component","tags","setTags","TagsInput","checkedPrimary","setCheckedPrimary","checkedSecondary","setCheckedSecondary","checkedPrimaryInverse","setCheckedPrimaryInverse","checkedSecondaryInverse","setCheckedSecondaryInverse","checkedPrimarySmall","setCheckedPrimarySmall","_useState11","_useState12","checkedSecondarySmall","setCheckedSecondarySmall","_useState13","_useState14","checkedPrimaryInverseSmall","setCheckedPrimaryInverseSmall","_useState15","_useState16","checkedSecondaryInverseSmall","setCheckedSecondaryInverseSmall","Switch","checked","primary","secondary","primaryInverse","secondaryInverse","sliderHandle","dragging","offset","restProps","_objectWithoutProperties","_excluded","positionStyle","position","left","top","positionVerticalStyle","console","log","style","vertical","Slider","Handle","SliderTooltip","handle","RangeTooltip","range","sm","min","max","defaultValue","allowCross","pushable","step","Rating","total","rating","onRate","interactive","useRef","Separator","CustomInputExample","ReactSelectExample","ReactAutoSugegstExample","DatePickerExamples","ref","TagsInputExample","SwitchExamples","SliderExamples","RatingExamples"],"sourceRoot":""}