{"version":3,"sources":["containers/navs/Breadcrumb.js","containers/wizard/Basic.js","containers/wizard/LastStepEnd.js","containers/wizard/TopNavDisabled.js","containers/wizard/Validation.js","containers/wizard/Layouts.js","views/app/ui/forms/wizard.js","components/wizard/BottomNavigation.js","components/wizard/TopNavigation.js"],"names":["getMenuTitle","sub","concat","adminRoot","_jsx","IntlMessages","id","getUrl","path","split","BreadcrumbItems","_ref2","match","substr","paths","length","indexOf","filter","x","_Fragment","children","Breadcrumb","className","map","index","BreadcrumbItem","active","NavLink","to","BreadcrumbContainer","_ref","heading","_jsxs","injectIntl","intl","_useState","useState","_useState2","_slicedToArray","name","setName","_useState3","_useState4","email","setEmail","_useState5","_useState6","password","setPassword","messages","Card","CardBody","Wizard","TopNavigation","disableNav","topNavClick","stepItem","push","Steps","Step","desc","Form","FormGroup","Label","Input","type","placeholder","value","onChange","e","target","hideTopNav","BottomNavigation","onClickNext","goToNext","steps","step","isDone","onClickPrev","goToPrev","prevLabel","nextLabel","_useState7","_useState8","bottomNavHidden","setBottomNavHidden","_useState9","_useState10","topNavDisabled","setTopNavDisabled","validateEmail","error","test","validateName","validatePassword","forms","createRef","loading","setLoading","fields","setFields","Formik","innerRef","initialValues","validateOnMount","onSubmit","errors","touched","Field","validate","_ref3","_ref4","Spinner","color","formIndex","form","current","submitForm","then","isDirty","isValid","newFields","_objectSpread","values","console","log","setTimeout","Row","Colxx","xxs","xl","FormWizard","Separator","Basic","LastStepEnd","TopNavDisabled","Validation","Layouts","WithWizard","render","next","previous","Button","style","fontSize","fontWeight","paddingInline","onClick","getClassName","go","location","itemClick"],"mappings":"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","file":"static/js/forms-wizard.baba788c.chunk.js","sourcesContent":["/* eslint-disable react/no-array-index-key */\nimport React from 'react';\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\nimport { NavLink } from 'react-router-dom';\nimport IntlMessages from 'helpers/IntlMessages';\nimport { adminRoot } from 'constants/defaultValues';\n\nconst getMenuTitle = (sub) => {\n  if (`/${sub}` === adminRoot) return <IntlMessages id=\"menu.home\" />;\n  return <IntlMessages id={`menu.${sub}`} />;\n};\n\nconst getUrl = (path, sub) => {\n  return path.split(sub)[0] + sub;\n};\n\nconst BreadcrumbContainer = ({ heading, match }) => {\n  return (\n    <>\n      {heading && (\n        <h1>\n          <IntlMessages id={heading} />\n        </h1>\n      )}\n      <BreadcrumbItems match={match} />\n    </>\n  );\n};\n\nconst BreadcrumbItems = ({ match }) => {\n  const path = match.path.substr(1);\n  let paths = path.split('/');\n  if (paths[paths.length - 1].indexOf(':') > -1) {\n    paths = paths.filter((x) => x.indexOf(':') === -1);\n  }\n  return (\n    <>\n      <Breadcrumb className=\"pt-0 breadcrumb-container d-none d-sm-block d-lg-inline-block\">\n        {paths.map((sub, index) => {\n          return (\n            <BreadcrumbItem key={index} active={paths.length === index + 1}>\n              {paths.length !== index + 1 ? (\n                <NavLink to={`/${getUrl(path, sub, index)}`}>\n                  {getMenuTitle(sub)}\n                </NavLink>\n              ) : (\n                getMenuTitle(sub)\n              )}\n            </BreadcrumbItem>\n          );\n        })}\n      </Breadcrumb>\n    </>\n  );\n};\n\nexport default BreadcrumbContainer;\n","/* eslint-disable no-param-reassign */\nimport React, { useState } from 'react';\nimport { Card, CardBody, Form, FormGroup, Input, Label } from 'reactstrap';\nimport { Wizard, Steps, Step } from 'react-albus';\nimport { injectIntl } from 'react-intl';\nimport IntlMessages from 'helpers/IntlMessages';\nimport BottomNavigation from 'components/wizard/BottomNavigation';\nimport TopNavigation from 'components/wizard/TopNavigation';\n\nconst Basic = ({ intl }) => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const topNavClick = (stepItem, push) => {\n    push(stepItem.id);\n  };\n\n  const onClickNext = (goToNext, steps, step) => {\n    step.isDone = true;\n    if (steps.length - 1 <= steps.indexOf(step)) {\n      return;\n    }\n    goToNext();\n  };\n\n  const onClickPrev = (goToPrev, steps, step) => {\n    if (steps.indexOf(step) <= 0) {\n      return;\n    }\n    goToPrev();\n  };\n\n  const { messages } = intl;\n  return (\n    <Card>\n      <CardBody className=\"wizard wizard-default\">\n        <Wizard>\n          <TopNavigation\n            className=\"justify-content-center\"\n            disableNav={false}\n            topNavClick={topNavClick}\n          />\n          <Steps>\n            <Step\n              id=\"step1\"\n              name={messages['wizard.step-name-1']}\n              desc={messages['wizard.step-desc-1']}\n            >\n              <div className=\"wizard-basic-step\">\n                <Form>\n                  <FormGroup>\n                    <Label>\n                      <IntlMessages id=\"forms.name\" />\n                    </Label>\n                    <Input\n                      type=\"text\"\n                      name=\"name\"\n                      placeholder={messages['forms.name']}\n                      value={name}\n                      onChange={(e) => setName(e.target.value)}\n                    />\n                  </FormGroup>\n                </Form>\n              </div>\n            </Step>\n            <Step\n              id=\"step2\"\n              name={messages['wizard.step-name-2']}\n              desc={messages['wizard.step-desc-2']}\n            >\n              <div className=\"wizard-basic-step\">\n                <Form>\n                  <FormGroup>\n                    <Label>\n                      <IntlMessages id=\"forms.email\" />\n                    </Label>\n                    <Input\n                      type=\"email\"\n                      name=\"email\"\n                      placeholder={messages['forms.email']}\n                      value={email}\n                      onChange={(e) => setEmail(e.target.value)}\n                    />\n                  </FormGroup>\n                </Form>\n              </div>\n            </Step>\n            <Step\n              id=\"step3\"\n              name={messages['wizard.step-name-3']}\n              desc={messages['wizard.step-desc-3']}\n            >\n              <div className=\"wizard-basic-step\">\n                <Form>\n                  <FormGroup>\n                    <Label>\n                      <IntlMessages id=\"forms.password\" />\n                    </Label>\n                    <Input\n                      type=\"password\"\n                      name=\"password\"\n                      placeholder={messages['forms.password']}\n                      value={password}\n                      onChange={(e) => setPassword(e.target.value)}\n                    />\n                  </FormGroup>\n                </Form>\n              </div>\n            </Step>\n            <Step id=\"step4\" hideTopNav>\n              <div className=\"wizard-basic-step text-center\">\n                <h2 className=\"mb-2\">\n                  <IntlMessages id=\"wizard.content-thanks\" />\n                </h2>\n                <p>\n                  <IntlMessages id=\"wizard.registered\" />\n                </p>\n              </div>\n            </Step>\n          </Steps>\n          <BottomNavigation\n            onClickNext={onClickNext}\n            onClickPrev={onClickPrev}\n            className=\"justify-content-center\"\n            prevLabel={messages['wizard.prev']}\n            nextLabel={messages['wizard.next']}\n          />\n        </Wizard>\n      </CardBody>\n    </Card>\n  );\n};\nexport default injectIntl(Basic);\n","/* eslint-disable no-param-reassign */\nimport React, { useState } from 'react';\nimport { Card, CardBody, Form, FormGroup, Input, Label } from 'reactstrap';\nimport { Wizard, Steps, Step } from 'react-albus';\nimport { injectIntl } from 'react-intl';\nimport IntlMessages from 'helpers/IntlMessages';\nimport BottomNavigation from 'components/wizard/BottomNavigation';\nimport TopNavigation from 'components/wizard/TopNavigation';\n\nconst LastStepEnd = ({ intl }) => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [bottomNavHidden, setBottomNavHidden] = useState(false);\n  const [topNavDisabled, setTopNavDisabled] = useState(false);\n\n  const topNavClick = (stepItem, push) => {\n    if (topNavDisabled) {\n      return;\n    }\n    push(stepItem.id);\n  };\n\n  const onClickNext = (goToNext, steps, step) => {\n    step.isDone = true;\n    if (steps.length - 2 <= steps.indexOf(step)) {\n      setBottomNavHidden(true);\n      setTopNavDisabled(true);\n    }\n    if (steps.length - 1 <= steps.indexOf(step)) {\n      return;\n    }\n    goToNext();\n  };\n\n  const onClickPrev = (goToPrev, steps, step) => {\n    if (steps.indexOf(step) <= 0) {\n      return;\n    }\n    goToPrev();\n  };\n\n  const { messages } = intl;\n  return (\n    <Card>\n      <CardBody className=\"wizard wizard-default\">\n        <Wizard>\n          <TopNavigation\n            className=\"justify-content-center\"\n            disableNav={false}\n            topNavClick={topNavClick}\n          />\n          <Steps>\n            <Step\n              id=\"step1\"\n              name={messages['wizard.step-name-1']}\n              desc={messages['wizard.step-desc-1']}\n            >\n              <div className=\"wizard-basic-step\">\n                <Form>\n                  <FormGroup>\n                    <Label>\n                      <IntlMessages id=\"forms.name\" />\n                    </Label>\n                    <Input\n                      type=\"text\"\n                      name=\"name\"\n                      placeholder={messages['forms.name']}\n                      value={name}\n                      onChange={(e) => setName(e.target.value)}\n                    />\n                  </FormGroup>\n                </Form>\n              </div>\n            </Step>\n            <Step\n              id=\"step2\"\n              name={messages['wizard.step-name-2']}\n              desc={messages['wizard.step-desc-2']}\n            >\n              <div className=\"wizard-basic-step\">\n                <Form>\n                  <FormGroup>\n                    <Label>\n                      <IntlMessages id=\"forms.email\" />\n                    </Label>\n                    <Input\n                      type=\"email\"\n                      name=\"email\"\n                      placeholder={messages['forms.email']}\n                      value={email}\n                      onChange={(e) => setEmail(e.target.value)}\n                    />\n                  </FormGroup>\n                </Form>\n              </div>\n            </Step>\n            <Step\n              id=\"step3\"\n              name={messages['wizard.step-name-3']}\n              desc={messages['wizard.step-desc-3']}\n            >\n              <div className=\"wizard-basic-step\">\n                <Form>\n                  <FormGroup>\n                    <Label>\n                      <IntlMessages id=\"forms.password\" />\n                    </Label>\n                    <Input\n                      type=\"password\"\n                      name=\"password\"\n                      placeholder={messages['forms.password']}\n                      value={password}\n                      onChange={(e) => setPassword(e.target.value)}\n                    />\n                  </FormGroup>\n                </Form>\n              </div>\n            </Step>\n            <Step id=\"step4\" hideTopNav>\n              <div className=\"wizard-basic-step text-center\">\n                <h2 className=\"mb-2\">\n                  <IntlMessages id=\"wizard.content-thanks\" />\n                </h2>\n                <p>\n                  <IntlMessages id=\"wizard.registered\" />\n                </p>\n              </div>\n            </Step>\n          </Steps>\n          <BottomNavigation\n            onClickNext={onClickNext}\n            onClickPrev={onClickPrev}\n            className={`justify-content-center ${\n              bottomNavHidden && 'invisible'\n            }`}\n            prevLabel={messages['wizard.prev']}\n            nextLabel={messages['wizard.next']}\n          />\n        </Wizard>\n      </CardBody>\n    </Card>\n  );\n};\nexport default injectIntl(LastStepEnd);\n","/* eslint-disable no-param-reassign */\nimport React, { useState } from 'react';\nimport { Card, CardBody, Form, FormGroup, Input, Label } from 'reactstrap';\nimport { Wizard, Steps, Step } from 'react-albus';\nimport { injectIntl } from 'react-intl';\nimport IntlMessages from 'helpers/IntlMessages';\nimport BottomNavigation from 'components/wizard/BottomNavigation';\nimport TopNavigation from 'components/wizard/TopNavigation';\n\nconst TopNavDisabled = ({ intl }) => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const topNavClick = (stepItem, push) => {\n    push(stepItem.id);\n  };\n\n  const onClickNext = (goToNext, steps, step) => {\n    step.isDone = true;\n    if (steps.length - 1 <= steps.indexOf(step)) {\n      return;\n    }\n    goToNext();\n  };\n\n  const onClickPrev = (goToPrev, steps, step) => {\n    if (steps.indexOf(step) <= 0) {\n      return;\n    }\n    goToPrev();\n  };\n\n  const { messages } = intl;\n  return (\n    <Card>\n      <CardBody className=\"wizard wizard-default\">\n        <Wizard>\n          <TopNavigation\n            className=\"justify-content-center\"\n            disableNav\n            topNavClick={topNavClick}\n          />\n          <Steps>\n            <Step\n              id=\"step1\"\n              name={messages['wizard.step-name-1']}\n              desc={messages['wizard.step-desc-1']}\n            >\n              <div className=\"wizard-basic-step\">\n                <Form>\n                  <FormGroup>\n                    <Label>\n                      <IntlMessages id=\"forms.name\" />\n                    </Label>\n                    <Input\n                      type=\"text\"\n                      name=\"name\"\n                      placeholder={messages['forms.name']}\n                      value={name}\n                      onChange={(e) => setName(e.target.value)}\n                    />\n                  </FormGroup>\n                </Form>\n              </div>\n            </Step>\n            <Step\n              id=\"step2\"\n              name={messages['wizard.step-name-2']}\n              desc={messages['wizard.step-desc-2']}\n            >\n              <div className=\"wizard-basic-step\">\n                <Form>\n                  <FormGroup>\n                    <Label>\n                      <IntlMessages id=\"forms.email\" />\n                    </Label>\n                    <Input\n                      type=\"email\"\n                      name=\"email\"\n                      placeholder={messages['forms.email']}\n                      value={email}\n                      onChange={(e) => setEmail(e.target.value)}\n                    />\n                  </FormGroup>\n                </Form>\n              </div>\n            </Step>\n            <Step\n              id=\"step3\"\n              name={messages['wizard.step-name-3']}\n              desc={messages['wizard.step-desc-3']}\n            >\n              <div className=\"wizard-basic-step\">\n                <Form>\n                  <FormGroup>\n                    <Label>\n                      <IntlMessages id=\"forms.password\" />\n                    </Label>\n                    <Input\n                      type=\"password\"\n                      name=\"password\"\n                      placeholder={messages['forms.password']}\n                      value={password}\n                      onChange={(e) => setPassword(e.target.value)}\n                    />\n                  </FormGroup>\n                </Form>\n              </div>\n            </Step>\n            <Step id=\"step4\" hideTopNav>\n              <div className=\"wizard-basic-step text-center\">\n                <h2 className=\"mb-2\">\n                  <IntlMessages id=\"wizard.content-thanks\" />\n                </h2>\n                <p>\n                  <IntlMessages id=\"wizard.registered\" />\n                </p>\n              </div>\n            </Step>\n          </Steps>\n          <BottomNavigation\n            onClickNext={onClickNext}\n            onClickPrev={onClickPrev}\n            className=\"justify-content-center\"\n            prevLabel={messages['wizard.prev']}\n            nextLabel={messages['wizard.next']}\n          />\n        </Wizard>\n      </CardBody>\n    </Card>\n  );\n};\n\nexport default injectIntl(TopNavDisabled);\n","/* eslint-disable no-param-reassign */\nimport React, { createRef, useState } from 'react';\nimport { Card, CardBody, FormGroup, Label, Spinner } from 'reactstrap';\nimport { Wizard, Steps, Step } from 'react-albus';\nimport { injectIntl } from 'react-intl';\nimport { Formik, Form, Field } from 'formik';\nimport IntlMessages from 'helpers/IntlMessages';\nimport BottomNavigation from 'components/wizard/BottomNavigation';\nimport TopNavigation from 'components/wizard/TopNavigation';\n\nconst validateEmail = (value) => {\n  let error;\n  if (!value) {\n    error = 'لطفا پست الکترونیکی خودتو وارد کن';\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value)) {\n    error = 'ایمیل که وارد کردی نامعتبره';\n  }\n  return error;\n};\n\nconst validateName = (value) => {\n  let error;\n  if (!value) {\n    error = 'لطفا اسمت رو وارد کن';\n  } else if (value.length < 2) {\n    error = 'باید بیشتر از 2 تا کاراکتر باشه';\n  }\n  return error;\n};\n\nconst validatePassword = (value) => {\n  let error;\n  if (!value) {\n    error = 'لطفا رمزت رو وارد کن';\n  } else if (value.length < 6) {\n    error = 'Password must be longer than 6 characters';\n  }\n  return error;\n};\n\nconst Validation = ({ intl }) => {\n  const forms = [createRef(null), createRef(null), createRef(null)];\n  const [bottomNavHidden, setBottomNavHidden] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [fields, setFields] = useState({\n    name: '',\n    email: '',\n    password: '',\n  });\n\n  const onClickNext = (goToNext, steps, step) => {\n    if (steps.length - 1 <= steps.indexOf(step)) {\n      return;\n    }\n    const formIndex = steps.indexOf(step);\n    const form = forms[formIndex].current;\n\n    form.submitForm().then(() => {\n      if (!form.isDirty && form.isValid) {\n        const newFields = { ...fields, ...form.values };\n        setFields(newFields);\n\n        if (steps.length - 2 <= steps.indexOf(step)) {\n          // done\n          setBottomNavHidden(true);\n          setLoading(true);\n          console.log(newFields);\n          setTimeout(() => {\n            setLoading(false);\n          }, 3000);\n        }\n        goToNext();\n        step.isDone = true;\n      }\n    });\n  };\n\n  const onClickPrev = (goToPrev, steps, step) => {\n    if (steps.indexOf(step) <= 0) {\n      return;\n    }\n    goToPrev();\n  };\n\n  const { messages } = intl;\n  return (\n    <Card>\n      <CardBody className=\"wizard wizard-default\">\n        <Wizard>\n          <TopNavigation className=\"justify-content-center\" disableNav />\n          <Steps>\n            <Step\n              id=\"step1\"\n              name={messages['wizard.step-name-1']}\n              desc={messages['wizard.step-desc-1']}\n            >\n              <div className=\"wizard-basic-step\">\n                <Formik\n                  innerRef={forms[0]}\n                  initialValues={{\n                    name: fields.name,\n                  }}\n                  validateOnMount\n                  onSubmit={() => {}}\n                >\n                  {({ errors, touched }) => (\n                    <Form className=\"av-tooltip tooltip-label-right\">\n                      <FormGroup>\n                        <Label>{messages['forms.name']}</Label>\n                        <Field\n                          className=\"form-control\"\n                          name=\"name\"\n                          validate={validateName}\n                        />\n                        {errors.name && touched.name && (\n                          <div className=\"invalid-feedback d-block\">\n                            {errors.name}\n                          </div>\n                        )}\n                      </FormGroup>\n                    </Form>\n                  )}\n                </Formik>\n              </div>\n            </Step>\n            <Step\n              id=\"step2\"\n              name={messages['wizard.step-name-2']}\n              desc={messages['wizard.step-desc-2']}\n            >\n              <div className=\"wizard-basic-step\">\n                <Formik\n                  innerRef={forms[1]}\n                  initialValues={{\n                    email: fields.email,\n                  }}\n                  onSubmit={() => {}}\n                  validateOnMount\n                >\n                  {({ errors, touched }) => (\n                    <Form className=\"av-tooltip tooltip-label-right\">\n                      <FormGroup>\n                        <Label>{messages['forms.email']}</Label>\n                        <Field\n                          className=\"form-control\"\n                          name=\"email\"\n                          validate={validateEmail}\n                        />\n                        {errors.email && touched.email && (\n                          <div className=\"invalid-feedback d-block\">\n                            {errors.email}\n                          </div>\n                        )}\n                      </FormGroup>\n                    </Form>\n                  )}\n                </Formik>\n              </div>\n            </Step>\n            <Step\n              id=\"step3\"\n              name={messages['wizard.step-name-3']}\n              desc={messages['wizard.step-desc-3']}\n            >\n              <div className=\"wizard-basic-step\">\n                <Formik\n                  innerRef={forms[2]}\n                  initialValues={{\n                    password: fields.password,\n                  }}\n                  onSubmit={() => {}}\n                  validateOnMount\n                >\n                  {({ errors, touched }) => (\n                    <Form className=\"av-tooltip tooltip-label-right error-l-75\">\n                      <FormGroup>\n                        <Label>{messages['forms.password']}</Label>\n                        <Field\n                          className=\"form-control\"\n                          name=\"password\"\n                          type=\"password\"\n                          validate={validatePassword}\n                        />\n                        {errors.password && touched.password && (\n                          <div className=\"invalid-feedback d-block\">\n                            {errors.password}\n                          </div>\n                        )}\n                      </FormGroup>\n                    </Form>\n                  )}\n                </Formik>\n              </div>\n            </Step>\n            <Step id=\"step4\" hideTopNav>\n              <div className=\"wizard-basic-step text-center pt-3\">\n                {loading ? (\n                  <div>\n                    <Spinner color=\"primary\" className=\"mb-1\" />\n                    <p>\n                      <IntlMessages id=\"wizard.async\" />\n                    </p>\n                  </div>\n                ) : (\n                  <div>\n                    <h2 className=\"mb-2\">\n                      <IntlMessages id=\"wizard.content-thanks\" />\n                    </h2>\n                    <p>\n                      <IntlMessages id=\"wizard.registered\" />\n                    </p>\n                  </div>\n                )}\n              </div>\n            </Step>\n          </Steps>\n          <BottomNavigation\n            onClickNext={onClickNext}\n            onClickPrev={onClickPrev}\n            className={`justify-content-center ${\n              bottomNavHidden && 'invisible'\n            }`}\n            prevLabel={messages['wizard.prev']}\n            nextLabel={messages['wizard.next']}\n          />\n        </Wizard>\n      </CardBody>\n    </Card>\n  );\n};\nexport default injectIntl(Validation);\n","/* eslint-disable no-param-reassign */\nimport React from 'react';\nimport { Card, CardBody, Row } from 'reactstrap';\nimport { Wizard, Steps, Step } from 'react-albus';\nimport { injectIntl } from 'react-intl';\nimport IntlMessages from 'helpers/IntlMessages';\nimport BottomNavigation from 'components/wizard/BottomNavigation';\nimport TopNavigation from 'components/wizard/TopNavigation';\nimport { Colxx } from 'components/common/CustomBootstrap';\n\nconst Layouts = ({ intl }) => {\n  const topNavClick = (stepItem, push) => {\n    push(stepItem.id);\n  };\n\n  const onClickNext = (goToNext, steps, step) => {\n    step.isDone = true;\n    if (steps.length - 1 <= steps.indexOf(step)) {\n      return;\n    }\n    goToNext();\n  };\n\n  const onClickPrev = (goToPrev, steps, step) => {\n    if (steps.indexOf(step) <= 0) {\n      return;\n    }\n    goToPrev();\n  };\n\n  const { messages } = intl;\n  return (\n    <Row>\n      <Colxx xxs=\"12\" xl=\"6\" className=\"mb-5\">\n        <Card>\n          <CardBody className=\"wizard wizard-default\">\n            <Wizard>\n              <TopNavigation\n                className=\"justify-content-between\"\n                disableNav={false}\n                topNavClick={topNavClick}\n              />\n              <Steps>\n                <Step\n                  id=\"step1\"\n                  name={messages['wizard.step-name-1']}\n                  desc={messages['wizard.step-desc-1']}\n                >\n                  <div className=\"wizard-basic-step text-center\">\n                    <p>\n                      <IntlMessages id=\"wizard.content-1\" />\n                    </p>\n                  </div>\n                </Step>\n                <Step\n                  id=\"step2\"\n                  name={messages['wizard.step-name-2']}\n                  desc={messages['wizard.step-desc-2']}\n                >\n                  <div className=\"wizard-basic-step text-center\">\n                    <p>\n                      <IntlMessages id=\"wizard.content-2\" />\n                    </p>\n                  </div>\n                </Step>\n                <Step\n                  id=\"step3\"\n                  name={messages['wizard.step-name-3']}\n                  desc={messages['wizard.step-desc-3']}\n                  hideTopNav\n                >\n                  <div className=\"wizard-basic-step text-center\">\n                    <h2 className=\"mb-2\">\n                      <IntlMessages id=\"wizard.content-thanks\" />\n                    </h2>\n                    <p>\n                      <IntlMessages id=\"wizard.content-3\" />\n                    </p>\n                  </div>\n                </Step>\n              </Steps>\n              <BottomNavigation\n                onClickNext={onClickNext}\n                onClickPrev={onClickPrev}\n                className=\"justify-content-between\"\n                prevLabel={messages['wizard.prev']}\n                nextLabel={messages['wizard.next']}\n              />\n            </Wizard>\n          </CardBody>\n        </Card>\n      </Colxx>\n      <Colxx xxs=\"12\" xl=\"6\">\n        <Card>\n          <CardBody className=\"wizard wizard-default\">\n            <Wizard>\n              <TopNavigation\n                className=\"justify-content-start\"\n                disableNav={false}\n                topNavClick={topNavClick}\n              />\n              <Steps>\n                <Step\n                  id=\"step1\"\n                  name={messages['wizard.step-name-1']}\n                  desc={messages['wizard.step-desc-1']}\n                >\n                  <div className=\"wizard-basic-step\">\n                    <p>\n                      <IntlMessages id=\"wizard.content-1\" />\n                    </p>\n                  </div>\n                </Step>\n                <Step\n                  id=\"step2\"\n                  name={messages['wizard.step-name-2']}\n                  desc={messages['wizard.step-desc-2']}\n                >\n                  <div className=\"wizard-basic-step\">\n                    <p>\n                      <IntlMessages id=\"wizard.content-2\" />\n                    </p>\n                  </div>\n                </Step>\n                <Step\n                  id=\"step3\"\n                  name={messages['wizard.step-name-3']}\n                  desc={messages['wizard.step-desc-3']}\n                  hideTopNav\n                >\n                  <div className=\"wizard-basic-step\">\n                    <h2 className=\"mb-2\">\n                      <IntlMessages id=\"wizard.content-thanks\" />\n                    </h2>\n                    <p>\n                      <IntlMessages id=\"wizard.content-3\" />\n                    </p>\n                  </div>\n                </Step>\n              </Steps>\n              <BottomNavigation\n                onClickNext={onClickNext}\n                onClickPrev={onClickPrev}\n                className=\"justify-content-start\"\n                prevLabel={messages['wizard.prev']}\n                nextLabel={messages['wizard.next']}\n              />\n            </Wizard>\n          </CardBody>\n        </Card>\n      </Colxx>\n    </Row>\n  );\n};\nexport default injectIntl(Layouts);\n","import React from 'react';\nimport { Row } from 'reactstrap';\nimport { Colxx, Separator } from 'components/common/CustomBootstrap';\nimport Breadcrumb from 'containers/navs/Breadcrumb';\nimport Basic from 'containers/wizard/Basic';\nimport LastStepEnd from 'containers/wizard/LastStepEnd';\nimport TopNavDisabled from 'containers/wizard/TopNavDisabled';\nimport Validation from 'containers/wizard/Validation';\nimport Layouts from 'containers/wizard/Layouts';\n\nconst FormWizard = ({ match }) => {\n  return (\n    <>\n      <Row>\n        <Colxx xxs=\"12\">\n          <Breadcrumb heading=\"menu.form-wizard\" match={match} />\n          <Separator className=\"mb-5\" />\n        </Colxx>\n      </Row>\n      <Row>\n        <Colxx xxs=\"12\" className=\"mb-5\">\n          <h5 className=\"mb-4\">ساده</h5>\n          <Basic />\n        </Colxx>\n        <Colxx xxs=\"12\" className=\"mb-5\">\n          <h5 className=\"mb-4\">پایان گام آخر</h5>\n          <LastStepEnd />\n        </Colxx>\n        <Colxx xxs=\"12\" className=\"mb-5\">\n          <h5 className=\"mb-4\">غیرفعال شدن منوی نویگیشن</h5>\n          <TopNavDisabled />\n        </Colxx>\n        <Colxx xxs=\"12\" className=\"mb-5\">\n          <h5 className=\"mb-4\">با اعتبار سنجی</h5>\n          <Validation />\n        </Colxx>\n        <Colxx xxs=\"12\" className=\"mb-5\">\n          <h5 className=\"mb-4\">طرح بندی ها</h5>\n          <Layouts />\n        </Colxx>\n      </Row>\n    </>\n  );\n};\nexport default FormWizard;\n","/* eslint-disable react/no-array-index-key */\n/* eslint-disable no-unused-vars */\n/* eslint-disable no-param-reassign */\nimport React from 'react';\nimport { WithWizard } from 'react-albus';\nimport { Row, Button } from 'reactstrap';\nimport { Colxx } from 'components/common/CustomBootstrap';\nimport IntlMessages from 'helpers/IntlMessages';\n\nconst BottomNavigation = ({\n  className,\n  onClickPrev,\n  prevLabel,\n  onClickNext,\n  nextLabel,\n}) => {\n  return (\n    <WithWizard\n      render={({ next, previous, step, steps }) => (\n        <Row className={`wizard-buttons ${className}`}>\n          <Colxx>\n            <Button\n              color=\"primary\"\n              style={{\n                fontSize: '140%',\n                fontWeight: 'bold',\n                paddingInline: '7%',\n              }}\n              className={`mr-1 ${\n                steps.indexOf(step) <= 0 ? 'disabled  m-4 ml-4' : ' m-4 ml-4'\n              }`}\n              onClick={() => {\n                onClickPrev(previous, steps, step);\n              }}\n            >\n              <IntlMessages id=\"button.Back\" />\n            </Button>\n          </Colxx>\n          <Colxx>\n            <Button\n              color=\"primary\"\n              style={{\n                fontSize: '140%',\n                fontWeight: 'bold',\n                paddingInline: '7%',\n              }}\n              className={\n                steps.indexOf(step) >= steps.length - 1\n                  ? 'disabled float-right m-4'\n                  : ' float-right m-4'\n              }\n              onClick={() => {\n                onClickNext(next, steps, step);\n              }}\n            >\n              {steps.indexOf(step) >= steps.length - 2 ? (\n                <IntlMessages id=\"button.SubmitButton\" />\n              ) : (\n                <IntlMessages id=\"button.Next\" />\n              )}\n            </Button>\n          </Colxx>\n        </Row>\n      )}\n    />\n  );\n};\nexport default BottomNavigation;\n","/* eslint-disable react/no-array-index-key */\n/* eslint-disable no-unused-vars */\n/* eslint-disable no-param-reassign */\nimport React from 'react';\nimport { WithWizard } from 'react-albus';\nimport { NavLink } from 'react-router-dom';\n\nconst TopNavigation = ({ className, disableNav, topNavClick }) => {\n  const getClassName = (steps, step, index, stepItem) => {\n    if (steps.indexOf(step) === index) {\n      return 'step-doing';\n    }\n    if (steps.indexOf(step) > index || stepItem.isDone) {\n      stepItem.isDone = true;\n      return 'step-done';\n    }\n    return 'step';\n  };\n\n  const itemClick = (stepItem, push) => {\n    if (disableNav) {\n      return;\n    }\n    topNavClick(stepItem, push);\n  };\n\n  return (\n    <WithWizard\n      render={({ next, previous, step, steps, go, push }) => (\n        <ul\n          className={`nav nav-tabs ${className}${\n            disableNav ? ' disabled' : ''\n          }`}\n        >\n          {steps.map((stepItem, index) => {\n            if (!stepItem.hideTopNav) {\n              return (\n                <li\n                  key={`topNavStep_${index}`}\n                  className={`nav-item ${getClassName(\n                    steps,\n                    step,\n                    index,\n                    stepItem\n                  )}`}\n                >\n                  <NavLink\n                    to=\"#\"\n                    location={{}}\n                    className=\"nav-link\"\n                    onClick={() => itemClick(stepItem, push)}\n                  >\n                    <span>{stepItem.name}</span>\n                    <small>{stepItem.desc}</small>\n                  </NavLink>\n                </li>\n              );\n            }\n            return <span key={`topNavStep_${index}`} />;\n          })}\n        </ul>\n      )}\n    />\n  );\n};\n\nexport default TopNavigation;\n"],"sourceRoot":""}