{"version":3,"sources":["containers/wizard/Basic.js","containers/wizard/LastStepEnd.js","containers/wizard/TopNavDisabled.js","containers/wizard/Validation.js","containers/wizard/Layouts.js","views/app/ui/forms/wizard.js","containers/navs/Breadcrumb.js","components/wizard/BottomNavigation.js","components/wizard/TopNavigation.js"],"names":["injectIntl","_ref","intl","_useState","useState","_useState2","_slicedToArray","name","setName","_useState3","_useState4","email","setEmail","_useState5","_useState6","password","setPassword","messages","_jsx","Card","children","CardBody","className","_jsxs","Wizard","TopNavigation","disableNav","topNavClick","stepItem","push","id","Steps","Step","desc","Form","FormGroup","Label","IntlMessages","Input","type","placeholder","value","onChange","e","target","hideTopNav","BottomNavigation","onClickNext","goToNext","steps","step","isDone","length","indexOf","onClickPrev","goToPrev","prevLabel","nextLabel","_useState7","_useState8","bottomNavHidden","setBottomNavHidden","_useState9","_useState10","topNavDisabled","setTopNavDisabled","concat","validateEmail","error","test","validateName","validatePassword","forms","createRef","loading","setLoading","fields","setFields","Formik","innerRef","initialValues","validateOnMount","onSubmit","_ref2","errors","touched","Field","validate","_ref3","_ref4","Spinner","color","formIndex","form","current","submitForm","then","isDirty","isValid","newFields","_objectSpread","values","console","log","setTimeout","Row","Colxx","xxs","xl","FormWizard","match","_Fragment","Breadcrumb","heading","Separator","Basic","LastStepEnd","TopNavDisabled","Validation","Layouts","getMenuTitle","sub","adminRoot","getUrl","path","split","BreadcrumbItems","substr","paths","filter","x","map","index","BreadcrumbItem","active","NavLink","to","BreadcrumbContainer","WithWizard","render","next","previous","Button","style","fontSize","fontWeight","paddingInline","onClick","getClassName","go","location","itemClick"],"mappings":"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","file":"static/js/forms-wizard.f4fc4700.chunk.js","sourcesContent":["/* eslint-disable no-param-reassign */\nimport React, { useState } from 'react';\nimport { Card, CardBody, Form, FormGroup, Input, Label } from 'reactstrap';\nimport { Wizard, Steps, Step } from 'react-albus';\nimport { injectIntl } from 'react-intl';\nimport IntlMessages from 'helpers/IntlMessages';\nimport BottomNavigation from 'components/wizard/BottomNavigation';\nimport TopNavigation from 'components/wizard/TopNavigation';\n\nconst Basic = ({ intl }) => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const topNavClick = (stepItem, push) => {\n    push(stepItem.id);\n  };\n\n  const onClickNext = (goToNext, steps, step) => {\n    step.isDone = true;\n    if (steps.length - 1 <= steps.indexOf(step)) {\n      return;\n    }\n    goToNext();\n  };\n\n  const onClickPrev = (goToPrev, steps, step) => {\n    if (steps.indexOf(step) <= 0) {\n      return;\n    }\n    goToPrev();\n  };\n\n  const { messages } = intl;\n  return (\n    <Card>\n      <CardBody className=\"wizard wizard-default\">\n        <Wizard>\n          <TopNavigation\n            className=\"justify-content-center\"\n            disableNav={false}\n            topNavClick={topNavClick}\n          />\n          <Steps>\n            <Step\n              id=\"step1\"\n              name={messages['wizard.step-name-1']}\n              desc={messages['wizard.step-desc-1']}\n            >\n              <div className=\"wizard-basic-step\">\n                <Form>\n                  <FormGroup>\n                    <Label>\n                      <IntlMessages id=\"forms.name\" />\n                    </Label>\n                    <Input\n                      type=\"text\"\n                      name=\"name\"\n                      placeholder={messages['forms.name']}\n                      value={name}\n                      onChange={(e) => setName(e.target.value)}\n                    />\n                  </FormGroup>\n                </Form>\n              </div>\n            </Step>\n            <Step\n              id=\"step2\"\n              name={messages['wizard.step-name-2']}\n              desc={messages['wizard.step-desc-2']}\n            >\n              <div className=\"wizard-basic-step\">\n                <Form>\n                  <FormGroup>\n                    <Label>\n                      <IntlMessages id=\"forms.email\" />\n                    </Label>\n                    <Input\n                      type=\"email\"\n                      name=\"email\"\n                      placeholder={messages['forms.email']}\n                      value={email}\n                      onChange={(e) => setEmail(e.target.value)}\n                    />\n                  </FormGroup>\n                </Form>\n              </div>\n            </Step>\n            <Step\n              id=\"step3\"\n              name={messages['wizard.step-name-3']}\n              desc={messages['wizard.step-desc-3']}\n            >\n              <div className=\"wizard-basic-step\">\n                <Form>\n                  <FormGroup>\n                    <Label>\n                      <IntlMessages id=\"forms.password\" />\n                    </Label>\n                    <Input\n                      type=\"password\"\n                      name=\"password\"\n                      placeholder={messages['forms.password']}\n                      value={password}\n                      onChange={(e) => setPassword(e.target.value)}\n                    />\n                  </FormGroup>\n                </Form>\n              </div>\n            </Step>\n            <Step id=\"step4\" hideTopNav>\n              <div className=\"wizard-basic-step text-center\">\n                <h2 className=\"mb-2\">\n                  <IntlMessages id=\"wizard.content-thanks\" />\n                </h2>\n                <p>\n                  <IntlMessages id=\"wizard.registered\" />\n                </p>\n              </div>\n            </Step>\n          </Steps>\n          <BottomNavigation\n            onClickNext={onClickNext}\n            onClickPrev={onClickPrev}\n            className=\"justify-content-center\"\n            prevLabel={messages['wizard.prev']}\n            nextLabel={messages['wizard.next']}\n          />\n        </Wizard>\n      </CardBody>\n    </Card>\n  );\n};\nexport default injectIntl(Basic);\n","/* eslint-disable no-param-reassign */\nimport React, { useState } from 'react';\nimport { Card, CardBody, Form, FormGroup, Input, Label } from 'reactstrap';\nimport { Wizard, Steps, Step } from 'react-albus';\nimport { injectIntl } from 'react-intl';\nimport IntlMessages from 'helpers/IntlMessages';\nimport BottomNavigation from 'components/wizard/BottomNavigation';\nimport TopNavigation from 'components/wizard/TopNavigation';\n\nconst LastStepEnd = ({ intl }) => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [bottomNavHidden, setBottomNavHidden] = useState(false);\n  const [topNavDisabled, setTopNavDisabled] = useState(false);\n\n  const topNavClick = (stepItem, push) => {\n    if (topNavDisabled) {\n      return;\n    }\n    push(stepItem.id);\n  };\n\n  const onClickNext = (goToNext, steps, step) => {\n    step.isDone = true;\n    if (steps.length - 2 <= steps.indexOf(step)) {\n      setBottomNavHidden(true);\n      setTopNavDisabled(true);\n    }\n    if (steps.length - 1 <= steps.indexOf(step)) {\n      return;\n    }\n    goToNext();\n  };\n\n  const onClickPrev = (goToPrev, steps, step) => {\n    if (steps.indexOf(step) <= 0) {\n      return;\n    }\n    goToPrev();\n  };\n\n  const { messages } = intl;\n  return (\n    <Card>\n      <CardBody className=\"wizard wizard-default\">\n        <Wizard>\n          <TopNavigation\n            className=\"justify-content-center\"\n            disableNav={false}\n            topNavClick={topNavClick}\n          />\n          <Steps>\n            <Step\n              id=\"step1\"\n              name={messages['wizard.step-name-1']}\n              desc={messages['wizard.step-desc-1']}\n            >\n              <div className=\"wizard-basic-step\">\n                <Form>\n                  <FormGroup>\n                    <Label>\n                      <IntlMessages id=\"forms.name\" />\n                    </Label>\n                    <Input\n                      type=\"text\"\n                      name=\"name\"\n                      placeholder={messages['forms.name']}\n                      value={name}\n                      onChange={(e) => setName(e.target.value)}\n                    />\n                  </FormGroup>\n                </Form>\n              </div>\n            </Step>\n            <Step\n              id=\"step2\"\n              name={messages['wizard.step-name-2']}\n              desc={messages['wizard.step-desc-2']}\n            >\n              <div className=\"wizard-basic-step\">\n                <Form>\n                  <FormGroup>\n                    <Label>\n                      <IntlMessages id=\"forms.email\" />\n                    </Label>\n                    <Input\n                      type=\"email\"\n                      name=\"email\"\n                      placeholder={messages['forms.email']}\n                      value={email}\n                      onChange={(e) => setEmail(e.target.value)}\n                    />\n                  </FormGroup>\n                </Form>\n              </div>\n            </Step>\n            <Step\n              id=\"step3\"\n              name={messages['wizard.step-name-3']}\n              desc={messages['wizard.step-desc-3']}\n            >\n              <div className=\"wizard-basic-step\">\n                <Form>\n                  <FormGroup>\n                    <Label>\n                      <IntlMessages id=\"forms.password\" />\n                    </Label>\n                    <Input\n                      type=\"password\"\n                      name=\"password\"\n                      placeholder={messages['forms.password']}\n                      value={password}\n                      onChange={(e) => setPassword(e.target.value)}\n                    />\n                  </FormGroup>\n                </Form>\n              </div>\n            </Step>\n            <Step id=\"step4\" hideTopNav>\n              <div className=\"wizard-basic-step text-center\">\n                <h2 className=\"mb-2\">\n                  <IntlMessages id=\"wizard.content-thanks\" />\n                </h2>\n                <p>\n                  <IntlMessages id=\"wizard.registered\" />\n                </p>\n              </div>\n            </Step>\n          </Steps>\n          <BottomNavigation\n            onClickNext={onClickNext}\n            onClickPrev={onClickPrev}\n            className={`justify-content-center ${\n              bottomNavHidden && 'invisible'\n            }`}\n            prevLabel={messages['wizard.prev']}\n            nextLabel={messages['wizard.next']}\n          />\n        </Wizard>\n      </CardBody>\n    </Card>\n  );\n};\nexport default injectIntl(LastStepEnd);\n","/* eslint-disable no-param-reassign */\nimport React, { useState } from 'react';\nimport { Card, CardBody, Form, FormGroup, Input, Label } from 'reactstrap';\nimport { Wizard, Steps, Step } from 'react-albus';\nimport { injectIntl } from 'react-intl';\nimport IntlMessages from 'helpers/IntlMessages';\nimport BottomNavigation from 'components/wizard/BottomNavigation';\nimport TopNavigation from 'components/wizard/TopNavigation';\n\nconst TopNavDisabled = ({ intl }) => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const topNavClick = (stepItem, push) => {\n    push(stepItem.id);\n  };\n\n  const onClickNext = (goToNext, steps, step) => {\n    step.isDone = true;\n    if (steps.length - 1 <= steps.indexOf(step)) {\n      return;\n    }\n    goToNext();\n  };\n\n  const onClickPrev = (goToPrev, steps, step) => {\n    if (steps.indexOf(step) <= 0) {\n      return;\n    }\n    goToPrev();\n  };\n\n  const { messages } = intl;\n  return (\n    <Card>\n      <CardBody className=\"wizard wizard-default\">\n        <Wizard>\n          <TopNavigation\n            className=\"justify-content-center\"\n            disableNav\n            topNavClick={topNavClick}\n          />\n          <Steps>\n            <Step\n              id=\"step1\"\n              name={messages['wizard.step-name-1']}\n              desc={messages['wizard.step-desc-1']}\n            >\n              <div className=\"wizard-basic-step\">\n                <Form>\n                  <FormGroup>\n                    <Label>\n                      <IntlMessages id=\"forms.name\" />\n                    </Label>\n                    <Input\n                      type=\"text\"\n                      name=\"name\"\n                      placeholder={messages['forms.name']}\n                      value={name}\n                      onChange={(e) => setName(e.target.value)}\n                    />\n                  </FormGroup>\n                </Form>\n              </div>\n            </Step>\n            <Step\n              id=\"step2\"\n              name={messages['wizard.step-name-2']}\n              desc={messages['wizard.step-desc-2']}\n            >\n              <div className=\"wizard-basic-step\">\n                <Form>\n                  <FormGroup>\n                    <Label>\n                      <IntlMessages id=\"forms.email\" />\n                    </Label>\n                    <Input\n                      type=\"email\"\n                      name=\"email\"\n                      placeholder={messages['forms.email']}\n                      value={email}\n                      onChange={(e) => setEmail(e.target.value)}\n                    />\n                  </FormGroup>\n                </Form>\n              </div>\n            </Step>\n            <Step\n              id=\"step3\"\n              name={messages['wizard.step-name-3']}\n              desc={messages['wizard.step-desc-3']}\n            >\n              <div className=\"wizard-basic-step\">\n                <Form>\n                  <FormGroup>\n                    <Label>\n                      <IntlMessages id=\"forms.password\" />\n                    </Label>\n                    <Input\n                      type=\"password\"\n                      name=\"password\"\n                      placeholder={messages['forms.password']}\n                      value={password}\n                      onChange={(e) => setPassword(e.target.value)}\n                    />\n                  </FormGroup>\n                </Form>\n              </div>\n            </Step>\n            <Step id=\"step4\" hideTopNav>\n              <div className=\"wizard-basic-step text-center\">\n                <h2 className=\"mb-2\">\n                  <IntlMessages id=\"wizard.content-thanks\" />\n                </h2>\n                <p>\n                  <IntlMessages id=\"wizard.registered\" />\n                </p>\n              </div>\n            </Step>\n          </Steps>\n          <BottomNavigation\n            onClickNext={onClickNext}\n            onClickPrev={onClickPrev}\n            className=\"justify-content-center\"\n            prevLabel={messages['wizard.prev']}\n            nextLabel={messages['wizard.next']}\n          />\n        </Wizard>\n      </CardBody>\n    </Card>\n  );\n};\n\nexport default injectIntl(TopNavDisabled);\n","/* eslint-disable no-param-reassign */\nimport React, { createRef, useState } from 'react';\nimport { Card, CardBody, FormGroup, Label, Spinner } from 'reactstrap';\nimport { Wizard, Steps, Step } from 'react-albus';\nimport { injectIntl } from 'react-intl';\nimport { Formik, Form, Field } from 'formik';\nimport IntlMessages from 'helpers/IntlMessages';\nimport BottomNavigation from 'components/wizard/BottomNavigation';\nimport TopNavigation from 'components/wizard/TopNavigation';\n\nconst validateEmail = (value) => {\n  let error;\n  if (!value) {\n    error = 'لطفا پست الکترونیکی خودتو وارد کن';\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value)) {\n    error = 'ایمیل که وارد کردی نامعتبره';\n  }\n  return error;\n};\n\nconst validateName = (value) => {\n  let error;\n  if (!value) {\n    error = 'لطفا اسمت رو وارد کن';\n  } else if (value.length < 2) {\n    error = 'باید بیشتر از 2 تا کاراکتر باشه';\n  }\n  return error;\n};\n\nconst validatePassword = (value) => {\n  let error;\n  if (!value) {\n    error = 'لطفا رمزت رو وارد کن';\n  } else if (value.length < 6) {\n    error = 'Password must be longer than 6 characters';\n  }\n  return error;\n};\n\nconst Validation = ({ intl }) => {\n  const forms = [createRef(null), createRef(null), createRef(null)];\n  const [bottomNavHidden, setBottomNavHidden] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [fields, setFields] = useState({\n    name: '',\n    email: '',\n    password: '',\n  });\n\n  const onClickNext = (goToNext, steps, step) => {\n    if (steps.length - 1 <= steps.indexOf(step)) {\n      return;\n    }\n    const formIndex = steps.indexOf(step);\n    const form = forms[formIndex].current;\n\n    form.submitForm().then(() => {\n      if (!form.isDirty && form.isValid) {\n        const newFields = { ...fields, ...form.values };\n        setFields(newFields);\n\n        if (steps.length - 2 <= steps.indexOf(step)) {\n          // done\n          setBottomNavHidden(true);\n          setLoading(true);\n          console.log(newFields);\n          setTimeout(() => {\n            setLoading(false);\n          }, 3000);\n        }\n        goToNext();\n        step.isDone = true;\n      }\n    });\n  };\n\n  const onClickPrev = (goToPrev, steps, step) => {\n    if (steps.indexOf(step) <= 0) {\n      return;\n    }\n    goToPrev();\n  };\n\n  const { messages } = intl;\n  return (\n    <Card>\n      <CardBody className=\"wizard wizard-default\">\n        <Wizard>\n          <TopNavigation className=\"justify-content-center\" disableNav />\n          <Steps>\n            <Step\n              id=\"step1\"\n              name={messages['wizard.step-name-1']}\n              desc={messages['wizard.step-desc-1']}\n            >\n              <div className=\"wizard-basic-step\">\n                <Formik\n                  innerRef={forms[0]}\n                  initialValues={{\n                    name: fields.name,\n                  }}\n                  validateOnMount\n                  onSubmit={() => {}}\n                >\n                  {({ errors, touched }) => (\n                    <Form className=\"av-tooltip tooltip-label-right\">\n                      <FormGroup>\n                        <Label>{messages['forms.name']}</Label>\n                        <Field\n                          className=\"form-control\"\n                          name=\"name\"\n                          validate={validateName}\n                        />\n                        {errors.name && touched.name && (\n                          <div className=\"invalid-feedback d-block\">\n                            {errors.name}\n                          </div>\n                        )}\n                      </FormGroup>\n                    </Form>\n                  )}\n                </Formik>\n              </div>\n            </Step>\n            <Step\n              id=\"step2\"\n              name={messages['wizard.step-name-2']}\n              desc={messages['wizard.step-desc-2']}\n            >\n              <div className=\"wizard-basic-step\">\n                <Formik\n                  innerRef={forms[1]}\n                  initialValues={{\n                    email: fields.email,\n                  }}\n                  onSubmit={() => {}}\n                  validateOnMount\n                >\n                  {({ errors, touched }) => (\n                    <Form className=\"av-tooltip tooltip-label-right\">\n                      <FormGroup>\n                        <Label>{messages['forms.email']}</Label>\n                        <Field\n                          className=\"form-control\"\n                          name=\"email\"\n                          validate={validateEmail}\n                        />\n                        {errors.email && touched.email && (\n                          <div className=\"invalid-feedback d-block\">\n                            {errors.email}\n                          </div>\n                        )}\n                      </FormGroup>\n                    </Form>\n                  )}\n                </Formik>\n              </div>\n            </Step>\n            <Step\n              id=\"step3\"\n              name={messages['wizard.step-name-3']}\n              desc={messages['wizard.step-desc-3']}\n            >\n              <div className=\"wizard-basic-step\">\n                <Formik\n                  innerRef={forms[2]}\n                  initialValues={{\n                    password: fields.password,\n                  }}\n                  onSubmit={() => {}}\n                  validateOnMount\n                >\n                  {({ errors, touched }) => (\n                    <Form className=\"av-tooltip tooltip-label-right error-l-75\">\n                      <FormGroup>\n                        <Label>{messages['forms.password']}</Label>\n                        <Field\n                          className=\"form-control\"\n                          name=\"password\"\n                          type=\"password\"\n                          validate={validatePassword}\n                        />\n                        {errors.password && touched.password && (\n                          <div className=\"invalid-feedback d-block\">\n                            {errors.password}\n                          </div>\n                        )}\n                      </FormGroup>\n                    </Form>\n                  )}\n                </Formik>\n              </div>\n            </Step>\n            <Step id=\"step4\" hideTopNav>\n              <div className=\"wizard-basic-step text-center pt-3\">\n                {loading ? (\n                  <div>\n                    <Spinner color=\"primary\" className=\"mb-1\" />\n                    <p>\n                      <IntlMessages id=\"wizard.async\" />\n                    </p>\n                  </div>\n                ) : (\n                  <div>\n                    <h2 className=\"mb-2\">\n                      <IntlMessages id=\"wizard.content-thanks\" />\n                    </h2>\n                    <p>\n                      <IntlMessages id=\"wizard.registered\" />\n                    </p>\n                  </div>\n                )}\n              </div>\n            </Step>\n          </Steps>\n          <BottomNavigation\n            onClickNext={onClickNext}\n            onClickPrev={onClickPrev}\n            className={`justify-content-center ${\n              bottomNavHidden && 'invisible'\n            }`}\n            prevLabel={messages['wizard.prev']}\n            nextLabel={messages['wizard.next']}\n          />\n        </Wizard>\n      </CardBody>\n    </Card>\n  );\n};\nexport default injectIntl(Validation);\n","/* eslint-disable no-param-reassign */\nimport React from 'react';\nimport { Card, CardBody, Row } from 'reactstrap';\nimport { Wizard, Steps, Step } from 'react-albus';\nimport { injectIntl } from 'react-intl';\nimport IntlMessages from 'helpers/IntlMessages';\nimport BottomNavigation from 'components/wizard/BottomNavigation';\nimport TopNavigation from 'components/wizard/TopNavigation';\nimport { Colxx } from 'components/common/CustomBootstrap';\n\nconst Layouts = ({ intl }) => {\n  const topNavClick = (stepItem, push) => {\n    push(stepItem.id);\n  };\n\n  const onClickNext = (goToNext, steps, step) => {\n    step.isDone = true;\n    if (steps.length - 1 <= steps.indexOf(step)) {\n      return;\n    }\n    goToNext();\n  };\n\n  const onClickPrev = (goToPrev, steps, step) => {\n    if (steps.indexOf(step) <= 0) {\n      return;\n    }\n    goToPrev();\n  };\n\n  const { messages } = intl;\n  return (\n    <Row>\n      <Colxx xxs=\"12\" xl=\"6\" className=\"mb-5\">\n        <Card>\n          <CardBody className=\"wizard wizard-default\">\n            <Wizard>\n              <TopNavigation\n                className=\"justify-content-between\"\n                disableNav={false}\n                topNavClick={topNavClick}\n              />\n              <Steps>\n                <Step\n                  id=\"step1\"\n                  name={messages['wizard.step-name-1']}\n                  desc={messages['wizard.step-desc-1']}\n                >\n                  <div className=\"wizard-basic-step text-center\">\n                    <p>\n                      <IntlMessages id=\"wizard.content-1\" />\n                    </p>\n                  </div>\n                </Step>\n                <Step\n                  id=\"step2\"\n                  name={messages['wizard.step-name-2']}\n                  desc={messages['wizard.step-desc-2']}\n                >\n                  <div className=\"wizard-basic-step text-center\">\n                    <p>\n                      <IntlMessages id=\"wizard.content-2\" />\n                    </p>\n                  </div>\n                </Step>\n                <Step\n                  id=\"step3\"\n                  name={messages['wizard.step-name-3']}\n                  desc={messages['wizard.step-desc-3']}\n                  hideTopNav\n                >\n                  <div className=\"wizard-basic-step text-center\">\n                    <h2 className=\"mb-2\">\n                      <IntlMessages id=\"wizard.content-thanks\" />\n                    </h2>\n                    <p>\n                      <IntlMessages id=\"wizard.content-3\" />\n                    </p>\n                  </div>\n                </Step>\n              </Steps>\n              <BottomNavigation\n                onClickNext={onClickNext}\n                onClickPrev={onClickPrev}\n                className=\"justify-content-between\"\n                prevLabel={messages['wizard.prev']}\n                nextLabel={messages['wizard.next']}\n              />\n            </Wizard>\n          </CardBody>\n        </Card>\n      </Colxx>\n      <Colxx xxs=\"12\" xl=\"6\">\n        <Card>\n          <CardBody className=\"wizard wizard-default\">\n            <Wizard>\n              <TopNavigation\n                className=\"justify-content-start\"\n                disableNav={false}\n                topNavClick={topNavClick}\n              />\n              <Steps>\n                <Step\n                  id=\"step1\"\n                  name={messages['wizard.step-name-1']}\n                  desc={messages['wizard.step-desc-1']}\n                >\n                  <div className=\"wizard-basic-step\">\n                    <p>\n                      <IntlMessages id=\"wizard.content-1\" />\n                    </p>\n                  </div>\n                </Step>\n                <Step\n                  id=\"step2\"\n                  name={messages['wizard.step-name-2']}\n                  desc={messages['wizard.step-desc-2']}\n                >\n                  <div className=\"wizard-basic-step\">\n                    <p>\n                      <IntlMessages id=\"wizard.content-2\" />\n                    </p>\n                  </div>\n                </Step>\n                <Step\n                  id=\"step3\"\n                  name={messages['wizard.step-name-3']}\n                  desc={messages['wizard.step-desc-3']}\n                  hideTopNav\n                >\n                  <div className=\"wizard-basic-step\">\n                    <h2 className=\"mb-2\">\n                      <IntlMessages id=\"wizard.content-thanks\" />\n                    </h2>\n                    <p>\n                      <IntlMessages id=\"wizard.content-3\" />\n                    </p>\n                  </div>\n                </Step>\n              </Steps>\n              <BottomNavigation\n                onClickNext={onClickNext}\n                onClickPrev={onClickPrev}\n                className=\"justify-content-start\"\n                prevLabel={messages['wizard.prev']}\n                nextLabel={messages['wizard.next']}\n              />\n            </Wizard>\n          </CardBody>\n        </Card>\n      </Colxx>\n    </Row>\n  );\n};\nexport default injectIntl(Layouts);\n","import React from 'react';\nimport { Row } from 'reactstrap';\nimport { Colxx, Separator } from 'components/common/CustomBootstrap';\nimport Breadcrumb from 'containers/navs/Breadcrumb';\nimport Basic from 'containers/wizard/Basic';\nimport LastStepEnd from 'containers/wizard/LastStepEnd';\nimport TopNavDisabled from 'containers/wizard/TopNavDisabled';\nimport Validation from 'containers/wizard/Validation';\nimport Layouts from 'containers/wizard/Layouts';\n\nconst FormWizard = ({ match }) => {\n  return (\n    <>\n      <Row>\n        <Colxx xxs=\"12\">\n          <Breadcrumb heading=\"menu.form-wizard\" match={match} />\n          <Separator className=\"mb-5\" />\n        </Colxx>\n      </Row>\n      <Row>\n        <Colxx xxs=\"12\" className=\"mb-5\">\n          <h5 className=\"mb-4\">ساده</h5>\n          <Basic />\n        </Colxx>\n        <Colxx xxs=\"12\" className=\"mb-5\">\n          <h5 className=\"mb-4\">پایان گام آخر</h5>\n          <LastStepEnd />\n        </Colxx>\n        <Colxx xxs=\"12\" className=\"mb-5\">\n          <h5 className=\"mb-4\">غیرفعال شدن منوی نویگیشن</h5>\n          <TopNavDisabled />\n        </Colxx>\n        <Colxx xxs=\"12\" className=\"mb-5\">\n          <h5 className=\"mb-4\">با اعتبار سنجی</h5>\n          <Validation />\n        </Colxx>\n        <Colxx xxs=\"12\" className=\"mb-5\">\n          <h5 className=\"mb-4\">طرح بندی ها</h5>\n          <Layouts />\n        </Colxx>\n      </Row>\n    </>\n  );\n};\nexport default FormWizard;\n","/* eslint-disable react/no-array-index-key */\nimport React from 'react';\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\nimport { NavLink } from 'react-router-dom';\nimport IntlMessages from 'helpers/IntlMessages';\nimport { adminRoot } from 'constants/defaultValues';\n\nconst getMenuTitle = (sub) => {\n  if (`/${sub}` === adminRoot) return <IntlMessages id=\"menu.home\" />;\n  return <IntlMessages id={`menu.${sub}`} />;\n};\n\nconst getUrl = (path, sub) => {\n  return path.split(sub)[0] + sub;\n};\n\nconst BreadcrumbContainer = ({ heading, match }) => {\n  return (\n    <>\n      {heading && (\n        <h1>\n          <IntlMessages id={heading} />\n        </h1>\n      )}\n      <BreadcrumbItems match={match} />\n    </>\n  );\n};\n\nconst BreadcrumbItems = ({ match }) => {\n  const path = match.path.substr(1);\n  let paths = path.split('/');\n  if (paths[paths.length - 1].indexOf(':') > -1) {\n    paths = paths.filter((x) => x.indexOf(':') === -1);\n  }\n  return (\n    <>\n      <Breadcrumb className=\"pt-0 breadcrumb-container d-none d-sm-block d-lg-inline-block\">\n        {paths.map((sub, index) => {\n          return (\n            <BreadcrumbItem key={index} active={paths.length === index + 1}>\n              {paths.length !== index + 1 ? (\n                <NavLink to={`/${getUrl(path, sub, index)}`}>\n                  {getMenuTitle(sub)}\n                </NavLink>\n              ) : (\n                getMenuTitle(sub)\n              )}\n            </BreadcrumbItem>\n          );\n        })}\n      </Breadcrumb>\n    </>\n  );\n};\n\nexport default BreadcrumbContainer;\n","/* eslint-disable react/no-array-index-key */\n/* eslint-disable no-unused-vars */\n/* eslint-disable no-param-reassign */\nimport React from 'react';\nimport { WithWizard } from 'react-albus';\nimport { Row, Button } from 'reactstrap';\nimport { Colxx } from 'components/common/CustomBootstrap';\nimport IntlMessages from 'helpers/IntlMessages';\n\nconst BottomNavigation = ({\n  className,\n  onClickPrev,\n  prevLabel,\n  onClickNext,\n  nextLabel,\n}) => {\n  return (\n    <WithWizard\n      render={({ next, previous, step, steps }) => (\n        <Row className={`wizard-buttons ${className}`}>\n          <Colxx>\n            <Button\n              color=\"primary\"\n              style={{\n                fontSize: '140%',\n                fontWeight: 'bold',\n                paddingInline: '7%',\n              }}\n              className={`mr-1 ${\n                steps.indexOf(step) <= 0 ? 'disabled  m-4 ml-4' : ' m-4 ml-4'\n              }`}\n              onClick={() => {\n                onClickPrev(previous, steps, step);\n              }}\n            >\n              <IntlMessages id=\"button.Back\" />\n            </Button>\n          </Colxx>\n          <Colxx>\n            <Button\n              color=\"primary\"\n              style={{\n                fontSize: '140%',\n                fontWeight: 'bold',\n                paddingInline: '7%',\n              }}\n              className={\n                steps.indexOf(step) >= steps.length - 1\n                  ? 'disabled float-right m-4'\n                  : ' float-right m-4'\n              }\n              onClick={() => {\n                onClickNext(next, steps, step);\n              }}\n            >\n              {steps.indexOf(step) >= steps.length - 2 ? (\n                <IntlMessages id=\"button.SubmitButton\" />\n              ) : (\n                <IntlMessages id=\"button.Next\" />\n              )}\n            </Button>\n          </Colxx>\n        </Row>\n      )}\n    />\n  );\n};\nexport default BottomNavigation;\n","/* eslint-disable react/no-array-index-key */\n/* eslint-disable no-unused-vars */\n/* eslint-disable no-param-reassign */\nimport React from 'react';\nimport { WithWizard } from 'react-albus';\nimport { NavLink } from 'react-router-dom';\n\nconst TopNavigation = ({ className, disableNav, topNavClick }) => {\n  const getClassName = (steps, step, index, stepItem) => {\n    if (steps.indexOf(step) === index) {\n      return 'step-doing';\n    }\n    if (steps.indexOf(step) > index || stepItem.isDone) {\n      stepItem.isDone = true;\n      return 'step-done';\n    }\n    return 'step';\n  };\n\n  const itemClick = (stepItem, push) => {\n    if (disableNav) {\n      return;\n    }\n    topNavClick(stepItem, push);\n  };\n\n  return (\n    <WithWizard\n      render={({ next, previous, step, steps, go, push }) => (\n        <ul\n          className={`nav nav-tabs ${className}${\n            disableNav ? ' disabled' : ''\n          }`}\n        >\n          {steps.map((stepItem, index) => {\n            if (!stepItem.hideTopNav) {\n              return (\n                <li\n                  key={`topNavStep_${index}`}\n                  className={`nav-item ${getClassName(\n                    steps,\n                    step,\n                    index,\n                    stepItem\n                  )}`}\n                >\n                  <NavLink\n                    to=\"#\"\n                    location={{}}\n                    className=\"nav-link\"\n                    onClick={() => itemClick(stepItem, push)}\n                  >\n                    <span>{stepItem.name}</span>\n                    <small>{stepItem.desc}</small>\n                  </NavLink>\n                </li>\n              );\n            }\n            return <span key={`topNavStep_${index}`} />;\n          })}\n        </ul>\n      )}\n    />\n  );\n};\n\nexport default TopNavigation;\n"],"sourceRoot":""}