{"version":3,"sources":["views/app/students/bio/register-kankor.js"],"names":["servicePath","config","API_URL","concat","StudentRegistraion","_ref","history","kankorStudentId","useParams","console","log","useEffect","_fetchStudent","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_yield$callApi","data","wrap","_context","prev","next","callApi","sent","setInitialName","name","setInitialFatherName","father_name","setInitialDistrict","district","educationalYearsOptions","map","year","value","educational_year","setInitialEducationalYear","setInitialProvince","label","provence","setInitailDepartment","department_id","id","genderOptions","gender","setInitialGender","setInitailField","field_id","setInitialKankorMarks","score","studyTimeOptions","timeOptions","shift","setInitialstudyTime","setInitialInstitute","Institute","stop","apply","arguments","fetchStudent","_useState","useState","_useState2","_slicedToArray","intialName","_useState3","_useState4","initialFatherName","_useState5","_useState6","initialKankorMarks","_useState7","_useState8","initialField","_useState9","_useState10","initailDepartment","_useState11","_useState12","initialstudyTime","_useState13","_useState14","initialInstitute","_useState15","_useState16","initialGender","_useState17","_useState18","initialEducationalYear","_useState19","_useState20","initialProvince","_useState21","_useState22","initialDistrict","_useState23","_useState24","provinces","setProvinces","_useState25","_useState26","districts","setDistricts","_useState27","_useState28","selectedProvince","setSelectedProvince","initialValues","studentName","fatherName","kankorMarks","studyTime","department","field","institute","educationalYear","province","_useState29","_useState30","fields","setFields","_useState31","_useState32","institutes","setInstitutes","_useState33","_useState34","departments","setDepartments","_useState35","_useState36","isNext","setIsNext","_useState37","_useState38","fetchInstitutes","_ref2","_callee2","response","updatedData","_context2","status","item","fetchFields","_ref3","_callee3","_context3","fetchDepartments","_ref4","_callee4","_context4","fetchProvinces","_ref5","_callee5","_context5","native_name","fetchDistricts","_ref6","_callee6","provinceId","_context6","_x","createNotification","type","className","cName","NotificationManager","success","error","alert","info","onRegister","_ref7","_callee7","values","_context7","field_of_study","marks","_x2","_jsx","_Fragment","children","_jsxs","Card","IntlMessages","CardBody","Button","onClick","Formik","enableReinitialize","onSubmit","validationSchema","kankorRegisterValidationSchema","_ref8","errors","touched","setFieldTouched","setFieldValue","Form","Row","Colxx","xxs","FormGroup","Label","style","color","Field","FormikReactSelect","options","onChange","onBlur","fontSize","fontWeight","min","max","required","placeholder","size","margin"],"mappings":"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","file":"static/js/kankor-result.3902c209.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Formik, Form, Field } from 'formik';\nimport callApi from 'helpers/callApi';\nimport { useParams } from 'react-router-dom';\nimport { kankorRegisterValidationSchema } from '../../global-data/forms-validation';\nimport { Row, Card, CardBody, FormGroup, Label, Button } from 'reactstrap';\nimport IntlMessages from 'helpers/IntlMessages';\nimport { Colxx } from 'components/common/CustomBootstrap';\nimport { FormikReactSelect } from 'containers/form-validations/FormikFields';\nimport { genderOptions } from '../../global-data/options';\nimport { provinceOptions } from '../../global-data/options';\nimport { educationalYearsOptions } from '../../global-data/options';\nimport { studyTimeOptions } from '../../global-data/options';\nimport { NotificationManager } from 'components/common/react-notifications';\nimport './../../.././../assets/css/global-style.css';\nimport axios from 'axios';\n\nimport config from '../../../../config';\nconst servicePath = config.API_URL;\nconst KankorstudentAPI = `${servicePath}/api/kankorResults`;\nconst StudentRegistraion = ({ history }) => {\n  const { kankorStudentId } = useParams();\n  console.log('Kankor ID', kankorStudentId);\n  if (kankorStudentId) {\n    useEffect(() => {\n      async function fetchStudent() {\n        const { data } = await callApi(\n          `api/kankorResults/?id=${kankorStudentId}`,\n          '',\n          null\n        );\n        console.log('data of the kankor student', data[0]);\n        setInitialName(data[0].name);\n        setInitialFatherName(data[0].father_name);\n        setInitialDistrict(data[0].district);\n        const educationYearsOptions = educationalYearsOptions.map((year) => {\n          if (year.value == data[0].educational_year) {\n            setInitialEducationalYear(year);\n          }\n        });\n        setInitialProvince({ value: '1', label: data[0].provence });\n        setInitailDepartment([\n          {\n            value: data[0].department_id.id,\n            label: data[0].department_id.name,\n          },\n        ]);\n        const genderOption = genderOptions.map((gender) => {\n          if (gender.value === data[0].gender) {\n            setInitialGender(gender);\n          }\n        });\n        setInitailField([\n          {\n            value: data[0].field_id.id,\n            label: data[0].field_id.name,\n          },\n        ]);\n        setInitialKankorMarks(data[0].score);\n        const shiftOptions = studyTimeOptions.map((timeOptions) => {\n          if (timeOptions.value === data[0].shift) {\n            setInitialstudyTime(timeOptions);\n          }\n        });\n        setInitialInstitute([\n          { value: data[0].Institute.id, label: data[0].Institute.name },\n        ]);\n      }\n      fetchStudent();\n    }, []);\n  }\n\n  const [intialName, setInitialName] = useState('');\n  const [initialFatherName, setInitialFatherName] = useState('');\n  const [initialKankorMarks, setInitialKankorMarks] = useState('');\n  const [initialField, setInitailField] = useState([]);\n  const [initailDepartment, setInitailDepartment] = useState([]);\n  const [initialstudyTime, setInitialstudyTime] = useState([]);\n  const [initialInstitute, setInitialInstitute] = useState([]);\n\n  const [initialGender, setInitialGender] = useState([]);\n  const [initialEducationalYear, setInitialEducationalYear] = useState([]);\n  const [initialProvince, setInitialProvince] = useState([]);\n  const [initialDistrict, setInitialDistrict] = useState([]);\n\n  const [provinces, setProvinces] = useState([]);\n  const [districts, setDistricts] = useState([]);\n  const [selectedProvince, setSelectedProvince] = useState('');\n\n  const initialValues = {\n    studentName: intialName,\n    gender: initialGender,\n    fatherName: initialFatherName,\n    kankorMarks: initialKankorMarks,\n    studyTime: initialstudyTime,\n    department: initailDepartment,\n    field: initialField,\n    institute: initialInstitute,\n    educationalYear: initialEducationalYear,\n    province: initialProvince,\n    district: initialDistrict,\n  };\n  const [fields, setFields] = useState([]);\n  const [institutes, setInstitutes] = useState([]);\n  const [departments, setDepartments] = useState([]);\n  const [isNext, setIsNext] = useState(false);\n  const [StudyTime, setStudyTIme] = useState('0');\n\n  const fetchInstitutes = async () => {\n    const response = await callApi('institute/', '', null);\n    if (response.data && response.status === 200) {\n      const updatedData = await response.data.map((item) => ({\n        value: item.id,\n        label: item.name,\n      }));\n      setInstitutes(updatedData);\n    } else {\n      console.log('institute error');\n    }\n  };\n  const fetchFields = async () => {\n    const response = await callApi('institute/field/', '', null);\n    if (response.data && response.status === 200) {\n      const updatedData = await response.data.map((item) => ({\n        value: item.id,\n        label: item.name,\n      }));\n      setFields(updatedData);\n    } else {\n      console.log('field error');\n    }\n  };\n  const fetchDepartments = async () => {\n    const response = await callApi('institute/department/', '', null);\n    if (response.data && response.status === 200) {\n      const updatedData = await response.data.map((item) => ({\n        value: item.id,\n        label: item.name,\n      }));\n      setDepartments(updatedData);\n    } else {\n      console.log('department error');\n    }\n  };\n\n  const fetchProvinces = async () => {\n    const response = await callApi('core/provinces/', 'GET', null);\n    if (response.data && response.status === 200) {\n      const updatedData = await response.data.map((item) => ({\n        value: item.id,\n        label: item.native_name,\n      }));\n\n      setProvinces(updatedData);\n    } else {\n      console.log('province error');\n    }\n  };\n\n  const fetchDistricts = async (provinceId) => {\n    console.log('provinceId', provinceId);\n    const response = await callApi(\n      `core/districts/?province=${provinceId}`,\n      'GET',\n      null\n    );\n    if (response.data && response.status === 200) {\n      const updatedData = await response.data.map((item) => ({\n        value: item.id,\n        label: item.native_name,\n      }));\n      setDistricts(updatedData);\n    } else {\n      console.log('district error');\n    }\n  };\n\n  useEffect(() => {\n    fetchProvinces();\n  }, []);\n\n  useEffect(() => {\n    console.log('selectedProvince', selectedProvince);\n    if (selectedProvince) {\n      fetchDistricts(selectedProvince);\n    }\n  }, [selectedProvince]);\n\n  const updateMode = true;\n\n  const createNotification = (type, className) => {\n    const cName = className || '';\n    switch (type) {\n      case 'success':\n        NotificationManager.success(\n          'د کانکور شاگرد په بریالیتوب سره ثبت شو',\n          'موفقیت',\n          3000,\n          null,\n          null,\n          cName\n        );\n        break;\n      case 'error':\n        NotificationManager.error(\n          'د کانکور شاگرد ثبت نه شو بیا کوشش وکری',\n          'خطا',\n          9000,\n          () => {\n            alert('callback');\n          },\n          null,\n          cName\n        );\n        break;\n      default:\n        NotificationManager.info('Info message');\n        break;\n    }\n  };\n\n  const onRegister = async (values) => {\n    console.log('THis is  the inner comment');\n    const data = {\n      name: values.studentName,\n      father_name: values.fatherName,\n      institute: values.institute.value,\n      field_of_study: values.field.value,\n      department: values.department.value,\n      marks: values.kankorMarks,\n      educational_year: values.educationalYear.value,\n      province: values.province.value,\n      district: values.district.value,\n      gender: values.gender.value,\n      shift: values.studyTime.value,\n    };\n    console.log('data', data);\n\n    const response = await callApi(\n      'students/kankor-applicant-create/',\n      'POST',\n      data\n    );\n    if (\n      response.status === 200 ||\n      response.status === 201 ||\n      response.status === 202\n    ) {\n      // setIsNext(false);\n      setIsNext(true);\n      createNotification('success', 'filled');\n    } else {\n      createNotification('error', 'filled');\n      console.log('kankor result error');\n    }\n  };\n\n  useEffect(() => {\n    fetchInstitutes();\n    fetchFields();\n    fetchDepartments();\n  }, []);\n\n  return (\n    <>\n      <Card>\n        <div className=\"ml-5\">\n          <h3 className=\"mt-5 m-5 titleStyle\">\n            {<IntlMessages id=\"forms.Kankorformstitle\" />}\n          </h3>\n        </div>\n        <CardBody>\n          {!isNext ? (\n            <Formik\n              enableReinitialize={true}\n              initialValues={initialValues}\n              onSubmit={onRegister}\n              validationSchema={kankorRegisterValidationSchema}\n            >\n              {({\n                errors,\n                touched,\n                values,\n                setFieldTouched,\n                setFieldValue,\n              }) => (\n                <Form className=\"av-tooltip tooltip-label-right style\">\n                  <Row className=\"justify-content-center\">\n                    <Colxx xxs=\"5\" className=\" mt-5\">\n                      {/* Name */}\n                      <FormGroup className=\"form-group has-float-label error-l-175\">\n                        <Label>\n                          <IntlMessages id=\"forms.StdName\" />\n                          <span style={{ color: 'red' }}>*</span>\n                        </Label>\n                        <Field\n                          className=\"form-control fieldStyle\"\n                          name=\"studentName\"\n                        />\n                        {errors.studentName && touched.studentName ? (\n                          <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                            {errors.studentName}\n                          </div>\n                        ) : null}\n                      </FormGroup>\n\n                      {/* Gender */}\n                      <FormGroup className=\"form-group has-float-label error-l-175\">\n                        <Label>\n                          <IntlMessages id=\"gender.gender\" />\n                          <span style={{ color: 'red' }}>*</span>\n                        </Label>\n                        <FormikReactSelect\n                          name=\"gender\"\n                          id=\"gender\"\n                          value={values.gender}\n                          options={genderOptions}\n                          onChange={setFieldValue}\n                          onBlur={setFieldTouched}\n                        />\n                        {touched.gender && errors.gender ? (\n                          <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                            {errors.gender}\n                          </div>\n                        ) : null}\n                      </FormGroup>\n\n                      {/* Institutes */}\n                      <FormGroup className=\"form-group has-float-label error-l-175\">\n                        <Label>\n                          <IntlMessages id=\"forms.InstituteLabel\" />\n                          <span style={{ color: 'red' }}>*</span>\n                        </Label>\n                        <FormikReactSelect\n                          name=\"institute\"\n                          id=\"institute\"\n                          value={values.institute}\n                          options={institutes}\n                          onChange={setFieldValue}\n                          onBlur={setFieldTouched}\n                        />\n                        {errors.institute && touched.institute ? (\n                          <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                            {errors.institute}\n                            {console.log(errors.institute, 'sdafhsakh')}\n                          </div>\n                        ) : null}\n                      </FormGroup>\n\n                      {/* Department */}\n                      <FormGroup className=\"form-group has-float-label error-l-175\">\n                        <Label>\n                          <IntlMessages id=\"forms.studyDepartment\" />\n                          <span style={{ color: 'red' }}>*</span>\n                        </Label>\n                        <FormikReactSelect\n                          name=\"department\"\n                          id=\"department\"\n                          value={values.department}\n                          options={departments}\n                          onChange={setFieldValue}\n                          onBlur={setFieldTouched}\n                        />\n                        {errors.department && touched.department ? (\n                          <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                            {errors.department}\n                          </div>\n                        ) : null}\n                      </FormGroup>\n\n                      <FormGroup className=\"form-group has-float-label\">\n                        <Label style={{ fontSize: 18, fontWeight: 'bold' }}>\n                          <IntlMessages id=\"forms.ProvinceLabel\" />\n                        </Label>\n                        <FormikReactSelect\n                          name=\"province\"\n                          id=\"province\"\n                          // value={values.province.value}\n                          options={provinces}\n                          onChange={setFieldValue} //onChange should conatain single line\n                          onBlur={setFieldTouched}\n                          onClick={setSelectedProvince(values.province.value)}\n                        />\n                        {errors.province && touched.province ? (\n                          <div className=\"invalid-feedback d-block bg-danger text-white\">\n                            {errors.province}\n                          </div>\n                        ) : null}\n                      </FormGroup>\n\n                      <FormGroup className=\"form-group has-float-label error-l-175\">\n                        <Label style={{ fontSize: 18, fontWeight: 'bold' }}>\n                          <IntlMessages id=\"forms.DistrictLabel\" />\n                        </Label>\n                        <FormikReactSelect\n                          name=\"district\"\n                          id=\"district\"\n                          // value={values.district.value}\n                          options={districts}\n                          onChange={setFieldValue}\n                          onBlur={setFieldTouched}\n                        />\n                        {errors.district && touched.district ? (\n                          <div className=\"invalid-feedback d-block bg-danger text-white\">\n                            {errors.district}\n                          </div>\n                        ) : null}\n                      </FormGroup>\n                    </Colxx>\n\n                    <Colxx xxs=\"5\" className=\" mt-5\">\n                      {/*Father Name  */}\n                      <FormGroup className=\"form-group has-float-label error-l-175\">\n                        <Label>\n                          <IntlMessages id=\"forms.StdFatherName\" />\n                          <span style={{ color: 'red' }}>*</span>\n                        </Label>\n                        <Field\n                          className=\"form-control fieldStyle\"\n                          name=\"fatherName\"\n                        />\n                        {errors.fatherName && touched.fatherName ? (\n                          <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                            {errors.fatherName}\n                          </div>\n                        ) : null}\n                      </FormGroup>\n\n                      {/* <FormGroup className=\"form-group has-float-label error-l-175\">\n                        <Label>\n                          <IntlMessages id=\"forms.StdKankorIdLabel\" />\n                        </Label>\n                        <Field className=\"form-control\" name=\"kankorId\" />\n                        {errors.kankorId && touched.kankorId ? (\n                          <div className=\"invalid-feedback d-block bg-danger text-white\">\n                            {errors.kankorId}\n                          </div>\n                        ) : null}\n                      </FormGroup> */}\n\n                      {/* Kankor Marks */}\n                      <FormGroup className=\"form-group has-float-label error-l-175\">\n                        <Label>\n                          <IntlMessages id=\"forms.KankorMarksLabel\" />\n                          <span style={{ color: 'red' }}>*</span>\n                        </Label>\n                        <Field\n                          className=\"form-control fieldStyle\"\n                          name=\"kankorMarks\"\n                          type=\"number\"\n                          min=\"0\"\n                          max=\"100\"\n                        />\n                        {errors.kankorMarks && touched.kankorMarks ? (\n                          <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                            {errors.kankorMarks}\n                          </div>\n                        ) : null}\n                      </FormGroup>\n\n                      {/* Field */}\n                      <FormGroup className=\"form-group has-float-label error-l-175\">\n                        <Label>\n                          <IntlMessages id=\"forms.FieldLabel\" />\n                          <span style={{ color: 'red' }}>*</span>\n                        </Label>\n                        <FormikReactSelect\n                          name=\"field\"\n                          id=\"field\"\n                          value={values.field}\n                          options={fields}\n                          onChange={setFieldValue}\n                          onBlur={setFieldTouched}\n                        />\n                        {errors.field && touched.field ? (\n                          <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                            {errors.field}\n                          </div>\n                        ) : null}\n                      </FormGroup>\n\n                      {/* Eduactional Year*/}\n                      <FormGroup className=\"form-group has-float-label error-l-175 \">\n                        <Label>\n                          <IntlMessages id=\"curriculum.eduactionalYearLabel\" />\n                          <span style={{ color: 'red' }}>*</span>\n                        </Label>\n                        <FormikReactSelect\n                          name=\"educationalYear\"\n                          id=\"educationalYear\"\n                          value={values.educationalYear}\n                          options={educationalYearsOptions}\n                          onChange={setFieldValue}\n                          onBlur={setFieldTouched}\n                          required\n                        />\n                        {errors.educationalYear && touched.educationalYear ? (\n                          <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                            {errors.educationalYear}\n                          </div>\n                        ) : null}\n                      </FormGroup>\n\n                      {/* Study Time */}\n                      <FormGroup className=\"form-group has-float-label error-l-175\">\n                        <Label>\n                          <IntlMessages id=\"forms.StudyTimeLabel\" />\n                          <span style={{ color: 'red' }}>*</span>\n                        </Label>\n                        <FormikReactSelect\n                          name=\"studyTime\"\n                          id=\"studyTime\"\n                          value={values.studyTime}\n                          placeholder=\"Select option\"\n                          options={studyTimeOptions}\n                          onChange={setFieldValue}\n                          onBlur={setFieldTouched}\n                        />\n                        {errors.studyTime && touched.studyTime ? (\n                          <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                            {errors.studyTime}\n                          </div>\n                        ) : null}\n                      </FormGroup>\n                    </Colxx>\n                  </Row>\n                  <Row>\n                    <Colxx>\n                      <Button\n                        color=\"primary\"\n                        className=\"float-right  buttonStyle\"\n                        size=\"lg\"\n                        type=\"submit\"\n                        style={{ margin: '7% 0% 8% 9%' }}\n                      >\n                        <span className=\"label\">\n                          <IntlMessages id=\"forms.SubimssionButton\" />\n                        </span>\n                      </Button>\n                    </Colxx>\n                  </Row>\n                </Form>\n              )}\n            </Formik>\n          ) : (\n            <div className=\"wizard-basic-step text-center pt-3\">\n              <div>\n                <h1 className=\"mb-2\">\n                  <IntlMessages id=\"wizard.content-thanks\" />\n                </h1>\n                <h3>\n                  <IntlMessages id=\"wizard.registered\" />\n                </h3>\n                <Button\n                  className=\"m-5 bg-primary \"\n                  onClick={() => setIsNext(false)}\n                >\n                  <IntlMessages id=\"button.back\" />\n                </Button>\n              </div>\n            </div>\n          )}\n        </CardBody>\n      </Card>\n    </>\n  );\n};\n\nexport default StudentRegistraion;\n"],"sourceRoot":""}