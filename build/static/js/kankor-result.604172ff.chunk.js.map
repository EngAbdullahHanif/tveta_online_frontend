{"version":3,"file":"static/js/kankor-result.604172ff.chunk.js","mappings":"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","sources":["config/styling.js","views/app/students/bio/register-kankor.js"],"sourcesContent":["export const inputLabel = { fontSize: 16, fontWeight: 'bold' };\nexport const buttonStyle = { fontSize: 16 };\n","import React, { useState, useEffect, useContext } from 'react';\nimport { Formik, Form, Field } from 'formik';\nimport callApi from 'helpers/callApi';\nimport { useParams } from 'react-router-dom';\nimport { kankorRegisterValidationSchema } from '../../global-data/forms-validation';\nimport { Row, Card, CardBody, FormGroup, Label, Button } from 'reactstrap';\nimport IntlMessages from 'helpers/IntlMessages';\nimport { Colxx } from 'components/common/CustomBootstrap';\nimport { FormikReactSelect } from 'containers/form-validations/FormikFields';\nimport { genderOptions } from '../../global-data/options';\nimport { educationalYearsOptions } from '../../global-data/options';\nimport { studyTimeOptions } from '../../global-data/options';\nimport { NotificationManager } from 'components/common/react-notifications';\nimport './../../.././../assets/css/global-style.css';\n\nimport config from '../../../../config';\nimport { AuthContext } from 'context/AuthContext';\nimport { inputLabel } from 'config/styling';\nconst servicePath = config.API_URL;\nconst KankorstudentAPI = `${servicePath}/api/kankorResults`;\nconst StudentRegistraion = ({ history }) => {\n  const { kankorStudentId } = useParams();\n  console.log('Kankor ID', kankorStudentId);\n  async function fetchStudent() {\n    const { data } = await callApi(\n      `api/kankorResults/?id=${kankorStudentId}`,\n      '',\n      null,\n    );\n    console.log('data of the kankor student', data[0]);\n    setInitialName(data[0].name);\n    setInitialFatherName(data[0].father_name);\n    setInitialDistrict(data[0].district);\n    const educationYearsOptions = educationalYearsOptions.map((year) => {\n      if (year.value == data[0].educational_year) {\n        setInitialEducationalYear(year);\n      }\n    });\n    setInitialProvince({ value: '1', label: data[0].provence });\n    setInitailDepartment([\n      {\n        value: data[0].department_id.id,\n        label: data[0].department_id.name,\n      },\n    ]);\n    const genderOption = genderOptions.map((gender) => {\n      if (gender.value === data[0].gender) {\n        setInitialGender(gender);\n      }\n    });\n    setInitailField([\n      {\n        value: data[0].field_id.id,\n        label: data[0].field_id.name,\n      },\n    ]);\n    setInitialKankorMarks(data[0].score);\n    const shiftOptions = studyTimeOptions.map((timeOptions) => {\n      if (timeOptions.value === data[0].shift) {\n        setInitialstudyTime(timeOptions);\n      }\n    });\n    setInitialInstitute([\n      { value: data[0].Institute.id, label: data[0].Institute.name },\n    ]);\n  }\n\n  useEffect(() => {\n    if (kankorStudentId) {\n      fetchStudent();\n    }\n  }, []);\n\n  const [intialName, setInitialName] = useState('');\n  const [initialFatherName, setInitialFatherName] = useState('');\n  const [initialKankorMarks, setInitialKankorMarks] = useState('');\n  const [initialField, setInitailField] = useState([]);\n  const [initailDepartment, setInitailDepartment] = useState([]);\n  const [initialstudyTime, setInitialstudyTime] = useState([]);\n  const [initialInstitute, setInitialInstitute] = useState([]);\n\n  const [initialGender, setInitialGender] = useState([]);\n  const [initialEducationalYear, setInitialEducationalYear] = useState([]);\n  const [initialProvince, setInitialProvince] = useState([]);\n  const [initialDistrict, setInitialDistrict] = useState([]);\n\n  const { provinces, districts, fields, institutes, departments } =\n    useContext(AuthContext);\n\n  const [selectedProvince, setSelectedProvince] = useState('');\n\n  const initialValues = {\n    studentName: intialName,\n    gender: initialGender,\n    fatherName: initialFatherName,\n    kankorMarks: initialKankorMarks,\n    studyTime: initialstudyTime,\n    department: initailDepartment,\n    field: initialField,\n    institute: initialInstitute,\n    educationalYear: initialEducationalYear,\n    province: initialProvince,\n    district: initialDistrict,\n  };\n\n  const [isNext, setIsNext] = useState(false);\n  const [StudyTime, setStudyTIme] = useState('0');\n\n  const updateMode = true;\n\n  const createNotification = (type, className) => {\n    const cName = className || '';\n    switch (type) {\n      case 'success':\n        NotificationManager.success(\n          'د کانکور شاگرد په بریالیتوب سره ثبت شو',\n          'موفقیت',\n          3000,\n          null,\n          null,\n          cName,\n        );\n        break;\n      case 'error':\n        NotificationManager.error(\n          'د کانکور شاگرد ثبت نه شو بیا کوشش وکری',\n          'خطا',\n          9000,\n          () => {\n            alert('callback');\n          },\n          null,\n          cName,\n        );\n        break;\n      default:\n        NotificationManager.info('Info message');\n        break;\n    }\n  };\n\n  const onRegister = async (values) => {\n    console.log('THis is  the inner comment');\n    const data = {\n      name: values.studentName,\n      father_name: values.fatherName,\n      institute: values.institute.value,\n      field_of_study: values.field.value,\n      department: values.department.value,\n      marks: values.kankorMarks,\n      educational_year: values.educationalYear.value,\n      province: values.province.value,\n      district: values.district.value,\n      gender: values.gender.value,\n      shift: values.studyTime.value,\n    };\n    console.log('data', data);\n\n    const response = await callApi(\n      'students/kankor-applicant-create/',\n      'POST',\n      data,\n    );\n    if (\n      response.status === 200 ||\n      response.status === 201 ||\n      response.status === 202\n    ) {\n      // setIsNext(false);\n      setIsNext(true);\n      createNotification('success', 'filled');\n    } else {\n      createNotification('error', 'filled');\n      console.log('kankor result error');\n    }\n  };\n\n  return (\n    <>\n      <Card>\n        <div className=\"ml-5\">\n          <h3 className=\"mt-5 m-5 titleStyle\">\n            {<IntlMessages id=\"forms.Kankorformstitle\" />}\n          </h3>\n        </div>\n        <CardBody>\n          {!isNext ? (\n            <Formik\n              enableReinitialize={true}\n              initialValues={initialValues}\n              onSubmit={onRegister}\n              validationSchema={kankorRegisterValidationSchema}\n            >\n              {({\n                errors,\n                touched,\n                values,\n                setFieldTouched,\n                setFieldValue,\n              }) => (\n                <Form className=\"av-tooltip tooltip-label-right style\">\n                  <Row className=\"justify-content-center\">\n                    <Colxx xxs=\"5\" className=\" mt-5\">\n                      {/* Name */}\n                      <FormGroup className=\"form-group has-float-label error-l-175\">\n                        <Label style={inputLabel}>\n                          <IntlMessages id=\"forms.StdName\" />\n                          <span style={{ color: 'red' }}>*</span>\n                        </Label>\n                        <Field\n                          className=\"form-control fieldStyle\"\n                          name=\"studentName\"\n                        />\n                        {errors.studentName && touched.studentName ? (\n                          <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                            {errors.studentName}\n                          </div>\n                        ) : null}\n                      </FormGroup>\n                      {/*Father Name  */}\n                      <FormGroup className=\"form-group has-float-label error-l-175\">\n                        <Label style={inputLabel}>\n                          <IntlMessages id=\"forms.StdFatherName\" />\n                          <span style={{ color: 'red' }}>*</span>\n                        </Label>\n                        <Field\n                          className=\"form-control fieldStyle\"\n                          name=\"fatherName\"\n                        />\n                        {errors.fatherName && touched.fatherName ? (\n                          <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                            {errors.fatherName}\n                          </div>\n                        ) : null}\n                      </FormGroup>\n\n                      {/* Gender */}\n                      <FormGroup className=\"form-group has-float-label error-l-175\">\n                        <Label style={inputLabel}>\n                          <IntlMessages id=\"gender.gender\" />\n                          <span style={{ color: 'red' }}>*</span>\n                        </Label>\n                        <FormikReactSelect\n                          name=\"gender\"\n                          id=\"gender\"\n                          value={values.gender}\n                          options={genderOptions}\n                          onChange={setFieldValue}\n                          onBlur={setFieldTouched}\n                        />\n                        {touched.gender && errors.gender ? (\n                          <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                            {errors.gender}\n                          </div>\n                        ) : null}\n                      </FormGroup>\n\n                      {/* Institutes */}\n                      <FormGroup className=\"form-group has-float-label error-l-175\">\n                        <Label style={inputLabel}>\n                          <IntlMessages id=\"forms.InstituteLabel\" />\n                          <span style={{ color: 'red' }}>*</span>\n                        </Label>\n                        <FormikReactSelect\n                          name=\"institute\"\n                          id=\"institute\"\n                          value={values.institute}\n                          options={institutes}\n                          onChange={setFieldValue}\n                          onBlur={setFieldTouched}\n                        />\n                        {errors.institute && touched.institute ? (\n                          <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                            {errors.institute}\n                            {console.log(errors.institute, 'sdafhsakh')}\n                          </div>\n                        ) : null}\n                      </FormGroup>\n\n                      {/* Department */}\n                      <FormGroup className=\"form-group has-float-label error-l-175\">\n                        <Label style={inputLabel}>\n                          <IntlMessages id=\"forms.FieldDepLabel\" />\n                          <span style={{ color: 'red' }}>*</span>\n                        </Label>\n                        <FormikReactSelect\n                          name=\"department\"\n                          id=\"department\"\n                          value={values.department}\n                          options={departments}\n                          onChange={setFieldValue}\n                          onBlur={setFieldTouched}\n                        />\n                        {errors.department && touched.department ? (\n                          <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                            {errors.department}\n                          </div>\n                        ) : null}\n                      </FormGroup>\n\n                      {/* province*/}\n                      <FormGroup className=\"form-group has-float-label error-l-175\">\n                        <Label style={inputLabel}>\n                          <IntlMessages id=\"forms.ProvinceLabel\" />\n                          <span style={{ color: 'red' }}>*</span>\n                        </Label>\n                        <FormikReactSelect\n                          name=\"province\"\n                          id=\"province\"\n                          value={values.province}\n                          options={provinces}\n                          onChange={(name, value) => {\n                            setFieldValue('district', []);\n                            setFieldValue(name, value);\n                          }}\n                          onBlur={setFieldTouched}\n                        />\n                        {errors.province && touched.province ? (\n                          <div className=\"invalid-feedback d-block   bg-danger text-white messageStyle\">\n                            {errors.province}\n                          </div>\n                        ) : null}\n                      </FormGroup>\n\n                      {/* District */}\n                      <FormGroup className=\"form-group has-float-label error-l-175\">\n                        <Label style={inputLabel}>\n                          <IntlMessages id=\"forms.DistrictLabel\" />\n                        </Label>\n                        <FormikReactSelect\n                          name=\"district\"\n                          id=\"district\"\n                          value={values.district}\n                          options={districts?.filter(\n                            (district) =>\n                              district.province === values.province.value,\n                          )}\n                          onChange={setFieldValue}\n                          onBlur={setFieldTouched}\n                        />\n                        {errors.district && touched.district ? (\n                          <div className=\"invalid-feedback d-block bg-danger text-white\">\n                            {errors.district}\n                          </div>\n                        ) : null}\n                      </FormGroup>\n                    </Colxx>\n\n                    <Colxx xxs=\"5\" className=\" mt-5\">\n                      {/* <FormGroup className=\"form-group has-float-label error-l-175\">\n                        <Label style={inputLabel}>\n                          <IntlMessages id=\"forms.StdKankorIdLabel\" />\n                        </Label>\n                        <Field className=\"form-control\" name=\"kankorId\" />\n                        {errors.kankorId && touched.kankorId ? (\n                          <div className=\"invalid-feedback d-block bg-danger text-white\">\n                            {errors.kankorId}\n                          </div>\n                        ) : null}\n                      </FormGroup> */}\n\n                      {/* Kankor Marks */}\n                      <FormGroup className=\"form-group has-float-label error-l-175\">\n                        <Label style={inputLabel}>\n                          <IntlMessages id=\"forms.KankorMarksLabel\" />\n                          <span style={{ color: 'red' }}>*</span>\n                        </Label>\n                        <Field\n                          className=\"form-control fieldStyle\"\n                          name=\"kankorMarks\"\n                          type=\"number\"\n                          min=\"0\"\n                          max=\"100\"\n                        />\n                        {errors.kankorMarks && touched.kankorMarks ? (\n                          <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                            {errors.kankorMarks}\n                          </div>\n                        ) : null}\n                      </FormGroup>\n\n                      {/* Field */}\n                      {/* <FormGroup className=\"form-group has-float-label error-l-175\">\n                        <Label style={inputLabel}>\n                          <IntlMessages id=\"forms.FieldLabel\" />\n                          <span style={{ color: 'red' }}>*</span>\n                        </Label>\n                        <FormikReactSelect\n                          name=\"field\"\n                          id=\"field\"\n                          value={values.field}\n                          options={fields}\n                          onChange={setFieldValue}\n                          onBlur={setFieldTouched}\n                        />\n                        {errors.field && touched.field ? (\n                          <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                            {errors.field}\n                          </div>\n                        ) : null}\n                      </FormGroup> */}\n\n                      {/* Eduactional Year*/}\n                      <FormGroup className=\"form-group has-float-label error-l-175 \">\n                        <Label style={inputLabel}>\n                          <IntlMessages id=\"curriculum.eduactionalYearLabel\" />\n                          <span style={{ color: 'red' }}>*</span>\n                        </Label>\n                        <FormikReactSelect\n                          name=\"educationalYear\"\n                          id=\"educationalYear\"\n                          value={values.educationalYear}\n                          options={educationalYearsOptions}\n                          onChange={setFieldValue}\n                          onBlur={setFieldTouched}\n                          required\n                        />\n                        {errors.educationalYear && touched.educationalYear ? (\n                          <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                            {errors.educationalYear}\n                          </div>\n                        ) : null}\n                      </FormGroup>\n\n                      {/* Study Time */}\n                      <FormGroup className=\"form-group has-float-label error-l-175\">\n                        <Label style={inputLabel}>\n                          <IntlMessages id=\"forms.StudyTimeLabel\" />\n                          <span style={{ color: 'red' }}>*</span>\n                        </Label>\n                        <FormikReactSelect\n                          name=\"studyTime\"\n                          id=\"studyTime\"\n                          value={values.studyTime}\n                          options={studyTimeOptions}\n                          onChange={setFieldValue}\n                          onBlur={setFieldTouched}\n                        />\n                        {errors.studyTime && touched.studyTime ? (\n                          <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                            {errors.studyTime}\n                          </div>\n                        ) : null}\n                      </FormGroup>\n                    </Colxx>\n                  </Row>\n                  <Row>\n                    <Colxx>\n                      <Button\n                        color=\"primary\"\n                        className=\"float-right  buttonStyle\"\n                        size=\"lg\"\n                        type=\"submit\"\n                        style={{ margin: '7% 0% 8% 9%' }}\n                      >\n                        <span className=\"label\">\n                          <IntlMessages id=\"forms.SubimssionButton\" />\n                        </span>\n                      </Button>\n                    </Colxx>\n                  </Row>\n                </Form>\n              )}\n            </Formik>\n          ) : (\n            <div className=\"wizard-basic-step text-center pt-3\">\n              <div>\n                <h1 className=\"mb-2\">\n                  <IntlMessages id=\"wizard.content-thanks\" />\n                </h1>\n                <h3>\n                  <IntlMessages id=\"wizard.registered\" />\n                </h3>\n                <Button\n                  className=\"m-5 bg-primary \"\n                  onClick={() => setIsNext(false)}\n                >\n                  <IntlMessages id=\"button.back\" />\n                </Button>\n              </div>\n            </div>\n          )}\n        </CardBody>\n      </Card>\n    </>\n  );\n};\n\nexport default StudentRegistraion;\n"],"names":["inputLabel","fontSize","fontWeight","buttonStyle","servicePath","config","API_URL","concat","_ref","history","kankorStudentId","useParams","_fetchStudent","_asyncToGenerator","_regeneratorRuntime","mark","_callee2","_yield$callApi","data","wrap","_context2","prev","next","callApi","sent","console","log","setInitialName","name","setInitialFatherName","father_name","setInitialDistrict","district","educationalYearsOptions","map","year","value","educational_year","setInitialEducationalYear","setInitialProvince","label","provence","setInitailDepartment","department_id","id","genderOptions","gender","setInitialGender","setInitailField","field_id","setInitialKankorMarks","score","studyTimeOptions","timeOptions","shift","setInitialstudyTime","setInitialInstitute","Institute","stop","apply","arguments","useEffect","fetchStudent","_useState","useState","_useState2","_slicedToArray","intialName","_useState3","_useState4","initialFatherName","_useState5","_useState6","initialKankorMarks","_useState7","_useState8","initialField","_useState9","_useState10","initailDepartment","_useState11","_useState12","initialstudyTime","_useState13","_useState14","initialInstitute","_useState15","_useState16","initialGender","_useState17","_useState18","initialEducationalYear","_useState19","_useState20","initialProvince","_useState21","_useState22","initialDistrict","_useContext","useContext","AuthContext","provinces","districts","institutes","fields","departments","_useState23","_useState24","initialValues","studentName","fatherName","kankorMarks","studyTime","department","field","institute","educationalYear","province","_useState25","_useState26","isNext","setIsNext","_useState27","_useState28","createNotification","type","className","cName","NotificationManager","success","error","alert","info","onRegister","_ref2","_callee","values","response","_context","field_of_study","marks","status","_x","_jsx","_Fragment","children","_jsxs","Card","IntlMessages","CardBody","Button","onClick","Formik","enableReinitialize","onSubmit","validationSchema","kankorRegisterValidationSchema","_ref3","errors","touched","setFieldTouched","setFieldValue","Form","Row","Colxx","xxs","FormGroup","Label","style","color","Field","FormikReactSelect","options","onChange","onBlur","filter","min","max","required","size","margin"],"sourceRoot":""}