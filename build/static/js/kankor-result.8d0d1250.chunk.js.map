{"version":3,"sources":["views/app/students/bio/register-kankor.js"],"names":["servicePath","config","API_URL","concat","StudentRegistraion","_ref","history","kankorStudentId","useParams","console","log","useEffect","_fetchStudent","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_yield$callApi","data","wrap","_context","prev","next","callApi","sent","setInitialName","name","setInitialFatherName","father_name","setInitialDistrict","district","educationalYearsOptions","map","year","value","educational_year","setInitialEducationalYear","setInitialProvince","label","provence","setInitailDepartment","department_id","id","genderOptions","gender","setInitialGender","setInitailField","field_id","setInitialKankorMarks","score","studyTimeOptions","timeOptions","shift","setInitialstudyTime","setInitialInstitute","Institute","stop","apply","arguments","fetchStudent","_useState","useState","_useState2","_slicedToArray","intialName","_useState3","_useState4","initialFatherName","_useState5","_useState6","initialKankorMarks","_useState7","_useState8","initialField","_useState9","_useState10","initailDepartment","_useState11","_useState12","initialstudyTime","_useState13","_useState14","initialInstitute","_useState15","_useState16","initialGender","_useState17","_useState18","initialEducationalYear","_useState19","_useState20","initialProvince","_useState21","_useState22","initialDistrict","_useContext","useContext","AuthContext","provinces","districts","institutes","fields","departments","_useState23","_useState24","initialValues","studentName","fatherName","kankorMarks","studyTime","department","field","institute","educationalYear","province","_useState25","_useState26","isNext","setIsNext","_useState27","_useState28","createNotification","type","className","cName","NotificationManager","success","error","alert","info","onRegister","_ref2","_callee2","values","response","_context2","field_of_study","marks","status","_x","_jsx","_Fragment","children","_jsxs","Card","IntlMessages","CardBody","Button","onClick","Formik","enableReinitialize","onSubmit","validationSchema","kankorRegisterValidationSchema","_ref3","errors","touched","setFieldTouched","setFieldValue","Form","Row","Colxx","xxs","FormGroup","Label","style","color","Field","FormikReactSelect","options","onChange","onBlur","fontSize","fontWeight","filter","min","max","required","placeholder","size","margin"],"mappings":"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","file":"static/js/kankor-result.8d0d1250.chunk.js","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport { Formik, Form, Field } from 'formik';\nimport callApi from 'helpers/callApi';\nimport { useParams } from 'react-router-dom';\nimport { kankorRegisterValidationSchema } from '../../global-data/forms-validation';\nimport { Row, Card, CardBody, FormGroup, Label, Button } from 'reactstrap';\nimport IntlMessages from 'helpers/IntlMessages';\nimport { Colxx } from 'components/common/CustomBootstrap';\nimport { FormikReactSelect } from 'containers/form-validations/FormikFields';\nimport { genderOptions } from '../../global-data/options';\nimport { educationalYearsOptions } from '../../global-data/options';\nimport { studyTimeOptions } from '../../global-data/options';\nimport { NotificationManager } from 'components/common/react-notifications';\nimport './../../.././../assets/css/global-style.css';\nimport axios from 'axios';\n\nimport config from '../../../../config';\nimport { AuthContext } from 'context/AuthContext';\nconst servicePath = config.API_URL;\nconst KankorstudentAPI = `${servicePath}/api/kankorResults`;\nconst StudentRegistraion = ({ history }) => {\n  const { kankorStudentId } = useParams();\n  console.log('Kankor ID', kankorStudentId);\n  if (kankorStudentId) {\n    useEffect(() => {\n      async function fetchStudent() {\n        const { data } = await callApi(\n          `api/kankorResults/?id=${kankorStudentId}`,\n          '',\n          null\n        );\n        console.log('data of the kankor student', data[0]);\n        setInitialName(data[0].name);\n        setInitialFatherName(data[0].father_name);\n        setInitialDistrict(data[0].district);\n        const educationYearsOptions = educationalYearsOptions.map((year) => {\n          if (year.value == data[0].educational_year) {\n            setInitialEducationalYear(year);\n          }\n        });\n        setInitialProvince({ value: '1', label: data[0].provence });\n        setInitailDepartment([\n          {\n            value: data[0].department_id.id,\n            label: data[0].department_id.name,\n          },\n        ]);\n        const genderOption = genderOptions.map((gender) => {\n          if (gender.value === data[0].gender) {\n            setInitialGender(gender);\n          }\n        });\n        setInitailField([\n          {\n            value: data[0].field_id.id,\n            label: data[0].field_id.name,\n          },\n        ]);\n        setInitialKankorMarks(data[0].score);\n        const shiftOptions = studyTimeOptions.map((timeOptions) => {\n          if (timeOptions.value === data[0].shift) {\n            setInitialstudyTime(timeOptions);\n          }\n        });\n        setInitialInstitute([\n          { value: data[0].Institute.id, label: data[0].Institute.name },\n        ]);\n      }\n      fetchStudent();\n    }, []);\n  }\n\n  const [intialName, setInitialName] = useState('');\n  const [initialFatherName, setInitialFatherName] = useState('');\n  const [initialKankorMarks, setInitialKankorMarks] = useState('');\n  const [initialField, setInitailField] = useState([]);\n  const [initailDepartment, setInitailDepartment] = useState([]);\n  const [initialstudyTime, setInitialstudyTime] = useState([]);\n  const [initialInstitute, setInitialInstitute] = useState([]);\n\n  const [initialGender, setInitialGender] = useState([]);\n  const [initialEducationalYear, setInitialEducationalYear] = useState([]);\n  const [initialProvince, setInitialProvince] = useState([]);\n  const [initialDistrict, setInitialDistrict] = useState([]);\n\n  const { provinces, districts, fields, institutes, departments } =\n    useContext(AuthContext);\n\n  const [selectedProvince, setSelectedProvince] = useState('');\n\n  const initialValues = {\n    studentName: intialName,\n    gender: initialGender,\n    fatherName: initialFatherName,\n    kankorMarks: initialKankorMarks,\n    studyTime: initialstudyTime,\n    department: initailDepartment,\n    field: initialField,\n    institute: initialInstitute,\n    educationalYear: initialEducationalYear,\n    province: initialProvince,\n    district: initialDistrict,\n  };\n\n  const [isNext, setIsNext] = useState(false);\n  const [StudyTime, setStudyTIme] = useState('0');\n\n  const updateMode = true;\n\n  const createNotification = (type, className) => {\n    const cName = className || '';\n    switch (type) {\n      case 'success':\n        NotificationManager.success(\n          'د کانکور شاگرد په بریالیتوب سره ثبت شو',\n          'موفقیت',\n          3000,\n          null,\n          null,\n          cName\n        );\n        break;\n      case 'error':\n        NotificationManager.error(\n          'د کانکور شاگرد ثبت نه شو بیا کوشش وکری',\n          'خطا',\n          9000,\n          () => {\n            alert('callback');\n          },\n          null,\n          cName\n        );\n        break;\n      default:\n        NotificationManager.info('Info message');\n        break;\n    }\n  };\n\n  const onRegister = async (values) => {\n    console.log('THis is  the inner comment');\n    const data = {\n      name: values.studentName,\n      father_name: values.fatherName,\n      institute: values.institute.value,\n      field_of_study: values.field.value,\n      department: values.department.value,\n      marks: values.kankorMarks,\n      educational_year: values.educationalYear.value,\n      province: values.province.value,\n      district: values.district.value,\n      gender: values.gender.value,\n      shift: values.studyTime.value,\n    };\n    console.log('data', data);\n\n    const response = await callApi(\n      'students/kankor-applicant-create/',\n      'POST',\n      data\n    );\n    if (\n      response.status === 200 ||\n      response.status === 201 ||\n      response.status === 202\n    ) {\n      // setIsNext(false);\n      setIsNext(true);\n      createNotification('success', 'filled');\n    } else {\n      createNotification('error', 'filled');\n      console.log('kankor result error');\n    }\n  };\n\n  return (\n    <>\n      <Card>\n        <div className=\"ml-5\">\n          <h3 className=\"mt-5 m-5 titleStyle\">\n            {<IntlMessages id=\"forms.Kankorformstitle\" />}\n          </h3>\n        </div>\n        <CardBody>\n          {!isNext ? (\n            <Formik\n              enableReinitialize={true}\n              initialValues={initialValues}\n              onSubmit={onRegister}\n              validationSchema={kankorRegisterValidationSchema}\n            >\n              {({\n                errors,\n                touched,\n                values,\n                setFieldTouched,\n                setFieldValue,\n              }) => (\n                <Form className=\"av-tooltip tooltip-label-right style\">\n                  <Row className=\"justify-content-center\">\n                    <Colxx xxs=\"5\" className=\" mt-5\">\n                      {/* Name */}\n                      <FormGroup className=\"form-group has-float-label error-l-175\">\n                        <Label>\n                          <IntlMessages id=\"forms.StdName\" />\n                          <span style={{ color: 'red' }}>*</span>\n                        </Label>\n                        <Field\n                          className=\"form-control fieldStyle\"\n                          name=\"studentName\"\n                        />\n                        {errors.studentName && touched.studentName ? (\n                          <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                            {errors.studentName}\n                          </div>\n                        ) : null}\n                      </FormGroup>\n                      {/*Father Name  */}\n                      <FormGroup className=\"form-group has-float-label error-l-175\">\n                        <Label>\n                          <IntlMessages id=\"forms.StdFatherName\" />\n                          <span style={{ color: 'red' }}>*</span>\n                        </Label>\n                        <Field\n                          className=\"form-control fieldStyle\"\n                          name=\"fatherName\"\n                        />\n                        {errors.fatherName && touched.fatherName ? (\n                          <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                            {errors.fatherName}\n                          </div>\n                        ) : null}\n                      </FormGroup>\n\n                      {/* Gender */}\n                      <FormGroup className=\"form-group has-float-label error-l-175\">\n                        <Label>\n                          <IntlMessages id=\"gender.gender\" />\n                          <span style={{ color: 'red' }}>*</span>\n                        </Label>\n                        <FormikReactSelect\n                          name=\"gender\"\n                          id=\"gender\"\n                          value={values.gender}\n                          options={genderOptions}\n                          onChange={setFieldValue}\n                          onBlur={setFieldTouched}\n                        />\n                        {touched.gender && errors.gender ? (\n                          <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                            {errors.gender}\n                          </div>\n                        ) : null}\n                      </FormGroup>\n\n                      {/* Institutes */}\n                      <FormGroup className=\"form-group has-float-label error-l-175\">\n                        <Label>\n                          <IntlMessages id=\"forms.InstituteLabel\" />\n                          <span style={{ color: 'red' }}>*</span>\n                        </Label>\n                        <FormikReactSelect\n                          name=\"institute\"\n                          id=\"institute\"\n                          value={values.institute}\n                          options={institutes}\n                          onChange={setFieldValue}\n                          onBlur={setFieldTouched}\n                        />\n                        {errors.institute && touched.institute ? (\n                          <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                            {errors.institute}\n                            {console.log(errors.institute, 'sdafhsakh')}\n                          </div>\n                        ) : null}\n                      </FormGroup>\n\n                      {/* Department */}\n                      <FormGroup className=\"form-group has-float-label error-l-175\">\n                        <Label>\n                          <IntlMessages id=\"forms.FieldDepLabel\" />\n                          <span style={{ color: 'red' }}>*</span>\n                        </Label>\n                        <FormikReactSelect\n                          name=\"department\"\n                          id=\"department\"\n                          value={values.department}\n                          options={departments}\n                          onChange={setFieldValue}\n                          onBlur={setFieldTouched}\n                        />\n                        {errors.department && touched.department ? (\n                          <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                            {errors.department}\n                          </div>\n                        ) : null}\n                      </FormGroup>\n\n                      {/* province*/}\n                      <FormGroup className=\"form-group has-float-label error-l-175\">\n                        <Label>\n                          <IntlMessages id=\"forms.ProvinceLabel\" />\n                          <span style={{ color: 'red' }}>*</span>\n                        </Label>\n                        <FormikReactSelect\n                          name=\"province\"\n                          id=\"province\"\n                          value={values.province}\n                          options={provinces}\n                          onChange={(name, value) => {\n                            setFieldValue('district', []);\n                            setFieldValue(name, value);\n                          }}\n                          onBlur={setFieldTouched}\n                        />\n                        {errors.province && touched.province ? (\n                          <div className=\"invalid-feedback d-block   bg-danger text-white messageStyle\">\n                            {errors.province}\n                          </div>\n                        ) : null}\n                      </FormGroup>\n\n                      {/* District */}\n                      <FormGroup className=\"form-group has-float-label error-l-175\">\n                        <Label style={{ fontSize: 18, fontWeight: 'bold' }}>\n                          <IntlMessages id=\"forms.DistrictLabel\" />\n                        </Label>\n                        <FormikReactSelect\n                          name=\"district\"\n                          id=\"district\"\n                          value={values.district}\n                          options={districts?.filter(\n                            (district) =>\n                              district.province === values.province.value\n                          )}\n                          onChange={setFieldValue}\n                          onBlur={setFieldTouched}\n                        />\n                        {errors.district && touched.district ? (\n                          <div className=\"invalid-feedback d-block bg-danger text-white\">\n                            {errors.district}\n                          </div>\n                        ) : null}\n                      </FormGroup>\n                    </Colxx>\n\n                    <Colxx xxs=\"5\" className=\" mt-5\">\n                      {/* <FormGroup className=\"form-group has-float-label error-l-175\">\n                        <Label>\n                          <IntlMessages id=\"forms.StdKankorIdLabel\" />\n                        </Label>\n                        <Field className=\"form-control\" name=\"kankorId\" />\n                        {errors.kankorId && touched.kankorId ? (\n                          <div className=\"invalid-feedback d-block bg-danger text-white\">\n                            {errors.kankorId}\n                          </div>\n                        ) : null}\n                      </FormGroup> */}\n\n                      {/* Kankor Marks */}\n                      <FormGroup className=\"form-group has-float-label error-l-175\">\n                        <Label>\n                          <IntlMessages id=\"forms.KankorMarksLabel\" />\n                          <span style={{ color: 'red' }}>*</span>\n                        </Label>\n                        <Field\n                          className=\"form-control fieldStyle\"\n                          name=\"kankorMarks\"\n                          type=\"number\"\n                          min=\"0\"\n                          max=\"100\"\n                        />\n                        {errors.kankorMarks && touched.kankorMarks ? (\n                          <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                            {errors.kankorMarks}\n                          </div>\n                        ) : null}\n                      </FormGroup>\n\n                      {/* Field */}\n                      {/* <FormGroup className=\"form-group has-float-label error-l-175\">\n                        <Label>\n                          <IntlMessages id=\"forms.FieldLabel\" />\n                          <span style={{ color: 'red' }}>*</span>\n                        </Label>\n                        <FormikReactSelect\n                          name=\"field\"\n                          id=\"field\"\n                          value={values.field}\n                          options={fields}\n                          onChange={setFieldValue}\n                          onBlur={setFieldTouched}\n                        />\n                        {errors.field && touched.field ? (\n                          <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                            {errors.field}\n                          </div>\n                        ) : null}\n                      </FormGroup> */}\n\n                      {/* Eduactional Year*/}\n                      <FormGroup className=\"form-group has-float-label error-l-175 \">\n                        <Label>\n                          <IntlMessages id=\"curriculum.eduactionalYearLabel\" />\n                          <span style={{ color: 'red' }}>*</span>\n                        </Label>\n                        <FormikReactSelect\n                          name=\"educationalYear\"\n                          id=\"educationalYear\"\n                          value={values.educationalYear}\n                          options={educationalYearsOptions}\n                          onChange={setFieldValue}\n                          onBlur={setFieldTouched}\n                          required\n                        />\n                        {errors.educationalYear && touched.educationalYear ? (\n                          <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                            {errors.educationalYear}\n                          </div>\n                        ) : null}\n                      </FormGroup>\n\n                      {/* Study Time */}\n                      <FormGroup className=\"form-group has-float-label error-l-175\">\n                        <Label>\n                          <IntlMessages id=\"forms.StudyTimeLabel\" />\n                          <span style={{ color: 'red' }}>*</span>\n                        </Label>\n                        <FormikReactSelect\n                          name=\"studyTime\"\n                          id=\"studyTime\"\n                          value={values.studyTime}\n                          placeholder=\"Select option\"\n                          options={studyTimeOptions}\n                          onChange={setFieldValue}\n                          onBlur={setFieldTouched}\n                        />\n                        {errors.studyTime && touched.studyTime ? (\n                          <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                            {errors.studyTime}\n                          </div>\n                        ) : null}\n                      </FormGroup>\n                    </Colxx>\n                  </Row>\n                  <Row>\n                    <Colxx>\n                      <Button\n                        color=\"primary\"\n                        className=\"float-right  buttonStyle\"\n                        size=\"lg\"\n                        type=\"submit\"\n                        style={{ margin: '7% 0% 8% 9%' }}\n                      >\n                        <span className=\"label\">\n                          <IntlMessages id=\"forms.SubimssionButton\" />\n                        </span>\n                      </Button>\n                    </Colxx>\n                  </Row>\n                </Form>\n              )}\n            </Formik>\n          ) : (\n            <div className=\"wizard-basic-step text-center pt-3\">\n              <div>\n                <h1 className=\"mb-2\">\n                  <IntlMessages id=\"wizard.content-thanks\" />\n                </h1>\n                <h3>\n                  <IntlMessages id=\"wizard.registered\" />\n                </h3>\n                <Button\n                  className=\"m-5 bg-primary \"\n                  onClick={() => setIsNext(false)}\n                >\n                  <IntlMessages id=\"button.back\" />\n                </Button>\n              </div>\n            </div>\n          )}\n        </CardBody>\n      </Card>\n    </>\n  );\n};\n\nexport default StudentRegistraion;\n"],"sourceRoot":""}