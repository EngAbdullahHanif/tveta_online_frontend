{"version":3,"file":"static/js/kankor-student-list.d73eb822.chunk.js","mappings":"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","sources":["config/styling.js","containers/pages/ImageListView.js","containers/pages/Pagination.js","hooks/use-mousetrap.js","views/app/students/bio/kankor-students-list/KankorStudentListMain.js","views/app/students/dismissed-students/dismissed-student-list/DismissedListHeading.js","views/app/students/dismissed-students/dismissed-student-list/DismissedListBody.js","views/app/students/dismissed-students/dismissed-student-list/DismissedListCatagory.js","views/app/students/dismissed-students/dismissed-student-list/DismissedListMain.js","views/app/students/dismissed-students/dismissed-students.js","views/app/students/dissmised-and-transfered-student-profile.js","views/app/students/transfered-students/transfered-student-list/TransferedListHeading.js","views/app/students/transfered-students/transfered-student-list/TransferedListBody.js","views/app/students/transfered-students/transfered-student-list/TransferedListCatagory.js","views/app/students/transfered-students/transfered-student-list/TransferedListMain.js","views/app/students/transfered-students/transfered-students.js","../node_modules/reactstrap/es/CardText.js"],"sourcesContent":["export const inputLabel = { fontSize: 16, fontWeight: 'bold' };\n","import React from 'react';\nimport {\n  Row,\n  Card,\n  CardBody,\n  CardSubtitle,\n  CardImg,\n  CardText,\n  CustomInput,\n  Badge,\n} from 'reactstrap';\nimport { NavLink } from 'react-router-dom';\nimport classnames from 'classnames';\nimport { ContextMenuTrigger } from 'react-contextmenu';\nimport { Colxx } from 'components/common/CustomBootstrap';\n\nconst ImageListView = ({ product, isSelect, collect, onCheckItem }) => {\n  return (\n    <Colxx sm=\"6\" lg=\"4\" xl=\"3\" className=\"mb-3\" key={product.id}>\n      <ContextMenuTrigger id=\"menu_id\" data={product.id} collect={collect}>\n        <Card\n          onClick={(event) => onCheckItem(event, product.id)}\n          className={classnames({\n            active: isSelect,\n          })}\n        >\n          <div className=\"position-relative\">\n            <NavLink to={`?p=${product.id}`} className=\"w-40 w-sm-100\">\n              <CardImg top alt={product.title} src={product.img} />\n            </NavLink>\n            <Badge\n              color={product.statusColor}\n              pill\n              className=\"position-absolute badge-top-left\"\n            >\n              {product.status}\n            </Badge>\n          </div>\n          <CardBody>\n            <Row>\n              <Colxx xxs=\"2\">\n                <CustomInput\n                  className=\"item-check mb-0\"\n                  type=\"checkbox\"\n                  id={`check_${product.id}`}\n                  checked={isSelect}\n                  onChange={() => {}}\n                  label=\"\"\n                />\n              </Colxx>\n              <Colxx xxs=\"10\" className=\"mb-3\">\n                <CardSubtitle>{product.title}</CardSubtitle>\n                <CardText className=\"text-muted text-small mb-0 font-weight-light\">\n                  {product.date}\n                </CardText>\n              </Colxx>\n            </Row>\n          </CardBody>\n        </Card>\n      </ContextMenuTrigger>\n    </Colxx>\n  );\n};\n\n/* React.memo detail : https://reactjs.org/docs/react-api.html#reactpurecomponent  */\nexport default React.memo(ImageListView);\n","import React from 'react';\nimport { Nav, NavItem, NavLink } from 'reactstrap';\nimport { Colxx } from 'components/common/CustomBootstrap';\n\nconst Pagination = ({\n  totalPage = 0,\n  currentPage = 1,\n  numberLimit = 5,\n  lastIsActive = true,\n  firstIsActive = true,\n  onChangePage,\n}) => {\n  let startPoint = 1;\n  let endPoint = numberLimit;\n\n  if (numberLimit > totalPage) {\n    startPoint = 1;\n    endPoint = totalPage;\n  } else if (currentPage <= parseInt(numberLimit / 2, 10)) {\n    startPoint = 1;\n    endPoint = numberLimit;\n  } else if (currentPage + parseInt(numberLimit / 2, 10) <= totalPage) {\n    startPoint = currentPage - parseInt(numberLimit / 2, 10);\n    endPoint = currentPage + parseInt(numberLimit / 2, 10);\n  } else {\n    startPoint = totalPage - (numberLimit - 1);\n    endPoint = totalPage;\n  }\n  startPoint = startPoint === 0 ? 1 : startPoint;\n  const points = [];\n  for (let i = startPoint; i <= endPoint; i += 1) {\n    points.push(i);\n  }\n\n  const firstPageButtonClassName = currentPage <= 1 ? 'disabled' : '';\n  const lastPageButtonClassName = currentPage >= totalPage ? 'disabled' : '';\n  const prevPageButtonClassName = currentPage <= 1 ? 'disabled' : '';\n  const nextPageButtonClassName = currentPage >= totalPage ? 'disabled' : '';\n  return totalPage > 1 ? (\n    <Colxx xxs=\"12\" className=\"mt-3 mb-3\">\n      <Nav className=\"pagination justify-content-center\">\n        {firstIsActive && (\n          <NavItem className={`page-item ${firstPageButtonClassName}`}>\n            <NavLink\n              className=\"page-link first c-pointer\"\n              onClick={() => onChangePage(1)}\n            >\n              <i className=\"simple-icon-control-start\" />\n            </NavLink>\n          </NavItem>\n        )}\n\n        <NavItem className={`page-item ${prevPageButtonClassName}`}>\n          <NavLink\n            className=\"page-link prev c-pointer\"\n            onClick={() => onChangePage(currentPage - 1)}\n          >\n            <i className=\"simple-icon-arrow-left\" />\n          </NavLink>\n        </NavItem>\n        {points.map((i) => {\n          return (\n            <NavItem\n              key={i}\n              className={`page-item ${currentPage === i && 'active'}`}\n            >\n              <NavLink\n                className=\"page-link c-pointer\"\n                onClick={() => onChangePage(i)}\n              >\n                {i}\n              </NavLink>\n            </NavItem>\n          );\n        })}\n        <NavItem className={`page-item ${nextPageButtonClassName}`}>\n          <NavLink\n            className=\"page-link next c-pointer\"\n            onClick={() => onChangePage(currentPage + 1)}\n          >\n            <i className=\"simple-icon-arrow-right\" />\n          </NavLink>\n        </NavItem>\n        {lastIsActive && (\n          <NavItem className={`page-item ${lastPageButtonClassName}`}>\n            <NavLink\n              className=\"page-link last c-pointer\"\n              onClick={() => onChangePage(totalPage)}\n            >\n              <i className=\"simple-icon-control-end\" />\n            </NavLink>\n          </NavItem>\n        )}\n      </Nav>\n    </Colxx>\n  ) : (\n    <Colxx xxs=\"12\" className=\"mt-2\" />\n  );\n};\n\nexport default Pagination;\n","import mousetrap from 'mousetrap';\nimport { useEffect, useRef } from 'react';\n\n/**\n * Use mousetrap hook\n *\n * @param  {(string | string[])} handlerKey - A key, key combo or array of combos according to Mousetrap documentation.\n * @param  { function } handlerCallback - A function that is triggered on key combo catch.\n */\nexport default (handlerKey, handlerCallback) => {\n  const actionRef = useRef(null);\n  actionRef.current = handlerCallback;\n\n  useEffect(() => {\n    mousetrap.bind(handlerKey, (evt, combo) => {\n      typeof actionRef.current === 'function' && actionRef.current(evt, combo);\n      evt.preventDefault();\n    });\n    return () => {\n      mousetrap.unbind(handlerKey);\n    };\n  }, [handlerKey]);\n};\n","import React, { useState, useEffect, useContext } from 'react';\nimport { educationalYearsOptions } from '../../../global-data/options';\nimport callApi from 'helpers/callApi';\nimport { Table as TB } from 'antd';\n// import { servicePath } from 'constants/defaultValues';\nimport useMousetrap from 'hooks/use-mousetrap';\nimport { FormGroup, Label, NavLink } from 'reactstrap';\nimport { Formik } from 'formik';\nimport { FormikReactSelect } from 'containers/form-validations/FormikFields';\nimport { AuthContext } from 'context/AuthContext';\nimport { inputLabel } from 'config/styling';\nconst getIndex = (value, arr, prop) => {\n  for (let i = 0; i < arr.length; i += 1) {\n    if (arr[i][prop] === value) {\n      return i;\n    }\n  }\n  return -1;\n};\n\nconst servicePath = 'http://localhost:8000';\nconst kankorStudentApiUrl = `${servicePath}/api/kankorResults/`;\nconst instituteApiUrl = `${servicePath}/institute/`;\n\nconst orderOptions = [\n  { column: 'title', label: 'Product Name' },\n  { column: 'category', label: 'Category' },\n  { column: 'status', label: 'Status' },\n];\nconst pageSizes = [10, 20, 40, 80];\n\nconst categories = [\n  { label: 'Cakes', value: 'Cakes', key: 0 },\n  { label: 'Cupcakes', value: 'Cupcakes', key: 1 },\n  { label: 'Desserts', value: 'Desserts', key: 2 },\n];\nconst genderOptions = [\n  {\n    column: 'all',\n    label: 'تول / همه',\n  },\n  { column: '1', label: 'ذکور' },\n  { column: '2', label: 'اناث' },\n];\n\nconst ThumbListPages = ({ match }) => {\n  const { provinces, institutes, departments } = useContext(AuthContext);\n  const [isLoaded, setIsLoaded] = useState(true);\n  const [displayMode, setDisplayMode] = useState('thumblist');\n  const [currentPage, setCurrentPage] = useState(1);\n  const [selectedPageSize, setSelectedPageSize] = useState(20);\n  const [selectedOrderOption, setSelectedOrderOption] = useState({\n    column: 'title',\n    label: 'Product Name',\n  });\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [modalOpen, setModalOpen] = useState(false);\n  const [totalItemCount, setTotalItemCount] = useState(0);\n  const [totalPage, setTotalPage] = useState(1);\n  const [search, setSearch] = useState('');\n  const [selectedItems, setSelectedItems] = useState([]);\n  const [items, setItems] = useState([]);\n  const [lastChecked, setLastChecked] = useState(null);\n  const [rest, setRest] = useState(0);\n  // const [institutes, setInstitutes] = useState();\n  const [institute, setInstitute] = useState('');\n\n  const [studentId, setStudentId] = useState('');\n  const [province, setProvince] = useState('');\n  const [district, setDistrict] = useState('');\n  const [educationYear, setEducationYear] = useState('');\n  const [selectedGenderOption, setSelectedGenderOption] = useState({\n    column: 'all',\n    label: 'جنیست',\n  });\n  const [selectedProvinceOption, setSelectedProvinceOption] = useState({\n    column: 'all',\n    label: 'ولایت',\n  });\n  const [tableParams, setTableParams] = useState({\n    pagination: {\n      current: 1,\n      pageSize: 5,\n    },\n  });\n  const [isFilter, setIsFilter] = useState(false);\n  useEffect(() => {\n    setCurrentPage(1);\n  }, [\n    selectedPageSize,\n    selectedOrderOption,\n    selectedGenderOption,\n    selectedProvinceOption,\n  ]);\n  // async function fetchData() {\n  //   const response = await callApi(`students/kankorResults/`, 'get', null);\n  //   setItems(response.data);\n  //   console.log('fetching data from the server', response);\n  //   if (response.data && response.status === 200) {\n  //     setItems(response.data);\n  //     setSelectedItems([]);\n  //     // setTotalItemCount(data);\n  //     setIsLoaded(true);\n  //   } else {\n  //     console.log('Kankor students error');\n  //   }\n  // }\n  async function fetchData(params = {}) {\n    setIsLoading(true);\n    let endpoint = 'students/kankorResults/';\n    if (institute) {\n      params.institute = institute.value;\n      endpoint = 'students/student_institutes/';\n    }\n    console.log('institute is: ', institute, 'isFilter', isFilter);\n    const params1 = {\n      ...params,\n      page: !isFilter ? tableParams.pagination.current : params.page,\n      page_size: tableParams.pagination.pageSize || null,\n    };\n    try {\n      const response = await callApi(endpoint, null, null, params1);\n      setIsLoading(false);\n      if (response.data && response.status === 200) {\n        if (institute) {\n          setItems(\n            response?.data?.map((item) => ({\n              ...item.student,\n              institute: item.institute,\n            })),\n          );\n        } else {\n          setItems(response.data.results);\n        }\n        setTableParams({\n          ...tableParams,\n          pagination: {\n            ...tableParams.pagination,\n            total: response?.data?.count,\n          },\n        });\n      } else {\n        console.log('students error');\n      }\n    } catch (error) {\n      console.log('error: ', error);\n    }\n  }\n  // useEffect(() => {\n  //   console.log('studentId', studentId);\n\n  //   fetchData();\n  //   //console.log('items', items)\n  // }, [\n  //   selectedPageSize,\n  //   currentPage,\n  //   selectedOrderOption,\n  //   search,\n  //   selectedGenderOption,\n  //   selectedProvinceOption,\n  //   studentId,\n  //   province,\n  //   district,\n  //   rest,\n  //   institute,\n  //   educationYear,\n  // ]);\n  // console.log('items', items)\n\n  // const fetchInstitutes = async () => {\n  //   const response = await axios.get(instituteApiUrl);\n  //   const updatedData = await response.data.map((item) => ({\n  //     id: item.id,\n  //     name: item.name,\n  //   }));\n  //   setInstitutes(updatedData);\n  // };\n\n  // useEffect(() => {\n  //   // fetchInstitutes();\n  // }, []);\n  const columns = [\n    {\n      title: 'شماره',\n      dataIndex: 'id',\n      // sorter: (a, b) => a.student_id - b.student_id,\n      width: '5%',\n    },\n\n    {\n      title: 'نوم/نام',\n      dataIndex: 'name',\n      // sorter: (a, b) => a.name - b.name,\n      // render: (name) => `${name.first} ${name.last}`,\n      width: '15%',\n    },\n    {\n      title: 'ولایت',\n      dataIndex: 'province',\n      // sorter: (a, b) => a.name - b.name,\n      // render: (name) => `${name.first} ${name.last}`,\n      width: '10%',\n    },\n    {\n      title: 'انستیتوت',\n      dataIndex: 'institute',\n      width: '10%',\n    },\n    {\n      title: 'دپارتمنت',\n      dataIndex: 'department',\n      // filters: [\n      //   { text: 'Male', value: 'male' },\n      //   { text: 'Female', value: 'female' },\n      // ],\n      // onFilter: (value, record) => record.gender.indexOf(value) === 0,\n      width: '10%',\n    },\n\n    {\n      title: 'نمری',\n      dataIndex: 'score',\n      width: '10%',\n    },\n    {\n      title: 'سال',\n      dataIndex: 'year',\n      width: '10%',\n    },\n  ];\n  const handleTableChange = (pagination, filter, sorter) => {\n    setIsFilter(false);\n    setTableParams({ pagination, filter, ...sorter });\n    if (pagination.pageSize !== tableParams.pagination?.pageSize) {\n      setItems([]);\n    }\n  };\n  const onFilter = async (values) => {\n    setIsFilter(true);\n    setTableParams({\n      ...tableParams,\n      pagination: {\n        ...tableParams.pagination,\n        current: 1,\n      },\n    });\n    let params = {\n      page: 1,\n    };\n    params.institute = values.filterInstitute?.value;\n    params.department_id = values.department?.value;\n    params.educational_year = values.educationalYear?.value;\n    params.province = values.filterProvince?.value;\n    // params.id = values.filterId || null;\n    fetchData(params);\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, [!isFilter ? JSON.stringify(tableParams) : null]);\n\n  const handleResetFields = (resetForm) => {\n    resetForm({\n      values: {\n        filterId: '',\n        filterInstitute: [],\n        filterProvince: [],\n        educationalYear: [],\n        department: [],\n      },\n    });\n    setIsFilter(false);\n    fetchData();\n  };\n  const onCheckItem = (event, id) => {\n    if (\n      event.target.tagName === 'A' ||\n      (event.target.parentElement && event.target.parentElement.tagName === 'A')\n    ) {\n      return true;\n    }\n    if (lastChecked === null) {\n      setLastChecked(id);\n    }\n\n    let selectedList = [...selectedItems];\n    if (selectedList.includes(id)) {\n      selectedList = selectedList.filter((x) => x !== id);\n    } else {\n      selectedList.push(id);\n    }\n    setSelectedItems(selectedList);\n\n    if (event.shiftKey) {\n      let newItems = [...items];\n      const start = getIndex(id, newItems, 'id');\n      const end = getIndex(lastChecked, newItems, 'id');\n      newItems = newItems.slice(Math.min(start, end), Math.max(start, end) + 1);\n      selectedItems.push(\n        ...newItems.map((item) => {\n          return item.id;\n        }),\n      );\n      selectedList = Array.from(new Set(selectedItems));\n      setSelectedItems(selectedList);\n    }\n    document.activeElement.blur();\n    return false;\n  };\n\n  const handleChangeSelectAll = (isToggle) => {\n    if (selectedItems.length >= items.length) {\n      if (isToggle) {\n        setSelectedItems([]);\n      }\n    } else {\n      setSelectedItems(items.map((x) => x.id));\n    }\n    document.activeElement.blur();\n    return false;\n  };\n\n  const onContextMenuClick = (e, data) => {\n    // params : (e,data,target)\n    console.log('onContextMenuClick - selected items', selectedItems);\n    console.log('onContextMenuClick - action : ', data.action);\n  };\n\n  const onContextMenu = (e, data) => {\n    const clickedProductId = data.data;\n    if (!selectedItems.includes(clickedProductId)) {\n      setSelectedItems([clickedProductId]);\n    }\n\n    return true;\n  };\n\n  useMousetrap(['ctrl+a', 'command+a'], () => {\n    handleChangeSelectAll(false);\n  });\n\n  useMousetrap(['ctrl+d', 'command+d'], () => {\n    setSelectedItems([]);\n    return false;\n  });\n\n  const startIndex = (currentPage - 1) * selectedPageSize;\n  const endIndex = currentPage * selectedPageSize;\n\n  return !isLoaded ? (\n    <div className=\"loading\" />\n  ) : (\n    <>\n      <div className=\"disable-text-selection\">\n        {/* <ListPageHeading\n          heading=\"د کانکور د شاگردانو لست/لست شاگردان کانکوریان\"\n          // Using display mode we can change the display of the list.\n          displayMode={displayMode}\n          changeDisplayMode={setDisplayMode}\n          handleChangeSelectAll={handleChangeSelectAll}\n          // following code is used for order the list based on different element of the prod\n          changeOrderBy={(column) => {\n            setSelectedOrderOption(\n              orderOptions.find((x) => x.column === column)\n            );\n          }}\n          changePageSize={setSelectedPageSize}\n          selectedPageSize={selectedPageSize}\n          totalItemCount={totalItemCount}\n          selectedOrderOption={selectedOrderOption}\n          match={match}\n          startIndex={startIndex}\n          endIndex={endIndex}\n          selectedItemsLength={selectedItems ? selectedItems.length : 0}\n          itemsLength={items ? items.length : 0}\n          onSearchKey={(e) => {\n            if (e.key === 'Enter') {\n              setSearch(e.target.value.toLowerCase());\n            }\n          }}\n          orderOptions={orderOptions}\n          pageSizes={pageSizes}\n          toggleModal={() => setModalOpen(!modalOpen)}\n          changeGenderBy={(column) => {\n            setSelectedGenderOption(\n              genderOptions.find((x) => x.column === column)\n            );\n          }}\n          changeProvinceBy={(column) => {\n            setSelectedProvinceOption(\n              provincesOptionsForList.find((x) => x.column === column)\n            );\n          }}\n          selectedGenderOption={selectedGenderOption}\n          selectedProvinceOption={selectedProvinceOption}\n          genderOptions={genderOptions}\n          provincesOptionsForList={provincesOptionsForList}\n          onIdSearchKey={(e) => {\n            if (e.key === 'Enter') {\n              setStudentId(e.target.value.toLowerCase());\n            }\n          }}\n          onProvinceSearchKey={(e) => {\n            if (e.key === 'Enter') {\n              setProvince(e.target.value.toLowerCase());\n            }\n          }}\n          onDistrictSearchKey={(e) => {\n            if (e.key === 'Enter') {\n              setDistrict(e.target.value.toLowerCase());\n            }\n          }}\n          onResetClick={setRest}\n          reset={rest}\n          institutes={institutes}\n          onInstituteSelect={setInstitute}\n          onEducationYearSelect={(e) => {\n            if (e.key === 'Enter') {\n              setEducationYear(e.target.value);\n            }\n          }}\n        />\n        {console.log('ITEMMMMMMMMMMMMMMMM', items)}\n        <table className=\"table\">\n          <thead\n            className=\"pl-2 d-flex flex-grow-1  table-dark\"\n            style={{ maxHeight: '55px', marginRight: 2 }}\n          >\n            <tr className=\"card-body align-self-center d-flex flex-column flex-lg-row align-items-lg-center\">\n              <th\n                style={{\n                  width: '11%',\n                  paddingInline: '0%',\n                  textAlign: 'right',\n                  borderStyle: 'hidden',\n                  fontSize: '20px',\n                }}\n              >\n                <IntlMessages id=\"marks.No\" />\n              </th>\n              <th\n                style={{\n                  width: '11%',\n                  paddingInline: '0%',\n                  textAlign: 'right',\n                  borderStyle: 'hidden',\n                  fontSize: '20px',\n                }}\n              >\n                <IntlMessages id=\"kankorStudentId\" />\n              </th>\n              <th\n                style={{\n                  width: '15%',\n                  paddingInline: '0%',\n                  textAlign: 'right',\n                  borderStyle: 'hidden',\n                  fontSize: '20px',\n                }}\n              >\n                <IntlMessages id=\"workerName\" />\n              </th>\n\n              <th\n                style={{\n                  width: '16%',\n                  padding: '0%',\n                  textAlign: 'right',\n                  borderStyle: 'hidden',\n                  fontSize: '20px',\n                }}\n              >\n                <IntlMessages id=\"institute\" />\n              </th>\n              <th\n                style={{\n                  width: '14%',\n                  padding: '0%',\n                  textAlign: 'right',\n                  borderStyle: 'hidden',\n                  fontSize: '20px',\n                }}\n              >\n                {' '}\n                <IntlMessages id=\"department\" />\n              </th>\n              <th\n                style={{\n                  width: '13%',\n                  padding: '0%',\n                  textAlign: 'right',\n                  borderStyle: 'hidden',\n                  fontSize: '20px',\n                }}\n              >\n                {' '}\n                <IntlMessages id=\"student.Markslist\" />\n              </th>\n              <th\n                style={{\n                  width: '15%',\n                  padding: '0%',\n                  textAlign: 'right',\n                  borderStyle: 'hidden',\n                  fontSize: '20px',\n                }}\n              >\n                {' '}\n                <IntlMessages id=\"dorm.yearList\" />\n              </th>\n            </tr>\n          </thead>\n\n          <ListPageListing\n            items={items}\n            roughData={roughData}\n            displayMode={displayMode}\n            selectedItems={selectedItems}\n            onCheckItem={onCheckItem}\n            currentPage={currentPage}\n            totalPage={totalPage}\n            onContextMenuClick={onContextMenuClick}\n            onContextMenu={onContextMenu}\n            onChangePage={setCurrentPage}\n          />\n        </table> */}\n        <h1>د کانکور د شاگردانو لست/لست شاگردان کانکوریان</h1>\n        <br />\n        <div\n          style={{\n            padding: 10,\n            display: 'flex',\n          }}\n        >\n          <Formik\n            initialValues={{\n              filterId: '',\n              filterInstitute: [],\n              filterProvince: [],\n              educationalYear: [],\n              department: [],\n            }}\n            onSubmit={onFilter}\n          >\n            {({\n              values,\n              setFieldValue,\n              handleSubmit,\n              setFieldTouched,\n              resetForm,\n            }) => (\n              <>\n                {/* <FormGroup className=\"form-group has-float-label error-l-150\">\n                  <Label style={inputLabel}>ایدی</Label>\n                  <Field\n                    name=\"filterId\"\n                    placeholder=\"ایدی\"\n                    style={{ height: 37 }}\n                  />\n                </FormGroup> */}\n\n                <FormGroup className=\"form-group has-float-label error-l-150 w-100\">\n                  <Label style={inputLabel}>ولایت</Label>\n                  <FormikReactSelect\n                    placeholder=\"ولایت\"\n                    name=\"filterProvince\"\n                    options={provinces}\n                    value={values.filterProvince}\n                    onChange={setFieldValue}\n                    onBlur={setFieldTouched}\n                  />\n                </FormGroup>\n                <FormGroup className=\"form-group has-float-label error-l-150 w-100 \">\n                  <Label style={inputLabel}>انستیتوت</Label>\n                  <FormikReactSelect\n                    placeholder=\"انستیتوت\"\n                    name=\"filterInstitute\"\n                    options={institutes}\n                    value={values.filterInstitute}\n                    onChange={setFieldValue}\n                    onBlur={setFieldTouched}\n                  />\n                </FormGroup>\n                <FormGroup className=\"form-group has-float-label error-l-150 w-100 \">\n                  <Label style={inputLabel}>دیپارتمنت</Label>\n                  <FormikReactSelect\n                    name=\"department\"\n                    id=\"department\"\n                    options={departments}\n                    value={values.department}\n                    onChange={setFieldValue}\n                    onBlur={setFieldTouched}\n                  />\n                </FormGroup>\n                <FormGroup className=\"form-group has-float-label error-l-150 w-100 \">\n                  <Label style={inputLabel}>سال تحصیل / تعلیمی</Label>\n                  <FormikReactSelect\n                    name=\"educationalYear\"\n                    id=\"educationalYear\"\n                    options={educationalYearsOptions}\n                    value={values.educationalYear}\n                    onChange={setFieldValue}\n                    onBlur={setFieldTouched}\n                  />\n                </FormGroup>\n                <FormGroup className=\"form-group\" style={{ display: 'flex' }}>\n                  <button className=\"btn btn-secondary\" onClick={handleSubmit}>\n                    فلټر\n                  </button>\n\n                  <button\n                    type=\"button\"\n                    className=\"btn btn-warning\"\n                    onClick={() => handleResetFields(resetForm)}\n                  >\n                    ریسیټ\n                  </button>\n                </FormGroup>\n              </>\n            )}\n          </Formik>\n        </div>\n        <TB\n          style={{ fontSize: 20 }}\n          size=\"large\"\n          columns={columns}\n          pagination={tableParams.pagination}\n          loading={isLoading}\n          onChange={handleTableChange}\n          dataSource={items?.map((item, index) => ({\n            key: index,\n            id: item.id,\n            name: <NavLink to={`student/${item.id}`}>{item.name}</NavLink>,\n            province: provinces.find((pro) => pro.value == item.province)\n              ?.label,\n            institute: institutes.find((pro) => pro.value == item.institute)\n              ?.label,\n            department: departments.find((pro) => pro.value == item.department)\n              ?.label,\n            score: item.marks,\n            year: item.educational_year,\n          }))}\n        />\n      </div>\n    </>\n  );\n};\n\nexport default ThumbListPages;\n","import React, { useState } from 'react';\nimport { Row, Collapse } from 'reactstrap';\nimport { injectIntl } from 'react-intl';\n\nimport { Colxx, Separator } from 'components/common/CustomBootstrap';\nimport IntlMessages from 'helpers/IntlMessages';\n\nimport { ThumbListIcon, ImageListIcon } from 'components/svg';\n// import Breadcrumb from '../navs/Breadcrumb';\n\nconst ListPageHeading = ({ intl, displayMode, changeDisplayMode, heading }) => {\n  const [displayOptionsIsOpen, setDisplayOptionsIsOpen] = useState(false);\n  const { messages } = intl;\n  return (\n    <Row>\n      <Colxx xxs=\"12\">\n        <div className=\"mb-2\">\n          <h1>\n            <IntlMessages id={heading} />\n          </h1>\n        </div>\n\n        <div className=\"mb-2\">\n          <Collapse\n            isOpen={displayOptionsIsOpen}\n            className=\"d-md-block\"\n            id=\"displayOptions\"\n          >\n            <span className=\"mr-3 d-inline-block float-md-left\">\n              <a\n                href=\"#/\"\n                className={`mr-2 view-icon ${\n                  displayMode === 'thumblist' ? 'active' : ''\n                }`}\n                onClick={() => changeDisplayMode('thumblist')}\n              >\n                <ThumbListIcon />\n              </a>\n              <a\n                href=\"#/\"\n                className={`mr-2 view-icon ${\n                  displayMode === 'imagelist' ? 'active' : ''\n                }`}\n                onClick={() => changeDisplayMode('imagelist')}\n              >\n                <ImageListIcon />\n              </a>\n            </span>\n          </Collapse>\n        </div>\n        <Separator className=\"mb-5\" />\n        <br />\n      </Colxx>\n    </Row>\n  );\n};\n\nexport default injectIntl(ListPageHeading);\n","import React from 'react';\nimport { Card } from 'reactstrap';\nimport { NavLink } from 'react-router-dom';\nimport classnames from 'classnames';\nimport { ContextMenuTrigger } from 'react-contextmenu';\nimport { Colxx } from 'components/common/CustomBootstrap';\n\nconst StudentListBody = ({\n  transferedStudents,\n  isSelect,\n  collect,\n  onCheckItem,\n}) => {\n  return (\n    <Colxx xxs=\"12\" key={transferedStudents.id} className=\"mb-3\">\n      <ContextMenuTrigger\n        id=\"menu_id\"\n        data={transferedStudents.id}\n        collect={collect}\n      >\n        <Card\n          onClick={(event) => onCheckItem(event, transferedStudents.id)}\n          className={classnames('d-flex flex-row', {\n            active: isSelect,\n          })}\n        >\n          <div className=\"pl-2 d-flex flex-grow-1 min-width-zero\">\n            <div className=\"py-3 card-body align-self-center d-flex flex-column flex-lg-row  min-width-zero align-items-lg-center\">\n              {/* send this to localhost/transferedStudentss/:id */}\n              <NavLink\n                span\n                style={{ width: '11.8%', fontSize: '20px' }}\n                to={`transferedStudents/${transferedStudents.id}`}\n                className=\"\"\n              >\n                <p\n                  className=\"list-item-heading mb-1 truncate \"\n                  style={{ fontSize: '20px' }}\n                >\n                  {transferedStudents.id}\n                </p>\n              </NavLink>\n              <NavLink\n                span\n                style={{ width: '11.8%', fontSize: '20px' }}\n                to={`student-profile/${transferedStudents.student.student_id}`}\n                className=\"\"\n              >\n                <p\n                  className=\"list-item-heading mb-1 truncate \"\n                  style={{ fontSize: '20px' }}\n                >\n                  {transferedStudents.student.student_id}\n                </p>\n              </NavLink>\n              <p\n                className=\"mb-1 text-small w-9 w-sm-100\"\n                style={{ width: '20%', fontSize: '20px' }}\n              >\n                {transferedStudents.student.name}\n              </p>\n              <p\n                className=\"mb-1 text-small  w-sm-100\"\n                style={{ width: '25%', fontSize: '20px' }}\n              >\n                {transferedStudents.institute.name}\n              </p>\n              <p\n                className=\"mb-1 text-small w-10 w-sm-100\"\n                style={{ width: '6%', fontSize: '20px' }}\n              >\n                {transferedStudents.educational_year}\n              </p>\n            </div>\n          </div>\n        </Card>\n      </ContextMenuTrigger>\n    </Colxx>\n  );\n};\n\n/* React.memo detail : https://reactjs.org/docs/react-api.html#reactpurecomponent  */\nexport default React.memo(StudentListBody);\n","import React, { useState } from 'react';\nimport { Row } from 'reactstrap';\n\n//import Pagination from '../../../../containers/pages/Pagination';\nimport Pagination from '../../../../../containers/pages/Pagination';\nimport ContextMenuContainer from '../../../../../containers/pages/ContextMenuContainer';\nimport DataListView from '../../../../../containers/pages/DataListView';\nimport ImageListView from '../../../../../containers/pages/ImageListView';\nimport StudentsListBody from './DismissedListBody';\n\nfunction collect(props) {\n  return { data: props.data };\n}\n\nconst ListPageListing = ({\n  items,\n  displayMode,\n  selectedItems,\n  onCheckItem,\n  currentPage,\n  totalPage,\n  onContextMenuClick,\n  onContextMenu,\n  onChangePage,\n}) => {\n  const [modalBasic, setModalBasic] = useState(true);\n\n  return (\n    <>\n      <Row>\n        {items?.length === 0 ? (\n          <div className=\"no-result m-3\">\n            <h5>هیچ داده ای برای نمایش وجود ندارد</h5>\n          </div>\n        ) : null}\n        {items?.map((transferedStudents) => {\n          if (displayMode === 'imagelist') {\n            return (\n              <ImageListView\n                key={transferedStudents.id}\n                transferedStudents={transferedStudents}\n                isSelect={selectedItems.includes(transferedStudents.id)}\n                collect={collect}\n                onCheckItem={onCheckItem}\n              />\n            );\n          }\n          if (displayMode === 'thumblist') {\n            return (\n              <StudentsListBody\n                key={transferedStudents.id}\n                transferedStudents={transferedStudents}\n                isSelect={selectedItems.includes(transferedStudents.id)}\n                collect={collect}\n                onCheckItem={onCheckItem}\n              />\n            );\n          }\n          return (\n            <DataListView\n              key={transferedStudents.id}\n              transferedStudents={transferedStudents}\n              isSelect={selectedItems.includes(transferedStudents.id)}\n              onCheckItem={onCheckItem}\n              collect={collect}\n            />\n          );\n        })}\n        <Pagination\n          currentPage={currentPage}\n          totalPage={totalPage}\n          onChangePage={(i) => onChangePage(i)}\n        />\n        <ContextMenuContainer\n          onContextMenuClick={onContextMenuClick}\n          onContextMenu={onContextMenu}\n        />\n      </Row>\n    </>\n  );\n};\n\nexport default React.memo(ListPageListing);\n","import React, { useState, useEffect } from 'react';\nimport IntlMessages from 'helpers/IntlMessages';\n\n// import { servicePath } from 'constants/defaultValues';\n\nimport ListPageHeading from './DismissedListHeading';\n\nimport ListPageListing from './DismissedListCatagory';\nimport useMousetrap from 'hooks/use-mousetrap';\nimport config from '../../../../../config';\n\nconst getIndex = (value, arr, prop) => {\n  for (let i = 0; i < arr.length; i += 1) {\n    if (arr[i][prop] === value) {\n      return i;\n    }\n  }\n  return -1;\n};\n\nconst servicePath = config.API_URL;\nconst apiUrl = `${servicePath}/cakes/paging`;\nconst studentApiUrl = `${servicePath}/api/`;\nconst studentInstituteApiUrl = `${servicePath}/api/student_institutes/`;\nconst instituteApiUrl = `${servicePath}/institute/`;\nconst TransferedStudentsAPI = `${servicePath}/api/student_institutes/?is_transfer=2`;\n//http://localhost:8000/api/student_institutes/?institute=&type=&language=&time=&student_id=&educational_year=&is_transfer=2\n\nconst ThumbListPages = ({ match, item_list }) => {\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [displayMode, setDisplayMode] = useState('thumblist');\n  const [currentPage, setCurrentPage] = useState(1);\n  const [selectedPageSize, setSelectedPageSize] = useState(20);\n  const [selectedOrderOption, setSelectedOrderOption] = useState({\n    column: 'title',\n    label: 'Product Name',\n  });\n\n  const [modalOpen, setModalOpen] = useState(false);\n  const [totalItemCount, setTotalItemCount] = useState(0);\n  const [totalPage, setTotalPage] = useState(1);\n  const [search, setSearch] = useState('');\n  const [selectedItems, setSelectedItems] = useState([]);\n  const [items, setItems] = useState([]);\n  const [lastChecked, setLastChecked] = useState(null);\n  const [rest, setRest] = useState(0);\n  const [institutes, setInstitutes] = useState();\n  const [institute, setInstitute] = useState('');\n  const [studentId, setStudentId] = useState('');\n  const [transferedStudents, setsetTransferedStudentsTra] = useState([]);\n  const [selectedGenderOption, setSelectedGenderOption] = useState({\n    column: 'all',\n    label: 'جنیست',\n  });\n  const [selectedProvinceOption, setSelectedProvinceOption] = useState({\n    column: 'all',\n    label: 'ولایت',\n  });\n\n  useEffect(() => {\n    setIsLoaded(true);\n  }, []);\n  const onCheckItem = (event, id) => {\n    if (\n      event.target.tagName === 'A' ||\n      (event.target.parentElement && event.target.parentElement.tagName === 'A')\n    ) {\n      return true;\n    }\n    if (lastChecked === null) {\n      setLastChecked(id);\n    }\n\n    let selectedList = [...selectedItems];\n    if (selectedList.includes(id)) {\n      selectedList = selectedList.filter((x) => x !== id);\n    } else {\n      selectedList.push(id);\n    }\n    setSelectedItems(selectedList);\n\n    if (event.shiftKey) {\n      let newItems = [...items];\n      const start = getIndex(id, newItems, 'id');\n      const end = getIndex(lastChecked, newItems, 'id');\n      newItems = newItems.slice(Math.min(start, end), Math.max(start, end) + 1);\n      selectedItems.push(\n        ...newItems.map((item) => {\n          return item.id;\n        }),\n      );\n      selectedList = Array.from(new Set(selectedItems));\n      setSelectedItems(selectedList);\n    }\n    document.activeElement.blur();\n    return false;\n  };\n\n  const handleChangeSelectAll = (isToggle) => {\n    if (selectedItems.length >= items.length) {\n      if (isToggle) {\n        setSelectedItems([]);\n      }\n    } else {\n      setSelectedItems(items.map((x) => x.id));\n    }\n    document.activeElement.blur();\n    return false;\n  };\n\n  const onContextMenuClick = (e, data) => {};\n\n  const onContextMenu = (e, data) => {\n    const clickedProductId = data.data;\n    if (!selectedItems.includes(clickedProductId)) {\n      setSelectedItems([clickedProductId]);\n    }\n    return true;\n  };\n\n  useMousetrap(['ctrl+a', 'command+a'], () => {\n    handleChangeSelectAll(false);\n  });\n\n  useMousetrap(['ctrl+d', 'command+d'], () => {\n    setSelectedItems([]);\n    return false;\n  });\n\n  const startIndex = (currentPage - 1) * selectedPageSize;\n  const endIndex = currentPage * selectedPageSize;\n  return !isLoaded ? (\n    <div className=\"loading\" />\n  ) : (\n    <>\n      <div className=\"disable-text-selection\">\n        <ListPageHeading\n          heading=\"د منفک شویو شاګردانو لست/لست شاگردان منفک شده\"\n          // Using display mode we can change the display of the list.\n          displayMode={displayMode}\n          changeDisplayMode={setDisplayMode}\n          handleChangeSelectAll={handleChangeSelectAll}\n          // following code is used for order the list based on different element of the prod\n          changeOrderBy={(column) => {\n            // setSelectedOrderOption(\n            //   orderOptions.find((x) => x.column === column),\n            // );\n          }}\n          changePageSize={setSelectedPageSize}\n          selectedPageSize={selectedPageSize}\n          totalItemCount={totalItemCount}\n          selectedOrderOption={selectedOrderOption}\n          match={match}\n          startIndex={startIndex}\n          endIndex={endIndex}\n          selectedItemsLength={selectedItems ? selectedItems.length : 0}\n          itemsLength={items ? items.length : 0}\n        />\n\n        <table className=\"table\">\n          <thead\n            className=\"pl-2 d-flex flex-grow-1  table-dark mb-2\"\n            style={{ maxHeight: '55px' }}\n          >\n            <tr className=\"card-body align-self-center d-flex flex-column flex-lg-row align-items-lg-center\">\n              <th\n                style={{\n                  width: '12%',\n                  paddingInline: '0%',\n                  textAlign: 'right',\n                  borderStyle: 'hidden',\n                  fontSize: '20px',\n                }}\n              >\n                <IntlMessages id=\"marks.No\" />\n              </th>\n              <th\n                style={{\n                  width: '15%',\n                  paddingInline: '0%',\n                  textAlign: 'right',\n                  borderStyle: 'hidden',\n                  fontSize: '20px',\n                }}\n              >\n                <IntlMessages id=\"marks.ID\" />\n              </th>\n              <th\n                style={{\n                  width: '20%',\n                  paddingInline: '0%',\n                  textAlign: 'right',\n                  borderStyle: 'hidden',\n                  fontSize: '20px',\n                }}\n              >\n                <IntlMessages id=\"forms.StdName\" />\n              </th>\n              <th\n                style={{\n                  width: '25%',\n                  paddingInline: '0%',\n                  textAlign: 'right',\n                  borderStyle: 'hidden',\n                  fontSize: '20px',\n                }}\n              >\n                <IntlMessages id=\"inst.name-List\" />\n              </th>\n              <th\n                style={{\n                  width: '20%',\n                  padding: '0%',\n                  textAlign: 'right',\n                  borderStyle: 'hidden',\n                  fontSize: '20px',\n                }}\n              >\n                {' '}\n                <IntlMessages id=\"dorm.yearList\" />\n              </th>\n            </tr>\n          </thead>\n          <ListPageListing\n            items={item_list?.results}\n            displayMode={displayMode}\n            selectedItems={selectedItems}\n            onCheckItem={onCheckItem}\n            currentPage={currentPage}\n            totalPage={totalPage}\n            onContextMenuClick={onContextMenuClick}\n            onContextMenu={onContextMenu}\n            onChangePage={setCurrentPage}\n          />\n        </table>\n      </div>\n    </>\n  );\n};\n\nexport default ThumbListPages;\n","import React, { useState, useEffect } from 'react';\nimport { Formik, Form } from 'formik';\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\nimport callApi from 'helpers/callApi';\nimport './../../.././../assets/css/global-style.css';\nimport { educationalYearsOptions } from './../../global-data/options';\n\n// Year  and SHift\nimport * as Yup from 'yup';\nimport { Row, Card, CardBody, FormGroup, Label, Button } from 'reactstrap';\n\nimport IntlMessages from 'helpers/IntlMessages';\nimport { Colxx } from 'components/common/CustomBootstrap';\nimport { FormikReactSelect } from 'containers/form-validations/FormikFields';\n\nimport DismissedStudents from './dismissed-student-list/DismissedListMain';\nimport config from '../../../../config';\nconst servicePath = config.API_URL;\nconst studentApi = `${servicePath}/api`;\nconst dismissedStudentsAPI = `${servicePath}/api/student_institutes`;\n// http://localhost:8000/api/student_institutes/?institute=1&type=&language=&time=&student_id=&educational_year=1990\n\nconst StudyTimeOptions = [\n  { value: '1', label: <IntlMessages id=\"forms.StudyTimeOption_1\" /> },\n  { value: '2', label: <IntlMessages id=\"forms.StudyTimeOption_2\" /> },\n];\n\nconst ValidationSchema = Yup.object().shape({\n  institute: Yup.object()\n    .shape({\n      value: Yup.string().required(),\n    })\n    .nullable()\n    .required(<IntlMessages id=\"forms.InstituteErr\" />),\n\n  educationalYear: Yup.object()\n    .shape({\n      value: Yup.string().required(),\n    })\n    .nullable()\n    .required(<IntlMessages id=\"forms.educationYearErr\" />),\n});\n\nconst initialValues = {\n  institute: [],\n  educationalYear: [],\n};\nconst MarksRegistration = ({ match }) => {\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [institutes, setInstitutes] = useState([]);\n  const [selectedInstitute, setSelectedInstitute] = useState('');\n  const [selectedEducationalYear, setSelectedEducationalYear] = useState([]);\n  const [dismissedStudents, setDismissedStudents] = useState([]);\n  const [dismissedStudentsList, setDismissedStudentList] = useState(false);\n\n  const { markId } = useParams();\n\n  async function fetchStudent() {\n    const { data } = await axios.get(\n      // `${studentMarkId}/?student_id=${markId}`,\n      `${1}/?student_id=${markId}`,\n    );\n    console.log(data, 'object of the data');\n\n    // const instGender = genderOptions.map((studentGender) => {\n    //   if (studentGender.value === data[0].gender) {\n    //     setInitialGender(studentGender);\n    //   }\n    // });\n  }\n  useEffect(() => {\n    if (markId) {\n      fetchStudent();\n    }\n    //setUpdateMode(true);\n  }, []);\n\n  // fetch institute lists\n  const fetchInstitutes = async () => {\n    const response = await callApi('institute/', '', null);\n    if (response.data && response.status === 200) {\n      const updatedData = await response.data.map((item) => ({\n        value: item.id,\n        label: item.name,\n      }));\n      setInstitutes(updatedData);\n    } else {\n      console.log('institute error');\n    }\n  };\n  useEffect(() => {\n    fetchInstitutes();\n  }, []);\n\n  const fetchDismissedStudents = async (values) => {\n    const response = await callApi(\n      `students/student_institutes/?institute=${values.institute.value}&status=dismissed&educational_year=${values.educationalYear.value}`,\n      '',\n      null,\n    );\n    if (response.data && response.status === 200) {\n      setDismissedStudents(response.data);\n      console.log('dismissed students list', response.data);\n      setIsLoaded(true);\n      setDismissedStudentList(true);\n\n      // setItems(response.data);\n      // setSelectedItems([]);\n      // // setTotalItemCount(data);\n      // setIsLoaded(true);\n    } else {\n      console.log('dissmised students error');\n    }\n  };\n\n  const onSubmit = (values) => {\n    fetchDismissedStudents(values);\n    setDismissedStudentList(true);\n  };\n\n  return (\n    <>\n      {dismissedStudentsList ? (\n        <DismissedStudents item_list={dismissedStudents} />\n      ) : (\n        <Card>\n          <div className=\"mt-4 ml-5\">\n            <h2 className=\"mt-5 m-5 titleStyle\">\n              <IntlMessages id=\"student.dismissal-studentList\" />\n            </h2>\n          </div>\n          <CardBody>\n            {' '}\n            <Formik\n              initialValues={initialValues}\n              onSubmit={onSubmit}\n              validationSchema={ValidationSchema}\n            >\n              {({\n                errors,\n                touched,\n                values,\n                setFieldTouched,\n                setFieldValue,\n              }) => (\n                <Form className=\"av-tooltip tooltip-label-right  style \">\n                  <Row className=\"mr-5 ml-5 mt-5 mb-1 justify-content-center\">\n                    <Colxx xxs=\"6\">\n                      {/* set if condition, if institutes are loaded */}\n                      <FormGroup className=\"form-group has-float-label error-l-150 \">\n                        <Label>\n                          <IntlMessages id=\"forms.InstituteLabel\" />\n                          <span style={{ color: 'red' }}>*</span>\n                        </Label>\n                        <FormikReactSelect\n                          name=\"institute\"\n                          id=\"institute\"\n                          value={values.institute}\n                          options={institutes}\n                          onChange={setFieldValue}\n                          onBlur={setFieldTouched}\n                          onClick={setSelectedInstitute(values.institute)}\n                        />\n\n                        {errors.institute && touched.institute ? (\n                          <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                            {errors.institute}\n                          </div>\n                        ) : null}\n                      </FormGroup>\n\n                      <FormGroup className=\"form-group has-float-label mt-5  error-l-150\">\n                        <Label>\n                          <IntlMessages id=\"forms.educationYearLabel\" />\n                        </Label>\n                        <FormikReactSelect\n                          name=\"educationalYear\"\n                          id=\"educationalYear\"\n                          options={educationalYearsOptions}\n                          onChange={setFieldValue}\n                          onBlur={setFieldTouched}\n                          onClick={setSelectedEducationalYear(\n                            values.educationalYear,\n                          )}\n                        />\n                        {errors.educationalYear && touched.educationalYear ? (\n                          <div className=\"invalid-feedback d-block bg-danger text-white \">\n                            {errors.educationalYear}\n                          </div>\n                        ) : null}\n                      </FormGroup>\n                    </Colxx>\n                  </Row>\n                  <Row className=\" justify-content-center\">\n                    <Colxx xxs=\"6\">\n                      <Button\n                        color=\"primary\"\n                        className=\"float-right buttonStyle\"\n                        size=\"lg\"\n                        type=\"submit\"\n                        style={{ margin: '7% 0% 8% 1%', paddingInline: '5%' }}\n                      >\n                        <span className=\"label\">\n                          <IntlMessages id=\"search.studentId\" />\n                        </span>\n                      </Button>\n                    </Colxx>\n                  </Row>\n                  <br />\n                  <br />\n                  <br />\n                  <br />\n                  <br />\n                  <br />\n                </Form>\n              )}\n            </Formik>\n          </CardBody>\n        </Card>\n      )}\n    </>\n  );\n};\n\nexport default MarksRegistration;\n","import React from 'react';\n\nconst StudentProfile = () => {\n  console.log('student profile is called');\n  return <div>Dismissed students profile</div>;\n};\n\nexport default StudentProfile;\n","import React, { useState } from 'react';\nimport { Row, Button, Collapse } from 'reactstrap';\nimport { injectIntl } from 'react-intl';\n\nimport { Colxx, Separator } from 'components/common/CustomBootstrap';\nimport IntlMessages from 'helpers/IntlMessages';\n\nimport { ThumbListIcon, ImageListIcon } from 'components/svg';\n// import Breadcrumb from '../navs/Breadcrumb';\n\nconst ListPageHeading = ({\n  intl,\n  displayMode,\n  changeDisplayMode,\n  handleChangeSelectAll,\n  changeOrderBy,\n  changePageSize,\n  selectedPageSize,\n  totalItemCount,\n  selectedOrderOption,\n  match,\n  startIndex,\n  endIndex,\n  selectedItemsLength,\n  itemsLength,\n  onSearchKey,\n  orderOptions,\n  pageSizes,\n  // toggleModal,\n  heading,\n  onIdSearchKey,\n  changeGenderBy,\n  selectedGenderOption,\n  genderOptions,\n  selectedProvinceOption,\n  provinceOptions,\n  changeProvinceBy,\n  onDistrictSearchKey,\n  onProvinceSearchKey,\n  onResetClick,\n  reset,\n  institutes,\n  onInstituteSelect,\n}) => {\n  const [dropdownSplitOpen, setDropdownSplitOpen] = useState(false);\n  const [displayOptionsIsOpen, setDisplayOptionsIsOpen] = useState(false);\n  const { messages } = intl;\n  const [selectedInstitute, setSelectedInstitute] = useState('');\n  onInstituteSelect(selectedInstitute);\n  return (\n    <Row>\n      <Colxx xxs=\"12\">\n        <div className=\"mb-2\">\n          <h1>\n            <IntlMessages id={heading} />\n          </h1>\n          {/* <div className=\"text-zero top-right-button-container\">\n\n            {'  '}\n            <ButtonDropdown\n              isOpen={dropdownSplitOpen}\n              toggle={() => setDropdownSplitOpen(!dropdownSplitOpen)}\n            >\n              <div className=\"btn btn-primary btn-lg pl-4 pr-0 check-button check-all\">\n                <CustomInput\n                  className=\"custom-checkbox mb-0 d-inline-block\"\n                  type=\"checkbox\"\n                  id=\"checkAll\"\n                  checked={selectedItemsLength >= itemsLength}\n                  onChange={() => handleChangeSelectAll(true)}\n                  label={\n                    <span\n                      className={`custom-control-label ${\n                        selectedItemsLength > 0 &&\n                        selectedItemsLength < itemsLength\n                          ? 'indeterminate'\n                          : ''\n                      }`}\n                    />\n                  }\n                />\n              </div>\n              <DropdownToggle\n                caret\n                color=\"primary\"\n                className=\"dropdown-toggle-split btn-lg\"\n              />\n              <DropdownMenu right>\n                <DropdownItem>\n                  <IntlMessages id=\"pages.delete\" />\n                </DropdownItem>\n                <DropdownItem>\n                  <IntlMessages id=\"pages.another-action\" />\n                </DropdownItem>\n              </DropdownMenu>\n            </ButtonDropdown>\n          </div> */}\n          {/* <Breadcrumb match={match} /> */}\n        </div>\n\n        <div className=\"mb-2\">\n          <Button\n            color=\"empty\"\n            className=\"pt-0 pl-0 d-inline-block d-md-none\"\n            onClick={() => setDisplayOptionsIsOpen(!displayOptionsIsOpen)}\n          >\n            <IntlMessages id=\"pages.display-options\" />{' '}\n            <i className=\"simple-icon-arrow-down align-middle\" />\n          </Button>\n          <Collapse\n            isOpen={displayOptionsIsOpen}\n            className=\"d-md-block\"\n            id=\"displayOptions\"\n          >\n            <span className=\"mr-3 d-inline-block float-md-left\">\n              <a\n                href=\"#/\"\n                className={`mr-2 view-icon ${\n                  displayMode === 'thumblist' ? 'active' : ''\n                }`}\n                onClick={() => changeDisplayMode('thumblist')}\n              >\n                <ThumbListIcon />\n              </a>\n              <a\n                href=\"#/\"\n                className={`mr-2 view-icon ${\n                  displayMode === 'imagelist' ? 'active' : ''\n                }`}\n                onClick={() => changeDisplayMode('imagelist')}\n              >\n                <ImageListIcon />\n              </a>\n            </span>\n            <br />\n            <div className=\"d-block d-md-inline-block pt-1\">\n              <div className=\"row\">\n                {/* <UncontrolledDropdown className=\"mr-1 float-md-left btn-group mb-1 \">\n                  <DropdownToggle caret color=\"outline-dark\" size=\"xs\">\n                    <IntlMessages id=\"filter\" />\n                    {selectedGenderOption.label}\n                  </DropdownToggle>\n                  <DropdownMenu>\n                    {genderOptions.map((gender, index) => {\n                      return (\n                        <DropdownItem\n                          key={index}\n                          onClick={() => changeGenderBy(gender.column)}\n                        >\n                          {gender.label}\n                        </DropdownItem>\n                      );\n                    })}\n                  </DropdownMenu>\n                </UncontrolledDropdown> */}\n                {/* <UncontrolledDropdown className=\"mr-1 float-md-left btn-group mb-1 \">\n                  <DropdownToggle caret color=\"outline-dark\" size=\"xs\">\n                    <IntlMessages id=\"filter\" />\n                    {selectedProvinceOption.label}\n                  </DropdownToggle>\n                  <DropdownMenu\n                    style={{\n                      height: '300px',\n                      overflowY: 'scroll',\n                      overflowX: 'hidden',\n                    }}\n                  >\n                    {provinceOptions.map((order, index) => {\n                      return (\n                        <DropdownItem\n                          key={index}\n                          onClick={() => changeProvinceBy(order.column)}\n                        >\n                          {order.label}\n                        </DropdownItem>\n                      );\n                    })}\n                  </DropdownMenu>\n                </UncontrolledDropdown>\n                <div className=\"search-sm d-inline-block float-md-left mr-1 mb-1 align-top\">\n                  <input\n                    type=\"text\"\n                    name=\"district\"\n                    id=\"district\"\n                    placeholder={messages['search.district']}\n                    onKeyPress={(e) => onDistrictSearchKey(e)}\n                  />\n                </div>\n                <div className=\"search-sm d-inline-block float-md-left mr-1 mb-1 align-top\">\n                  <input\n                    type=\"text\"\n                    name=\"student_id\"\n                    id=\"student_id\"\n                    placeholder={messages['search.id']}\n                    onKeyPress={(e) => onIdSearchKey(e)}\n                  />\n                </div> */}\n              </div>\n              {/* <Button\n                color=\"outline-dark\"\n                size=\"xs\"\n                className=\"float-md-left mb-1\"\n                onClick={() => {\n                  changeGenderBy('all');\n                  changeProvinceBy('all');\n                  document.getElementById('district').value = '';\n                  document.getElementById('student_id').value = '';\n                  setSelectedInstitute('');\n                  onResetClick(!reset);\n                }}\n              >\n                <IntlMessages id=\"pages.reset\" />\n              </Button> */}\n            </div>\n\n            {/* <div className=\"float-md-right pt-1\">\n              <span className=\"text-muted text-small mr-1\">{`${startIndex}-${endIndex} of ${totalItemCount} `}</span>\n              <UncontrolledDropdown className=\"d-inline-block\">\n                <DropdownToggle caret color=\"outline-dark\" size=\"xs\">\n                  {selectedPageSize}\n                </DropdownToggle>\n                <DropdownMenu right>\n                  {pageSizes.map((size, index) => {\n                    return (\n                      <DropdownItem\n                        key={index}\n                        onClick={() => changePageSize(size)}\n                      >\n                        {size}\n                      </DropdownItem>\n                    );\n                  })}\n                </DropdownMenu>\n              </UncontrolledDropdown>\n            </div> */}\n          </Collapse>\n        </div>\n        <Separator className=\"mb-5\" />\n      </Colxx>\n    </Row>\n  );\n};\n\nexport default injectIntl(ListPageHeading);\n","import React from 'react';\nimport { Card } from 'reactstrap';\nimport { NavLink } from 'react-router-dom';\nimport classnames from 'classnames';\nimport { ContextMenuTrigger } from 'react-contextmenu';\nimport { Colxx } from 'components/common/CustomBootstrap';\n\nconst StudentListBody = ({\n  transferedStudents,\n  isSelect,\n  collect,\n  onCheckItem,\n  index,\n}) => {\n  return (\n    <Colxx xxs=\"12\" key={transferedStudents.id} className=\"mb-3\">\n      <ContextMenuTrigger\n        id=\"menu_id\"\n        data={transferedStudents.id}\n        collect={collect}\n      >\n        <Card\n          onClick={(event) => onCheckItem(event, transferedStudents.id)}\n          className={classnames('d-flex flex-row', {\n            active: isSelect,\n          })}\n        >\n          <div className=\"pl-2 d-flex flex-grow-1 min-width-zero\">\n            <div\n              className=\"py-3 card-body align-self-center d-flex flex-column flex-lg-row  min-width-zero align-items-lg-center\"\n              style={{ width: '100%' }}\n            >\n              {/* send this to localhost/transferedStudentss/:id */}\n              <NavLink\n                span\n                style={{ width: '10%', fontSize: '20px' }}\n                to={`transferedStudents/${transferedStudents.id}`}\n              >\n                <p\n                  className=\"list-item-heading mb-1 truncate \"\n                  style={{ marginRight: '-8px', fontSize: '20px' }}\n                >\n                  {index + 1}\n                </p>\n              </NavLink>\n              <p\n                className=\"mb-1  w-9 w-sm-100\"\n                style={{ width: '10%', fontSize: '20px' }}\n              >\n                {transferedStudents.student.student_id}\n              </p>\n              <p\n                className=\"mb-1 text-small w-9 w-sm-100\"\n                style={{ width: '15.4%', fontSize: '20px' }}\n              >\n                {transferedStudents.student.name}\n              </p>\n\n              <p\n                className=\"mb-1  \"\n                style={{ width: '18.5%', fontSize: '20px' }}\n              >\n                {/* {transferedStudents.student_id.father_name} */}\n                Integrate\n              </p>\n\n              <p style={{ width: '18%', fontSize: '20px' }} className=\"mb-1\">\n                {transferedStudents.institute.name}\n              </p>\n              <p\n                style={{ marginLeft: '0px', fontSize: '20px' }}\n                className=\"mb-1 text-small w-10 w-sm-100\"\n              >\n                {transferedStudents.educational_year}\n              </p>\n            </div>\n          </div>\n        </Card>\n      </ContextMenuTrigger>\n    </Colxx>\n  );\n};\n\n/* React.memo detail : https://reactjs.org/docs/react-api.html#reactpurecomponent  */\nexport default React.memo(StudentListBody);\n","import React, { useState } from 'react';\nimport { Row } from 'reactstrap';\n\n//import Pagination from '../../../../containers/pages/Pagination';\nimport Pagination from '../../../../../containers/pages/Pagination';\nimport ContextMenuContainer from '../../../../../containers/pages/ContextMenuContainer';\nimport DataListView from '../../../../../containers/pages/DataListView';\nimport ImageListView from '../../../../../containers/pages/ImageListView';\nimport StudentsListBody from './TransferedListBody';\n\nfunction collect(props) {\n  return { data: props.data };\n}\n\nconst ListPageListing = ({\n  items,\n  displayMode,\n  selectedItems,\n  onCheckItem,\n  currentPage,\n  totalPage,\n  onContextMenuClick,\n  onContextMenu,\n  onChangePage,\n}) => {\n  const [modalBasic, setModalBasic] = useState(true);\n\n  return (\n    <>\n      <Row>\n        {items.length === 0 ? (\n          <div className=\"no-result\">\n            <h5 className=\"m-3\">هیچ داده ای برای نمایش وجود ندارد</h5>\n          </div>\n        ) : null}\n        {items.map((transferedStudents, index) => {\n          if (displayMode === 'imagelist') {\n            return (\n              <ImageListView\n                key={transferedStudents.id}\n                transferedStudents={transferedStudents}\n                isSelect={selectedItems.includes(transferedStudents.id)}\n                collect={collect}\n                onCheckItem={onCheckItem}\n              />\n            );\n          }\n          if (displayMode === 'thumblist') {\n            return (\n              <StudentsListBody\n                key={transferedStudents.id}\n                transferedStudents={transferedStudents}\n                index={index}\n                isSelect={selectedItems.includes(transferedStudents.id)}\n                collect={collect}\n                onCheckItem={onCheckItem}\n              />\n            );\n          }\n          return (\n            <DataListView\n              key={transferedStudents.id}\n              transferedStudents={transferedStudents}\n              isSelect={selectedItems.includes(transferedStudents.id)}\n              onCheckItem={onCheckItem}\n              collect={collect}\n            />\n          );\n        })}\n        <Pagination\n          currentPage={currentPage}\n          totalPage={totalPage}\n          onChangePage={(i) => onChangePage(i)}\n        />\n        <ContextMenuContainer\n          onContextMenuClick={onContextMenuClick}\n          onContextMenu={onContextMenu}\n        />\n      </Row>\n    </>\n  );\n};\n\nexport default React.memo(ListPageListing);\n","import React, { useState, useEffect } from 'react';\nimport IntlMessages from 'helpers/IntlMessages';\n\n// import { servicePath } from 'constants/defaultValues';\n\nimport ListPageHeading from './TransferedListHeading';\nimport { provinceOptions } from '../../../global-data/options';\nimport ListPageListing from './TransferedListCatagory';\nimport useMousetrap from 'hooks/use-mousetrap';\nimport DisplayMessage from 'components/messages/DisplayMessage';\nimport config from '../../../../../config';\nconst getIndex = (value, arr, prop) => {\n  for (let i = 0; i < arr.length; i += 1) {\n    if (arr[i][prop] === value) {\n      return i;\n    }\n  }\n  return -1;\n};\n\nconst servicePath = config.API_URL;\nconst apiUrl = `${servicePath}/cakes/paging`;\nconst studentApiUrl = `${servicePath}/api/`;\nconst studentInstituteApiUrl = `${servicePath}/api/student_institutes/`;\nconst instituteApiUrl = `${servicePath}/institute/`;\nconst TransferedStudentsAPI = `${servicePath}/api/student_institutes/?is_transfer=2`;\n//http://localhost:8000/api/student_institutes/?institute=&type=&language=&time=&student_id=&educational_year=&is_transfer=2\n\nconst orderOptions = [\n  { column: 'title', label: 'Product Name' },\n  { column: 'category', label: 'Category' },\n  { column: 'status', label: 'Status' },\n];\nconst pageSizes = [10, 20, 40, 80];\n\nconst categories = [\n  { label: 'Cakes', value: 'Cakes', key: 0 },\n  { label: 'Cupcakes', value: 'Cupcakes', key: 1 },\n  { label: 'Desserts', value: 'Desserts', key: 2 },\n];\nconst genderOptions = [\n  {\n    column: 'all',\n    label: 'تول / همه',\n  },\n  { column: '1', label: 'ذکور' },\n  { column: '2', label: 'اناث' },\n];\n\nconst ThumbListPages = ({ match, item_list }) => {\n  console.log('item_list', item_list);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [displayMode, setDisplayMode] = useState('thumblist');\n  const [currentPage, setCurrentPage] = useState(1);\n  const [selectedPageSize, setSelectedPageSize] = useState(20);\n  const [selectedOrderOption, setSelectedOrderOption] = useState({\n    column: 'title',\n    label: 'Product Name',\n  });\n\n  const [modalOpen, setModalOpen] = useState(false);\n  const [totalItemCount, setTotalItemCount] = useState(0);\n  const [totalPage, setTotalPage] = useState(1);\n  const [search, setSearch] = useState('');\n  const [selectedItems, setSelectedItems] = useState([]);\n  const [items, setItems] = useState([]);\n  const [lastChecked, setLastChecked] = useState(null);\n  const [rest, setRest] = useState(0);\n  const [institutes, setInstitutes] = useState();\n  const [institute, setInstitute] = useState('');\n\n  const [studentId, setStudentId] = useState('');\n  const [province, setProvince] = useState('');\n  const [district, setDistrict] = useState('');\n  const [transferedStudents, setsetTransferedStudentsTra] = useState([]);\n  const [selectedGenderOption, setSelectedGenderOption] = useState({\n    column: 'all',\n    label: 'جنیست',\n  });\n  const [selectedProvinceOption, setSelectedProvinceOption] = useState({\n    column: 'all',\n    label: 'ولایت',\n  });\n\n  useEffect(() => {\n    setIsLoaded(true);\n  }, []);\n  const onCheckItem = (event, id) => {\n    if (\n      event.target.tagName === 'A' ||\n      (event.target.parentElement && event.target.parentElement.tagName === 'A')\n    ) {\n      return true;\n    }\n    if (lastChecked === null) {\n      setLastChecked(id);\n    }\n\n    let selectedList = [...selectedItems];\n    if (selectedList.includes(id)) {\n      selectedList = selectedList.filter((x) => x !== id);\n    } else {\n      selectedList.push(id);\n    }\n    setSelectedItems(selectedList);\n\n    if (event.shiftKey) {\n      let newItems = [...items];\n      const start = getIndex(id, newItems, 'id');\n      const end = getIndex(lastChecked, newItems, 'id');\n      newItems = newItems.slice(Math.min(start, end), Math.max(start, end) + 1);\n      selectedItems.push(\n        ...newItems.map((item) => {\n          return item.id;\n        }),\n      );\n      selectedList = Array.from(new Set(selectedItems));\n      setSelectedItems(selectedList);\n    }\n    document.activeElement.blur();\n    return false;\n  };\n\n  const handleChangeSelectAll = (isToggle) => {\n    if (selectedItems.length >= items.length) {\n      if (isToggle) {\n        setSelectedItems([]);\n      }\n    } else {\n      setSelectedItems(items.map((x) => x.id));\n    }\n    document.activeElement.blur();\n    return false;\n  };\n\n  const onContextMenuClick = (e, data) => {\n    // params : (e,data,target)\n    console.log('onContextMenuClick - selected items', selectedItems);\n    console.log('onContextMenuClick - action : ', data.action);\n  };\n\n  const onContextMenu = (e, data) => {\n    const clickedProductId = data.data;\n    if (!selectedItems.includes(clickedProductId)) {\n      setSelectedItems([clickedProductId]);\n    }\n\n    return true;\n  };\n\n  useMousetrap(['ctrl+a', 'command+a'], () => {\n    handleChangeSelectAll(false);\n  });\n\n  useMousetrap(['ctrl+d', 'command+d'], () => {\n    setSelectedItems([]);\n    return false;\n  });\n\n  const startIndex = (currentPage - 1) * selectedPageSize;\n  const endIndex = currentPage * selectedPageSize;\n  console.log('item data', items);\n  return !isLoaded ? (\n    <div className=\"loading\" />\n  ) : (\n    <>\n      <div className=\"disable-text-selection\">\n        <ListPageHeading\n          heading=\"د تبدیل شوی شاګردانو لست/لست شاگردان تبدیل شده\"\n          // Using display mode we can change the display of the list.\n          displayMode={displayMode}\n          changeDisplayMode={setDisplayMode}\n          handleChangeSelectAll={handleChangeSelectAll}\n          // following code is used for order the list based on different element of the prod\n          changeOrderBy={(column) => {\n            setSelectedOrderOption(\n              orderOptions.find((x) => x.column === column),\n            );\n          }}\n          changePageSize={setSelectedPageSize}\n          selectedPageSize={selectedPageSize}\n          totalItemCount={totalItemCount}\n          selectedOrderOption={selectedOrderOption}\n          match={match}\n          startIndex={startIndex}\n          endIndex={endIndex}\n          selectedItemsLength={selectedItems ? selectedItems.length : 0}\n          itemsLength={items ? items.length : 0}\n          onSearchKey={(e) => {\n            if (e.key === 'Enter') {\n              setSearch(e.target.value.toLowerCase());\n            }\n          }}\n          orderOptions={orderOptions}\n          pageSizes={pageSizes}\n          toggleModal={() => setModalOpen(!modalOpen)}\n          changeGenderBy={(column) => {\n            setSelectedGenderOption(\n              genderOptions.find((x) => x.column === column),\n            );\n          }}\n          changeProvinceBy={(column) => {\n            setSelectedProvinceOption(\n              provinceOptions.find((x) => x.column === column),\n            );\n          }}\n          selectedGenderOption={selectedGenderOption}\n          selectedProvinceOption={selectedProvinceOption}\n          genderOptions={genderOptions}\n          provinceOptions={provinceOptions}\n          onIdSearchKey={(e) => {\n            if (e.key === 'Enter') {\n              setStudentId(e.target.value.toLowerCase());\n            }\n          }}\n          onProvinceSearchKey={(e) => {\n            if (e.key === 'Enter') {\n              setProvince(e.target.value.toLowerCase());\n            }\n          }}\n          onDistrictSearchKey={(e) => {\n            if (e.key === 'Enter') {\n              setDistrict(e.target.value.toLowerCase());\n            }\n          }}\n          onResetClick={setRest}\n          reset={rest}\n          institutes={institutes}\n          onInstituteSelect={setInstitute}\n        />\n\n        <table className=\"table\">\n          <thead\n            className=\"pl-2 d-flex flex-grow-1  table-dark mb-2\"\n            style={{ maxHeight: '55px' }}\n          >\n            <tr className=\"card-body align-self-center d-flex flex-column flex-lg-row align-items-lg-center\">\n              <th\n                style={{\n                  width: '10.4%',\n                  paddingInline: '0%',\n                  textAlign: 'right',\n                  borderStyle: 'hidden',\n                  fontSize: '20px',\n                }}\n              >\n                <IntlMessages id=\"marks.No\" />\n              </th>\n              <th\n                style={{\n                  width: '10.1%',\n                  paddingInline: '0%',\n                  textAlign: 'right',\n                  borderStyle: 'hidden',\n                  fontSize: '20px',\n                }}\n              >\n                <IntlMessages id=\"marks.ID\" />\n              </th>\n              <th\n                style={{\n                  width: '15%',\n                  paddingInline: '0%',\n                  textAlign: 'right',\n                  borderStyle: 'hidden',\n                  fontSize: '20px',\n                }}\n              >\n                <IntlMessages id=\"forms.StdName\" />\n              </th>\n\n              <th\n                style={{\n                  width: '18%',\n                  padding: '0%',\n                  textAlign: 'right',\n                  borderStyle: 'hidden',\n                  fontSize: '20px',\n                }}\n              >\n                <IntlMessages id=\"student.previousInstitute\" />\n              </th>\n              <th\n                style={{\n                  width: '18%',\n                  padding: '0%',\n                  textAlign: 'right',\n                  borderStyle: 'hidden',\n                  fontSize: '20px',\n                }}\n              >\n                {' '}\n                <IntlMessages id=\"student.newInstitute\" />\n              </th>\n              <th\n                style={{\n                  width: '18%',\n                  padding: '0%',\n                  textAlign: 'right',\n                  borderStyle: 'hidden',\n                  fontSize: '20px',\n                }}\n              >\n                {' '}\n                <IntlMessages id=\"dorm.yearList\" />\n              </th>\n            </tr>\n          </thead>\n          {item_list.length > 0 ? (\n            <ListPageListing\n              items={item_list}\n              displayMode={displayMode}\n              selectedItems={selectedItems}\n              onCheckItem={onCheckItem}\n              currentPage={currentPage}\n              totalPage={totalPage}\n              onContextMenuClick={onContextMenuClick}\n              onContextMenu={onContextMenu}\n              onChangePage={setCurrentPage}\n            />\n          ) : (\n            <DisplayMessage type=\"error\" message=\"معلومات شتون نلری\" />\n          )}\n        </table>\n      </div>\n    </>\n  );\n};\n\nexport default ThumbListPages;\n","import React, { useState, useEffect, useContext } from 'react';\nimport { Formik, Form } from 'formik';\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\nimport callApi from 'helpers/callApi';\nimport './../../.././../assets/css/global-style.css';\nimport { educationalYearsOptions } from './../../global-data/options';\n\n// Year  and SHift\nimport * as Yup from 'yup';\nimport { Row, Card, CardBody, FormGroup, Label, Button } from 'reactstrap';\n\nimport IntlMessages from 'helpers/IntlMessages';\nimport { Colxx } from 'components/common/CustomBootstrap';\nimport { FormikReactSelect } from 'containers/form-validations/FormikFields';\nimport TransferedStudentList from './transfered-student-list/TransferedListMain';\nimport config from '../../../../config';\nimport { AuthContext } from 'context/AuthContext';\nconst servicePath = config.API_URL;\nconst studentApi = `${servicePath}/api`;\nconst transferedStudentsAPI = `${servicePath}/api/student_institutes`;\n// http://localhost:8000/api/student_institutes/?institute=&type=&language=&time=&student_id=&educational_year=&is_transfer=2\n\nconst StudyTimeOptions = [\n  { value: '1', label: <IntlMessages id=\"forms.StudyTimeOption_1\" /> },\n  { value: '2', label: <IntlMessages id=\"forms.StudyTimeOption_2\" /> },\n];\n\nconst ValidationSchema = Yup.object().shape({\n  institute: Yup.object()\n    .shape({\n      value: Yup.string().required(),\n    })\n    .nullable()\n    .required(<IntlMessages id=\"forms.InstituteErr\" />),\n\n  educationalYear: Yup.object()\n    .shape({\n      value: Yup.string().required(),\n    })\n    .nullable()\n    .required(<IntlMessages id=\"forms.educationYearErr\" />),\n});\n\nconst initialValues = {\n  institute: [],\n  educationalYear: [],\n};\nconst MarksRegistration = ({ match }) => {\n  const { institutes } = useContext(AuthContext);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [selectedInstitute, setSelectedInstitute] = useState('');\n  const [selectedEducationalYear, setSelectedEducationalYear] = useState([]);\n  const [transferedStudents, setTransferedStudents] = useState([]);\n  const [transferedStudentList, setTransferedStudentList] = useState(false);\n\n  const { markId } = useParams();\n\n  async function fetchStudent() {\n    const { data } = await axios.get(\n      // `${studentMarkId}/?student_id=${markId}`,\n      `${1}/?student_id=${markId}`,\n    );\n    console.log(data, 'object of the data');\n  }\n\n  useEffect(() => {\n    if (markId) {\n      fetchStudent();\n      //setUpdateMode(true);\n    }\n  }, [markId]);\n\n  const fetchTransferedStudents = async (values) => {\n    const response = await callApi(\n      `students/student_institutes/?institute=${values.institute.value}&educational_year=${values.educationalYear.value}&is_transfer=true`,\n      '',\n      null,\n    );\n    console.log('response of transfer students', response);\n    setTransferedStudents(response.data);\n    //console.log('transfered students list', data);\n    setIsLoaded(true);\n    setTransferedStudentList(true);\n  };\n\n  const onSubmit = (values) => {\n    setTransferedStudentList(true);\n    fetchTransferedStudents(values);\n  };\n\n  return (\n    <>\n      {transferedStudentList ? (\n        <TransferedStudentList item_list={transferedStudents} />\n      ) : (\n        <Card>\n          <div className=\"mt-4 ml-5\">\n            <h2 className=\"mt-5 m-5 titleStyle\">\n              <IntlMessages id=\"student.transferred-studentList\" />\n            </h2>\n          </div>\n          <CardBody>\n            {' '}\n            <Formik\n              initialValues={initialValues}\n              onSubmit={onSubmit}\n              validationSchema={ValidationSchema}\n            >\n              {({\n                errors,\n                touched,\n                values,\n                setFieldTouched,\n                setFieldValue,\n              }) => (\n                <Form className=\"av-tooltip tooltip-label-right style \">\n                  <Row className=\"mr-5 ml-5 mt-5 mb-1 justify-content-center\">\n                    <Colxx xxs=\"6\">\n                      {/* set if condition, if institutes are loaded */}\n                      <FormGroup className=\"form-group has-float-label error-l-150 \">\n                        <Label>\n                          <IntlMessages id=\"forms.InstituteLabel\" />\n                          <span style={{ color: 'red' }}>*</span>\n                        </Label>\n                        <FormikReactSelect\n                          name=\"institute\"\n                          id=\"institute\"\n                          value={values.institute}\n                          options={institutes}\n                          onChange={setFieldValue}\n                          onBlur={setFieldTouched}\n                          onClick={setSelectedInstitute(values.institute)}\n                        />\n\n                        {errors.institute && touched.institute ? (\n                          <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                            {errors.institute}\n                          </div>\n                        ) : null}\n                      </FormGroup>\n\n                      <FormGroup className=\"form-group has-float-label mt-5  error-l-150\">\n                        <Label>\n                          <IntlMessages id=\"forms.educationYearLabel\" />\n                        </Label>\n                        <FormikReactSelect\n                          name=\"educationalYear\"\n                          id=\"educationalYear\"\n                          options={educationalYearsOptions}\n                          onChange={setFieldValue}\n                          onBlur={setFieldTouched}\n                          onClick={setSelectedEducationalYear(\n                            values.educationalYear,\n                          )}\n                        />\n                        {errors.educationalYear && touched.educationalYear ? (\n                          <div className=\"invalid-feedback d-block bg-danger text-white \">\n                            {errors.educationalYear}\n                          </div>\n                        ) : null}\n                      </FormGroup>\n                    </Colxx>\n                  </Row>\n                  <Row className=\" justify-content-center\">\n                    <Colxx xxs=\"6\">\n                      <Button\n                        color=\"primary\"\n                        className=\"float-right buttonStyle\"\n                        size=\"lg\"\n                        type=\"submit\"\n                        style={{ margin: '7% 0% 8% 1%', paddingInline: '5%' }}\n                      >\n                        <span className=\"label\">\n                          <IntlMessages id=\"search.studentId\" />\n                        </span>\n                      </Button>\n                    </Colxx>\n                  </Row>\n                  <br />\n                  <br />\n                  <br />\n                  <br />\n                  <br />\n                  <br />\n                </Form>\n              )}\n            </Formik>\n          </CardBody>\n        </Card>\n      )}\n    </>\n  );\n};\n\nexport default MarksRegistration;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"tag\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'p'\n};\n\nvar CardText = function CardText(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var classes = mapToCssModules(classNames(className, 'card-text'), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nCardText.propTypes = propTypes;\nCardText.defaultProps = defaultProps;\nexport default CardText;"],"names":["inputLabel","fontSize","fontWeight","ImageListView","_ref","product","isSelect","collect","onCheckItem","_jsx","Colxx","sm","lg","xl","className","children","ContextMenuTrigger","id","data","_jsxs","Card","onClick","event","classnames","active","NavLink","to","concat","CardImg","top","alt","title","src","img","Badge","color","statusColor","pill","status","CardBody","Row","xxs","CustomInput","type","checked","onChange","label","CardSubtitle","CardText","date","React","_ref$totalPage","totalPage","_ref$currentPage","currentPage","_ref$numberLimit","numberLimit","_ref$lastIsActive","lastIsActive","_ref$firstIsActive","firstIsActive","onChangePage","startPoint","endPoint","parseInt","points","i","push","firstPageButtonClassName","lastPageButtonClassName","prevPageButtonClassName","nextPageButtonClassName","Nav","NavItem","map","handlerKey","handlerCallback","actionRef","useRef","current","useEffect","mousetrap","evt","combo","preventDefault","servicePath","match","_useContext","useContext","AuthContext","provinces","institutes","departments","_useState","useState","_useState2","_slicedToArray","isLoaded","_useState3","_useState4","_useState5","_useState6","setCurrentPage","_useState7","_useState8","selectedPageSize","_useState9","column","_useState10","selectedOrderOption","_useState11","_useState12","isLoading","setIsLoading","_useState13","_useState14","_useState15","_useState16","_useState17","_useState18","_useState19","_useState20","_useState21","_useState22","selectedItems","setSelectedItems","_useState23","_useState24","items","setItems","_useState25","_useState26","_useState27","_useState28","_useState29","_useState30","institute","_useState31","_useState32","_useState33","_useState34","_useState35","_useState36","_useState37","_useState38","_useState39","_useState40","selectedGenderOption","_useState41","_useState42","selectedProvinceOption","_useState43","pagination","pageSize","_useState44","tableParams","setTableParams","_useState45","_useState46","isFilter","setIsFilter","fetchData","_fetchData","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee2","params","endpoint","params1","response","_response$data2","_response$data","_args2","wrap","_context2","prev","next","length","undefined","value","console","log","_objectSpread","page","page_size","callApi","sent","item","student","results","total","count","t0","stop","onFilter","_ref2","_callee","values","_values$filterInstitu","_values$department","_values$educationalYe","_values$filterProvinc","_context","filterInstitute","department_id","department","educational_year","educationalYear","province","filterProvince","_x","JSON","stringify","useMousetrap","isToggle","x","document","activeElement","blur","_Fragment","style","padding","display","Formik","initialValues","filterId","onSubmit","_ref3","setFieldValue","handleSubmit","setFieldTouched","resetForm","FormGroup","Label","FormikReactSelect","placeholder","name","options","onBlur","educationalYearsOptions","handleResetFields","TB","size","columns","dataIndex","width","loading","filter","sorter","_tableParams$paginati","dataSource","index","_provinces$find","_institutes$find","_departments$find","key","find","pro","score","marks","year","injectIntl","intl","displayMode","changeDisplayMode","heading","displayOptionsIsOpen","messages","IntlMessages","Collapse","isOpen","href","ThumbListIcon","ImageListIcon","Separator","StudentListBody","transferedStudents","span","student_id","props","ListPageListing","onContextMenuClick","onContextMenu","includes","StudentsListBody","DataListView","Pagination","ContextMenuContainer","getIndex","arr","prop","config","API_URL","item_list","setIsLoaded","setDisplayMode","setSelectedPageSize","totalItemCount","lastChecked","setLastChecked","handleChangeSelectAll","startIndex","endIndex","ListPageHeading","changeOrderBy","changePageSize","selectedItemsLength","itemsLength","maxHeight","paddingInline","textAlign","borderStyle","target","tagName","parentElement","selectedList","_toConsumableArray","shiftKey","newItems","start","end","slice","Math","min","max","Array","from","Set","e","clickedProductId","ValidationSchema","Yup","shape","required","nullable","setInstitutes","setSelectedInstitute","setSelectedEducationalYear","dismissedStudents","setDismissedStudents","dismissedStudentsList","setDismissedStudentList","markId","useParams","_fetchStudent","_callee3","_yield$axios$get","_context3","axios","fetchStudent","fetchInstitutes","updatedData","fetchDismissedStudents","DismissedStudents","validationSchema","_ref4","errors","touched","Form","Button","margin","onSearchKey","orderOptions","pageSizes","onInstituteSelect","onIdSearchKey","changeGenderBy","genderOptions","provinceOptions","changeProvinceBy","onDistrictSearchKey","onProvinceSearchKey","onResetClick","reset","setDisplayOptionsIsOpen","selectedInstitute","marginRight","marginLeft","setSelectedOrderOption","modalOpen","setModalOpen","setSearch","rest","setRest","setInstitute","setStudentId","setProvince","setDistrict","setSelectedGenderOption","setSelectedProvinceOption","toLowerCase","toggleModal","action","DisplayMessage","message","setTransferedStudents","transferedStudentList","setTransferedStudentList","fetchTransferedStudents","TransferedStudentList","_excluded","propTypes","tag","tagPropType","PropTypes","cssModule","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","_extends","defaultProps"],"sourceRoot":""}