{"version":3,"sources":["views/app/students/dissmised-and-transfered-student-profile.js","views/app/students/dismissed-students/dismissed-student-list/DismissedListHeading.js","views/app/students/dismissed-students/dismissed-student-list/DismissedListBody.js","views/app/students/dismissed-students/dismissed-student-list/DismissedListCatagory.js","views/app/students/dismissed-students/dismissed-student-list/DismissedListMain.js","views/app/students/dismissed-students/dismissed-students.js","views/app/students/transfered-students/transfered-student-list/TransferedListHeading.js","views/app/students/transfered-students/transfered-student-list/TransferedListBody.js","views/app/students/transfered-students/transfered-student-list/TransferedListCatagory.js","views/app/students/transfered-students/transfered-student-list/TransferedListMain.js","views/app/students/transfered-students/transfered-students.js","views/app/students/bio/kankor-students-list/KankorStudentListHeading.js","views/app/students/bio/kankor-students-list/KankorStudentListCatagory.js","views/app/students/bio/kankor-students-list/KankorStudentListMain.js","containers/pages/Pagination.js","hooks/use-mousetrap.js","containers/pages/ImageListView.js"],"names":["StudentProfile","console","log","_jsx","children","injectIntl","_ref","intl","displayMode","changeDisplayMode","heading","_useState","useState","_useState2","_slicedToArray","displayOptionsIsOpen","messages","Row","_jsxs","Colxx","xxs","className","IntlMessages","id","Collapse","isOpen","href","concat","onClick","ThumbListIcon","ImageListIcon","Separator","StudentListBody","transferedStudents","isSelect","collect","onCheckItem","ContextMenuTrigger","data","Card","event","classnames","active","NavLink","span","style","width","fontSize","to","student","student_id","name","institute","educational_year","React","memo","props","ListPageListing","items","selectedItems","currentPage","totalPage","onContextMenuClick","onContextMenu","onChangePage","_Fragment","length","map","ImageListView","includes","StudentsListBody","DataListView","Pagination","i","ContextMenuContainer","getIndex","value","arr","prop","servicePath","config","API_URL","ThumbListPages","match","item_list","isLoaded","setIsLoaded","_useState3","_useState4","setDisplayMode","_useState5","_useState6","setCurrentPage","_useState7","_useState8","selectedPageSize","setSelectedPageSize","_useState9","column","label","_useState10","selectedOrderOption","setSelectedOrderOption","_useState11","_useState12","_useState13","_useState14","totalItemCount","_useState15","_useState16","_useState17","_useState18","_useState19","_useState20","setSelectedItems","_useState21","_useState22","_useState23","_useState24","lastChecked","setLastChecked","_useState25","_useState26","_useState27","_useState28","_useState29","_useState30","_useState31","_useState32","_useState33","_useState34","_useState35","_useState36","_useState37","_useState38","useEffect","handleChangeSelectAll","isToggle","x","document","activeElement","blur","useMousetrap","startIndex","endIndex","ListPageHeading","changeOrderBy","orderOptions","find","changePageSize","selectedItemsLength","itemsLength","maxHeight","paddingInline","textAlign","borderStyle","padding","results","target","tagName","parentElement","selectedList","_toConsumableArray","filter","push","shiftKey","newItems","start","end","slice","Math","min","max","apply","item","Array","from","Set","e","clickedProductId","ValidationSchema","Yup","shape","required","nullable","educationalYear","initialValues","MarksRegistration","institutes","setInstitutes","setSelectedInstitute","setSelectedEducationalYear","dismissedStudents","setDismissedStudents","dismissedStudentsList","setDismissedStudentList","markId","useParams","_fetchStudent","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_yield$axios$get","wrap","_context","prev","next","axios","get","studentMarkId","sent","stop","arguments","fetchStudent","fetchInstitutes","_ref2","_callee2","response","updatedData","_context2","callApi","status","fetchDismissedStudents","_ref3","_callee3","values","_context3","_x","DismissedStudents","CardBody","Formik","onSubmit","validationSchema","_ref4","errors","touched","setFieldTouched","setFieldValue","Form","FormGroup","Label","color","FormikReactSelect","options","onChange","onBlur","educationalYearsOptions","Button","size","type","margin","onSearchKey","pageSizes","onInstituteSelect","onIdSearchKey","changeGenderBy","selectedGenderOption","genderOptions","selectedProvinceOption","provinceOptions","changeProvinceBy","onDistrictSearchKey","onProvinceSearchKey","onResetClick","reset","setDisplayOptionsIsOpen","selectedInstitute","index","marginRight","marginLeft","modalOpen","setModalOpen","setSearch","rest","setRest","setInstitute","setStudentId","setProvince","setDistrict","_useState39","_useState40","setSelectedGenderOption","_useState41","_useState42","setSelectedProvinceOption","key","toLowerCase","toggleModal","action","DisplayMessage","message","useContext","AuthContext","setTransferedStudents","transferedStudentList","setTransferedStudentList","fetchTransferedStudents","TransferedStudentList","provincesOptionsForList","onEducationYearSelect","UncontrolledDropdown","DropdownToggle","caret","DropdownMenu","gender","DropdownItem","height","overflowY","overflowX","order","placeholder","onKeyPress","ReactAutoSugegst","select","opt","getElementById","_useContext","provinces","departments","isLoading","setIsLoading","setItems","_useState43","pagination","current","pageSize","_useState44","tableParams","setTableParams","_useState45","_useState46","isFilter","setIsFilter","fetchData","_fetchData","params","endpoint","params1","_response$data2","_response$data","_args2","undefined","_objectSpread","page","page_size","total","count","t0","onFilter","_values$filterInstitu","_values$department","_values$educationalYe","_values$filterProvinc","filterInstitute","department_id","department","province","filterProvince","JSON","stringify","display","filterId","handleSubmit","resetForm","handleResetFields","TB","columns","title","dataIndex","loading","sorter","_tableParams$paginati","dataSource","_provinces$find","_institutes$find","_departments$find","pro","score","marks","year","_ref$totalPage","_ref$currentPage","_ref$numberLimit","numberLimit","_ref$lastIsActive","lastIsActive","_ref$firstIsActive","firstIsActive","startPoint","endPoint","parseInt","points","firstPageButtonClassName","lastPageButtonClassName","prevPageButtonClassName","nextPageButtonClassName","Nav","NavItem","handlerKey","handlerCallback","actionRef","useRef","mousetrap","bind","evt","combo","preventDefault","unbind","product","sm","lg","xl","CardImg","top","alt","src","img","Badge","statusColor","pill","CustomInput","checked","CardSubtitle","CardText","date"],"mappings":"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","file":"static/js/kankor-student-list.fa90d4e0.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst StudentProfile = () => {\n  console.log('student profile is called');\n  return <div>Dismissed students profile</div>;\n};\n\nexport default StudentProfile;\n","/* eslint-disable react/no-array-index-key */\nimport React, { useState } from 'react';\nimport {\n  Row,\n  Button,\n  ButtonDropdown,\n  UncontrolledDropdown,\n  DropdownMenu,\n  DropdownItem,\n  DropdownToggle,\n  CustomInput,\n  Collapse,\n} from 'reactstrap';\nimport { injectIntl } from 'react-intl';\n\nimport { Colxx, Separator } from 'components/common/CustomBootstrap';\nimport IntlMessages from 'helpers/IntlMessages';\nimport ReactAutoSugegst from 'containers/forms/ReactAutoSugegst';\n\nimport { DataListIcon, ThumbListIcon, ImageListIcon } from 'components/svg';\n// import Breadcrumb from '../navs/Breadcrumb';\n\nconst ListPageHeading = ({ intl, displayMode, changeDisplayMode, heading }) => {\n  const [displayOptionsIsOpen, setDisplayOptionsIsOpen] = useState(false);\n  const { messages } = intl;\n  return (\n    <Row>\n      <Colxx xxs=\"12\">\n        <div className=\"mb-2\">\n          <h1>\n            <IntlMessages id={heading} />\n          </h1>\n        </div>\n\n        <div className=\"mb-2\">\n          <Collapse\n            isOpen={displayOptionsIsOpen}\n            className=\"d-md-block\"\n            id=\"displayOptions\"\n          >\n            <span className=\"mr-3 d-inline-block float-md-left\">\n              <a\n                href=\"#/\"\n                className={`mr-2 view-icon ${\n                  displayMode === 'thumblist' ? 'active' : ''\n                }`}\n                onClick={() => changeDisplayMode('thumblist')}\n              >\n                <ThumbListIcon />\n              </a>\n              <a\n                href=\"#/\"\n                className={`mr-2 view-icon ${\n                  displayMode === 'imagelist' ? 'active' : ''\n                }`}\n                onClick={() => changeDisplayMode('imagelist')}\n              >\n                <ImageListIcon />\n              </a>\n            </span>\n          </Collapse>\n        </div>\n        <Separator className=\"mb-5\" />\n        <br />\n      </Colxx>\n    </Row>\n  );\n};\n\nexport default injectIntl(ListPageHeading);\n","import React from 'react';\nimport { Card, CustomInput, Badge } from 'reactstrap';\nimport { NavLink } from 'react-router-dom';\nimport classnames from 'classnames';\nimport { ContextMenuTrigger } from 'react-contextmenu';\nimport { Colxx } from 'components/common/CustomBootstrap';\n\nconst StudentListBody = ({\n  transferedStudents,\n  isSelect,\n  collect,\n  onCheckItem,\n}) => {\n  return (\n    <Colxx xxs=\"12\" key={transferedStudents.id} className=\"mb-3\">\n      <ContextMenuTrigger\n        id=\"menu_id\"\n        data={transferedStudents.id}\n        collect={collect}\n      >\n        <Card\n          onClick={(event) => onCheckItem(event, transferedStudents.id)}\n          className={classnames('d-flex flex-row', {\n            active: isSelect,\n          })}\n        >\n          <div className=\"pl-2 d-flex flex-grow-1 min-width-zero\">\n            <div className=\"py-3 card-body align-self-center d-flex flex-column flex-lg-row  min-width-zero align-items-lg-center\">\n              {/* send this to localhost/transferedStudentss/:id */}\n              <NavLink\n                span\n                style={{ width: '11.8%', fontSize: '20px' }}\n                to={`transferedStudents/${transferedStudents.id}`}\n                className=\"\"\n              >\n                <p\n                  className=\"list-item-heading mb-1 truncate \"\n                  style={{ fontSize: '20px' }}\n                >\n                  {transferedStudents.id}\n                </p>\n              </NavLink>\n              <NavLink\n                span\n                style={{ width: '11.8%', fontSize: '20px' }}\n                to={`student-profile/${transferedStudents.student.student_id}`}\n                className=\"\"\n              >\n                <p\n                  className=\"list-item-heading mb-1 truncate \"\n                  style={{ fontSize: '20px' }}\n                >\n                  {transferedStudents.student.student_id}\n                </p>\n              </NavLink>\n              <p\n                className=\"mb-1 text-small w-9 w-sm-100\"\n                style={{ width: '20%', fontSize: '20px' }}\n              >\n                {transferedStudents.student.name}\n              </p>\n              <p\n                className=\"mb-1 text-small  w-sm-100\"\n                style={{ width: '25%', fontSize: '20px' }}\n              >\n                {transferedStudents.institute.name}\n              </p>\n              <p\n                className=\"mb-1 text-small w-10 w-sm-100\"\n                style={{ width: '6%', fontSize: '20px' }}\n              >\n                {transferedStudents.educational_year}\n              </p>\n            </div>\n          </div>\n        </Card>\n      </ContextMenuTrigger>\n    </Colxx>\n  );\n};\n\n/* React.memo detail : https://reactjs.org/docs/react-api.html#reactpurecomponent  */\nexport default React.memo(StudentListBody);\n","import React, { useState } from 'react';\nimport {\n  Row,\n  Modal,\n  Button,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n} from 'reactstrap';\n\n//import Pagination from '../../../../containers/pages/Pagination';\nimport Pagination from '../../../../../containers/pages/Pagination';\nimport ContextMenuContainer from '../../../../../containers/pages/ContextMenuContainer';\nimport DataListView from '../../../../../containers/pages/DataListView';\nimport ImageListView from '../../../../../containers/pages/ImageListView';\nimport StudentsListBody from './DismissedListBody';\n\nfunction collect(props) {\n  return { data: props.data };\n}\n\nconst ListPageListing = ({\n  items,\n  displayMode,\n  selectedItems,\n  onCheckItem,\n  currentPage,\n  totalPage,\n  onContextMenuClick,\n  onContextMenu,\n  onChangePage,\n}) => {\n  const [modalBasic, setModalBasic] = useState(true);\n\n  return (\n    <>\n      <Row>\n        {items?.length === 0 ? (\n          <div className=\"no-result m-3\">\n            <h5>هیچ داده ای برای نمایش وجود ندارد</h5>\n          </div>\n        ) : null}\n        {items?.map((transferedStudents) => {\n          if (displayMode === 'imagelist') {\n            return (\n              <ImageListView\n                key={transferedStudents.id}\n                transferedStudents={transferedStudents}\n                isSelect={selectedItems.includes(transferedStudents.id)}\n                collect={collect}\n                onCheckItem={onCheckItem}\n              />\n            );\n          }\n          if (displayMode === 'thumblist') {\n            return (\n              <StudentsListBody\n                key={transferedStudents.id}\n                transferedStudents={transferedStudents}\n                isSelect={selectedItems.includes(transferedStudents.id)}\n                collect={collect}\n                onCheckItem={onCheckItem}\n              />\n            );\n          }\n          return (\n            <DataListView\n              key={transferedStudents.id}\n              transferedStudents={transferedStudents}\n              isSelect={selectedItems.includes(transferedStudents.id)}\n              onCheckItem={onCheckItem}\n              collect={collect}\n            />\n          );\n        })}\n        <Pagination\n          currentPage={currentPage}\n          totalPage={totalPage}\n          onChangePage={(i) => onChangePage(i)}\n        />\n        <ContextMenuContainer\n          onContextMenuClick={onContextMenuClick}\n          onContextMenu={onContextMenu}\n        />\n      </Row>\n    </>\n  );\n};\n\nexport default React.memo(ListPageListing);\n","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport IntlMessages from 'helpers/IntlMessages';\n\n// import { servicePath } from 'constants/defaultValues';\n\nimport ListPageHeading from './DismissedListHeading';\n\nimport ListPageListing from './DismissedListCatagory';\nimport useMousetrap from 'hooks/use-mousetrap';\nimport config from '../../../../../config';\n\nconst getIndex = (value, arr, prop) => {\n  for (let i = 0; i < arr.length; i += 1) {\n    if (arr[i][prop] === value) {\n      return i;\n    }\n  }\n  return -1;\n};\n\nconst servicePath = config.API_URL;\nconst apiUrl = `${servicePath}/cakes/paging`;\nconst studentApiUrl = `${servicePath}/api/`;\nconst studentInstituteApiUrl = `${servicePath}/api/student_institutes/`;\nconst instituteApiUrl = `${servicePath}/institute/`;\nconst TransferedStudentsAPI = `${servicePath}/api/student_institutes/?is_transfer=2`;\n//http://localhost:8000/api/student_institutes/?institute=&type=&language=&time=&student_id=&educational_year=&is_transfer=2\n\nconst ThumbListPages = ({ match, item_list }) => {\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [displayMode, setDisplayMode] = useState('thumblist');\n  const [currentPage, setCurrentPage] = useState(1);\n  const [selectedPageSize, setSelectedPageSize] = useState(20);\n  const [selectedOrderOption, setSelectedOrderOption] = useState({\n    column: 'title',\n    label: 'Product Name',\n  });\n\n  const [modalOpen, setModalOpen] = useState(false);\n  const [totalItemCount, setTotalItemCount] = useState(0);\n  const [totalPage, setTotalPage] = useState(1);\n  const [search, setSearch] = useState('');\n  const [selectedItems, setSelectedItems] = useState([]);\n  const [items, setItems] = useState([]);\n  const [lastChecked, setLastChecked] = useState(null);\n  const [rest, setRest] = useState(0);\n  const [institutes, setInstitutes] = useState();\n  const [institute, setInstitute] = useState('');\n  const [studentId, setStudentId] = useState('');\n  const [transferedStudents, setsetTransferedStudentsTra] = useState([]);\n  const [selectedGenderOption, setSelectedGenderOption] = useState({\n    column: 'all',\n    label: 'جنیست',\n  });\n  const [selectedProvinceOption, setSelectedProvinceOption] = useState({\n    column: 'all',\n    label: 'ولایت',\n  });\n\n  useEffect(() => {\n    setIsLoaded(true);\n  }, []);\n  const onCheckItem = (event, id) => {\n    if (\n      event.target.tagName === 'A' ||\n      (event.target.parentElement && event.target.parentElement.tagName === 'A')\n    ) {\n      return true;\n    }\n    if (lastChecked === null) {\n      setLastChecked(id);\n    }\n\n    let selectedList = [...selectedItems];\n    if (selectedList.includes(id)) {\n      selectedList = selectedList.filter((x) => x !== id);\n    } else {\n      selectedList.push(id);\n    }\n    setSelectedItems(selectedList);\n\n    if (event.shiftKey) {\n      let newItems = [...items];\n      const start = getIndex(id, newItems, 'id');\n      const end = getIndex(lastChecked, newItems, 'id');\n      newItems = newItems.slice(Math.min(start, end), Math.max(start, end) + 1);\n      selectedItems.push(\n        ...newItems.map((item) => {\n          return item.id;\n        })\n      );\n      selectedList = Array.from(new Set(selectedItems));\n      setSelectedItems(selectedList);\n    }\n    document.activeElement.blur();\n    return false;\n  };\n\n  const handleChangeSelectAll = (isToggle) => {\n    if (selectedItems.length >= items.length) {\n      if (isToggle) {\n        setSelectedItems([]);\n      }\n    } else {\n      setSelectedItems(items.map((x) => x.id));\n    }\n    document.activeElement.blur();\n    return false;\n  };\n\n  const onContextMenuClick = (e, data) => {};\n\n  const onContextMenu = (e, data) => {\n    const clickedProductId = data.data;\n    if (!selectedItems.includes(clickedProductId)) {\n      setSelectedItems([clickedProductId]);\n    }\n    return true;\n  };\n\n  useMousetrap(['ctrl+a', 'command+a'], () => {\n    handleChangeSelectAll(false);\n  });\n\n  useMousetrap(['ctrl+d', 'command+d'], () => {\n    setSelectedItems([]);\n    return false;\n  });\n\n  const startIndex = (currentPage - 1) * selectedPageSize;\n  const endIndex = currentPage * selectedPageSize;\n  return !isLoaded ? (\n    <div className=\"loading\" />\n  ) : (\n    <>\n      <div className=\"disable-text-selection\">\n        <ListPageHeading\n          heading=\"د منفک شویو شاګردانو لست/لست شاگردان منفک شده\"\n          // Using display mode we can change the display of the list.\n          displayMode={displayMode}\n          changeDisplayMode={setDisplayMode}\n          handleChangeSelectAll={handleChangeSelectAll}\n          // following code is used for order the list based on different element of the prod\n          changeOrderBy={(column) => {\n            setSelectedOrderOption(\n              orderOptions.find((x) => x.column === column)\n            );\n          }}\n          changePageSize={setSelectedPageSize}\n          selectedPageSize={selectedPageSize}\n          totalItemCount={totalItemCount}\n          selectedOrderOption={selectedOrderOption}\n          match={match}\n          startIndex={startIndex}\n          endIndex={endIndex}\n          selectedItemsLength={selectedItems ? selectedItems.length : 0}\n          itemsLength={items ? items.length : 0}\n        />\n\n        <table className=\"table\">\n          <thead\n            className=\"pl-2 d-flex flex-grow-1  table-dark mb-2\"\n            style={{ maxHeight: '55px' }}\n          >\n            <tr className=\"card-body align-self-center d-flex flex-column flex-lg-row align-items-lg-center\">\n              <th\n                style={{\n                  width: '12%',\n                  paddingInline: '0%',\n                  textAlign: 'right',\n                  borderStyle: 'hidden',\n                  fontSize: '20px',\n                }}\n              >\n                <IntlMessages id=\"marks.No\" />\n              </th>\n              <th\n                style={{\n                  width: '15%',\n                  paddingInline: '0%',\n                  textAlign: 'right',\n                  borderStyle: 'hidden',\n                  fontSize: '20px',\n                }}\n              >\n                <IntlMessages id=\"marks.ID\" />\n              </th>\n              <th\n                style={{\n                  width: '20%',\n                  paddingInline: '0%',\n                  textAlign: 'right',\n                  borderStyle: 'hidden',\n                  fontSize: '20px',\n                }}\n              >\n                <IntlMessages id=\"forms.StdName\" />\n              </th>\n              <th\n                style={{\n                  width: '25%',\n                  paddingInline: '0%',\n                  textAlign: 'right',\n                  borderStyle: 'hidden',\n                  fontSize: '20px',\n                }}\n              >\n                <IntlMessages id=\"inst.name-List\" />\n              </th>\n              <th\n                style={{\n                  width: '20%',\n                  padding: '0%',\n                  textAlign: 'right',\n                  borderStyle: 'hidden',\n                  fontSize: '20px',\n                }}\n              >\n                {' '}\n                <IntlMessages id=\"dorm.yearList\" />\n              </th>\n            </tr>\n          </thead>\n          <ListPageListing\n            items={item_list?.results}\n            displayMode={displayMode}\n            selectedItems={selectedItems}\n            onCheckItem={onCheckItem}\n            currentPage={currentPage}\n            totalPage={totalPage}\n            onContextMenuClick={onContextMenuClick}\n            onContextMenu={onContextMenu}\n            onChangePage={setCurrentPage}\n          />\n        </table>\n      </div>\n    </>\n  );\n};\n\nexport default ThumbListPages;\n","import React, { useState, useEffect } from 'react';\nimport { Formik, Form, Field } from 'formik';\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\nimport callApi from 'helpers/callApi';\nimport './../../.././../assets/css/global-style.css';\nimport { educationalYearsOptions } from './../../global-data/options';\n\n// Year  and SHift\nimport * as Yup from 'yup';\nimport {\n  Row,\n  Card,\n  CardBody,\n  FormGroup,\n  Label,\n  Button,\n  CardTitle,\n  Input,\n} from 'reactstrap';\n\nimport IntlMessages from 'helpers/IntlMessages';\nimport { Colxx } from 'components/common/CustomBootstrap';\nimport {\n  FormikReactSelect,\n  FormikTagsInput,\n  FormikDatePicker,\n} from 'containers/form-validations/FormikFields';\n\nimport DismissedStudents from './dismissed-student-list/DismissedListMain';\nimport config from '../../../../config';\nconst servicePath = config.API_URL;\nconst studentApi = `${servicePath}/api`;\nconst dismissedStudentsAPI = `${servicePath}/api/student_institutes`;\n// http://localhost:8000/api/student_institutes/?institute=1&type=&language=&time=&student_id=&educational_year=1990\n\nconst StudyTimeOptions = [\n  { value: '1', label: <IntlMessages id=\"forms.StudyTimeOption_1\" /> },\n  { value: '2', label: <IntlMessages id=\"forms.StudyTimeOption_2\" /> },\n];\n\nconst ValidationSchema = Yup.object().shape({\n  institute: Yup.object()\n    .shape({\n      value: Yup.string().required(),\n    })\n    .nullable()\n    .required(<IntlMessages id=\"forms.InstituteErr\" />),\n\n  educationalYear: Yup.object()\n    .shape({\n      value: Yup.string().required(),\n    })\n    .nullable()\n    .required(<IntlMessages id=\"forms.educationYearErr\" />),\n});\n\nconst initialValues = {\n  institute: [],\n  educationalYear: [],\n};\nconst MarksRegistration = ({ match }) => {\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [institutes, setInstitutes] = useState([]);\n  const [selectedInstitute, setSelectedInstitute] = useState('');\n  const [selectedEducationalYear, setSelectedEducationalYear] = useState([]);\n  const [dismissedStudents, setDismissedStudents] = useState([]);\n  const [dismissedStudentsList, setDismissedStudentList] = useState(false);\n\n  const { markId } = useParams();\n\n  if (markId) {\n    useEffect(() => {\n      async function fetchStudent() {\n        const { data } = await axios.get(\n          `${studentMarkId}/?student_id=${markId}`\n        );\n        console.log(data, 'object of the data');\n\n        // const instGender = genderOptions.map((studentGender) => {\n        //   if (studentGender.value === data[0].gender) {\n        //     setInitialGender(studentGender);\n        //   }\n        // });\n      }\n\n      fetchStudent();\n      //setUpdateMode(true);\n    }, []);\n  }\n\n  // fetch institute lists\n  const fetchInstitutes = async () => {\n    const response = await callApi('institute/', '', null);\n    if (response.data && response.status === 200) {\n      const updatedData = await response.data.map((item) => ({\n        value: item.id,\n        label: item.name,\n      }));\n      setInstitutes(updatedData);\n    } else {\n      console.log('institute error');\n    }\n  };\n  useEffect(() => {\n    fetchInstitutes();\n  }, []);\n\n  const fetchDismissedStudents = async (values) => {\n    const response = await callApi(\n      `students/student_institutes/?institute=${values.institute.value}&status=dismissed&educational_year=${values.educationalYear.value}`,\n      '',\n      null\n    );\n    if (response.data && response.status === 200) {\n      setDismissedStudents(response.data);\n      console.log('dismissed students list', response.data);\n      setIsLoaded(true);\n      setDismissedStudentList(true);\n\n      // setItems(response.data);\n      // setSelectedItems([]);\n      // // setTotalItemCount(data);\n      // setIsLoaded(true);\n    } else {\n      console.log('dissmised students error');\n    }\n  };\n\n  const onSubmit = (values) => {\n    fetchDismissedStudents(values);\n    setDismissedStudentList(true);\n  };\n\n  return (\n    <>\n      {dismissedStudentsList ? (\n        <DismissedStudents item_list={dismissedStudents} />\n      ) : (\n        <Card>\n          <div className=\"mt-4 ml-5\">\n            <h2 className=\"mt-5 m-5 titleStyle\">\n              <IntlMessages id=\"student.dismissal-studentList\" />\n            </h2>\n          </div>\n          <CardBody>\n            {' '}\n            <Formik\n              initialValues={initialValues}\n              onSubmit={onSubmit}\n              validationSchema={ValidationSchema}\n            >\n              {({\n                errors,\n                touched,\n                values,\n                setFieldTouched,\n                setFieldValue,\n              }) => (\n                <Form className=\"av-tooltip tooltip-label-right  style \">\n                  <Row className=\"mr-5 ml-5 mt-5 mb-1 justify-content-center\">\n                    <Colxx xxs=\"6\">\n                      {/* set if condition, if institutes are loaded */}\n                      <FormGroup className=\"form-group has-float-label error-l-150 \">\n                        <Label>\n                          <IntlMessages id=\"forms.InstituteLabel\" />\n                          <span style={{ color: 'red' }}>*</span>\n                        </Label>\n                        <FormikReactSelect\n                          name=\"institute\"\n                          id=\"institute\"\n                          value={values.institute}\n                          options={institutes}\n                          onChange={setFieldValue}\n                          onBlur={setFieldTouched}\n                          onClick={setSelectedInstitute(values.institute)}\n                        />\n\n                        {errors.institute && touched.institute ? (\n                          <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                            {errors.institute}\n                          </div>\n                        ) : null}\n                      </FormGroup>\n\n                      <FormGroup className=\"form-group has-float-label mt-5  error-l-150\">\n                        <Label>\n                          <IntlMessages id=\"forms.educationYearLabel\" />\n                        </Label>\n                        <FormikReactSelect\n                          name=\"educationalYear\"\n                          id=\"educationalYear\"\n                          options={educationalYearsOptions}\n                          onChange={setFieldValue}\n                          onBlur={setFieldTouched}\n                          onClick={setSelectedEducationalYear(\n                            values.educationalYear\n                          )}\n                        />\n                        {errors.educationalYear && touched.educationalYear ? (\n                          <div className=\"invalid-feedback d-block bg-danger text-white \">\n                            {errors.educationalYear}\n                          </div>\n                        ) : null}\n                      </FormGroup>\n                    </Colxx>\n                  </Row>\n                  <Row className=\" justify-content-center\">\n                    <Colxx xxs=\"6\">\n                      <Button\n                        color=\"primary\"\n                        className=\"float-right buttonStyle\"\n                        size=\"lg\"\n                        type=\"submit\"\n                        style={{ margin: '7% 0% 8% 1%', paddingInline: '5%' }}\n                      >\n                        <span className=\"label\">\n                          <IntlMessages id=\"search.studentId\" />\n                        </span>\n                      </Button>\n                    </Colxx>\n                  </Row>\n                  <br />\n                  <br />\n                  <br />\n                  <br />\n                  <br />\n                  <br />\n                </Form>\n              )}\n            </Formik>\n          </CardBody>\n        </Card>\n      )}\n    </>\n  );\n};\n\nexport default MarksRegistration;\n","/* eslint-disable react/no-array-index-key */\nimport React, { useState } from 'react';\nimport {\n  Row,\n  Button,\n  ButtonDropdown,\n  UncontrolledDropdown,\n  DropdownMenu,\n  DropdownItem,\n  DropdownToggle,\n  CustomInput,\n  Collapse,\n} from 'reactstrap';\nimport { injectIntl } from 'react-intl';\n\nimport { Colxx, Separator } from 'components/common/CustomBootstrap';\nimport IntlMessages from 'helpers/IntlMessages';\nimport ReactAutoSugegst from 'containers/forms/ReactAutoSugegst';\n\nimport { DataListIcon, ThumbListIcon, ImageListIcon } from 'components/svg';\n// import Breadcrumb from '../navs/Breadcrumb';\n\nconst ListPageHeading = ({\n  intl,\n  displayMode,\n  changeDisplayMode,\n  handleChangeSelectAll,\n  changeOrderBy,\n  changePageSize,\n  selectedPageSize,\n  totalItemCount,\n  selectedOrderOption,\n  match,\n  startIndex,\n  endIndex,\n  selectedItemsLength,\n  itemsLength,\n  onSearchKey,\n  orderOptions,\n  pageSizes,\n  // toggleModal,\n  heading,\n  onIdSearchKey,\n  changeGenderBy,\n  selectedGenderOption,\n  genderOptions,\n  selectedProvinceOption,\n  provinceOptions,\n  changeProvinceBy,\n  onDistrictSearchKey,\n  onProvinceSearchKey,\n  onResetClick,\n  reset,\n  institutes,\n  onInstituteSelect,\n}) => {\n  const [dropdownSplitOpen, setDropdownSplitOpen] = useState(false);\n  const [displayOptionsIsOpen, setDisplayOptionsIsOpen] = useState(false);\n  const { messages } = intl;\n  const [selectedInstitute, setSelectedInstitute] = useState('');\n  onInstituteSelect(selectedInstitute);\n  return (\n    <Row>\n      <Colxx xxs=\"12\">\n        <div className=\"mb-2\">\n          <h1>\n            <IntlMessages id={heading} />\n          </h1>\n          {/* <div className=\"text-zero top-right-button-container\">\n\n            {'  '}\n            <ButtonDropdown\n              isOpen={dropdownSplitOpen}\n              toggle={() => setDropdownSplitOpen(!dropdownSplitOpen)}\n            >\n              <div className=\"btn btn-primary btn-lg pl-4 pr-0 check-button check-all\">\n                <CustomInput\n                  className=\"custom-checkbox mb-0 d-inline-block\"\n                  type=\"checkbox\"\n                  id=\"checkAll\"\n                  checked={selectedItemsLength >= itemsLength}\n                  onChange={() => handleChangeSelectAll(true)}\n                  label={\n                    <span\n                      className={`custom-control-label ${\n                        selectedItemsLength > 0 &&\n                        selectedItemsLength < itemsLength\n                          ? 'indeterminate'\n                          : ''\n                      }`}\n                    />\n                  }\n                />\n              </div>\n              <DropdownToggle\n                caret\n                color=\"primary\"\n                className=\"dropdown-toggle-split btn-lg\"\n              />\n              <DropdownMenu right>\n                <DropdownItem>\n                  <IntlMessages id=\"pages.delete\" />\n                </DropdownItem>\n                <DropdownItem>\n                  <IntlMessages id=\"pages.another-action\" />\n                </DropdownItem>\n              </DropdownMenu>\n            </ButtonDropdown>\n          </div> */}\n          {/* <Breadcrumb match={match} /> */}\n        </div>\n\n        <div className=\"mb-2\">\n          <Button\n            color=\"empty\"\n            className=\"pt-0 pl-0 d-inline-block d-md-none\"\n            onClick={() => setDisplayOptionsIsOpen(!displayOptionsIsOpen)}\n          >\n            <IntlMessages id=\"pages.display-options\" />{' '}\n            <i className=\"simple-icon-arrow-down align-middle\" />\n          </Button>\n          <Collapse\n            isOpen={displayOptionsIsOpen}\n            className=\"d-md-block\"\n            id=\"displayOptions\"\n          >\n            <span className=\"mr-3 d-inline-block float-md-left\">\n              <a\n                href=\"#/\"\n                className={`mr-2 view-icon ${\n                  displayMode === 'thumblist' ? 'active' : ''\n                }`}\n                onClick={() => changeDisplayMode('thumblist')}\n              >\n                <ThumbListIcon />\n              </a>\n              <a\n                href=\"#/\"\n                className={`mr-2 view-icon ${\n                  displayMode === 'imagelist' ? 'active' : ''\n                }`}\n                onClick={() => changeDisplayMode('imagelist')}\n              >\n                <ImageListIcon />\n              </a>\n            </span>\n            <br/>\n            <div className=\"d-block d-md-inline-block pt-1\">\n              <div className=\"row\">\n                {/* <UncontrolledDropdown className=\"mr-1 float-md-left btn-group mb-1 \">\n                  <DropdownToggle caret color=\"outline-dark\" size=\"xs\">\n                    <IntlMessages id=\"filter\" />\n                    {selectedGenderOption.label}\n                  </DropdownToggle>\n                  <DropdownMenu>\n                    {genderOptions.map((gender, index) => {\n                      return (\n                        <DropdownItem\n                          key={index}\n                          onClick={() => changeGenderBy(gender.column)}\n                        >\n                          {gender.label}\n                        </DropdownItem>\n                      );\n                    })}\n                  </DropdownMenu>\n                </UncontrolledDropdown> */}\n                {/* <UncontrolledDropdown className=\"mr-1 float-md-left btn-group mb-1 \">\n                  <DropdownToggle caret color=\"outline-dark\" size=\"xs\">\n                    <IntlMessages id=\"filter\" />\n                    {selectedProvinceOption.label}\n                  </DropdownToggle>\n                  <DropdownMenu\n                    style={{\n                      height: '300px',\n                      overflowY: 'scroll',\n                      overflowX: 'hidden',\n                    }}\n                  >\n                    {provinceOptions.map((order, index) => {\n                      return (\n                        <DropdownItem\n                          key={index}\n                          onClick={() => changeProvinceBy(order.column)}\n                        >\n                          {order.label}\n                        </DropdownItem>\n                      );\n                    })}\n                  </DropdownMenu>\n                </UncontrolledDropdown>\n                <div className=\"search-sm d-inline-block float-md-left mr-1 mb-1 align-top\">\n                  <input\n                    type=\"text\"\n                    name=\"district\"\n                    id=\"district\"\n                    placeholder={messages['search.district']}\n                    onKeyPress={(e) => onDistrictSearchKey(e)}\n                  />\n                </div>\n                <div className=\"search-sm d-inline-block float-md-left mr-1 mb-1 align-top\">\n                  <input\n                    type=\"text\"\n                    name=\"student_id\"\n                    id=\"student_id\"\n                    placeholder={messages['search.id']}\n                    onKeyPress={(e) => onIdSearchKey(e)}\n                  />\n                </div> */}\n              </div>\n              {/* <Button\n                color=\"outline-dark\"\n                size=\"xs\"\n                className=\"float-md-left mb-1\"\n                onClick={() => {\n                  changeGenderBy('all');\n                  changeProvinceBy('all');\n                  document.getElementById('district').value = '';\n                  document.getElementById('student_id').value = '';\n                  setSelectedInstitute('');\n                  onResetClick(!reset);\n                }}\n              >\n                <IntlMessages id=\"pages.reset\" />\n              </Button> */}\n            </div>\n\n            {/* <div className=\"float-md-right pt-1\">\n              <span className=\"text-muted text-small mr-1\">{`${startIndex}-${endIndex} of ${totalItemCount} `}</span>\n              <UncontrolledDropdown className=\"d-inline-block\">\n                <DropdownToggle caret color=\"outline-dark\" size=\"xs\">\n                  {selectedPageSize}\n                </DropdownToggle>\n                <DropdownMenu right>\n                  {pageSizes.map((size, index) => {\n                    return (\n                      <DropdownItem\n                        key={index}\n                        onClick={() => changePageSize(size)}\n                      >\n                        {size}\n                      </DropdownItem>\n                    );\n                  })}\n                </DropdownMenu>\n              </UncontrolledDropdown>\n            </div> */}\n          </Collapse>\n        </div>\n        <Separator className=\"mb-5\" />\n      </Colxx>\n    </Row>\n  );\n};\n\nexport default injectIntl(ListPageHeading);\n","import React from 'react';\nimport { Card, CustomInput, Badge } from 'reactstrap';\nimport { NavLink } from 'react-router-dom';\nimport classnames from 'classnames';\nimport { ContextMenuTrigger } from 'react-contextmenu';\nimport { Colxx } from 'components/common/CustomBootstrap';\n\nconst StudentListBody = ({\n  transferedStudents,\n  isSelect,\n  collect,\n  onCheckItem,\n  index,\n}) => {\n  return (\n    <Colxx xxs=\"12\" key={transferedStudents.id} className=\"mb-3\">\n      <ContextMenuTrigger\n        id=\"menu_id\"\n        data={transferedStudents.id}\n        collect={collect}\n      >\n        <Card\n          onClick={(event) => onCheckItem(event, transferedStudents.id)}\n          className={classnames('d-flex flex-row', {\n            active: isSelect,\n          })}\n        >\n          <div className=\"pl-2 d-flex flex-grow-1 min-width-zero\">\n            <div\n              className=\"py-3 card-body align-self-center d-flex flex-column flex-lg-row  min-width-zero align-items-lg-center\"\n              style={{ width: '100%' }}\n            >\n              {/* send this to localhost/transferedStudentss/:id */}\n              <NavLink\n                span\n                style={{ width: '10%', fontSize: '20px' }}\n                to={`transferedStudents/${transferedStudents.id}`}\n              >\n                <p\n                  className=\"list-item-heading mb-1 truncate \"\n                  style={{ marginRight: '-8px', fontSize: '20px' }}\n                >\n                  {index + 1}\n                </p>\n              </NavLink>\n              <p\n                className=\"mb-1  w-9 w-sm-100\"\n                style={{ width: '10%', fontSize: '20px' }}\n              >\n                {transferedStudents.student.student_id}\n              </p>\n              <p\n                className=\"mb-1 text-small w-9 w-sm-100\"\n                style={{ width: '15.4%', fontSize: '20px' }}\n              >\n                {transferedStudents.student.name}\n              </p>\n\n              <p\n                className=\"mb-1  \"\n                style={{ width: '18.5%', fontSize: '20px' }}\n              >\n                {/* {transferedStudents.student_id.father_name} */}\n                Integrate\n              </p>\n\n              <p style={{ width: '18%', fontSize: '20px' }} className=\"mb-1\">\n                {transferedStudents.institute.name}\n              </p>\n              <p\n                style={{ marginLeft: '0px', fontSize: '20px' }}\n                className=\"mb-1 text-small w-10 w-sm-100\"\n              >\n                {transferedStudents.educational_year}\n              </p>\n            </div>\n          </div>\n        </Card>\n      </ContextMenuTrigger>\n    </Colxx>\n  );\n};\n\n/* React.memo detail : https://reactjs.org/docs/react-api.html#reactpurecomponent  */\nexport default React.memo(StudentListBody);\n","import React, { useState } from 'react';\nimport {\n  Row,\n  Modal,\n  Button,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n} from 'reactstrap';\n\n//import Pagination from '../../../../containers/pages/Pagination';\nimport Pagination from '../../../../../containers/pages/Pagination';\nimport ContextMenuContainer from '../../../../../containers/pages/ContextMenuContainer';\nimport DataListView from '../../../../../containers/pages/DataListView';\nimport ImageListView from '../../../../../containers/pages/ImageListView';\nimport StudentsListBody from './TransferedListBody';\n\nfunction collect(props) {\n  return { data: props.data };\n}\n\nconst ListPageListing = ({\n  items,\n  displayMode,\n  selectedItems,\n  onCheckItem,\n  currentPage,\n  totalPage,\n  onContextMenuClick,\n  onContextMenu,\n  onChangePage,\n}) => {\n  const [modalBasic, setModalBasic] = useState(true);\n\n  return (\n    <>\n      <Row>\n        {items.length === 0 ? (\n          <div className=\"no-result\">\n            <h5 className=\"m-3\">هیچ داده ای برای نمایش وجود ندارد</h5>\n          </div>\n        ) : null}\n        {items.map((transferedStudents, index) => {\n          if (displayMode === 'imagelist') {\n            return (\n              <ImageListView\n                key={transferedStudents.id}\n                transferedStudents={transferedStudents}\n                isSelect={selectedItems.includes(transferedStudents.id)}\n                collect={collect}\n                onCheckItem={onCheckItem}\n              />\n            );\n          }\n          if (displayMode === 'thumblist') {\n            return (\n              <StudentsListBody\n                key={transferedStudents.id}\n                transferedStudents={transferedStudents}\n                index={index}\n                isSelect={selectedItems.includes(transferedStudents.id)}\n                collect={collect}\n                onCheckItem={onCheckItem}\n              />\n            );\n          }\n          return (\n            <DataListView\n              key={transferedStudents.id}\n              transferedStudents={transferedStudents}\n              isSelect={selectedItems.includes(transferedStudents.id)}\n              onCheckItem={onCheckItem}\n              collect={collect}\n            />\n          );\n        })}\n        <Pagination\n          currentPage={currentPage}\n          totalPage={totalPage}\n          onChangePage={(i) => onChangePage(i)}\n        />\n        <ContextMenuContainer\n          onContextMenuClick={onContextMenuClick}\n          onContextMenu={onContextMenu}\n        />\n      </Row>\n    </>\n  );\n};\n\nexport default React.memo(ListPageListing);\n","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport IntlMessages from 'helpers/IntlMessages';\n\n// import { servicePath } from 'constants/defaultValues';\n\nimport ListPageHeading from './TransferedListHeading';\nimport { provinceOptions } from '../../../global-data/options';\nimport ListPageListing from './TransferedListCatagory';\nimport useMousetrap from 'hooks/use-mousetrap';\nimport DisplayMessage from 'components/messages/DisplayMessage';\nimport config from '../../../../../config';\nconst getIndex = (value, arr, prop) => {\n  for (let i = 0; i < arr.length; i += 1) {\n    if (arr[i][prop] === value) {\n      return i;\n    }\n  }\n  return -1;\n};\n\nconst servicePath = config.API_URL;\nconst apiUrl = `${servicePath}/cakes/paging`;\nconst studentApiUrl = `${servicePath}/api/`;\nconst studentInstituteApiUrl = `${servicePath}/api/student_institutes/`;\nconst instituteApiUrl = `${servicePath}/institute/`;\nconst TransferedStudentsAPI = `${servicePath}/api/student_institutes/?is_transfer=2`;\n//http://localhost:8000/api/student_institutes/?institute=&type=&language=&time=&student_id=&educational_year=&is_transfer=2\n\nconst orderOptions = [\n  { column: 'title', label: 'Product Name' },\n  { column: 'category', label: 'Category' },\n  { column: 'status', label: 'Status' },\n];\nconst pageSizes = [10, 20, 40, 80];\n\nconst categories = [\n  { label: 'Cakes', value: 'Cakes', key: 0 },\n  { label: 'Cupcakes', value: 'Cupcakes', key: 1 },\n  { label: 'Desserts', value: 'Desserts', key: 2 },\n];\nconst genderOptions = [\n  {\n    column: 'all',\n    label: 'تول / همه',\n  },\n  { column: '1', label: 'ذکور' },\n  { column: '2', label: 'اناث' },\n];\n\nconst ThumbListPages = ({ match, item_list }) => {\n  console.log('item_list', item_list);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [displayMode, setDisplayMode] = useState('thumblist');\n  const [currentPage, setCurrentPage] = useState(1);\n  const [selectedPageSize, setSelectedPageSize] = useState(20);\n  const [selectedOrderOption, setSelectedOrderOption] = useState({\n    column: 'title',\n    label: 'Product Name',\n  });\n\n  const [modalOpen, setModalOpen] = useState(false);\n  const [totalItemCount, setTotalItemCount] = useState(0);\n  const [totalPage, setTotalPage] = useState(1);\n  const [search, setSearch] = useState('');\n  const [selectedItems, setSelectedItems] = useState([]);\n  const [items, setItems] = useState([]);\n  const [lastChecked, setLastChecked] = useState(null);\n  const [rest, setRest] = useState(0);\n  const [institutes, setInstitutes] = useState();\n  const [institute, setInstitute] = useState('');\n\n  const [studentId, setStudentId] = useState('');\n  const [province, setProvince] = useState('');\n  const [district, setDistrict] = useState('');\n  const [transferedStudents, setsetTransferedStudentsTra] = useState([]);\n  const [selectedGenderOption, setSelectedGenderOption] = useState({\n    column: 'all',\n    label: 'جنیست',\n  });\n  const [selectedProvinceOption, setSelectedProvinceOption] = useState({\n    column: 'all',\n    label: 'ولایت',\n  });\n\n  useEffect(() => {\n    setIsLoaded(true);\n  }, []);\n  const onCheckItem = (event, id) => {\n    if (\n      event.target.tagName === 'A' ||\n      (event.target.parentElement && event.target.parentElement.tagName === 'A')\n    ) {\n      return true;\n    }\n    if (lastChecked === null) {\n      setLastChecked(id);\n    }\n\n    let selectedList = [...selectedItems];\n    if (selectedList.includes(id)) {\n      selectedList = selectedList.filter((x) => x !== id);\n    } else {\n      selectedList.push(id);\n    }\n    setSelectedItems(selectedList);\n\n    if (event.shiftKey) {\n      let newItems = [...items];\n      const start = getIndex(id, newItems, 'id');\n      const end = getIndex(lastChecked, newItems, 'id');\n      newItems = newItems.slice(Math.min(start, end), Math.max(start, end) + 1);\n      selectedItems.push(\n        ...newItems.map((item) => {\n          return item.id;\n        })\n      );\n      selectedList = Array.from(new Set(selectedItems));\n      setSelectedItems(selectedList);\n    }\n    document.activeElement.blur();\n    return false;\n  };\n\n  const handleChangeSelectAll = (isToggle) => {\n    if (selectedItems.length >= items.length) {\n      if (isToggle) {\n        setSelectedItems([]);\n      }\n    } else {\n      setSelectedItems(items.map((x) => x.id));\n    }\n    document.activeElement.blur();\n    return false;\n  };\n\n  const onContextMenuClick = (e, data) => {\n    // params : (e,data,target)\n    console.log('onContextMenuClick - selected items', selectedItems);\n    console.log('onContextMenuClick - action : ', data.action);\n  };\n\n  const onContextMenu = (e, data) => {\n    const clickedProductId = data.data;\n    if (!selectedItems.includes(clickedProductId)) {\n      setSelectedItems([clickedProductId]);\n    }\n\n    return true;\n  };\n\n  useMousetrap(['ctrl+a', 'command+a'], () => {\n    handleChangeSelectAll(false);\n  });\n\n  useMousetrap(['ctrl+d', 'command+d'], () => {\n    setSelectedItems([]);\n    return false;\n  });\n\n  const startIndex = (currentPage - 1) * selectedPageSize;\n  const endIndex = currentPage * selectedPageSize;\n  console.log('item data', items);\n  return !isLoaded ? (\n    <div className=\"loading\" />\n  ) : (\n    <>\n      <div className=\"disable-text-selection\">\n        <ListPageHeading\n          heading=\"د تبدیل شوی شاګردانو لست/لست شاگردان تبدیل شده\"\n          // Using display mode we can change the display of the list.\n          displayMode={displayMode}\n          changeDisplayMode={setDisplayMode}\n          handleChangeSelectAll={handleChangeSelectAll}\n          // following code is used for order the list based on different element of the prod\n          changeOrderBy={(column) => {\n            setSelectedOrderOption(\n              orderOptions.find((x) => x.column === column)\n            );\n          }}\n          changePageSize={setSelectedPageSize}\n          selectedPageSize={selectedPageSize}\n          totalItemCount={totalItemCount}\n          selectedOrderOption={selectedOrderOption}\n          match={match}\n          startIndex={startIndex}\n          endIndex={endIndex}\n          selectedItemsLength={selectedItems ? selectedItems.length : 0}\n          itemsLength={items ? items.length : 0}\n          onSearchKey={(e) => {\n            if (e.key === 'Enter') {\n              setSearch(e.target.value.toLowerCase());\n            }\n          }}\n          orderOptions={orderOptions}\n          pageSizes={pageSizes}\n          toggleModal={() => setModalOpen(!modalOpen)}\n          changeGenderBy={(column) => {\n            setSelectedGenderOption(\n              genderOptions.find((x) => x.column === column)\n            );\n          }}\n          changeProvinceBy={(column) => {\n            setSelectedProvinceOption(\n              provinceOptions.find((x) => x.column === column)\n            );\n          }}\n          selectedGenderOption={selectedGenderOption}\n          selectedProvinceOption={selectedProvinceOption}\n          genderOptions={genderOptions}\n          provinceOptions={provinceOptions}\n          onIdSearchKey={(e) => {\n            if (e.key === 'Enter') {\n              setStudentId(e.target.value.toLowerCase());\n            }\n          }}\n          onProvinceSearchKey={(e) => {\n            if (e.key === 'Enter') {\n              setProvince(e.target.value.toLowerCase());\n            }\n          }}\n          onDistrictSearchKey={(e) => {\n            if (e.key === 'Enter') {\n              setDistrict(e.target.value.toLowerCase());\n            }\n          }}\n          onResetClick={setRest}\n          reset={rest}\n          institutes={institutes}\n          onInstituteSelect={setInstitute}\n        />\n\n        <table className=\"table\">\n          <thead\n            className=\"pl-2 d-flex flex-grow-1  table-dark mb-2\"\n            style={{ maxHeight: '55px' }}\n          >\n            <tr className=\"card-body align-self-center d-flex flex-column flex-lg-row align-items-lg-center\">\n              <th\n                style={{\n                  width: '10.4%',\n                  paddingInline: '0%',\n                  textAlign: 'right',\n                  borderStyle: 'hidden',\n                  fontSize: '20px',\n                }}\n              >\n                <IntlMessages id=\"marks.No\" />\n              </th>\n              <th\n                style={{\n                  width: '10.1%',\n                  paddingInline: '0%',\n                  textAlign: 'right',\n                  borderStyle: 'hidden',\n                  fontSize: '20px',\n                }}\n              >\n                <IntlMessages id=\"marks.ID\" />\n              </th>\n              <th\n                style={{\n                  width: '15%',\n                  paddingInline: '0%',\n                  textAlign: 'right',\n                  borderStyle: 'hidden',\n                  fontSize: '20px',\n                }}\n              >\n                <IntlMessages id=\"forms.StdName\" />\n              </th>\n\n              <th\n                style={{\n                  width: '18%',\n                  padding: '0%',\n                  textAlign: 'right',\n                  borderStyle: 'hidden',\n                  fontSize: '20px',\n                }}\n              >\n                <IntlMessages id=\"student.previousInstitute\" />\n              </th>\n              <th\n                style={{\n                  width: '18%',\n                  padding: '0%',\n                  textAlign: 'right',\n                  borderStyle: 'hidden',\n                  fontSize: '20px',\n                }}\n              >\n                {' '}\n                <IntlMessages id=\"student.newInstitute\" />\n              </th>\n              <th\n                style={{\n                  width: '18%',\n                  padding: '0%',\n                  textAlign: 'right',\n                  borderStyle: 'hidden',\n                  fontSize: '20px',\n                }}\n              >\n                {' '}\n                <IntlMessages id=\"dorm.yearList\" />\n              </th>\n            </tr>\n          </thead>\n          {item_list.length > 0 ? (\n            <ListPageListing\n              items={item_list}\n              displayMode={displayMode}\n              selectedItems={selectedItems}\n              onCheckItem={onCheckItem}\n              currentPage={currentPage}\n              totalPage={totalPage}\n              onContextMenuClick={onContextMenuClick}\n              onContextMenu={onContextMenu}\n              onChangePage={setCurrentPage}\n            />\n          ) : (\n            <DisplayMessage type=\"error\" message=\"معلومات شتون نلری\" />\n          )}\n        </table>\n      </div>\n    </>\n  );\n};\n\nexport default ThumbListPages;\n","import React, { useState, useEffect, useContext } from 'react';\nimport { Formik, Form, Field } from 'formik';\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\nimport callApi from 'helpers/callApi';\nimport './../../.././../assets/css/global-style.css';\nimport { educationalYearsOptions } from './../../global-data/options';\n\n// Year  and SHift\nimport * as Yup from 'yup';\nimport {\n  Row,\n  Card,\n  CardBody,\n  FormGroup,\n  Label,\n  Button,\n  CardTitle,\n  Input,\n} from 'reactstrap';\nimport Select from 'react-select';\n\nimport IntlMessages from 'helpers/IntlMessages';\nimport { Colxx } from 'components/common/CustomBootstrap';\nimport {\n  FormikReactSelect,\n  FormikTagsInput,\n  FormikDatePicker,\n} from 'containers/form-validations/FormikFields';\nimport userEvent from '@testing-library/user-event';\nimport TransferedStudentList from './transfered-student-list/TransferedListMain';\nimport config from '../../../../config';\nimport { AuthContext } from 'context/AuthContext';\nconst servicePath = config.API_URL;\nconst studentApi = `${servicePath}/api`;\nconst transferedStudentsAPI = `${servicePath}/api/student_institutes`;\n// http://localhost:8000/api/student_institutes/?institute=&type=&language=&time=&student_id=&educational_year=&is_transfer=2\n\nconst StudyTimeOptions = [\n  { value: '1', label: <IntlMessages id=\"forms.StudyTimeOption_1\" /> },\n  { value: '2', label: <IntlMessages id=\"forms.StudyTimeOption_2\" /> },\n];\n\nconst ValidationSchema = Yup.object().shape({\n  institute: Yup.object()\n    .shape({\n      value: Yup.string().required(),\n    })\n    .nullable()\n    .required(<IntlMessages id=\"forms.InstituteErr\" />),\n\n  educationalYear: Yup.object()\n    .shape({\n      value: Yup.string().required(),\n    })\n    .nullable()\n    .required(<IntlMessages id=\"forms.educationYearErr\" />),\n});\n\nconst initialValues = {\n  institute: [],\n  educationalYear: [],\n};\nconst MarksRegistration = ({ match }) => {\n  const { institutes } = useContext(AuthContext);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [selectedInstitute, setSelectedInstitute] = useState('');\n  const [selectedEducationalYear, setSelectedEducationalYear] = useState([]);\n  const [transferedStudents, setTransferedStudents] = useState([]);\n  const [transferedStudentList, setTransferedStudentList] = useState(false);\n\n  const { markId } = useParams();\n\n  if (markId) {\n    useEffect(() => {\n      async function fetchStudent() {\n        const { data } = await axios.get(\n          `${studentMarkId}/?student_id=${markId}`\n        );\n        console.log(data, 'object of the data');\n\n        // const instGender = genderOptions.map((studentGender) => {\n        //   if (studentGender.value === data[0].gender) {\n        //     setInitialGender(studentGender);\n        //   }\n        // });\n      }\n      fetchStudent();\n      //setUpdateMode(true);\n    }, []);\n  }\n\n  const fetchTransferedStudents = async (values) => {\n    const response = await callApi(\n      `students/student_institutes/?institute=${values.institute.value}&educational_year=${values.educationalYear.value}&is_transfer=true`,\n      '',\n      null\n    );\n    console.log('response of transfer students', response);\n    setTransferedStudents(response.data);\n    //console.log('transfered students list', data);\n    setIsLoaded(true);\n    setTransferedStudentList(true);\n  };\n\n  const onSubmit = (values) => {\n    setTransferedStudentList(true);\n    fetchTransferedStudents(values);\n  };\n\n  return (\n    <>\n      {transferedStudentList ? (\n        <TransferedStudentList item_list={transferedStudents} />\n      ) : (\n        <Card>\n          <div className=\"mt-4 ml-5\">\n            <h2 className=\"mt-5 m-5 titleStyle\">\n              <IntlMessages id=\"student.transferred-studentList\" />\n            </h2>\n          </div>\n          <CardBody>\n            {' '}\n            <Formik\n              initialValues={initialValues}\n              onSubmit={onSubmit}\n              validationSchema={ValidationSchema}\n            >\n              {({\n                errors,\n                touched,\n                values,\n                setFieldTouched,\n                setFieldValue,\n              }) => (\n                <Form className=\"av-tooltip tooltip-label-right style \">\n                  <Row className=\"mr-5 ml-5 mt-5 mb-1 justify-content-center\">\n                    <Colxx xxs=\"6\">\n                      {/* set if condition, if institutes are loaded */}\n                      <FormGroup className=\"form-group has-float-label error-l-150 \">\n                        <Label>\n                          <IntlMessages id=\"forms.InstituteLabel\" />\n                          <span style={{ color: 'red' }}>*</span>\n                        </Label>\n                        <FormikReactSelect\n                          name=\"institute\"\n                          id=\"institute\"\n                          value={values.institute}\n                          options={institutes}\n                          onChange={setFieldValue}\n                          onBlur={setFieldTouched}\n                          onClick={setSelectedInstitute(values.institute)}\n                        />\n\n                        {errors.institute && touched.institute ? (\n                          <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                            {errors.institute}\n                          </div>\n                        ) : null}\n                      </FormGroup>\n\n                      <FormGroup className=\"form-group has-float-label mt-5  error-l-150\">\n                        <Label>\n                          <IntlMessages id=\"forms.educationYearLabel\" />\n                        </Label>\n                        <FormikReactSelect\n                          name=\"educationalYear\"\n                          id=\"educationalYear\"\n                          options={educationalYearsOptions}\n                          onChange={setFieldValue}\n                          onBlur={setFieldTouched}\n                          onClick={setSelectedEducationalYear(\n                            values.educationalYear\n                          )}\n                        />\n                        {errors.educationalYear && touched.educationalYear ? (\n                          <div className=\"invalid-feedback d-block bg-danger text-white \">\n                            {errors.educationalYear}\n                          </div>\n                        ) : null}\n                      </FormGroup>\n                    </Colxx>\n                  </Row>\n                  <Row className=\" justify-content-center\">\n                    <Colxx xxs=\"6\">\n                      <Button\n                        color=\"primary\"\n                        className=\"float-right buttonStyle\"\n                        size=\"lg\"\n                        type=\"submit\"\n                        style={{ margin: '7% 0% 8% 1%', paddingInline: '5%' }}\n                      >\n                        <span className=\"label\">\n                          <IntlMessages id=\"search.studentId\" />\n                        </span>\n                      </Button>\n                    </Colxx>\n                  </Row>\n                  <br />\n                  <br />\n                  <br />\n                  <br />\n                  <br />\n                  <br />\n                </Form>\n              )}\n            </Formik>\n          </CardBody>\n        </Card>\n      )}\n    </>\n  );\n};\n\nexport default MarksRegistration;\n","/* eslint-disable react/no-array-index-key */\nimport React, { useState } from 'react';\nimport {\n  Row,\n  Button,\n  ButtonDropdown,\n  UncontrolledDropdown,\n  DropdownMenu,\n  DropdownItem,\n  DropdownToggle,\n  CustomInput,\n  Collapse,\n} from 'reactstrap';\nimport { injectIntl } from 'react-intl';\n\nimport { Colxx, Separator } from 'components/common/CustomBootstrap';\nimport IntlMessages from 'helpers/IntlMessages';\nimport ReactAutoSugegst from 'containers/forms/ReactAutoSugegst';\n\nimport { DataListIcon, ThumbListIcon, ImageListIcon } from 'components/svg';\n// import Breadcrumb from '../navs/Breadcrumb';\n\nconst ListPageHeading = ({\n  intl,\n  displayMode,\n  changeDisplayMode,\n  handleChangeSelectAll,\n  changeOrderBy,\n  changePageSize,\n  selectedPageSize,\n  totalItemCount,\n  selectedOrderOption,\n  match,\n  startIndex,\n  endIndex,\n  selectedItemsLength,\n  itemsLength,\n  onSearchKey,\n  orderOptions,\n  pageSizes,\n  // toggleModal,\n  heading,\n  onIdSearchKey,\n  changeGenderBy,\n  selectedGenderOption,\n  genderOptions,\n  provincesOptionsForList,\n  changeProvinceBy,\n  onDistrictSearchKey,\n  onProvinceSearchKey,\n  onResetClick,\n  reset,\n  institutes,\n  onInstituteSelect,\n  onEducationYearSelect,\n  selectedProvinceOption,\n}) => {\n  const [dropdownSplitOpen, setDropdownSplitOpen] = useState(false);\n  const [displayOptionsIsOpen, setDisplayOptionsIsOpen] = useState(false);\n  const { messages } = intl;\n  const [selectedInstitute, setSelectedInstitute] = useState('');\n  onInstituteSelect(selectedInstitute);\n  return (\n    <Row>\n      <Colxx xxs=\"12\">\n        <div className=\"mb-2\">\n          <h1 style={{ fontSize: 35 }}>\n            <IntlMessages id={heading} />\n          </h1>\n        </div>\n\n        <div className=\"mb-2\">\n          <Button\n            color=\"empty\"\n            className=\"pt-0 pl-0 d-inline-block d-md-none\"\n            onClick={() => setDisplayOptionsIsOpen(!displayOptionsIsOpen)}\n          >\n            <IntlMessages id=\"pages.display-options\" />{' '}\n            <i className=\"simple-icon-arrow-down align-middle\" />\n          </Button>\n          <Collapse\n            isOpen={displayOptionsIsOpen}\n            className=\"d-md-block\"\n            id=\"displayOptions\"\n          >\n            <div className=\"d-block d-md-inline-block pt-1\">\n              <div className=\"row\">\n                <UncontrolledDropdown className=\"mr-1 float-md-left btn-group mb-1 \">\n                  <DropdownToggle\n                    caret\n                    color=\"outline-dark\"\n                    size=\"xs\"\n                    style={{ fontSize: '18px' }}\n                  >\n                    <IntlMessages id=\"filter\" />\n                    {selectedGenderOption.label}\n                  </DropdownToggle>\n                  <DropdownMenu>\n                    {genderOptions.map((gender, index) => {\n                      return (\n                        <DropdownItem\n                          key={index}\n                          onClick={() => changeGenderBy(gender.column)}\n                          style={{ fontSize: '18px' }}\n                        >\n                          {gender.label}\n                        </DropdownItem>\n                      );\n                    })}\n                  </DropdownMenu>\n                </UncontrolledDropdown>\n                <UncontrolledDropdown className=\"mr-1 float-md-left btn-group mb-1 \">\n                  <DropdownToggle\n                    caret\n                    color=\"outline-dark\"\n                    size=\"xs\"\n                    style={{ fontSize: '18px' }}\n                  >\n                    <IntlMessages id=\"filter\" />\n                    {selectedProvinceOption?.label || 'ولایت'}\n                  </DropdownToggle>\n                  <DropdownMenu\n                    style={{\n                      height: '200px',\n                      overflowY: 'scroll',\n                      overflowX: 'hidden',\n                    }}\n                  >\n                    {provincesOptionsForList.map((order, index) => {\n                      return (\n                        <DropdownItem\n                          key={index}\n                          onClick={() => changeProvinceBy(order.column)}\n                          style={{ fontSize: '18px' }}\n                        >\n                          {order.label}\n                        </DropdownItem>\n                      );\n                    })}\n                  </DropdownMenu>\n                </UncontrolledDropdown>\n                <div className=\"search-sm d-inline-block float-md-left mr-1 mb-1 align-top\">\n                  <input\n                    type=\"text\"\n                    name=\"district\"\n                    style={{ fontSize: '18px' }}\n                    id=\"district\"\n                    placeholder={messages['search.district']}\n                    onKeyPress={(e) => onDistrictSearchKey(e)}\n                  />\n                </div>\n                <div className=\"search-sm d-inline-block float-md-left mr-1 mb-1 align-top\">\n                  <input\n                    type=\"text\"\n                    name=\"student_id\"\n                    style={{ fontSize: '18px' }}\n                    id=\"student_id\"\n                    placeholder={messages['search.id']}\n                    onKeyPress={(e) => onIdSearchKey(e)}\n                  />\n                </div>\n                <div className=\"search-sm d-inline-block float-md-left mr-1 mb-1 align-top\">\n                  <ReactAutoSugegst\n                    data={institutes}\n                    select={(opt) => {\n                      setSelectedInstitute(opt);\n                    }}\n                    placeholder={messages['search.institute.name']}\n                  />\n                </div>\n              </div>\n              <Button\n                color=\"outline-dark\"\n                style={{ fontSize: '18px' }}\n                size=\"xs\"\n                className=\"float-md-left mb-1\"\n                onClick={() => {\n                  changeGenderBy('all');\n                  changeProvinceBy('all');\n                  document.getElementById('district').value = '';\n                  document.getElementById('student_id').value = '';\n                  document.getElementById('educationYear').value = '';\n                  onEducationYearSelect('');\n                  setSelectedInstitute('');\n                  onResetClick(!reset);\n                }}\n              >\n                <IntlMessages id=\"pages.reset\" />\n              </Button>\n            </div>\n          </Collapse>\n        </div>\n        <Separator className=\"mb-5\" />\n      </Colxx>\n    </Row>\n  );\n};\n\nexport default injectIntl(ListPageHeading);\n","import React, { useState } from 'react';\nimport {\n  Row,\n  Modal,\n  Button,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n} from 'reactstrap';\n\nimport Pagination from '../../../../../containers/pages/Pagination';\nimport ContextMenuContainer from '../../../../../containers/pages/ContextMenuContainer';\nimport DataListView from '../../../../../containers/pages/DataListView';\nimport ImageListView from '../../../../../containers/pages/ImageListView';\nimport KankorStudentListBody from './KankorStudentListBody';\n\nfunction collect(props) {\n  return { data: props.data };\n}\n\nconst ListPageListing = ({\n  items,\n  displayMode,\n  selectedItems,\n  onCheckItem,\n  currentPage,\n  totalPage,\n  onContextMenuClick,\n  onContextMenu,\n  onChangePage,\n  roughData\n}) => {\n  const [modalBasic, setModalBasic] = useState(true);\n  \n\n  return (\n    <>\n      <Row>\n        {items.length === 0 ? (\n          <div className=\"no-result\">\n            <h5>هیچ داده ای برای نمایش وجود ندارد</h5>\n          </div>\n        ) : null}\n        {items.map((student) => {\n          if (displayMode === 'imagelist') {\n            return (\n              <ImageListView\n                key={student.id}\n                student={student}\n                isSelect={selectedItems.includes(student.id)}\n                collect={collect}\n                onCheckItem={onCheckItem}\n              />\n            );\n          }\n          if (displayMode === 'thumblist') {\n            return (\n              <KankorStudentListBody\n                key={student.id}\n                student={student}\n                isSelect={selectedItems.includes(student.id)}\n                collect={collect}\n                onCheckItem={onCheckItem}\n              />\n            );\n          }\n          return (\n            <DataListView\n              key={student.id}\n              student={student}\n              isSelect={selectedItems.includes(student.id)}\n              onCheckItem={onCheckItem}\n              collect={collect}\n            />\n          );\n        })}\n        <Pagination\n          currentPage={currentPage}\n          totalPage={totalPage}\n          onChangePage={(i) => onChangePage(i)}\n        />\n        <ContextMenuContainer\n          onContextMenuClick={onContextMenuClick}\n          onContextMenu={onContextMenu}\n        />\n      </Row>\n    </>\n  );\n};\n\nexport default React.memo(ListPageListing);\n","import React, { useState, useEffect, useContext } from 'react';\nimport axios from 'axios';\nimport IntlMessages from 'helpers/IntlMessages';\nimport {\n  educationalYearsOptions,\n  provincesOptionsForList,\n} from '../../../global-data/options';\nimport callApi from 'helpers/callApi';\nimport { Select, Spin, Table as TB } from 'antd';\n// import { servicePath } from 'constants/defaultValues';\nimport ListPageHeading from 'views/app/students/bio/kankor-students-list/KankorStudentListHeading';\nimport ListPageListing from 'views/app/students/bio/kankor-students-list/KankorStudentListCatagory';\nimport useMousetrap from 'hooks/use-mousetrap';\nimport { department } from 'lang/locales/fa_IR';\nimport { FormGroup, Label, NavLink } from 'reactstrap';\nimport { BsPencilSquare } from 'react-icons/bs';\nimport { Field, Formik } from 'formik';\nimport { FormikReactSelect } from 'containers/form-validations/FormikFields';\nimport { AuthContext } from 'context/AuthContext';\nconst getIndex = (value, arr, prop) => {\n  for (let i = 0; i < arr.length; i += 1) {\n    if (arr[i][prop] === value) {\n      return i;\n    }\n  }\n  return -1;\n};\n\nconst servicePath = 'http://localhost:8000';\nconst kankorStudentApiUrl = `${servicePath}/api/kankorResults/`;\nconst instituteApiUrl = `${servicePath}/institute/`;\n\nconst orderOptions = [\n  { column: 'title', label: 'Product Name' },\n  { column: 'category', label: 'Category' },\n  { column: 'status', label: 'Status' },\n];\nconst pageSizes = [10, 20, 40, 80];\n\nconst categories = [\n  { label: 'Cakes', value: 'Cakes', key: 0 },\n  { label: 'Cupcakes', value: 'Cupcakes', key: 1 },\n  { label: 'Desserts', value: 'Desserts', key: 2 },\n];\nconst genderOptions = [\n  {\n    column: 'all',\n    label: 'تول / همه',\n  },\n  { column: '1', label: 'ذکور' },\n  { column: '2', label: 'اناث' },\n];\n\nconst ThumbListPages = ({ match }) => {\n  const { provinces, institutes, departments } = useContext(AuthContext);\n  const [isLoaded, setIsLoaded] = useState(true);\n  const [displayMode, setDisplayMode] = useState('thumblist');\n  const [currentPage, setCurrentPage] = useState(1);\n  const [selectedPageSize, setSelectedPageSize] = useState(20);\n  const [selectedOrderOption, setSelectedOrderOption] = useState({\n    column: 'title',\n    label: 'Product Name',\n  });\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [modalOpen, setModalOpen] = useState(false);\n  const [totalItemCount, setTotalItemCount] = useState(0);\n  const [totalPage, setTotalPage] = useState(1);\n  const [search, setSearch] = useState('');\n  const [selectedItems, setSelectedItems] = useState([]);\n  const [items, setItems] = useState([]);\n  const [lastChecked, setLastChecked] = useState(null);\n  const [rest, setRest] = useState(0);\n  // const [institutes, setInstitutes] = useState();\n  const [institute, setInstitute] = useState('');\n\n  const [studentId, setStudentId] = useState('');\n  const [province, setProvince] = useState('');\n  const [district, setDistrict] = useState('');\n  const [educationYear, setEducationYear] = useState('');\n  const [selectedGenderOption, setSelectedGenderOption] = useState({\n    column: 'all',\n    label: 'جنیست',\n  });\n  const [selectedProvinceOption, setSelectedProvinceOption] = useState({\n    column: 'all',\n    label: 'ولایت',\n  });\n  const [tableParams, setTableParams] = useState({\n    pagination: {\n      current: 1,\n      pageSize: 5,\n    },\n  });\n  const [isFilter, setIsFilter] = useState(false);\n  useEffect(() => {\n    setCurrentPage(1);\n  }, [\n    selectedPageSize,\n    selectedOrderOption,\n    selectedGenderOption,\n    selectedProvinceOption,\n  ]);\n  // async function fetchData() {\n  //   const response = await callApi(`students/kankorResults/`, 'get', null);\n  //   setItems(response.data);\n  //   console.log('fetching data from the server', response);\n  //   if (response.data && response.status === 200) {\n  //     setItems(response.data);\n  //     setSelectedItems([]);\n  //     // setTotalItemCount(data);\n  //     setIsLoaded(true);\n  //   } else {\n  //     console.log('Kankor students error');\n  //   }\n  // }\n  async function fetchData(params = {}) {\n    setIsLoading(true);\n    let endpoint = 'students/kankorResults/';\n    if (institute) {\n      params.institute = institute.value;\n      endpoint = 'students/student_institutes/';\n    }\n    console.log('institute is: ', institute, 'isFilter', isFilter);\n    const params1 = {\n      ...params,\n      page: !isFilter ? tableParams.pagination.current : params.page,\n      page_size: tableParams.pagination.pageSize || null,\n    };\n    try {\n      const response = await callApi(endpoint, null, null, params1);\n      setIsLoading(false);\n      if (response.data && response.status === 200) {\n        if (institute) {\n          setItems(\n            response?.data?.map((item) => ({\n              ...item.student,\n              institute: item.institute,\n            }))\n          );\n        } else {\n          setItems(response.data.results);\n        }\n        setTableParams({\n          ...tableParams,\n          pagination: {\n            ...tableParams.pagination,\n            total: response?.data?.count,\n          },\n        });\n      } else {\n        console.log('students error');\n      }\n    } catch (error) {\n      console.log('error: ', error);\n    }\n  }\n  // useEffect(() => {\n  //   console.log('studentId', studentId);\n\n  //   fetchData();\n  //   //console.log('items', items)\n  // }, [\n  //   selectedPageSize,\n  //   currentPage,\n  //   selectedOrderOption,\n  //   search,\n  //   selectedGenderOption,\n  //   selectedProvinceOption,\n  //   studentId,\n  //   province,\n  //   district,\n  //   rest,\n  //   institute,\n  //   educationYear,\n  // ]);\n  // console.log('items', items)\n\n  // const fetchInstitutes = async () => {\n  //   const response = await axios.get(instituteApiUrl);\n  //   const updatedData = await response.data.map((item) => ({\n  //     id: item.id,\n  //     name: item.name,\n  //   }));\n  //   setInstitutes(updatedData);\n  // };\n\n  // useEffect(() => {\n  //   // fetchInstitutes();\n  // }, []);\n  const columns = [\n    {\n      title: 'شماره',\n      dataIndex: 'id',\n      // sorter: (a, b) => a.student_id - b.student_id,\n      width: '5%',\n    },\n\n    {\n      title: 'نوم/نام',\n      dataIndex: 'name',\n      // sorter: (a, b) => a.name - b.name,\n      // render: (name) => `${name.first} ${name.last}`,\n      width: '15%',\n    },\n    {\n      title: 'ولایت',\n      dataIndex: 'province',\n      // sorter: (a, b) => a.name - b.name,\n      // render: (name) => `${name.first} ${name.last}`,\n      width: '10%',\n    },\n    {\n      title: 'انستیتوت',\n      dataIndex: 'institute',\n      width: '10%',\n    },\n    {\n      title: 'دپارتمنت',\n      dataIndex: 'department',\n      // filters: [\n      //   { text: 'Male', value: 'male' },\n      //   { text: 'Female', value: 'female' },\n      // ],\n      // onFilter: (value, record) => record.gender.indexOf(value) === 0,\n      width: '10%',\n    },\n\n    {\n      title: 'نمری',\n      dataIndex: 'score',\n      width: '10%',\n    },\n    {\n      title: 'سال',\n      dataIndex: 'year',\n      width: '10%',\n    },\n  ];\n  const handleTableChange = (pagination, filter, sorter) => {\n    setIsFilter(false);\n    setTableParams({ pagination, filter, ...sorter });\n    if (pagination.pageSize !== tableParams.pagination?.pageSize) {\n      setItems([]);\n    }\n  };\n  const onFilter = async (values) => {\n    setIsFilter(true);\n    setTableParams({\n      ...tableParams,\n      pagination: {\n        ...tableParams.pagination,\n        current: 1,\n      },\n    });\n    let params = {\n      page: 1,\n    };\n    params.institute = values.filterInstitute?.value;\n    params.department_id = values.department?.value;\n    params.educational_year = values.educationalYear?.value;\n    params.province = values.filterProvince?.value;\n    // params.id = values.filterId || null;\n    fetchData(params);\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, [!isFilter ? JSON.stringify(tableParams) : null]);\n\n  const handleResetFields = (resetForm) => {\n    resetForm({\n      values: {\n        filterId: '',\n        filterInstitute: [],\n        filterProvince: [],\n        educationalYear: [],\n        department: [],\n      },\n    });\n    setIsFilter(false);\n    fetchData();\n  };\n  const onCheckItem = (event, id) => {\n    if (\n      event.target.tagName === 'A' ||\n      (event.target.parentElement && event.target.parentElement.tagName === 'A')\n    ) {\n      return true;\n    }\n    if (lastChecked === null) {\n      setLastChecked(id);\n    }\n\n    let selectedList = [...selectedItems];\n    if (selectedList.includes(id)) {\n      selectedList = selectedList.filter((x) => x !== id);\n    } else {\n      selectedList.push(id);\n    }\n    setSelectedItems(selectedList);\n\n    if (event.shiftKey) {\n      let newItems = [...items];\n      const start = getIndex(id, newItems, 'id');\n      const end = getIndex(lastChecked, newItems, 'id');\n      newItems = newItems.slice(Math.min(start, end), Math.max(start, end) + 1);\n      selectedItems.push(\n        ...newItems.map((item) => {\n          return item.id;\n        })\n      );\n      selectedList = Array.from(new Set(selectedItems));\n      setSelectedItems(selectedList);\n    }\n    document.activeElement.blur();\n    return false;\n  };\n\n  const handleChangeSelectAll = (isToggle) => {\n    if (selectedItems.length >= items.length) {\n      if (isToggle) {\n        setSelectedItems([]);\n      }\n    } else {\n      setSelectedItems(items.map((x) => x.id));\n    }\n    document.activeElement.blur();\n    return false;\n  };\n\n  const onContextMenuClick = (e, data) => {\n    // params : (e,data,target)\n    console.log('onContextMenuClick - selected items', selectedItems);\n    console.log('onContextMenuClick - action : ', data.action);\n  };\n\n  const onContextMenu = (e, data) => {\n    const clickedProductId = data.data;\n    if (!selectedItems.includes(clickedProductId)) {\n      setSelectedItems([clickedProductId]);\n    }\n\n    return true;\n  };\n\n  useMousetrap(['ctrl+a', 'command+a'], () => {\n    handleChangeSelectAll(false);\n  });\n\n  useMousetrap(['ctrl+d', 'command+d'], () => {\n    setSelectedItems([]);\n    return false;\n  });\n\n  const startIndex = (currentPage - 1) * selectedPageSize;\n  const endIndex = currentPage * selectedPageSize;\n\n  return !isLoaded ? (\n    <div className=\"loading\" />\n  ) : (\n    <>\n      <div className=\"disable-text-selection\">\n        {/* <ListPageHeading\n          heading=\"د کانکور د شاگردانو لست/لست شاگردان کانکوریان\"\n          // Using display mode we can change the display of the list.\n          displayMode={displayMode}\n          changeDisplayMode={setDisplayMode}\n          handleChangeSelectAll={handleChangeSelectAll}\n          // following code is used for order the list based on different element of the prod\n          changeOrderBy={(column) => {\n            setSelectedOrderOption(\n              orderOptions.find((x) => x.column === column)\n            );\n          }}\n          changePageSize={setSelectedPageSize}\n          selectedPageSize={selectedPageSize}\n          totalItemCount={totalItemCount}\n          selectedOrderOption={selectedOrderOption}\n          match={match}\n          startIndex={startIndex}\n          endIndex={endIndex}\n          selectedItemsLength={selectedItems ? selectedItems.length : 0}\n          itemsLength={items ? items.length : 0}\n          onSearchKey={(e) => {\n            if (e.key === 'Enter') {\n              setSearch(e.target.value.toLowerCase());\n            }\n          }}\n          orderOptions={orderOptions}\n          pageSizes={pageSizes}\n          toggleModal={() => setModalOpen(!modalOpen)}\n          changeGenderBy={(column) => {\n            setSelectedGenderOption(\n              genderOptions.find((x) => x.column === column)\n            );\n          }}\n          changeProvinceBy={(column) => {\n            setSelectedProvinceOption(\n              provincesOptionsForList.find((x) => x.column === column)\n            );\n          }}\n          selectedGenderOption={selectedGenderOption}\n          selectedProvinceOption={selectedProvinceOption}\n          genderOptions={genderOptions}\n          provincesOptionsForList={provincesOptionsForList}\n          onIdSearchKey={(e) => {\n            if (e.key === 'Enter') {\n              setStudentId(e.target.value.toLowerCase());\n            }\n          }}\n          onProvinceSearchKey={(e) => {\n            if (e.key === 'Enter') {\n              setProvince(e.target.value.toLowerCase());\n            }\n          }}\n          onDistrictSearchKey={(e) => {\n            if (e.key === 'Enter') {\n              setDistrict(e.target.value.toLowerCase());\n            }\n          }}\n          onResetClick={setRest}\n          reset={rest}\n          institutes={institutes}\n          onInstituteSelect={setInstitute}\n          onEducationYearSelect={(e) => {\n            if (e.key === 'Enter') {\n              setEducationYear(e.target.value);\n            }\n          }}\n        />\n        {console.log('ITEMMMMMMMMMMMMMMMM', items)}\n        <table className=\"table\">\n          <thead\n            className=\"pl-2 d-flex flex-grow-1  table-dark\"\n            style={{ maxHeight: '55px', marginRight: 2 }}\n          >\n            <tr className=\"card-body align-self-center d-flex flex-column flex-lg-row align-items-lg-center\">\n              <th\n                style={{\n                  width: '11%',\n                  paddingInline: '0%',\n                  textAlign: 'right',\n                  borderStyle: 'hidden',\n                  fontSize: '20px',\n                }}\n              >\n                <IntlMessages id=\"marks.No\" />\n              </th>\n              <th\n                style={{\n                  width: '11%',\n                  paddingInline: '0%',\n                  textAlign: 'right',\n                  borderStyle: 'hidden',\n                  fontSize: '20px',\n                }}\n              >\n                <IntlMessages id=\"kankorStudentId\" />\n              </th>\n              <th\n                style={{\n                  width: '15%',\n                  paddingInline: '0%',\n                  textAlign: 'right',\n                  borderStyle: 'hidden',\n                  fontSize: '20px',\n                }}\n              >\n                <IntlMessages id=\"workerName\" />\n              </th>\n\n              <th\n                style={{\n                  width: '16%',\n                  padding: '0%',\n                  textAlign: 'right',\n                  borderStyle: 'hidden',\n                  fontSize: '20px',\n                }}\n              >\n                <IntlMessages id=\"institute\" />\n              </th>\n              <th\n                style={{\n                  width: '14%',\n                  padding: '0%',\n                  textAlign: 'right',\n                  borderStyle: 'hidden',\n                  fontSize: '20px',\n                }}\n              >\n                {' '}\n                <IntlMessages id=\"department\" />\n              </th>\n              <th\n                style={{\n                  width: '13%',\n                  padding: '0%',\n                  textAlign: 'right',\n                  borderStyle: 'hidden',\n                  fontSize: '20px',\n                }}\n              >\n                {' '}\n                <IntlMessages id=\"student.Markslist\" />\n              </th>\n              <th\n                style={{\n                  width: '15%',\n                  padding: '0%',\n                  textAlign: 'right',\n                  borderStyle: 'hidden',\n                  fontSize: '20px',\n                }}\n              >\n                {' '}\n                <IntlMessages id=\"dorm.yearList\" />\n              </th>\n            </tr>\n          </thead>\n\n          <ListPageListing\n            items={items}\n            roughData={roughData}\n            displayMode={displayMode}\n            selectedItems={selectedItems}\n            onCheckItem={onCheckItem}\n            currentPage={currentPage}\n            totalPage={totalPage}\n            onContextMenuClick={onContextMenuClick}\n            onContextMenu={onContextMenu}\n            onChangePage={setCurrentPage}\n          />\n        </table> */}\n        <h1>د کانکور د شاگردانو لست/لست شاگردان کانکوریان</h1>\n        <br />\n        <div\n          style={{\n            padding: 10,\n            display: 'flex',\n          }}\n        >\n          <Formik\n            initialValues={{\n              filterId: '',\n              filterInstitute: [],\n              filterProvince: [],\n              educationalYear: [],\n              department: [],\n            }}\n            onSubmit={onFilter}\n          >\n            {({\n              values,\n              setFieldValue,\n              handleSubmit,\n              setFieldTouched,\n              resetForm,\n            }) => (\n              <>\n                {/* <FormGroup className=\"form-group has-float-label error-l-150\">\n                  <Label>ایدی</Label>\n                  <Field\n                    name=\"filterId\"\n                    placeholder=\"ایدی\"\n                    style={{ height: 37 }}\n                  />\n                </FormGroup> */}\n\n                <FormGroup className=\"form-group has-float-label error-l-150 w-100 \">\n                  <Label>ولایت</Label>\n                  <FormikReactSelect\n                    placeholder=\"ولایت\"\n                    name=\"filterProvince\"\n                    options={provinces}\n                    value={values.filterProvince}\n                    onChange={setFieldValue}\n                    onBlur={setFieldTouched}\n                  />\n                </FormGroup>\n                <FormGroup className=\"form-group has-float-label error-l-150 w-100 \">\n                  <Label>انستیتوت</Label>\n                  <FormikReactSelect\n                    placeholder=\"انستیتوت\"\n                    name=\"filterInstitute\"\n                    options={institutes}\n                    value={values.filterInstitute}\n                    onChange={setFieldValue}\n                    onBlur={setFieldTouched}\n                  />\n                </FormGroup>\n                <FormGroup className=\"form-group has-float-label error-l-150 w-100 \">\n                  <Label>دیپارتمنت</Label>\n                  <FormikReactSelect\n                    name=\"department\"\n                    id=\"department\"\n                    options={departments}\n                    value={values.department}\n                    onChange={setFieldValue}\n                    onBlur={setFieldTouched}\n                  />\n                </FormGroup>\n                <FormGroup className=\"form-group has-float-label error-l-150 w-100 \">\n                  <Label>سال تحصیل / تعلیمی</Label>\n                  <FormikReactSelect\n                    name=\"educationalYear\"\n                    id=\"educationalYear\"\n                    options={educationalYearsOptions}\n                    value={values.educationalYear}\n                    onChange={setFieldValue}\n                    onBlur={setFieldTouched}\n                  />\n                </FormGroup>\n                <FormGroup className=\"form-group\" style={{ display: 'flex' }}>\n                  <button className=\"btn btn-secondary\" onClick={handleSubmit}>\n                    فلټر\n                  </button>\n\n                  <button\n                    type=\"button\"\n                    className=\"btn btn-warning\"\n                    onClick={() => handleResetFields(resetForm)}\n                  >\n                    ریسیټ\n                  </button>\n                </FormGroup>\n              </>\n            )}\n          </Formik>\n        </div>\n        <TB\n          style={{ fontSize: 20 }}\n          size=\"large\"\n          columns={columns}\n          pagination={tableParams.pagination}\n          loading={isLoading}\n          onChange={handleTableChange}\n          dataSource={items?.map((item, index) => ({\n            key: index,\n            id: item.id,\n            name: <NavLink to={`student/${item.id}`}>{item.name}</NavLink>,\n            province: provinces.find((pro) => pro.value == item.province)\n              ?.label,\n            institute: institutes.find((pro) => pro.value == item.institute)\n              ?.label,\n            department: departments.find((pro) => pro.value == item.department)\n              ?.label,\n            score: item.marks,\n            year: item.educational_year,\n          }))}\n        />\n      </div>\n    </>\n  );\n};\n\nexport default ThumbListPages;\n","import React from 'react';\nimport { Nav, NavItem, NavLink } from 'reactstrap';\nimport { Colxx } from 'components/common/CustomBootstrap';\n\nconst Pagination = ({\n  totalPage = 0,\n  currentPage = 1,\n  numberLimit = 5,\n  lastIsActive = true,\n  firstIsActive = true,\n  onChangePage,\n}) => {\n  let startPoint = 1;\n  let endPoint = numberLimit;\n\n  if (numberLimit > totalPage) {\n    startPoint = 1;\n    endPoint = totalPage;\n  } else if (currentPage <= parseInt(numberLimit / 2, 10)) {\n    startPoint = 1;\n    endPoint = numberLimit;\n  } else if (currentPage + parseInt(numberLimit / 2, 10) <= totalPage) {\n    startPoint = currentPage - parseInt(numberLimit / 2, 10);\n    endPoint = currentPage + parseInt(numberLimit / 2, 10);\n  } else {\n    startPoint = totalPage - (numberLimit - 1);\n    endPoint = totalPage;\n  }\n  startPoint = startPoint === 0 ? 1 : startPoint;\n  const points = [];\n  for (let i = startPoint; i <= endPoint; i += 1) {\n    points.push(i);\n  }\n\n  const firstPageButtonClassName = currentPage <= 1 ? 'disabled' : '';\n  const lastPageButtonClassName = currentPage >= totalPage ? 'disabled' : '';\n  const prevPageButtonClassName = currentPage <= 1 ? 'disabled' : '';\n  const nextPageButtonClassName = currentPage >= totalPage ? 'disabled' : '';\n  return totalPage > 1 ? (\n    <Colxx xxs=\"12\" className=\"mt-3 mb-3\">\n      <Nav className=\"pagination justify-content-center\">\n        {firstIsActive && (\n          <NavItem className={`page-item ${firstPageButtonClassName}`}>\n            <NavLink\n              className=\"page-link first c-pointer\"\n              onClick={() => onChangePage(1)}\n            >\n              <i className=\"simple-icon-control-start\" />\n            </NavLink>\n          </NavItem>\n        )}\n\n        <NavItem className={`page-item ${prevPageButtonClassName}`}>\n          <NavLink\n            className=\"page-link prev c-pointer\"\n            onClick={() => onChangePage(currentPage - 1)}\n          >\n            <i className=\"simple-icon-arrow-left\" />\n          </NavLink>\n        </NavItem>\n        {points.map((i) => {\n          return (\n            <NavItem\n              key={i}\n              className={`page-item ${currentPage === i && 'active'}`}\n            >\n              <NavLink\n                className=\"page-link c-pointer\"\n                onClick={() => onChangePage(i)}\n              >\n                {i}\n              </NavLink>\n            </NavItem>\n          );\n        })}\n        <NavItem className={`page-item ${nextPageButtonClassName}`}>\n          <NavLink\n            className=\"page-link next c-pointer\"\n            onClick={() => onChangePage(currentPage + 1)}\n          >\n            <i className=\"simple-icon-arrow-right\" />\n          </NavLink>\n        </NavItem>\n        {lastIsActive && (\n          <NavItem className={`page-item ${lastPageButtonClassName}`}>\n            <NavLink\n              className=\"page-link last c-pointer\"\n              onClick={() => onChangePage(totalPage)}\n            >\n              <i className=\"simple-icon-control-end\" />\n            </NavLink>\n          </NavItem>\n        )}\n      </Nav>\n    </Colxx>\n  ) : (\n    <Colxx xxs=\"12\" className=\"mt-2\" />\n  );\n};\n\nexport default Pagination;\n","/* eslint-disable no-unused-expressions */\nimport mousetrap from 'mousetrap';\nimport { useEffect, useRef } from 'react';\n\n/**\n * Use mousetrap hook\n *\n * @param  {(string | string[])} handlerKey - A key, key combo or array of combos according to Mousetrap documentation.\n * @param  { function } handlerCallback - A function that is triggered on key combo catch.\n */\nexport default (handlerKey, handlerCallback) => {\n  const actionRef = useRef(null);\n  actionRef.current = handlerCallback;\n\n  useEffect(() => {\n    mousetrap.bind(handlerKey, (evt, combo) => {\n      typeof actionRef.current === 'function' && actionRef.current(evt, combo);\n      evt.preventDefault();\n    });\n    return () => {\n      mousetrap.unbind(handlerKey);\n    };\n  }, [handlerKey]);\n};\n","import React from 'react';\nimport {\n  Row,\n  Card,\n  CardBody,\n  CardSubtitle,\n  CardImg,\n  CardText,\n  CustomInput,\n  Badge,\n} from 'reactstrap';\nimport { NavLink } from 'react-router-dom';\nimport classnames from 'classnames';\nimport { ContextMenuTrigger } from 'react-contextmenu';\nimport { Colxx } from 'components/common/CustomBootstrap';\n\nconst ImageListView = ({ product, isSelect, collect, onCheckItem }) => {\n  return (\n    <Colxx sm=\"6\" lg=\"4\" xl=\"3\" className=\"mb-3\" key={product.id}>\n      <ContextMenuTrigger id=\"menu_id\" data={product.id} collect={collect}>\n        <Card\n          onClick={(event) => onCheckItem(event, product.id)}\n          className={classnames({\n            active: isSelect,\n          })}\n        >\n          <div className=\"position-relative\">\n            <NavLink to={`?p=${product.id}`} className=\"w-40 w-sm-100\">\n              <CardImg top alt={product.title} src={product.img} />\n            </NavLink>\n            <Badge\n              color={product.statusColor}\n              pill\n              className=\"position-absolute badge-top-left\"\n            >\n              {product.status}\n            </Badge>\n          </div>\n          <CardBody>\n            <Row>\n              <Colxx xxs=\"2\">\n                <CustomInput\n                  className=\"item-check mb-0\"\n                  type=\"checkbox\"\n                  id={`check_${product.id}`}\n                  checked={isSelect}\n                  onChange={() => {}}\n                  label=\"\"\n                />\n              </Colxx>\n              <Colxx xxs=\"10\" className=\"mb-3\">\n                <CardSubtitle>{product.title}</CardSubtitle>\n                <CardText className=\"text-muted text-small mb-0 font-weight-light\">\n                  {product.date}\n                </CardText>\n              </Colxx>\n            </Row>\n          </CardBody>\n        </Card>\n      </ContextMenuTrigger>\n    </Colxx>\n  );\n};\n\n/* React.memo detail : https://reactjs.org/docs/react-api.html#reactpurecomponent  */\nexport default React.memo(ImageListView);\n"],"sourceRoot":""}