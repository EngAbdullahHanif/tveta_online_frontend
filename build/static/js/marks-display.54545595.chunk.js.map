{"version":3,"sources":["views/app/students/subject-marks.js","views/app/students/subject-marks-verification.js","helpers/currentUser.js"],"names":["ValidationSchema","Yup","shape","institute","value","required","nullable","_jsx","IntlMessages","id","educationalYear","studyTime","classs","department","subject","student","initialValues","MarksDisplay","_ref","match","_useState","useState","_useState2","_slicedToArray","_useState3","_useState4","isNext","setIsNext","_useState5","_useState6","setFields","_useState7","_useState8","institutes","setInstitutes","_useState9","_useState10","departments","setDepartments","_useState11","_useState12","classes","setClasses","_useState13","_useState14","subjects","setSubjects","_useState15","_useState16","students","setStudents","_useState17","_useState18","selectedInstitute","setSelectedInstitute","_useState19","_useState20","selectedDepartment","setSelectedDepartment","_useState21","_useState22","selectedClass","setSelectedClass","_useState23","_useState24","selectedSubject","setSelectedSubject","_useState25","_useState26","selecedStudyTime","setSelectedStudyTime","_useState27","_useState28","selectedEducationalYear","setSelectedEducationalYear","_useState29","_useState30","_useState31","_useState32","_useState33","_useState34","_useState35","semester","section","_useState36","selectedClassLabel","setselectedClassLabel","useEffect","isEmptyArray","_selectedClass$label$","label","split","_selectedClass$label$2","fetchInstitutes","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","updatedData","wrap","_context","prev","next","callApi","sent","data","status","map","item","name","console","log","stop","apply","arguments","fetchFields","_ref3","_callee2","_context2","fetchDepartments","_ref4","_callee3","instituteId","_context3","abrupt","concat","_x","fetchClasses","_ref5","_callee4","_context4","fetchSubjects","_ref6","_callee5","_context5","tbodies","gpa","grad","length","index","scores","Object","values","subject_id","studentRows","score","i","student_name","rowSpan","style","borderStyle","children","student_father_name","student_id","index_no","_Fragment","_jsxs","className","marks","second_chance_marks","Gpa","display","justifyContent","onSubmit","_ref7","_callee6","_context6","_x2","Card","CardBody","Row","marginInline","Colxx","xxs","Label","scope","Button","onClick","Formik","validationSchema","_ref8","errors","touched","setFieldTouched","setFieldValue","handleChange","Form","FormGroup","color","FormikReactSelect","options","onChange","onBlur","studyTimeOptions","educationalYearsOptions","size","type","margin","educationlaYear","submitInitialValues","verification","examId","SubjectMarksVerification","isSubmitted","setIsSubmitted","selectedSemester","_useState37","_useState38","useParams","markId","createNotification","cName","NotificationManager","success","error","alert","info","fechtStudents","classId","subjectId","newStudents","verification_result","exam_id","class_exam_id","_toConsumableArray","fontSize","fontWeight","_ref9","height","overflowY","overflowX","class","textAlign","verificationValueOptions","currentUser","user","JSON","parse","localStorage","getItem","user_id"],"mappings":"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","file":"static/js/marks-display.54545595.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Formik, Form, Field, isEmptyArray } from 'formik';\nimport axios from 'axios';\nimport './style.css';\nimport callApi from 'helpers/callApi';\nimport {\n  studyTimeOptions,\n  educationalYearsOptions,\n} from '../global-data/options';\nimport './../../../assets/css/global-style.css';\n\nimport * as Yup from 'yup';\nimport { Row, Card, CardBody, FormGroup, Label, Button } from 'reactstrap';\n\nimport IntlMessages from 'helpers/IntlMessages';\nimport { Colxx } from 'components/common/CustomBootstrap';\nimport { FormikReactSelect } from 'containers/form-validations/FormikFields';\n\nconst orderOptions = [\n  { column: 'title', label: 'Product Name' },\n  { column: 'category', label: 'Category' },\n  { column: 'status', label: 'Status' },\n];\nconst pageSizes = [10, 20, 40, 80];\n\nconst ValidationSchema = Yup.object().shape({\n  institute: Yup.object()\n    .shape({\n      value: Yup.string().required(),\n    })\n    .nullable()\n    .required(<IntlMessages id=\"forms.InstituteErr\" />),\n\n  educationalYear: Yup.object()\n    .shape({\n      value: Yup.string().required(),\n    })\n    .nullable()\n    .required(<IntlMessages id=\"forms.educationYearErr\" />),\n\n  studyTime: Yup.object()\n    .shape({\n      value: Yup.string().required(),\n    })\n    .nullable()\n    .required(<IntlMessages id=\"forms.StudyTimeErr\" />),\n\n  classs: Yup.object()\n    .shape({\n      value: Yup.string().required(),\n    })\n    .nullable()\n    .required(<IntlMessages id=\"marks.ClassErr\" />),\n\n  department: Yup.object()\n    .shape({\n      value: Yup.string().required(),\n    })\n    .nullable()\n    .required(<IntlMessages id=\"teacher.departmentIdErr\" />),\n\n  subject: Yup.object()\n    .shape({\n      value: Yup.string().required(),\n    })\n    .nullable()\n    .required(<IntlMessages id=\"marks.SubjectErr\" />),\n\n  student: Yup.object()\n    .shape({\n      value: Yup.string(),\n    })\n    .nullable(),\n});\n\nconst initialValues = {\n  institute: [],\n  educationalYear: [],\n  studyTime: [],\n  classs: [],\n  department: [],\n  subject: [],\n};\nconst MarksDisplay = ({ match }) => {\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [isNext, setIsNext] = useState(false);\n  const [fields, setFields] = useState([]);\n  const [institutes, setInstitutes] = useState([]);\n  const [departments, setDepartments] = useState([]);\n  const [classes, setClasses] = useState([]);\n  const [subjects, setSubjects] = useState([]);\n  const [students, setStudents] = useState([]);\n  const [selectedInstitute, setSelectedInstitute] = useState('');\n  const [selectedDepartment, setSelectedDepartment] = useState('');\n  const [selectedClass, setSelectedClass] = useState('');\n  const [selectedSubject, setSelectedSubject] = useState('');\n  const [selecedStudyTime, setSelectedStudyTime] = useState('');\n  const [selectedEducationalYear, setSelectedEducationalYear] = useState([]);\n  const [passingScore, setPassingScore] = useState(55);\n  const [subjectGrad, setSubjectGrad] = useState();\n  const [subjectGPA, setSubjectGPA] = useState();\n\n  // separate and set labels for classes\n  const [selectedClassLabel, setselectedClassLabel] = useState({\n    classs: '',\n    semester: '',\n    section: '',\n  });\n\n  useEffect(() => {\n    if (!isEmptyArray(selectedClass) && selectedClass !== '') {\n      const [semester, classs, section] = selectedClass.label.split('-');\n      setselectedClassLabel({ classs, semester, section });\n    }\n  }, [selectedClass]);\n\n  const fetchInstitutes = async () => {\n    const response = await callApi('institute/', '', null);\n    if (response.data && response.status === 200) {\n      const updatedData = await response.data.map((item) => ({\n        value: item.id,\n        label: item.name,\n      }));\n      setInstitutes(updatedData);\n    } else {\n      console.log('institute error');\n    }\n  };\n\n  const fetchFields = async () => {\n    const response = await callApi('institute/field/', '', null);\n    if (response.data && response.status === 200) {\n      const updatedData = await response.data.map((item) => ({\n        value: item.id,\n        label: item.name,\n      }));\n      setFields(updatedData);\n    } else {\n      console.log('field error');\n    }\n  };\n\n  const fetchDepartments = async (instituteId) => {\n    if (!instituteId || !instituteId.value) {\n      return;\n    }\n    const response = await callApi(\n      `institute/institite-department/?institute=${instituteId.value}`,\n      '',\n      null\n    );\n    // console.log('response of department', response);\n    if (response.data && response.status === 200) {\n      console.log('response of department', response);\n      const updatedData = await response.data.map((item) => ({\n        value: item.department.id,\n        label: item.department.name,\n      }));\n      console.log('updatedData of department', updatedData);\n      setDepartments(updatedData); //Set it up when data in Backend is ready\n    } else {\n      console.log('department error');\n    }\n  };\n  //fetch class list\n  const fetchClasses = async () => {\n    const response = await callApi('institute/classs/', 'GET', null);\n    console.log('class repspossdfsde', response);\n    if (response.data && response.status === 200) {\n      const updatedData = await response.data.map((item) => ({\n        value: item.id,\n        label: item.name + ' - ' + item.semester + ' - ' + item.section,\n      }));\n      setClasses(updatedData);\n    } else {\n      console.log('class error');\n    }\n  };\n\n  const fetchSubjects = async () => {\n    const response = await callApi('institute/subject/', '', null);\n    if (response.data && response.status === 200) {\n      const updatedData = await response.data.map((item) => ({\n        value: item.id,\n        label: item.name,\n      }));\n      setSubjects(updatedData);\n    } else {\n      console.log('subject error');\n    }\n  };\n\n  useEffect(() => {\n    fetchInstitutes();\n    fetchFields();\n    fetchClasses();\n    fetchSubjects();\n  }, []);\n\n  useEffect(() => {\n    if (selectedInstitute) {\n      console.log('selectedInstitute', selectedInstitute);\n      fetchDepartments(selectedInstitute);\n    }\n  }, [selectedInstitute]);\n\n  let gpa = null;\n  let grad = null;\n  let tbodies;\n  if (students.length > 0) {\n    tbodies = students.map((student, index) => {\n      const scores = Object.values(student.subject_id);\n      const studentRows = scores.map((score, i) => {\n        const student_name =\n          i === 0 ? (\n            <td rowSpan={scores.length + 1} style={{ borderStyle: 'hidden' }}>\n              {student.student_name}\n            </td>\n          ) : null;\n        const student_father_name =\n          i === 0 ? (\n            <td rowSpan={scores.length + 1} style={{ borderStyle: 'hidden' }}>\n              {student.student_father_name}\n            </td>\n          ) : null;\n        const student_id =\n          i === 0 ? (\n            <td rowSpan={scores.length + 1} style={{ borderStyle: 'hidden' }}>\n              {student.student}\n            </td>\n          ) : null;\n        const index_no =\n          i === 0 ? (\n            <td rowSpan={index.length + 1} style={{ borderStyle: 'hidden' }}>\n              {index + 1}\n            </td>\n          ) : null;\n\n        return (\n          <>\n            <tr key={i} className=\"red-background\">\n              <td className=\"red-background\">{index_no}</td>\n              <td className=\"red-background\"> {student_name}</td>\n              <td className=\"red-background\">{student_father_name}</td>\n              <td className=\"red-background\">{student_id}</td>\n              <td className=\"red-background\">\n                {<td style={{ borderStyle: 'hidden' }}>{score.marks}</td>}\n              </td>\n              <td className=\"red-background\">\n                {\n                  <td style={{ borderStyle: 'hidden' }}>\n                    {score.second_chance_marks}\n                  </td>\n                }\n              </td>\n              {score.grad\n                ? (grad = score.grad) && (\n                    <td className=\"red-background\">\n                      {' '}\n                      {score.grad && (\n                        <td style={{ borderStyle: 'hidden' }}>{score.grad}</td>\n                      )}\n                    </td>\n                  )\n                : null}\n              {score.Gpa\n                ? (gpa = score.Gpa) && (\n                    <td className=\"red-background\">\n                      {' '}\n                      {score.Gpa && (\n                        <td style={{ borderStyle: 'hidden' }}>{score.Gpa}</td>\n                      )}\n                    </td>\n                  )\n                : null}\n              <td className=\"red-background\">\n                {score.marks >= 50 || score.second_chance_marks >= 50 ? (\n                  <div className=\"text-success pt-3\">کامیاب </div>\n                ) : (\n                  <div className=\"text-danger pt-3\">ناکام </div>\n                )}\n              </td>\n            </tr>\n          </>\n        );\n      });\n      return (\n        <>\n          <tbody key={index} className={student.name + ' ' + ' border border '}>\n            {studentRows}\n          </tbody>\n        </>\n      );\n    });\n  } else {\n    tbodies = (\n      <div style={{ display: 'flex', justifyContent: 'center' }}>\n        <h1>معلومات شتون نلری</h1>\n      </div>\n    );\n  }\n\n  const onSubmit = async (values) => {\n    const response = await callApi(\n      `students/students-marks/?institute_id=${selectedInstitute.value}&class_id=${selectedClass.value}&shift=${selecedStudyTime.value}&department_id=${selectedDepartment.value}&educational_year=${selectedEducationalYear.value}&subject_id=${selectedSubject.value}`,\n      '',\n      null\n    );\n\n    console.log('responseeeeeeeeeeeeeeE', response.data);\n\n    if (response.data && response.status === 200) {\n      setStudents(response.data);\n      console.log('response.data', response.data);\n      console.log('response', response);\n      setIsNext(true);\n      console.log('students', students);\n    } else {\n      console.log('students error');\n    }\n  };\n\n  return (\n    <>\n      <Card>\n        <div className=\"mt-4 ml-5\">\n          <h2 className=\"mt-5 ml-5 titleStyle\">\n            {<IntlMessages id=\"marks.marksDisplayTitle\" />}\n          </h2>\n        </div>\n        <CardBody>\n          {!isNext ? (\n            <Formik\n              initialValues={initialValues}\n              onSubmit={onSubmit}\n              validationSchema={ValidationSchema}\n            >\n              {({\n                errors,\n                touched,\n                values,\n                setFieldTouched,\n                setFieldValue,\n                handleChange,\n              }) => (\n                <Form className=\"av-tooltip tooltip-label-right style \">\n                  <Row className=\"m-5\">\n                    <Colxx xxs=\"6\">\n                      {/* set if condition, if institutes are loaded */}\n                      <FormGroup className=\"form-group has-float-label error-l-150 \">\n                        <Label>\n                          <IntlMessages id=\"forms.InstituteLabel\" />\n                          <span style={{ color: 'red' }}>*</span>\n                        </Label>\n                        <FormikReactSelect\n                          name=\"institute\"\n                          id=\"institute\"\n                          value={values.institute}\n                          options={institutes}\n                          onChange={setFieldValue}\n                          onBlur={setFieldTouched}\n                          onClick={setSelectedInstitute(values.institute)}\n                        />\n\n                        {errors.institute && touched.institute ? (\n                          <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                            {errors.institute}\n                          </div>\n                        ) : null}\n                      </FormGroup>\n\n                      <FormGroup className=\"form-group has-float-label mt-5  error-l-150\">\n                        <Label>\n                          <IntlMessages id=\"forms.StudyTimeLabel\" />\n                          <span style={{ color: 'red' }}>*</span>\n                        </Label>\n                        <FormikReactSelect\n                          name=\"studyTime\"\n                          id=\"studyTime\"\n                          value={values.studyTime}\n                          options={studyTimeOptions}\n                          onChange={setFieldValue}\n                          onBlur={setFieldTouched}\n                          onClick={setSelectedStudyTime(values.studyTime)}\n                        />\n                        {errors.studyTime && touched.studyTime ? (\n                          <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                            {errors.studyTime}\n                          </div>\n                        ) : null}\n                      </FormGroup>\n\n                      <FormGroup className=\"form-group has-float-label mt-5  error-l-150\">\n                        <Label>\n                          <IntlMessages id=\"forms.educationYearLabel\" />\n                        </Label>\n                        <FormikReactSelect\n                          name=\"educationalYear\"\n                          id=\"educationalYear\"\n                          options={educationalYearsOptions}\n                          onChange={setFieldValue}\n                          onBlur={setFieldTouched}\n                          onClick={setSelectedEducationalYear(\n                            values.educationalYear\n                          )}\n                        />\n                        {errors.educationalYear && touched.educationalYear ? (\n                          <div className=\"invalid-feedback d-block bg-danger text-white \">\n                            {errors.educationalYear}\n                          </div>\n                        ) : null}\n                      </FormGroup>\n                    </Colxx>\n\n                    <Colxx xxs=\"6\">\n                      <FormGroup className=\"form-group has-float-label error-l-150 \">\n                        <Label>\n                          <IntlMessages id=\"marks.ClassLabel\" />\n                          <span style={{ color: 'red' }}>*</span>\n                        </Label>\n                        <FormikReactSelect\n                          name=\"classs\"\n                          id=\"classs\"\n                          value={values.classs}\n                          options={classes}\n                          onChange={setFieldValue}\n                          onBlur={setFieldTouched}\n                          onClick={setSelectedClass(values.classs)}\n                          required\n                        />\n                        {errors.classs && touched.classs ? (\n                          <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                            {errors.classs}\n                          </div>\n                        ) : null}\n                      </FormGroup>\n\n                      <FormGroup className=\"form-group has-float-label mt-5 error-l-150\">\n                        <Label>\n                          <IntlMessages id=\"forms.studyDepartment\" />\n                          <span style={{ color: 'red' }}>*</span>\n                        </Label>\n                        <FormikReactSelect\n                          name=\"department\"\n                          id=\"department\"\n                          value={values.department}\n                          options={departments}\n                          onChange={setFieldValue}\n                          onBlur={setFieldTouched}\n                          onClick={setSelectedDepartment(values.department)}\n                          required\n                        />\n                        {errors.department && touched.department ? (\n                          <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                            {errors.department}\n                          </div>\n                        ) : null}\n                      </FormGroup>\n\n                      <FormGroup className=\"form-group has-float-label mt-5 error-l-150\">\n                        <Label>\n                          <IntlMessages id=\"marks.SubjectLabel\" />\n                          <span style={{ color: 'red' }}>*</span>\n                        </Label>\n                        <FormikReactSelect\n                          name=\"subject\"\n                          id=\"subject\"\n                          value={values.subject}\n                          options={subjects}\n                          onChange={setFieldValue}\n                          onBlur={setFieldTouched}\n                          onClick={setSelectedSubject(values.subject)}\n                          required\n                        />\n                        {errors.subject && touched.subject ? (\n                          <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                            {errors.subject}\n                          </div>\n                        ) : null}\n                      </FormGroup>\n                    </Colxx>\n                  </Row>\n                  <Row>\n                    <Colxx>\n                      {/* Changes Started for a single student marks retrieval */}\n                      {/* <FormGroup className=\"form-group has-float-label mt-5 error-l-150\">\n                        <Label>\n                          <IntlMessages id=\"شاګرد ایډی\" />\n                          <span style={{ color: \"red\" }}>*</span>\n                        </Label>\n                        <Input\n                          name=\"student\"\n                          id=\"student\"\n                          value={values.student}\n                          onChange={handleChange(\"student\")}\n                          onBlur={setFieldTouched}\n                        />\n                        {errors.student && touched.student ? (\n                          <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                            {errors.student}\n                          </div>\n                        ) : null}\n                      </FormGroup> */}\n                      {/* Changes ended for a single student marks retrieval */}\n                      <Button\n                        color=\"primary\"\n                        className=\"float-right  buttonStyle\"\n                        size=\"lg\"\n                        type=\"submit\"\n                        style={{ margin: '2% 0% 10% 6%' }}\n                      >\n                        <span className=\"label\">\n                          <IntlMessages id=\"button.Next\" />\n                        </span>\n                      </Button>\n                    </Colxx>\n                  </Row>\n                </Form>\n              )}\n            </Formik>\n          ) : (\n            <>\n              <Row\n                className=\"border border bg-primary me-5 p-1 \"\n                style={{ marginInline: '6%' }}\n              >\n                <Colxx xxs=\"2\">\n                  <Label>\n                    <IntlMessages id=\"forms.FieldLabel\" />\n                  </Label>\n                  {/* {console.log('selectedDepartment', selectedDepartment)} */}\n                  <h6>{selectedDepartment.label}</h6>\n                </Colxx>\n\n                <Colxx xxs=\"2\">\n                  <Label>\n                    <IntlMessages id=\"forms.StudyTimeLabel\" />\n                  </Label>\n                  <h6>{selecedStudyTime.label}</h6>\n                </Colxx>\n                <Colxx xxs=\"2\">\n                  <Label>\n                    <IntlMessages id=\"marks.ClassLabel\" />\n                  </Label>\n                  <h6>{selectedClassLabel.classs}</h6>\n                </Colxx>\n\n                <Colxx xxs=\"2\">\n                  <Label>\n                    <IntlMessages id=\"marks.SemesterLabel\" />\n                  </Label>\n                  <h6>{selectedClassLabel.semester}</h6>\n                </Colxx>\n\n                <Colxx xxs=\"2\">\n                  <Label>\n                    <IntlMessages id=\"marks.SectionLabel\" />\n                  </Label>\n                  <h6>{selectedClassLabel.section}</h6>\n                </Colxx>\n\n                <Colxx xxs=\"2\">\n                  <Label>\n                    <IntlMessages id=\"marks.SubjectLabel\" />\n                  </Label>\n                  <h6>{selectedSubject.label}</h6>\n                </Colxx>\n              </Row>\n\n              <Row\n                className=\"justify-content-center  border border\"\n                style={{ marginInline: '6%' }}\n              >\n                <table className=\"table \">\n                  <thead className=\"thead-dark\">\n                    <tr>\n                      <th scope=\"col\">\n                        <IntlMessages id=\"marks.No\" />\n                      </th>\n                      <th scope=\"col\">\n                        <IntlMessages id=\"marks.FullName\" />\n                      </th>\n                      <th scope=\"col\">\n                        <IntlMessages id=\"marks.FatherName\" />\n                      </th>\n                      <th scope=\"col\">\n                        <IntlMessages id=\"marks.ID\" />\n                      </th>\n                      <th scope=\"col\">\n                        <IntlMessages id=\"marks.firstChance\" />\n                      </th>\n                      <th scope=\"col\">\n                        <IntlMessages id=\"marks.secondChance\" />\n                      </th>{' '}\n                      {grad ? (\n                        <th scope=\"col\">\n                          <IntlMessages id=\"marks.grade\" />\n                        </th>\n                      ) : null}\n                      {gpa ? (\n                        <th scope=\"col\">\n                          <IntlMessages id=\"marks.gpa\" />\n                        </th>\n                      ) : null}\n                      <th scope=\"col\">\n                        <IntlMessages id=\"marks.result\" />\n                      </th>{' '}\n                    </tr>\n                  </thead>\n                  {/* </table>\n              </Row>\n\n              <Row\n                className=\"justify-content-center  border border\"\n                style={{\n                  marginInline: '16%',\n                  height: '30rem',\n                  overflowY: 'scroll',\n                  overflowX: 'hidden',\n                }}\n              >\n                <table class=\"table\"> */}\n                  {/* <tbody\n                    className=\"border border \"\n                    style={{\n                      height: '200px',\n                      overflowY: 'scroll',\n                      overflowX: 'hidden',\n                    }}\n                  >\n                    {students.map((student, index) => (\n                      <tr>\n                        <th scope=\"row\">{index}</th>\n                        <td>{student.name}</td>\n                        <td>{student.father_name}</td>\n                        <td>{student.student_id}</td>\n                        <td>{student.marks}</td>\n                      </tr>\n                    ))}\n                  </tbody> */}\n\n                  {tbodies}\n                  <tfoot className=\"thead-dark\">\n                    <tr>\n                      <th scope=\"col\">\n                        <IntlMessages id=\"marks.No\" />\n                      </th>\n                      <th scope=\"col\">\n                        <IntlMessages id=\"marks.FullName\" />\n                      </th>\n                      <th scope=\"col\">\n                        <IntlMessages id=\"marks.FatherName\" />\n                      </th>\n                      <th scope=\"col\">\n                        <IntlMessages id=\"marks.ID\" />\n                      </th>\n                      <th scope=\"col\">\n                        <IntlMessages id=\"marks.Marks\" />\n                      </th>\n                      {grad ? (\n                        <th scope=\"col\">\n                          <IntlMessages id=\"marks.grade\" />\n                        </th>\n                      ) : null}\n                      {gpa ? (\n                        <th scope=\"col\">\n                          <IntlMessages id=\"marks.gpa\" />\n                        </th>\n                      ) : null}\n                      <th scope=\"col\">\n                        <IntlMessages id=\"marks.type\" />\n                      </th>{' '}\n                      <th scope=\"col\">\n                        <IntlMessages id=\"marks.result\" />\n                      </th>{' '}\n                    </tr>\n                  </tfoot>\n                </table>\n              </Row>\n              <Row className=\" justify-content-center\">\n                <Colxx xxs=\"9\" className=\"m-5\">\n                  <Button className=\" m-4\" onClick={() => setIsNext(false)}>\n                    <IntlMessages id=\"button.Back\" />\n                  </Button>\n                </Colxx>\n              </Row>\n            </>\n          )}\n        </CardBody>\n      </Card>\n    </>\n  );\n};\n\nexport default MarksDisplay;\n","// this compoenent is used to show the list of students whose marks have been uploaded and verified, but students upgraded/degraded class has not been assigned yet\n\nimport React, { useState, useEffect } from 'react';\nimport { Formik, Form, Field } from 'formik';\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\nimport callApi from 'helpers/callApi';\nimport currentUser from 'helpers/currentUser';\nimport {\n  studyTimeOptions,\n  semesterValueOptions,\n  classOptions,\n  verificationValueOptions,\n  educationalYearsOptions,\n} from '../global-data/options';\nimport './../../../assets/css/global-style.css';\n\n// Year  and SHift\nimport * as Yup from 'yup';\nimport {\n  Row,\n  Card,\n  CardBody,\n  FormGroup,\n  Label,\n  Button,\n  CardTitle,\n  Input,\n} from 'reactstrap';\nimport Select from 'react-select';\nimport { NotificationManager } from 'components/common/react-notifications';\n\nimport IntlMessages from 'helpers/IntlMessages';\nimport { Colxx } from 'components/common/CustomBootstrap';\nimport {\n  FormikReactSelect,\n  FormikTagsInput,\n  FormikDatePicker,\n} from 'containers/form-validations/FormikFields';\nimport userEvent from '@testing-library/user-event';\nimport { async } from 'q';\n\nconst ValidationSchema = Yup.object().shape({\n  institute: Yup.object()\n    .shape({\n      value: Yup.string().required(),\n    })\n    .nullable()\n    .required(<IntlMessages id=\"forms.InstituteErr\" />),\n\n  educationlaYear: Yup.string().required(\n    <IntlMessages id=\"forms.educationYearErr\" />\n  ),\n\n  studyTime: Yup.object()\n    .shape({\n      value: Yup.string().required(),\n    })\n    .nullable()\n    .required(<IntlMessages id=\"forms.StudyTimeErr\" />),\n\n  classs: Yup.object()\n    .shape({\n      value: Yup.string().required(),\n    })\n    .nullable()\n    .required(<IntlMessages id=\"marks.ClassErr\" />),\n\n  department: Yup.object()\n    .shape({\n      value: Yup.string().required(),\n    })\n    .nullable()\n    .required(<IntlMessages id=\"teacher.departmentIdErr\" />),\n});\n\nconst initialValues = {\n  institute: [],\n  educationlaYear: '',\n  studyTime: [],\n  classs: [],\n  department: [],\n};\n\nconst submitInitialValues = {\n  verification: [],\n  examId: '',\n};\n\nconst SubjectMarksVerification = ({ match }) => {\n  const [isNext, setIsNext] = useState(false);\n\n  const [isSubmitted, setIsSubmitted] = useState(false);\n  const [fields, setFields] = useState([]);\n  const [institutes, setInstitutes] = useState([]);\n  const [subjects, setSubjects] = useState([]);\n  const [departments, setDepartments] = useState([]);\n  const [classes, setClasses] = useState([]);\n  const [students, setStudents] = useState([]);\n  const [selectedInstitute, setSelectedInstitute] = useState('');\n  const [selectedDepartment, setSelectedDepartment] = useState('');\n  const [selectedClass, setSelectedClass] = useState('');\n  const [selectedSemester, setSelectedSemester] = useState('');\n  const [selectedSubject, setSelectedSubject] = useState('');\n  const [selectedSection, setSelectedSection] = useState('');\n  const [selecedStudyTime, setSelectedStudyTime] = useState('');\n  const [selectedEducationalYear, setSelectedEducationalYear] = useState('');\n  const [passingScore, setPassingScore] = useState(55);\n  const [subjectGrad, setSubjectGrad] = useState();\n  const [subjectGPA, setSubjectGPA] = useState();\n\n  const { markId } = useParams();\n\n  //   if (markId) {\n  //     useEffect(() => {\n  //       async function fetchStudent() {\n  //         const { data } = await axios.get(\n  //           `${studentMarkId}/?student_id=${markId}`\n  //         );\n  //         console.log(data, 'object of the data');\n\n  //         // const instGender = genderOptions.map((studentGender) => {\n  //         //   if (studentGender.value === data[0].gender) {\n  //         //     setInitialGender(studentGender);\n  //         //   }\n  //         // });\n  //       }\n  //       fetchStudent();\n  //       //setUpdateMode(true);\n  //     }, []);\n  //   }\n\n  const fetchInstitutes = async () => {\n    const response = await callApi('institute/', '', null);\n    if (response.data && response.status === 200) {\n      const updatedData = await response.data.map((item) => ({\n        value: item.id,\n        label: item.name,\n      }));\n      setInstitutes(updatedData);\n    } else {\n      console.log('institute error');\n    }\n  };\n\n  const fetchDepartments = async (instituteId) => {\n    if (!instituteId || !instituteId.value) {\n      return;\n    }\n    const response = await callApi(\n      `institute/institite-department/?institute=${instituteId.value}`,\n      '',\n      null\n    );\n    // console.log('response of department', response);\n    if (response.data && response.status === 200) {\n      console.log('response of department', response);\n      const updatedData = await response.data.map((item) => ({\n        value: item.department.id,\n        label: item.department.name,\n      }));\n      console.log('updatedData of department', updatedData);\n      setDepartments(updatedData); //Set it up when data in Backend is ready\n    } else {\n      console.log('department error');\n    }\n  };\n  const fetchSubjects = async () => {\n    const response = await callApi('institute/subject/', '', null);\n    if (response.data && response.status === 200) {\n      const updatedData = await response.data.map((item) => ({\n        value: item.id,\n        label: item.name,\n      }));\n      setSubjects(updatedData);\n    } else {\n      console.log('subject error');\n    }\n  };\n\n  useEffect(() => {\n    if (selectedInstitute) {\n      console.log('selectedInstitute', selectedInstitute);\n      fetchDepartments(selectedInstitute);\n    }\n  }, [selectedInstitute]);\n\n  const fetchClasses = async () => {\n    const response = await callApi('institute/classs/', '', null);\n    if (response.data && response.status === 200) {\n      const updatedData = await response.data.map((item) => ({\n        value: item.id,\n        label: item.name + ' - ' + item.semester + ' - ' + item.section,\n      }));\n      setClasses(updatedData);\n    } else {\n      console.log('class error');\n    }\n  };\n\n  useEffect(() => {\n    fetchInstitutes();\n    fetchClasses();\n    fetchSubjects();\n  }, []);\n\n  // notification message\n  const createNotification = (type, className) => {\n    const cName = className || '';\n    switch (type) {\n      case 'success':\n        NotificationManager.success(\n          'نمری په بریالیتوب سره تاید شوی',\n          'موفقیت',\n          3000,\n          null,\n          null,\n          cName\n        );\n        break;\n      case 'error':\n        NotificationManager.error(\n          'نمری تاید نشوی, بیا کوشش وکری',\n          'خطا',\n          9000,\n          () => {\n            alert('callback');\n          },\n          null,\n          cName\n        );\n        break;\n      default:\n        NotificationManager.info('Info message');\n        break;\n    }\n  };\n\n  const fechtStudents = async () => {\n    console.log('selecedStudyTime.value', selecedStudyTime.value);\n    const response = await callApi(\n      `students/marks-verification-subjects-list/?institute=${selectedInstitute.value}&shift=${selecedStudyTime.value}&department=${selectedDepartment.value}&educational_year=${selectedEducationalYear.value}&subject=${selectedSubject.value}&classs=${selectedClass.value}`,\n      '',\n      null\n    );\n    if (response.data && response.status === 200) {\n      console.log('response of students', response);\n      setStudents(response.data);\n      setIsNext(true);\n    } else {\n      console.log('students error');\n    }\n  };\n\n  const onSubmit = async (values) => {\n    const educationalYear = selectedEducationalYear;\n    const instituteId = selectedInstitute.value;\n    const departmentId = selectedDepartment.value;\n    const classId = selectedClass.value;\n    const subjectId = selectedSubject.value;\n    console.log('values', values);\n\n    const newStudents = students.map((student, index) => {\n      return {\n        student: student.student,\n        verification_result: values.verification[student.student].value,\n        exam_id: student.class_exam_id,\n      };\n    });\n    console.log('newStudents', newStudents);\n\n    let data = [\n      {\n        subject: subjectId,\n        classs: classId,\n      },\n      ...newStudents,\n    ];\n\n    const response = await callApi(\n      'students/verify-subject-marks/',\n      'POST',\n      data\n    );\n    if (\n      response.status === 200 ||\n      response.status === 201 ||\n      response.status === 202\n    ) {\n      console.log('response of students', response);\n      setIsSubmitted(true);\n      createNotification('success', 'filled');\n    } else {\n      console.log('marks error');\n      // setIsSubmitted(false);\n      createNotification('error', 'filled');\n    }\n  };\n\n  return (\n    <>\n      <Card>\n        <div className=\"mt-4 ml-5\">\n          <h2 className=\"mt-5 m-5 titleStyle\">\n            {/* {<IntlMessages id=\"student.assignment-to-class\" />} */}د نمرو\n            تایدی\n          </h2>\n        </div>\n        <CardBody>\n          {!isNext ? (\n            <Formik\n              initialValues={initialValues}\n              onSubmit={fechtStudents}\n              // validationSchema={ValidationSchema}\n            >\n              {({\n                errors,\n                touched,\n                values,\n                setFieldTouched,\n                setFieldValue,\n              }) => (\n                <Form className=\"av-tooltip tooltip-label-right  style\">\n                  <Row className=\"m-5\">\n                    <Colxx xxs=\"6\">\n                      {/* set if condition, if institutes are loaded */}\n                      <FormGroup className=\"form-group has-float-label error-l-150 \">\n                        <Label>\n                          <IntlMessages id=\"forms.InstituteLabel\" />\n                        </Label>\n                        <FormikReactSelect\n                          name=\"institute\"\n                          id=\"institute\"\n                          value={values.institute}\n                          options={institutes}\n                          onChange={setFieldValue}\n                          onBlur={setFieldTouched}\n                          onClick={setSelectedInstitute(values.institute)}\n                        />\n\n                        {errors.institute && touched.institute ? (\n                          <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                            {errors.institute}\n                          </div>\n                        ) : null}\n                      </FormGroup>\n\n                      <FormGroup className=\"form-group has-float-label mt-5  error-l-150\">\n                        <Label>\n                          <IntlMessages id=\"forms.StudyTimeLabel\" />\n                        </Label>\n                        <FormikReactSelect\n                          name=\"studyTime\"\n                          id=\"studyTime\"\n                          value={values.studyTime}\n                          options={studyTimeOptions}\n                          onChange={setFieldValue}\n                          onBlur={setFieldTouched}\n                          onClick={setSelectedStudyTime(values.studyTime)}\n                        />\n                        {errors.studyTime && touched.studyTime ? (\n                          <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                            {errors.studyTime}\n                          </div>\n                        ) : null}\n                      </FormGroup>\n\n                      <FormGroup className=\"form-group has-float-label mt-5  error-l-150\">\n                        <Label>\n                          <IntlMessages id=\"forms.educationYearLabel\" />\n                        </Label>\n                        <FormikReactSelect\n                          name=\"educationalYear\"\n                          id=\"educationalYear\"\n                          options={educationalYearsOptions}\n                          onChange={setFieldValue}\n                          onBlur={setFieldTouched}\n                          onClick={setSelectedEducationalYear(\n                            values.educationalYear\n                          )}\n                        />\n                        {errors.educationalYear && touched.educationalYear ? (\n                          <div className=\"invalid-feedback d-block bg-danger text-white \">\n                            {errors.educationalYear}\n                          </div>\n                        ) : null}\n                      </FormGroup>\n                    </Colxx>\n\n                    <Colxx xxs=\"6\">\n                      <FormGroup className=\"form-group has-float-label error-l-150 \">\n                        <Label>\n                          <IntlMessages id=\"marks.ClassLabel\" />\n                        </Label>\n                        <FormikReactSelect\n                          name=\"classs\"\n                          id=\"classs\"\n                          value={values.classs}\n                          options={classes}\n                          onChange={setFieldValue}\n                          onBlur={setFieldTouched}\n                          onClick={setSelectedClass(values.classs)}\n                          required\n                        />\n                        {errors.classs && touched.classs ? (\n                          <div className=\"invalid-feedback d-block bg-danger text-white \">\n                            {errors.classs}\n                          </div>\n                        ) : null}\n                      </FormGroup>\n\n                      <FormGroup className=\"form-group has-float-label mt-5 error-l-150\">\n                        <Label>\n                          <IntlMessages id=\"forms.studyDepartment\" />\n                        </Label>\n                        <FormikReactSelect\n                          name=\"department\"\n                          id=\"department\"\n                          value={values.department}\n                          options={departments}\n                          onChange={setFieldValue}\n                          onBlur={setFieldTouched}\n                          onClick={setSelectedDepartment(values.department)}\n                          required\n                        />\n                        {errors.department && touched.department ? (\n                          <div className=\"invalid-feedback d-block bg-danger text-white \">\n                            {errors.department}\n                          </div>\n                        ) : null}\n                      </FormGroup>\n\n                      <FormGroup className=\"form-group has-float-label mt-5 error-l-150\">\n                        <Label>\n                          <IntlMessages id=\"marks.SubjectLabel\" />\n                        </Label>\n                        <FormikReactSelect\n                          name=\"subject\"\n                          id=\"subject\"\n                          value={values.subject}\n                          options={subjects}\n                          onChange={setFieldValue}\n                          onBlur={setFieldTouched}\n                          onClick={setSelectedSubject(values.subject)}\n                          required\n                        />\n                        {errors.subject && touched.subject ? (\n                          <div className=\"invalid-feedback d-block bg-danger text-white \">\n                            {errors.subject}\n                          </div>\n                        ) : null}\n                      </FormGroup>\n                    </Colxx>\n                  </Row>\n                  <Row>\n                    <Colxx>\n                      <Button\n                        color=\"primary\"\n                        className=\"float-right  buttonStyle\"\n                        size=\"lg\"\n                        type=\"submit\"\n                        style={{ margin: '2% 0% 10% 6%' }}\n                      >\n                        <span className=\"label\">\n                          <IntlMessages id=\"button.Next\" />\n                        </span>\n                      </Button>\n                    </Colxx>\n                  </Row>\n                </Form>\n              )}\n            </Formik>\n          ) : (\n            <>\n              {!isSubmitted ? (\n                <>\n                  <Row\n                    className=\"border border bg-primary me-5 p-1 \"\n                    style={{ marginInline: '16%' }}\n                  >\n                    <Colxx xxs=\"2\">\n                      <Label style={{ fontSize: '20px', fontWeight: 'bold' }}>\n                        <IntlMessages id=\"forms.FieldLabel\" />\n                      </Label>\n                      {console.log('selectedDepartment', selectedDepartment)}\n                      <h5>{selectedDepartment.label}</h5>\n                    </Colxx>\n\n                    <Colxx xxs=\"2\">\n                      <Label style={{ fontSize: '20px', fontWeight: 'bold' }}>\n                        <IntlMessages id=\"marks.ClassLabel\" />\n                      </Label>\n                      <h5>{selectedClass.label}</h5>\n                    </Colxx>\n                    <Colxx xxs=\"2\">\n                      <Label style={{ fontSize: '20px', fontWeight: 'bold' }}>\n                        <IntlMessages id=\"marks.SemesterLabel\" />\n                      </Label>\n                      <h5>{selectedSemester.label}</h5>\n                    </Colxx>\n\n                    <Colxx xxs=\"2\">\n                      <Label style={{ fontSize: '20px', fontWeight: 'bold' }}>\n                        <IntlMessages id=\"forms.StudyTimeLabel\" />\n                      </Label>\n                      <h5>{selecedStudyTime.label}</h5>\n                    </Colxx>\n                  </Row>\n                  <Formik\n                    initialValues={submitInitialValues}\n                    onSubmit={onSubmit}\n                    // validationSchema={ValidationSchema}\n                  >\n                    {({ errors, values, setFieldValue, setFieldTouched }) => (\n                      <Form className=\"av-tooltip tooltip-label-right \">\n                        <Row\n                          className=\"justify-content-center  border border\"\n                          style={{\n                            marginInline: '16%',\n                            height: '30rem',\n                            overflowY: 'scroll',\n                            overflowX: 'hidden',\n                          }}\n                        >\n                          <table class=\"table \">\n                            <thead className=\"thead-dark\">\n                              <tr>\n                                <th\n                                  scope=\"col\"\n                                  style={{\n                                    fontSize: '15px',\n                                    textAlign: 'center',\n                                  }}\n                                >\n                                  <IntlMessages id=\"marks.No\" />\n                                </th>\n                                <th\n                                  scope=\"col\"\n                                  style={{\n                                    fontSize: '15px',\n                                    textAlign: 'center',\n                                  }}\n                                >\n                                  <IntlMessages id=\"marks.FullName\" />\n                                </th>\n                                <th\n                                  scope=\"col\"\n                                  style={{\n                                    fontSize: '15px',\n                                    textAlign: 'center',\n                                  }}\n                                >\n                                  <IntlMessages id=\"marks.FatherName\" />\n                                </th>\n                                <th\n                                  scope=\"col\"\n                                  style={{\n                                    fontSize: '15px',\n                                    textAlign: 'center',\n                                  }}\n                                >\n                                  <IntlMessages id=\"marks.ID\" />\n                                </th>\n                                <th\n                                  scope=\"col\"\n                                  style={{\n                                    fontSize: '15px',\n                                    textAlign: 'center',\n                                  }}\n                                >\n                                  <IntlMessages id=\"marks.Marks\" />\n                                </th>\n                                <th\n                                  scope=\"col\"\n                                  style={{\n                                    fontSize: '15px',\n                                    textAlign: 'center',\n                                  }}\n                                >\n                                  {/* <IntlMessages id=\"marks.Marks\" /> */}\n                                  result\n                                </th>\n                              </tr>\n                            </thead>\n                            <tbody\n                              className=\"border border \"\n                              style={{\n                                overflowY: 'scroll',\n                                overflowX: 'hidden',\n                              }}\n                            >\n                              {students.length > 0 &&\n                                students.map((student, index) => {\n                                  return (\n                                    <tr key={index}>\n                                      <th\n                                        scope=\"row\"\n                                        style={{\n                                          fontSize: '20px',\n                                          textAlign: 'center',\n                                        }}\n                                      >\n                                        {index + 1}\n                                      </th>\n                                      <td\n                                        style={{\n                                          fontSize: '20px',\n                                          textAlign: 'center',\n                                        }}\n                                      >\n                                        {student.student_name}\n                                      </td>\n                                      <td\n                                        style={{\n                                          fontSize: '20px',\n                                          textAlign: 'center',\n                                        }}\n                                      >\n                                        {student.student_father_name}\n                                      </td>\n                                      <td\n                                        style={{\n                                          fontSize: '20px',\n                                          textAlign: 'center',\n                                        }}\n                                      >\n                                        {student.student}\n                                      </td>\n                                      <td\n                                        style={{\n                                          fontSize: '20px',\n                                          textAlign: 'center',\n                                        }}\n                                      >\n                                        {student.subject_id.map((subject) => {\n                                          return (\n                                            <>\n                                              {subject.second_chance_marks ||\n                                                subject.marks}\n                                            </>\n                                          );\n                                        })}\n                                      </td>\n\n                                      {/* Marks Entry */}\n                                      <td>\n                                        <div\n                                          style={{\n                                            margin: '-7px',\n                                            fontSize: '15px',\n                                          }}\n                                        >\n                                          {/* <Field\n                                          type=\"number\"\n                                          style={{\n                                            fontSize: '15px',\n                                            textAlign: 'center',\n                                          }}\n                                          className=\"form-control\"\n                                          name={`score[${student.student_id}]`}\n                                        />\n                                        {errors.score && touched.score ? (\n                                          <div className=\"invalid-feedback d-block\">\n                                            {errors.score}\n                                          </div>\n                                        ) : null} */}\n\n                                          <FormikReactSelect\n                                            name={`verification[${student.student}]`}\n                                            id={`verification[${student.student}]`}\n                                            // value={`values.section[${student.student_id}]`}\n                                            options={verificationValueOptions}\n                                            onChange={setFieldValue}\n                                            onBlur={setFieldTouched}\n                                            required\n                                          />\n                                          {errors.verification &&\n                                          touched.verification ? (\n                                            <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                                              {errors.verification}\n                                            </div>\n                                          ) : null}\n                                        </div>\n                                      </td>\n                                    </tr>\n                                  );\n                                })}\n                            </tbody>\n                            <tfoot className=\"thead-dark\">\n                              <tr>\n                                <th\n                                  scope=\"col\"\n                                  style={{\n                                    fontSize: '15px',\n                                    textAlign: 'center',\n                                  }}\n                                >\n                                  <IntlMessages id=\"marks.No\" />\n                                </th>\n                                <th\n                                  scope=\"col\"\n                                  style={{\n                                    fontSize: '15px',\n                                    textAlign: 'center',\n                                  }}\n                                >\n                                  <IntlMessages id=\"marks.FullName\" />\n                                </th>\n                                <th\n                                  scope=\"col\"\n                                  style={{\n                                    fontSize: '15px',\n                                    textAlign: 'center',\n                                  }}\n                                >\n                                  <IntlMessages id=\"marks.FatherName\" />\n                                </th>\n                                <th\n                                  scope=\"col\"\n                                  style={{\n                                    fontSize: '15px',\n                                    textAlign: 'center',\n                                  }}\n                                >\n                                  <IntlMessages id=\"marks.ID\" />\n                                </th>\n                                <th\n                                  scope=\"col\"\n                                  style={{\n                                    fontSize: '15px',\n                                    textAlign: 'center',\n                                  }}\n                                >\n                                  <IntlMessages id=\"marks.Marks\" />\n                                </th>\n                                <th\n                                  scope=\"col\"\n                                  style={{\n                                    fontSize: '15px',\n                                    textAlign: 'center',\n                                  }}\n                                >\n                                  result\n                                </th>\n                              </tr>\n                            </tfoot>\n                          </table>\n                        </Row>\n                        <Row className=\" justify-content-center\">\n                          <Colxx xxs=\"9\" className=\"m-5\">\n                            <Button\n                              className=\" m-4 \"\n                              color=\"primary\"\n                              onClick={() => setIsNext(false)}\n                            >\n                              <IntlMessages id=\"button.Back\" />\n                            </Button>\n\n                            <div className=\"d-flex justify-content-between align-items-center m-4 float-right\">\n                              <Button\n                                size=\"lg\"\n                                type=\"submit\"\n                                color=\"primary\"\n                                // onSubmit={onSubmit}\n                                // onClick={() => setIsSubmitted(true)}\n                              >\n                                <IntlMessages id=\"button.SubmitButton\" />\n                              </Button>\n                            </div>\n                          </Colxx>\n                        </Row>\n                      </Form>\n                    )}\n                  </Formik>\n                </>\n              ) : (\n                <div className=\"wizard-basic-step text-center pt-3\">\n                  <div>\n                    <h1 className=\"mb-2\">\n                      <IntlMessages id=\"wizard.content-thanks\" />\n                    </h1>\n                    <h3>\n                      {/* <IntlMessages id=\"wizard.registered\" /> */}\n                      زده کوونکو ته صنف په بریالیتوب سره تعین شو\n                    </h3>\n                    <Button\n                      className=\"m-5 bg-primary\"\n                      // onClick={() => window.location.reload()}\n                      onClick={() => {\n                        setIsNext(false);\n                        setIsSubmitted(false);\n                      }}\n                    >\n                      <IntlMessages id=\"button.Back\" />\n                    </Button>\n                  </div>\n                </div>\n              )}\n            </>\n          )}\n        </CardBody>\n      </Card>\n    </>\n  );\n};\n\nexport default SubjectMarksVerification;\n","const currentUser = () => {\n  const user = JSON.parse(localStorage.getItem('user'));\n  console.log('user is here', user.user_id);\n  return user.user_id;\n};\n\nexport default currentUser;\n"],"sourceRoot":""}