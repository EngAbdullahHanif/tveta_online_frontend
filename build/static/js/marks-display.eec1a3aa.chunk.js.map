{"version":3,"file":"static/js/marks-display.eec1a3aa.chunk.js","mappings":"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","sources":["views/app/students/subject-marks-verification.js","views/app/students/subject-marks.js"],"sourcesContent":["// this compoenent is used to show the list of students whose marks have been uploaded and verified, but students upgraded/degraded class has not been assigned yet\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport { Formik, Form } from 'formik';\nimport { useParams } from 'react-router-dom';\nimport callApi from 'helpers/callApi';\nimport {\n  studyTimeOptions,\n  verificationValueOptions,\n  educationalYearsOptions,\n} from '../global-data/options';\nimport './../../../assets/css/global-style.css';\n\n// Year  and SHift\nimport * as Yup from 'yup';\nimport { Row, Card, CardBody, FormGroup, Label, Button } from 'reactstrap';\nimport { NotificationManager } from 'components/common/react-notifications';\n\nimport IntlMessages from 'helpers/IntlMessages';\nimport { Colxx } from 'components/common/CustomBootstrap';\nimport { FormikReactSelect } from 'containers/form-validations/FormikFields';\nimport { AuthContext } from 'context/AuthContext';\n\nconst ValidationSchema = Yup.object().shape({\n  institute: Yup.object()\n    .shape({\n      value: Yup.string().required(),\n    })\n    .nullable()\n    .required(<IntlMessages id=\"forms.InstituteErr\" />),\n\n  educationlaYear: Yup.string().required(\n    <IntlMessages id=\"forms.educationYearErr\" />,\n  ),\n\n  studyTime: Yup.object()\n    .shape({\n      value: Yup.string().required(),\n    })\n    .nullable()\n    .required(<IntlMessages id=\"forms.StudyTimeErr\" />),\n\n  classs: Yup.object()\n    .shape({\n      value: Yup.string().required(),\n    })\n    .nullable()\n    .required(<IntlMessages id=\"marks.ClassErr\" />),\n\n  department: Yup.object()\n    .shape({\n      value: Yup.string().required(),\n    })\n    .nullable()\n    .required(<IntlMessages id=\"teacher.departmentIdErr\" />),\n});\n\nconst initialValues = {\n  institute: [],\n  educationlaYear: '',\n  studyTime: [],\n  classs: [],\n  department: [],\n};\n\nconst submitInitialValues = {\n  verification: [],\n  examId: '',\n};\n\nconst SubjectMarksVerification = ({ match }) => {\n  const { institutes } = useContext(AuthContext);\n  const [isNext, setIsNext] = useState(false);\n\n  const [isSubmitted, setIsSubmitted] = useState(false);\n  const [fields, setFields] = useState([]);\n  // const [institutes, setInstitutes] = useState([]);\n  const [subjects, setSubjects] = useState([]);\n  const [departments, setDepartments] = useState([]);\n  const [classes, setClasses] = useState([]);\n  const [students, setStudents] = useState([]);\n  const [selectedInstitute, setSelectedInstitute] = useState('');\n  const [selectedDepartment, setSelectedDepartment] = useState('');\n  const [selectedClass, setSelectedClass] = useState('');\n  const [selectedSemester, setSelectedSemester] = useState('');\n  const [selectedSubject, setSelectedSubject] = useState('');\n  const [selectedSection, setSelectedSection] = useState('');\n  const [selecedStudyTime, setSelectedStudyTime] = useState('');\n  const [selectedEducationalYear, setSelectedEducationalYear] = useState('');\n  const [passingScore, setPassingScore] = useState(55);\n  const [subjectGrad, setSubjectGrad] = useState();\n  const [subjectGPA, setSubjectGPA] = useState();\n\n  const { markId } = useParams();\n\n  //   if (markId) {\n  //     useEffect(() => {\n  //       async function fetchStudent() {\n  //         const { data } = await axios.get(\n  //           `${studentMarkId}/?student_id=${markId}`\n  //         );\n  //         console.log(data, 'object of the data');\n\n  //         // const instGender = genderOptions.map((studentGender) => {\n  //         //   if (studentGender.value === data[0].gender) {\n  //         //     setInitialGender(studentGender);\n  //         //   }\n  //         // });\n  //       }\n  //       fetchStudent();\n  //       //setUpdateMode(true);\n  //     }, []);\n  //   }\n\n  // const fetchInstitutes = async () => {\n  //   const response = await callApi('institute/', '', null);\n  //   if (response.data && response.status === 200) {\n  //     const updatedData = await response.data.map((item) => ({\n  //       value: item.id,\n  //       label: item.name,\n  //     }));\n  //     setInstitutes(updatedData);\n  //   } else {\n  //     console.log('institute error');\n  //   }\n  // };\n\n  const fetchDepartments = async (instituteId) => {\n    if (!instituteId || !instituteId.value) {\n      return;\n    }\n    const response = await callApi(\n      `institute/institite-department/?institute=${instituteId.value}`,\n      '',\n      null,\n    );\n    // console.log('response of department', response);\n    if (response.data && response.status === 200) {\n      console.log('response of department', response);\n      const updatedData = await response.data.map((item) => ({\n        value: item.department.id,\n        label: item.department.name,\n      }));\n      console.log('updatedData of department', updatedData);\n      setDepartments(updatedData); //Set it up when data in Backend is ready\n    } else {\n      console.log('department error');\n    }\n  };\n  const fetchSubjects = async () => {\n    const response = await callApi('institute/subject/', '', null);\n    if (response.data && response.status === 200) {\n      const updatedData = await response.data.map((item) => ({\n        value: item.id,\n        label: item.name,\n      }));\n      setSubjects(updatedData);\n    } else {\n      console.log('subject error');\n    }\n  };\n\n  useEffect(() => {\n    if (selectedInstitute) {\n      console.log('selectedInstitute', selectedInstitute);\n      fetchDepartments(selectedInstitute);\n    }\n  }, [selectedInstitute]);\n\n  const fetchClasses = async () => {\n    const response = await callApi('institute/classs/', '', null);\n    if (response.data && response.status === 200) {\n      const updatedData = await response.data.map((item) => ({\n        value: item.id,\n        label: item.name + ' - ' + item.semester + ' - ' + item.section,\n      }));\n      setClasses(updatedData);\n    } else {\n      console.log('class error');\n    }\n  };\n\n  useEffect(() => {\n    // fetchInstitutes();\n    fetchClasses();\n    fetchSubjects();\n  }, []);\n\n  // notification message\n  const createNotification = (type, className) => {\n    const cName = className || '';\n    switch (type) {\n      case 'success':\n        NotificationManager.success(\n          'نمری په بریالیتوب سره تاید شوی',\n          'موفقیت',\n          3000,\n          null,\n          null,\n          cName,\n        );\n        break;\n      case 'error':\n        NotificationManager.error(\n          'نمری تاید نشوی, بیا کوشش وکری',\n          'خطا',\n          9000,\n          () => {\n            alert('callback');\n          },\n          null,\n          cName,\n        );\n        break;\n      default:\n        NotificationManager.info('Info message');\n        break;\n    }\n  };\n\n  const fechtStudents = async () => {\n    console.log('selecedStudyTime.value', selecedStudyTime.value);\n    const response = await callApi(\n      `students/marks-verification-subjects-list/?institute=${selectedInstitute.value}&shift=${selecedStudyTime.value}&department=${selectedDepartment.value}&educational_year=${selectedEducationalYear.value}&subject=${selectedSubject.value}&classs=${selectedClass.value}`,\n      '',\n      null,\n    );\n    if (response.data && response.status === 200) {\n      console.log('response of students', response);\n      setStudents(response.data);\n      setIsNext(true);\n    } else {\n      console.log('students error');\n    }\n  };\n\n  const onSubmit = async (values) => {\n    const educationalYear = selectedEducationalYear;\n    const instituteId = selectedInstitute.value;\n    const departmentId = selectedDepartment.value;\n    const classId = selectedClass.value;\n    const subjectId = selectedSubject.value;\n    console.log('values', values);\n\n    const newStudents = students.map((student, index) => {\n      return {\n        student: student.student,\n        verification_result: values.verification[student.student].value,\n        exam_id: student.class_exam_id,\n      };\n    });\n    console.log('newStudents', newStudents);\n\n    let data = [\n      {\n        subject: subjectId,\n        classs: classId,\n      },\n      ...newStudents,\n    ];\n\n    const response = await callApi(\n      'students/verify-subject-marks/',\n      'POST',\n      data,\n    );\n    if (\n      response.status === 200 ||\n      response.status === 201 ||\n      response.status === 202\n    ) {\n      console.log('response of students', response);\n      setIsSubmitted(true);\n      createNotification('success', 'filled');\n    } else {\n      console.log('marks error');\n      // setIsSubmitted(false);\n      createNotification('error', 'filled');\n    }\n  };\n\n  return (\n    <>\n      <Card>\n        <div className=\"mt-4 ml-5\">\n          <h2 className=\"mt-5 m-5 titleStyle\">\n            {/* {<IntlMessages id=\"student.assignment-to-class\" />} */}د نمرو\n            تایدی\n          </h2>\n        </div>\n        <CardBody>\n          {!isNext ? (\n            <Formik\n              initialValues={initialValues}\n              onSubmit={fechtStudents}\n              // validationSchema={ValidationSchema}\n            >\n              {({\n                errors,\n                touched,\n                values,\n                setFieldTouched,\n                setFieldValue,\n              }) => (\n                <Form className=\"av-tooltip tooltip-label-right  style\">\n                  <Row className=\"m-5\">\n                    <Colxx xxs=\"6\">\n                      {/* set if condition, if institutes are loaded */}\n                      <FormGroup className=\"form-group has-float-label error-l-150 \">\n                        <Label>\n                          <IntlMessages id=\"forms.InstituteLabel\" />\n                        </Label>\n                        <FormikReactSelect\n                          name=\"institute\"\n                          id=\"institute\"\n                          value={values.institute}\n                          options={institutes}\n                          onChange={setFieldValue}\n                          onBlur={setFieldTouched}\n                          onClick={setSelectedInstitute(values.institute)}\n                        />\n\n                        {errors.institute && touched.institute ? (\n                          <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                            {errors.institute}\n                          </div>\n                        ) : null}\n                      </FormGroup>\n\n                      <FormGroup className=\"form-group has-float-label mt-5  error-l-150\">\n                        <Label>\n                          <IntlMessages id=\"forms.StudyTimeLabel\" />\n                        </Label>\n                        <FormikReactSelect\n                          name=\"studyTime\"\n                          id=\"studyTime\"\n                          value={values.studyTime}\n                          options={studyTimeOptions}\n                          onChange={setFieldValue}\n                          onBlur={setFieldTouched}\n                          onClick={setSelectedStudyTime(values.studyTime)}\n                        />\n                        {errors.studyTime && touched.studyTime ? (\n                          <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                            {errors.studyTime}\n                          </div>\n                        ) : null}\n                      </FormGroup>\n\n                      <FormGroup className=\"form-group has-float-label mt-5  error-l-150\">\n                        <Label>\n                          <IntlMessages id=\"forms.educationYearLabel\" />\n                        </Label>\n                        <FormikReactSelect\n                          name=\"educationalYear\"\n                          id=\"educationalYear\"\n                          options={educationalYearsOptions}\n                          onChange={setFieldValue}\n                          onBlur={setFieldTouched}\n                          onClick={setSelectedEducationalYear(\n                            values.educationalYear,\n                          )}\n                        />\n                        {errors.educationalYear && touched.educationalYear ? (\n                          <div className=\"invalid-feedback d-block bg-danger text-white \">\n                            {errors.educationalYear}\n                          </div>\n                        ) : null}\n                      </FormGroup>\n                    </Colxx>\n\n                    <Colxx xxs=\"6\">\n                      <FormGroup className=\"form-group has-float-label error-l-150 \">\n                        <Label>\n                          <IntlMessages id=\"marks.ClassLabel\" />\n                        </Label>\n                        <FormikReactSelect\n                          name=\"classs\"\n                          id=\"classs\"\n                          value={values.classs}\n                          options={classes}\n                          onChange={setFieldValue}\n                          onBlur={setFieldTouched}\n                          onClick={setSelectedClass(values.classs)}\n                          required\n                        />\n                        {errors.classs && touched.classs ? (\n                          <div className=\"invalid-feedback d-block bg-danger text-white \">\n                            {errors.classs}\n                          </div>\n                        ) : null}\n                      </FormGroup>\n\n                      <FormGroup className=\"form-group has-float-label mt-5 error-l-150\">\n                        <Label>\n                          <IntlMessages id=\"forms.studyDepartment\" />\n                        </Label>\n                        <FormikReactSelect\n                          name=\"department\"\n                          id=\"department\"\n                          value={values.department}\n                          options={departments}\n                          onChange={setFieldValue}\n                          onBlur={setFieldTouched}\n                          onClick={setSelectedDepartment(values.department)}\n                          required\n                        />\n                        {errors.department && touched.department ? (\n                          <div className=\"invalid-feedback d-block bg-danger text-white \">\n                            {errors.department}\n                          </div>\n                        ) : null}\n                      </FormGroup>\n\n                      <FormGroup className=\"form-group has-float-label mt-5 error-l-150\">\n                        <Label>\n                          <IntlMessages id=\"marks.SubjectLabel\" />\n                        </Label>\n                        <FormikReactSelect\n                          name=\"subject\"\n                          id=\"subject\"\n                          value={values.subject}\n                          options={subjects}\n                          onChange={setFieldValue}\n                          onBlur={setFieldTouched}\n                          onClick={setSelectedSubject(values.subject)}\n                          required\n                        />\n                        {errors.subject && touched.subject ? (\n                          <div className=\"invalid-feedback d-block bg-danger text-white \">\n                            {errors.subject}\n                          </div>\n                        ) : null}\n                      </FormGroup>\n                    </Colxx>\n                  </Row>\n                  <Row>\n                    <Colxx>\n                      <Button\n                        color=\"primary\"\n                        className=\"float-right  buttonStyle\"\n                        size=\"lg\"\n                        type=\"submit\"\n                        style={{ margin: '2% 0% 10% 6%' }}\n                      >\n                        <span className=\"label\">\n                          <IntlMessages id=\"button.Next\" />\n                        </span>\n                      </Button>\n                    </Colxx>\n                  </Row>\n                </Form>\n              )}\n            </Formik>\n          ) : (\n            <>\n              {!isSubmitted ? (\n                <>\n                  <Row\n                    className=\"border border bg-primary me-5 p-1 \"\n                    style={{ marginInline: '16%' }}\n                  >\n                    <Colxx xxs=\"2\">\n                      <Label style={{ fontSize: '20px', fontWeight: 'bold' }}>\n                        <IntlMessages id=\"forms.FieldLabel\" />\n                      </Label>\n                      {console.log('selectedDepartment', selectedDepartment)}\n                      <h5>{selectedDepartment.label}</h5>\n                    </Colxx>\n\n                    <Colxx xxs=\"2\">\n                      <Label style={{ fontSize: '20px', fontWeight: 'bold' }}>\n                        <IntlMessages id=\"marks.ClassLabel\" />\n                      </Label>\n                      <h5>{selectedClass.label}</h5>\n                    </Colxx>\n                    <Colxx xxs=\"2\">\n                      <Label style={{ fontSize: '20px', fontWeight: 'bold' }}>\n                        <IntlMessages id=\"marks.SemesterLabel\" />\n                      </Label>\n                      <h5>{selectedSemester.label}</h5>\n                    </Colxx>\n\n                    <Colxx xxs=\"2\">\n                      <Label style={{ fontSize: '20px', fontWeight: 'bold' }}>\n                        <IntlMessages id=\"forms.StudyTimeLabel\" />\n                      </Label>\n                      <h5>{selecedStudyTime.label}</h5>\n                    </Colxx>\n                  </Row>\n                  <Formik\n                    initialValues={submitInitialValues}\n                    onSubmit={onSubmit}\n                    // validationSchema={ValidationSchema}\n                  >\n                    {({ errors, touched, setFieldValue, setFieldTouched }) => (\n                      <Form className=\"av-tooltip tooltip-label-right \">\n                        <Row\n                          className=\"justify-content-center  border border\"\n                          style={{\n                            marginInline: '16%',\n                            height: '30rem',\n                            overflowY: 'scroll',\n                            overflowX: 'hidden',\n                          }}\n                        >\n                          <table class=\"table \">\n                            <thead className=\"thead-dark\">\n                              <tr>\n                                <th\n                                  scope=\"col\"\n                                  style={{\n                                    fontSize: '15px',\n                                    textAlign: 'center',\n                                  }}\n                                >\n                                  <IntlMessages id=\"marks.No\" />\n                                </th>\n                                <th\n                                  scope=\"col\"\n                                  style={{\n                                    fontSize: '15px',\n                                    textAlign: 'center',\n                                  }}\n                                >\n                                  <IntlMessages id=\"marks.FullName\" />\n                                </th>\n                                <th\n                                  scope=\"col\"\n                                  style={{\n                                    fontSize: '15px',\n                                    textAlign: 'center',\n                                  }}\n                                >\n                                  <IntlMessages id=\"marks.FatherName\" />\n                                </th>\n                                <th\n                                  scope=\"col\"\n                                  style={{\n                                    fontSize: '15px',\n                                    textAlign: 'center',\n                                  }}\n                                >\n                                  <IntlMessages id=\"marks.ID\" />\n                                </th>\n                                <th\n                                  scope=\"col\"\n                                  style={{\n                                    fontSize: '15px',\n                                    textAlign: 'center',\n                                  }}\n                                >\n                                  <IntlMessages id=\"marks.Marks\" />\n                                </th>\n                                <th\n                                  scope=\"col\"\n                                  style={{\n                                    fontSize: '15px',\n                                    textAlign: 'center',\n                                  }}\n                                >\n                                  {/* <IntlMessages id=\"marks.Marks\" /> */}\n                                  result\n                                </th>\n                              </tr>\n                            </thead>\n                            <tbody\n                              className=\"border border \"\n                              style={{\n                                overflowY: 'scroll',\n                                overflowX: 'hidden',\n                              }}\n                            >\n                              {students.length > 0 &&\n                                students.map((student, index) => {\n                                  return (\n                                    <tr key={index}>\n                                      <th\n                                        scope=\"row\"\n                                        style={{\n                                          fontSize: '20px',\n                                          textAlign: 'center',\n                                        }}\n                                      >\n                                        {index + 1}\n                                      </th>\n                                      <td\n                                        style={{\n                                          fontSize: '20px',\n                                          textAlign: 'center',\n                                        }}\n                                      >\n                                        {student.student_name}\n                                      </td>\n                                      <td\n                                        style={{\n                                          fontSize: '20px',\n                                          textAlign: 'center',\n                                        }}\n                                      >\n                                        {student.student_father_name}\n                                      </td>\n                                      <td\n                                        style={{\n                                          fontSize: '20px',\n                                          textAlign: 'center',\n                                        }}\n                                      >\n                                        {student.student}\n                                      </td>\n                                      <td\n                                        style={{\n                                          fontSize: '20px',\n                                          textAlign: 'center',\n                                        }}\n                                      >\n                                        {student.subject_id.map((subject) => {\n                                          return (\n                                            <>\n                                              {subject.second_chance_marks ||\n                                                subject.marks}\n                                            </>\n                                          );\n                                        })}\n                                      </td>\n\n                                      {/* Marks Entry */}\n                                      <td>\n                                        <div\n                                          style={{\n                                            margin: '-7px',\n                                            fontSize: '15px',\n                                          }}\n                                        >\n                                          {/* <Field\n                                          type=\"number\"\n                                          style={{\n                                            fontSize: '15px',\n                                            textAlign: 'center',\n                                          }}\n                                          className=\"form-control\"\n                                          name={`score[${student.student_id}]`}\n                                        />\n                                        {errors.score && touched.score ? (\n                                          <div className=\"invalid-feedback d-block\">\n                                            {errors.score}\n                                          </div>\n                                        ) : null} */}\n\n                                          <FormikReactSelect\n                                            name={`verification[${student.student}]`}\n                                            id={`verification[${student.student}]`}\n                                            // value={`values.section[${student.student_id}]`}\n                                            options={verificationValueOptions}\n                                            onChange={setFieldValue}\n                                            onBlur={setFieldTouched}\n                                            required\n                                          />\n                                          {errors.verification &&\n                                          touched.verification ? (\n                                            <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                                              {errors.verification}\n                                            </div>\n                                          ) : null}\n                                        </div>\n                                      </td>\n                                    </tr>\n                                  );\n                                })}\n                            </tbody>\n                            <tfoot className=\"thead-dark\">\n                              <tr>\n                                <th\n                                  scope=\"col\"\n                                  style={{\n                                    fontSize: '15px',\n                                    textAlign: 'center',\n                                  }}\n                                >\n                                  <IntlMessages id=\"marks.No\" />\n                                </th>\n                                <th\n                                  scope=\"col\"\n                                  style={{\n                                    fontSize: '15px',\n                                    textAlign: 'center',\n                                  }}\n                                >\n                                  <IntlMessages id=\"marks.FullName\" />\n                                </th>\n                                <th\n                                  scope=\"col\"\n                                  style={{\n                                    fontSize: '15px',\n                                    textAlign: 'center',\n                                  }}\n                                >\n                                  <IntlMessages id=\"marks.FatherName\" />\n                                </th>\n                                <th\n                                  scope=\"col\"\n                                  style={{\n                                    fontSize: '15px',\n                                    textAlign: 'center',\n                                  }}\n                                >\n                                  <IntlMessages id=\"marks.ID\" />\n                                </th>\n                                <th\n                                  scope=\"col\"\n                                  style={{\n                                    fontSize: '15px',\n                                    textAlign: 'center',\n                                  }}\n                                >\n                                  <IntlMessages id=\"marks.Marks\" />\n                                </th>\n                                <th\n                                  scope=\"col\"\n                                  style={{\n                                    fontSize: '15px',\n                                    textAlign: 'center',\n                                  }}\n                                >\n                                  result\n                                </th>\n                              </tr>\n                            </tfoot>\n                          </table>\n                        </Row>\n                        <Row className=\" justify-content-center\">\n                          <Colxx xxs=\"9\" className=\"m-5\">\n                            <Button\n                              className=\" m-4 \"\n                              color=\"primary\"\n                              onClick={() => setIsNext(false)}\n                            >\n                              <IntlMessages id=\"button.Back\" />\n                            </Button>\n\n                            <div className=\"d-flex justify-content-between align-items-center m-4 float-right\">\n                              <Button\n                                size=\"lg\"\n                                type=\"submit\"\n                                color=\"primary\"\n                                // onSubmit={onSubmit}\n                                // onClick={() => setIsSubmitted(true)}\n                              >\n                                <IntlMessages id=\"button.SubmitButton\" />\n                              </Button>\n                            </div>\n                          </Colxx>\n                        </Row>\n                      </Form>\n                    )}\n                  </Formik>\n                </>\n              ) : (\n                <div className=\"wizard-basic-step text-center pt-3\">\n                  <div>\n                    <h1 className=\"mb-2\">\n                      <IntlMessages id=\"wizard.content-thanks\" />\n                    </h1>\n                    <h3>\n                      {/* <IntlMessages id=\"wizard.registered\" /> */}\n                      زده کوونکو ته صنف په بریالیتوب سره تعین شو\n                    </h3>\n                    <Button\n                      className=\"m-5 bg-primary\"\n                      // onClick={() => window.location.reload()}\n                      onClick={() => {\n                        setIsNext(false);\n                        setIsSubmitted(false);\n                      }}\n                    >\n                      <IntlMessages id=\"button.Back\" />\n                    </Button>\n                  </div>\n                </div>\n              )}\n            </>\n          )}\n        </CardBody>\n      </Card>\n    </>\n  );\n};\n\nexport default SubjectMarksVerification;\n","import React, { useState, useEffect, useContext } from 'react';\nimport { Formik, Form, isEmptyArray } from 'formik';\nimport './style.css';\nimport callApi from 'helpers/callApi';\nimport {\n  studyTimeOptions,\n  educationalYearsOptions,\n} from '../global-data/options';\nimport './../../../assets/css/global-style.css';\n\nimport * as Yup from 'yup';\nimport { Row, Card, CardBody, FormGroup, Label, Button } from 'reactstrap';\n\nimport IntlMessages from 'helpers/IntlMessages';\nimport { Colxx } from 'components/common/CustomBootstrap';\nimport { FormikReactSelect } from 'containers/form-validations/FormikFields';\nimport { AuthContext } from 'context/AuthContext';\n\nconst orderOptions = [\n  { column: 'title', label: 'Product Name' },\n  { column: 'category', label: 'Category' },\n  { column: 'status', label: 'Status' },\n];\nconst pageSizes = [10, 20, 40, 80];\n\nconst ValidationSchema = Yup.object().shape({\n  institute: Yup.object()\n    .shape({\n      value: Yup.string().required(),\n    })\n    .nullable()\n    .required(<IntlMessages id=\"forms.InstituteErr\" />),\n\n  educationalYear: Yup.object()\n    .shape({\n      value: Yup.string().required(),\n    })\n    .nullable()\n    .required(<IntlMessages id=\"forms.educationYearErr\" />),\n\n  studyTime: Yup.object()\n    .shape({\n      value: Yup.string().required(),\n    })\n    .nullable()\n    .required(<IntlMessages id=\"forms.StudyTimeErr\" />),\n\n  classs: Yup.object()\n    .shape({\n      value: Yup.string().required(),\n    })\n    .nullable()\n    .required(<IntlMessages id=\"marks.ClassErr\" />),\n\n  department: Yup.object()\n    .shape({\n      value: Yup.string().required(),\n    })\n    .nullable()\n    .required(<IntlMessages id=\"teacher.departmentIdErr\" />),\n\n  subject: Yup.object()\n    .shape({\n      value: Yup.string().required(),\n    })\n    .nullable()\n    .required(<IntlMessages id=\"marks.SubjectErr\" />),\n\n  student: Yup.object()\n    .shape({\n      value: Yup.string(),\n    })\n    .nullable(),\n});\n\nconst initialValues = {\n  institute: [],\n  educationalYear: [],\n  studyTime: [],\n  classs: [],\n  department: [],\n  subject: [],\n};\nconst MarksDisplay = ({ match }) => {\n  const { institutes } = useContext(AuthContext);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [isNext, setIsNext] = useState(false);\n  const [fields, setFields] = useState([]);\n  // const [institutes, setInstitutes] = useState([]);\n  const [departments, setDepartments] = useState([]);\n  const [classes, setClasses] = useState([]);\n  const [subjects, setSubjects] = useState([]);\n  const [students, setStudents] = useState([]);\n  const [selectedInstitute, setSelectedInstitute] = useState('');\n  const [selectedDepartment, setSelectedDepartment] = useState('');\n  const [selectedClass, setSelectedClass] = useState('');\n  const [selectedSubject, setSelectedSubject] = useState('');\n  const [selecedStudyTime, setSelectedStudyTime] = useState('');\n  const [selectedEducationalYear, setSelectedEducationalYear] = useState([]);\n  const [passingScore, setPassingScore] = useState(55);\n  const [subjectGrad, setSubjectGrad] = useState();\n  const [subjectGPA, setSubjectGPA] = useState();\n\n  // separate and set labels for classes\n  const [selectedClassLabel, setselectedClassLabel] = useState({\n    classs: '',\n    semester: '',\n    section: '',\n  });\n\n  useEffect(() => {\n    if (!isEmptyArray(selectedClass) && selectedClass !== '') {\n      const [semester, classs, section] = selectedClass.label.split('-');\n      setselectedClassLabel({ classs, semester, section });\n    }\n  }, [selectedClass]);\n\n  // const fetchInstitutes = async () => {\n  //   const response = await callApi('institute/', '', null);\n  //   if (response.data && response.status === 200) {\n  //     const updatedData = await response.data.map((item) => ({\n  //       value: item.id,\n  //       label: item.name,\n  //     }));\n  //     setInstitutes(updatedData);\n  //   } else {\n  //     console.log('institute error');\n  //   }\n  // };\n\n  const fetchFields = async () => {\n    const response = await callApi('institute/field/', '', null);\n    if (response.data && response.status === 200) {\n      const updatedData = await response.data.map((item) => ({\n        value: item.id,\n        label: item.name,\n      }));\n      setFields(updatedData);\n    } else {\n      console.log('field error');\n    }\n  };\n\n  const fetchDepartments = async (instituteId) => {\n    if (!instituteId || !instituteId.value) {\n      return;\n    }\n    const response = await callApi(\n      `institute/institite-department/?institute=${instituteId.value}`,\n      '',\n      null,\n    );\n    // console.log('response of department', response);\n    if (response.data && response.status === 200) {\n      console.log('response of department', response);\n      const updatedData = await response.data.map((item) => ({\n        value: item.department,\n        label: item.department,\n      }));\n      console.log('updatedData of department', updatedData);\n      setDepartments(updatedData); //Set it up when data in Backend is ready\n    } else {\n      console.log('department error');\n    }\n  };\n  //fetch class list\n  const fetchClasses = async () => {\n    const response = await callApi('institute/classs/', 'GET', null);\n    console.log('class repspossdfsde', response);\n    if (response.data && response.status === 200) {\n      const updatedData = await response.data.map((item) => ({\n        value: item.id,\n        label: item.name + ' - ' + item.semester + ' - ' + item.section,\n      }));\n      setClasses(updatedData);\n    } else {\n      console.log('class error');\n    }\n  };\n\n  const fetchSubjects = async () => {\n    const response = await callApi('institute/subject/', '', null);\n    if (response.data && response.status === 200) {\n      const updatedData = await response.data.map((item) => ({\n        value: item.id,\n        label: item.name,\n      }));\n      setSubjects(updatedData);\n    } else {\n      console.log('subject error');\n    }\n  };\n\n  useEffect(() => {\n    // fetchInstitutes();\n    fetchFields();\n    fetchClasses();\n    fetchSubjects();\n  }, []);\n\n  useEffect(() => {\n    if (selectedInstitute) {\n      console.log('selectedInstitute', selectedInstitute);\n      fetchDepartments(selectedInstitute);\n    }\n  }, [selectedInstitute]);\n\n  let gpa = null;\n  let grad = null;\n  let tbodies;\n  if (students.length > 0) {\n    tbodies = students.map((student, index) => {\n      const scores = Object.values(student.subject_id);\n      const studentRows = scores.map((score, i) => {\n        const student_name =\n          i === 0 ? (\n            <td rowSpan={scores.length + 1} style={{ borderStyle: 'hidden' }}>\n              {student.student_name}\n            </td>\n          ) : null;\n        const student_father_name =\n          i === 0 ? (\n            <td rowSpan={scores.length + 1} style={{ borderStyle: 'hidden' }}>\n              {student.student_father_name}\n            </td>\n          ) : null;\n        const student_id =\n          i === 0 ? (\n            <td rowSpan={scores.length + 1} style={{ borderStyle: 'hidden' }}>\n              {student.student}\n            </td>\n          ) : null;\n        const index_no =\n          i === 0 ? (\n            <td rowSpan={index.length + 1} style={{ borderStyle: 'hidden' }}>\n              {index + 1}\n            </td>\n          ) : null;\n\n        return (\n          <>\n            <tr key={i} className=\"red-background\">\n              <td className=\"red-background\">{index_no}</td>\n              <td className=\"red-background\"> {student_name}</td>\n              <td className=\"red-background\">{student_father_name}</td>\n              <td className=\"red-background\">{student_id}</td>\n              <td className=\"red-background\">\n                {<td style={{ borderStyle: 'hidden' }}>{score.marks}</td>}\n              </td>\n              <td className=\"red-background\">\n                {\n                  <td style={{ borderStyle: 'hidden' }}>\n                    {score.second_chance_marks}\n                  </td>\n                }\n              </td>\n              {score.grad\n                ? (grad = score.grad) && (\n                    <td className=\"red-background\">\n                      {' '}\n                      {score.grad && (\n                        <td style={{ borderStyle: 'hidden' }}>{score.grad}</td>\n                      )}\n                    </td>\n                  )\n                : null}\n              {score.Gpa\n                ? (gpa = score.Gpa) && (\n                    <td className=\"red-background\">\n                      {' '}\n                      {score.Gpa && (\n                        <td style={{ borderStyle: 'hidden' }}>{score.Gpa}</td>\n                      )}\n                    </td>\n                  )\n                : null}\n              <td className=\"red-background\">\n                {score.marks >= 50 || score.second_chance_marks >= 50 ? (\n                  <div className=\"text-success pt-3\">کامیاب </div>\n                ) : (\n                  <div className=\"text-danger pt-3\">ناکام </div>\n                )}\n              </td>\n            </tr>\n          </>\n        );\n      });\n      return (\n        <>\n          <tbody key={index} className={student.name + ' ' + ' border border '}>\n            {studentRows}\n          </tbody>\n        </>\n      );\n    });\n  } else {\n    tbodies = (\n      <div style={{ display: 'flex', justifyContent: 'center' }}>\n        <h1>معلومات شتون نلری</h1>\n      </div>\n    );\n  }\n\n  const onSubmit = async (values) => {\n    const response = await callApi(\n      `students/students-marks/?institute_id=${selectedInstitute.value}&class_id=${selectedClass.value}&shift=${selecedStudyTime.value}&department_id=${selectedDepartment.value}&educational_year=${selectedEducationalYear.value}&subject_id=${selectedSubject.value}`,\n      '',\n      null,\n    );\n\n    console.log('responseeeeeeeeeeeeeeE', response.data);\n\n    if (response.data && response.status === 200) {\n      setStudents(response.data);\n      console.log('response.data', response.data);\n      console.log('response', response);\n      setIsNext(true);\n      console.log('students', students);\n    } else {\n      console.log('students error');\n    }\n  };\n\n  return (\n    <>\n      <Card>\n        <div className=\"mt-4 ml-5\">\n          <h2 className=\"mt-5 ml-5 titleStyle\">\n            {<IntlMessages id=\"marks.marksDisplayTitle\" />}\n          </h2>\n        </div>\n        <CardBody>\n          {!isNext ? (\n            <Formik\n              initialValues={initialValues}\n              onSubmit={onSubmit}\n              validationSchema={ValidationSchema}\n            >\n              {({\n                errors,\n                touched,\n                values,\n                setFieldTouched,\n                setFieldValue,\n                handleChange,\n              }) => (\n                <Form className=\"av-tooltip tooltip-label-right style \">\n                  <Row className=\"m-5\">\n                    <Colxx xxs=\"6\">\n                      {/* set if condition, if institutes are loaded */}\n                      <FormGroup className=\"form-group has-float-label error-l-150 \">\n                        <Label>\n                          <IntlMessages id=\"forms.InstituteLabel\" />\n                          <span style={{ color: 'red' }}>*</span>\n                        </Label>\n                        <FormikReactSelect\n                          name=\"institute\"\n                          id=\"institute\"\n                          value={values.institute}\n                          options={institutes}\n                          onChange={setFieldValue}\n                          onBlur={setFieldTouched}\n                          onClick={setSelectedInstitute(values.institute)}\n                        />\n\n                        {errors.institute && touched.institute ? (\n                          <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                            {errors.institute}\n                          </div>\n                        ) : null}\n                      </FormGroup>\n\n                      <FormGroup className=\"form-group has-float-label mt-5  error-l-150\">\n                        <Label>\n                          <IntlMessages id=\"forms.StudyTimeLabel\" />\n                          <span style={{ color: 'red' }}>*</span>\n                        </Label>\n                        <FormikReactSelect\n                          name=\"studyTime\"\n                          id=\"studyTime\"\n                          value={values.studyTime}\n                          options={studyTimeOptions}\n                          onChange={setFieldValue}\n                          onBlur={setFieldTouched}\n                          onClick={setSelectedStudyTime(values.studyTime)}\n                        />\n                        {errors.studyTime && touched.studyTime ? (\n                          <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                            {errors.studyTime}\n                          </div>\n                        ) : null}\n                      </FormGroup>\n\n                      <FormGroup className=\"form-group has-float-label mt-5  error-l-150\">\n                        <Label>\n                          <IntlMessages id=\"forms.educationYearLabel\" />\n                        </Label>\n                        <FormikReactSelect\n                          name=\"educationalYear\"\n                          id=\"educationalYear\"\n                          options={educationalYearsOptions}\n                          onChange={setFieldValue}\n                          onBlur={setFieldTouched}\n                          onClick={setSelectedEducationalYear(\n                            values.educationalYear,\n                          )}\n                        />\n                        {errors.educationalYear && touched.educationalYear ? (\n                          <div className=\"invalid-feedback d-block bg-danger text-white \">\n                            {errors.educationalYear}\n                          </div>\n                        ) : null}\n                      </FormGroup>\n                    </Colxx>\n\n                    <Colxx xxs=\"6\">\n                      <FormGroup className=\"form-group has-float-label error-l-150 \">\n                        <Label>\n                          <IntlMessages id=\"marks.ClassLabel\" />\n                          <span style={{ color: 'red' }}>*</span>\n                        </Label>\n                        <FormikReactSelect\n                          name=\"classs\"\n                          id=\"classs\"\n                          value={values.classs}\n                          options={classes}\n                          onChange={setFieldValue}\n                          onBlur={setFieldTouched}\n                          onClick={setSelectedClass(values.classs)}\n                          required\n                        />\n                        {errors.classs && touched.classs ? (\n                          <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                            {errors.classs}\n                          </div>\n                        ) : null}\n                      </FormGroup>\n\n                      <FormGroup className=\"form-group has-float-label mt-5 error-l-150\">\n                        <Label>\n                          <IntlMessages id=\"forms.studyDepartment\" />\n                          <span style={{ color: 'red' }}>*</span>\n                        </Label>\n                        <FormikReactSelect\n                          name=\"department\"\n                          id=\"department\"\n                          value={values.department}\n                          options={departments}\n                          onChange={setFieldValue}\n                          onBlur={setFieldTouched}\n                          onClick={setSelectedDepartment(values.department)}\n                          required\n                        />\n                        {errors.department && touched.department ? (\n                          <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                            {errors.department}\n                          </div>\n                        ) : null}\n                      </FormGroup>\n\n                      <FormGroup className=\"form-group has-float-label mt-5 error-l-150\">\n                        <Label>\n                          <IntlMessages id=\"marks.SubjectLabel\" />\n                          <span style={{ color: 'red' }}>*</span>\n                        </Label>\n                        <FormikReactSelect\n                          name=\"subject\"\n                          id=\"subject\"\n                          value={values.subject}\n                          options={subjects}\n                          onChange={setFieldValue}\n                          onBlur={setFieldTouched}\n                          onClick={setSelectedSubject(values.subject)}\n                          required\n                        />\n                        {errors.subject && touched.subject ? (\n                          <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                            {errors.subject}\n                          </div>\n                        ) : null}\n                      </FormGroup>\n                    </Colxx>\n                  </Row>\n                  <Row>\n                    <Colxx>\n                      {/* Changes Started for a single student marks retrieval */}\n                      {/* <FormGroup className=\"form-group has-float-label mt-5 error-l-150\">\n                        <Label>\n                          <IntlMessages id=\"شاګرد ایډی\" />\n                          <span style={{ color: \"red\" }}>*</span>\n                        </Label>\n                        <Input\n                          name=\"student\"\n                          id=\"student\"\n                          value={values.student}\n                          onChange={handleChange(\"student\")}\n                          onBlur={setFieldTouched}\n                        />\n                        {errors.student && touched.student ? (\n                          <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                            {errors.student}\n                          </div>\n                        ) : null}\n                      </FormGroup> */}\n                      {/* Changes ended for a single student marks retrieval */}\n                      <Button\n                        color=\"primary\"\n                        className=\"float-right  buttonStyle\"\n                        size=\"lg\"\n                        type=\"submit\"\n                        style={{ margin: '2% 0% 10% 6%' }}\n                      >\n                        <span className=\"label\">\n                          <IntlMessages id=\"button.Next\" />\n                        </span>\n                      </Button>\n                    </Colxx>\n                  </Row>\n                </Form>\n              )}\n            </Formik>\n          ) : (\n            <>\n              <Row\n                className=\"border border bg-primary me-5 p-1 \"\n                style={{ marginInline: '6%' }}\n              >\n                <Colxx xxs=\"2\">\n                  <Label>\n                    <IntlMessages id=\"forms.FieldLabel\" />\n                  </Label>\n                  {/* {console.log('selectedDepartment', selectedDepartment)} */}\n                  <h6>{selectedDepartment.label}</h6>\n                </Colxx>\n\n                <Colxx xxs=\"2\">\n                  <Label>\n                    <IntlMessages id=\"forms.StudyTimeLabel\" />\n                  </Label>\n                  <h6>{selecedStudyTime.label}</h6>\n                </Colxx>\n                <Colxx xxs=\"2\">\n                  <Label>\n                    <IntlMessages id=\"marks.ClassLabel\" />\n                  </Label>\n                  <h6>{selectedClassLabel.classs}</h6>\n                </Colxx>\n\n                <Colxx xxs=\"2\">\n                  <Label>\n                    <IntlMessages id=\"marks.SemesterLabel\" />\n                  </Label>\n                  <h6>{selectedClassLabel.semester}</h6>\n                </Colxx>\n\n                <Colxx xxs=\"2\">\n                  <Label>\n                    <IntlMessages id=\"marks.SectionLabel\" />\n                  </Label>\n                  <h6>{selectedClassLabel.section}</h6>\n                </Colxx>\n\n                <Colxx xxs=\"2\">\n                  <Label>\n                    <IntlMessages id=\"marks.SubjectLabel\" />\n                  </Label>\n                  <h6>{selectedSubject.label}</h6>\n                </Colxx>\n              </Row>\n\n              <Row\n                className=\"justify-content-center  border border\"\n                style={{ marginInline: '6%' }}\n              >\n                <table className=\"table \">\n                  <thead className=\"thead-dark\">\n                    <tr>\n                      <th scope=\"col\">\n                        <IntlMessages id=\"marks.No\" />\n                      </th>\n                      <th scope=\"col\">\n                        <IntlMessages id=\"marks.FullName\" />\n                      </th>\n                      <th scope=\"col\">\n                        <IntlMessages id=\"marks.FatherName\" />\n                      </th>\n                      <th scope=\"col\">\n                        <IntlMessages id=\"marks.ID\" />\n                      </th>\n                      <th scope=\"col\">\n                        <IntlMessages id=\"marks.firstChance\" />\n                      </th>\n                      <th scope=\"col\">\n                        <IntlMessages id=\"marks.secondChance\" />\n                      </th>{' '}\n                      {grad ? (\n                        <th scope=\"col\">\n                          <IntlMessages id=\"marks.grade\" />\n                        </th>\n                      ) : null}\n                      {gpa ? (\n                        <th scope=\"col\">\n                          <IntlMessages id=\"marks.gpa\" />\n                        </th>\n                      ) : null}\n                      <th scope=\"col\">\n                        <IntlMessages id=\"marks.result\" />\n                      </th>{' '}\n                    </tr>\n                  </thead>\n                  {/* </table>\n              </Row>\n\n              <Row\n                className=\"justify-content-center  border border\"\n                style={{\n                  marginInline: '16%',\n                  height: '30rem',\n                  overflowY: 'scroll',\n                  overflowX: 'hidden',\n                }}\n              >\n                <table class=\"table\"> */}\n                  {/* <tbody\n                    className=\"border border \"\n                    style={{\n                      height: '200px',\n                      overflowY: 'scroll',\n                      overflowX: 'hidden',\n                    }}\n                  >\n                    {students.map((student, index) => (\n                      <tr>\n                        <th scope=\"row\">{index}</th>\n                        <td>{student.name}</td>\n                        <td>{student.father_name}</td>\n                        <td>{student.student_id}</td>\n                        <td>{student.marks}</td>\n                      </tr>\n                    ))}\n                  </tbody> */}\n\n                  {tbodies}\n                  <tfoot className=\"thead-dark\">\n                    <tr>\n                      <th scope=\"col\">\n                        <IntlMessages id=\"marks.No\" />\n                      </th>\n                      <th scope=\"col\">\n                        <IntlMessages id=\"marks.FullName\" />\n                      </th>\n                      <th scope=\"col\">\n                        <IntlMessages id=\"marks.FatherName\" />\n                      </th>\n                      <th scope=\"col\">\n                        <IntlMessages id=\"marks.ID\" />\n                      </th>\n                      <th scope=\"col\">\n                        <IntlMessages id=\"marks.Marks\" />\n                      </th>\n                      {grad ? (\n                        <th scope=\"col\">\n                          <IntlMessages id=\"marks.grade\" />\n                        </th>\n                      ) : null}\n                      {gpa ? (\n                        <th scope=\"col\">\n                          <IntlMessages id=\"marks.gpa\" />\n                        </th>\n                      ) : null}\n                      <th scope=\"col\">\n                        <IntlMessages id=\"marks.type\" />\n                      </th>{' '}\n                      <th scope=\"col\">\n                        <IntlMessages id=\"marks.result\" />\n                      </th>{' '}\n                    </tr>\n                  </tfoot>\n                </table>\n              </Row>\n              <Row className=\" justify-content-center\">\n                <Colxx xxs=\"9\" className=\"m-5\">\n                  <Button className=\" m-4\" onClick={() => setIsNext(false)}>\n                    <IntlMessages id=\"button.Back\" />\n                  </Button>\n                </Colxx>\n              </Row>\n            </>\n          )}\n        </CardBody>\n      </Card>\n    </>\n  );\n};\n\nexport default MarksDisplay;\n"],"names":["initialValues","Yup","shape","institute","value","required","nullable","_jsx","IntlMessages","id","educationlaYear","studyTime","classs","department","submitInitialValues","verification","examId","_ref","match","institutes","useContext","AuthContext","_useState","useState","_useState2","_slicedToArray","isNext","setIsNext","_useState3","_useState4","isSubmitted","setIsSubmitted","_useState5","_useState6","_useState7","_useState8","subjects","setSubjects","_useState9","_useState10","departments","setDepartments","_useState11","_useState12","classes","setClasses","_useState13","_useState14","students","setStudents","_useState15","_useState16","selectedInstitute","setSelectedInstitute","_useState17","_useState18","selectedDepartment","setSelectedDepartment","_useState19","_useState20","selectedClass","setSelectedClass","_useState21","_useState22","selectedSemester","_useState23","_useState24","selectedSubject","setSelectedSubject","_useState25","_useState26","_useState27","_useState28","selecedStudyTime","setSelectedStudyTime","_useState29","_useState30","selectedEducationalYear","setSelectedEducationalYear","_useState31","_useState32","_useState33","_useState34","_useState35","_useState36","fetchDepartments","useParams","markId","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","instituteId","response","updatedData","wrap","_context","prev","next","abrupt","callApi","concat","sent","data","status","console","log","map","item","label","name","stop","_x","apply","arguments","fetchSubjects","_ref3","_callee2","_context2","useEffect","fetchClasses","_ref4","_callee3","_context3","semester","section","createNotification","type","className","cName","NotificationManager","success","error","alert","info","fechtStudents","_ref5","_callee4","_context4","onSubmit","_ref6","_callee5","values","classId","subjectId","newStudents","_context5","student","index","verification_result","exam_id","class_exam_id","subject","_toConsumableArray","_x2","_Fragment","children","_jsxs","Card","CardBody","Button","onClick","Row","style","marginInline","Colxx","xxs","Label","fontSize","fontWeight","Formik","_ref8","errors","touched","setFieldValue","setFieldTouched","Form","height","overflowY","overflowX","class","scope","textAlign","length","student_name","student_father_name","subject_id","second_chance_marks","marks","margin","FormikReactSelect","options","verificationValueOptions","onChange","onBlur","color","size","_ref7","FormGroup","studyTimeOptions","educationalYearsOptions","educationalYear","ValidationSchema","setFields","selectedClassLabel","setselectedClassLabel","isEmptyArray","_selectedClass$label$","split","_selectedClass$label$2","fetchFields","tbodies","gpa","grad","scores","Object","studentRows","score","i","rowSpan","borderStyle","student_id","index_no","Gpa","display","justifyContent","validationSchema","handleChange"],"sourceRoot":""}