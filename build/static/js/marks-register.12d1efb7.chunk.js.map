{"version":3,"file":"static/js/marks-register.12d1efb7.chunk.js","mappings":"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","sources":["views/app/students/marks-register.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Formik, Form, isEmptyArray } from 'formik';\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\nimport callApi from 'helpers/callApi';\nimport {\n  studyTimeOptions,\n  educationalYearsOptions,\n} from './../global-data/options';\nimport './../../../assets/css/global-style.css';\n\n// Year  and SHift\nimport * as Yup from 'yup';\nimport { Row, Card, CardBody, FormGroup, Label, Button } from 'reactstrap';\nimport { NotificationManager } from 'components/common/react-notifications';\n\nimport IntlMessages from 'helpers/IntlMessages';\nimport { Colxx } from 'components/common/CustomBootstrap';\nimport { FormikReactSelect } from 'containers/form-validations/FormikFields';\n\nconst ValidationSchema = Yup.object().shape({\n  institute: Yup.object()\n    .shape({\n      value: Yup.string().required(),\n    })\n    .nullable()\n    .required(<IntlMessages id=\"forms.InstituteErr\" />),\n  educationalYear: Yup.object()\n    .shape({\n      value: Yup.string().required(),\n    })\n    .nullable()\n    .required(<IntlMessages id=\"forms.educationYearErr\" />),\n\n  studyTime: Yup.object()\n    .shape({\n      value: Yup.string().required(),\n    })\n    .nullable()\n    .required(<IntlMessages id=\"forms.StudyTimeErr\" />),\n  classs: Yup.object()\n    .shape({\n      value: Yup.string().required(),\n    })\n    .nullable()\n    .required(<IntlMessages id=\"marks.ClassErr\" />),\n  department: Yup.object()\n    .shape({\n      value: Yup.string().required(),\n    })\n    .nullable()\n    .required(<IntlMessages id=\"teacher.departmentIdErr\" />),\n  subject: Yup.object()\n    .shape({\n      value: Yup.string().required(),\n    })\n    .nullable()\n    .required(<IntlMessages id=\"marks.SubjectErr\" />),\n});\nconst initialValues = {\n  institute: [],\n  educationalYear: [],\n  studyTime: [],\n  classs: [],\n  department: [],\n  subject: [],\n  marks: 0,\n};\n\nconst MarksRegistration = ({ match }) => {\n  const [isNext, setIsNext] = useState(false);\n  const [counter, setCounter] = useState(0);\n  const [isSubmitted, setIsSubmitted] = useState(false);\n  const [fields, setFields] = useState([]);\n  const [institutes, setInstitutes] = useState([]);\n  const [departments, setDepartments] = useState([]);\n  const [classes, setClasses] = useState([]);\n  const [subjects, setSubjects] = useState([]);\n  const [students, setStudents] = useState([]);\n  const [selectedInstitute, setSelectedInstitute] = useState();\n  const [selectedDepartment, setSelectedDepartment] = useState('');\n  const [selectedClass, setSelectedClass] = useState('');\n  const [selectedSubject, setSelectedSubject] = useState('');\n  const [selecedStudyTime, setSelectedStudyTime] = useState('');\n  const [selectedEducationalYear, setSelectedEducationalYear] = useState('');\n  const [passingScore, setPassingScore] = useState(55);\n  const [subjectGrad, setSubjectGrad] = useState();\n  const [subjectGPA, setSubjectGPA] = useState();\n  const [examId, setExamId] = useState();\n  const { markId } = useParams();\n  const [arr, setArr] = useState({});\n  // separate and set labels for classes\n  const [selectedClassLabel, setselectedClassLabel] = useState({\n    classs: '',\n    semester: '',\n    section: '',\n  });\n  const int = [\n    {\n      label: 'Dept 1',\n      value: '1',\n      institute: '1',\n    },\n    {\n      label: 'Dept 2',\n      value: '2',\n      institute: '8',\n    },\n    {\n      label: 'Dept 3',\n      value: '3',\n      institute: '1',\n    },\n    {\n      label: 'Dept 4',\n      value: '4',\n      institute: 'انستیتوت تکنالوژی افغان',\n    },\n  ];\n  useEffect(() => {\n    if (!isEmptyArray(selectedClass) && selectedClass !== '') {\n      const [semester, classs, section] = selectedClass.label.split('-');\n      setselectedClassLabel({ classs, semester, section });\n    }\n  }, [selectedClass]);\n\n  async function fetchStudent() {\n    const { data } = await axios.get(\n      // `${studentMarkId}/?student_id=${markId}`,\n      `${1}/?student_id=${markId}`,\n    );\n    // console.log(data, 'object of the data');\n\n    // const instGender = genderOptions.map((studentGender) => {\n    //   if (studentGender.value === data[0].gender) {\n    //     setInitialGender(studentGender);\n    //   }\n    // });\n  }\n  useEffect(() => {\n    if (markId) {\n      fetchStudent();\n    }\n    //setUpdateMode(true);\n  }, []);\n\n  const fetchInstitutes = async () => {\n    const response = await callApi('institute/', '', null);\n    console.warn('Reponse Institutes: ', response);\n    if (response.data && response.status === 200) {\n      const updatedData = await response.data.map((item) => ({\n        value: item.id,\n        label: item.name,\n      }));\n      console.warn('Updated Institutes: ', updatedData);\n      setInstitutes(updatedData);\n    } else {\n      console.log('institute error');\n    }\n  };\n\n  const fetchFields = async () => {\n    const response = await callApi('institute/field/', '', null);\n    if (response.data && response.status === 200) {\n      const updatedData = await response.data.map((item) => ({\n        value: item.id,\n        label: item.name,\n      }));\n      setFields(updatedData);\n    } else {\n      console.log('field error');\n    }\n  };\n  const fetchDepartments = async (instituteId) => {\n    if (!instituteId || !instituteId.value) {\n      return;\n    }\n    const response = await callApi(\n      `institute/institite-department/?institute=${instituteId.value}`,\n      'GET',\n      null,\n    );\n    // console.log('response of department', response);\n    if (response.data && response.status === 200) {\n      console.log('response of department', response);\n      const updatedData = await response.data.map((item) => ({\n        value: item.department.id,\n        label: item.department.name,\n      }));\n      console.log('updatedData of department', updatedData);\n      setDepartments(updatedData); //Set it up when data in Backend is ready\n    } else {\n      console.log('department error');\n    }\n  };\n\n  const fetchClasses = async () => {\n    const response = await callApi('institute/classs/', '', null);\n    if (response.data && response.status === 200) {\n      const updatedData = await response.data.map((item) => ({\n        value: item.id,\n        label: item.name + ' - ' + item.semester + ' - ' + item.section,\n      }));\n      setClasses(updatedData);\n    } else {\n      console.log('class error');\n    }\n  };\n\n  const fetchSubjects = async () => {\n    const response = await callApi('institute/subject/', '', null);\n    if (response.data && response.status === 200) {\n      const updatedData = await response.data.map((item) => ({\n        value: item.id,\n        label: item.name,\n      }));\n      setSubjects(updatedData);\n    } else {\n      console.log('subject error');\n    }\n  };\n\n  useEffect(() => {\n    fetchInstitutes();\n    fetchFields();\n    fetchClasses();\n    fetchSubjects();\n  }, []);\n\n  useEffect(() => {\n    if (selectedInstitute) {\n      console.log('selectedInstitute', selectedInstitute);\n      fetchDepartments(selectedInstitute);\n    }\n  }, [selectedInstitute]);\n\n  // notification message\n  const createNotification = (type, className) => {\n    const cName = className || '';\n    switch (type) {\n      case 'success':\n        NotificationManager.success(\n          'نمری په بریالیتوب سره ثبت شوی',\n          'موفقیت',\n          3000,\n          null,\n          null,\n          cName,\n        );\n        break;\n      case 'error':\n        NotificationManager.error(\n          'نمری ثبت نه شوی بیا کوشش وکری',\n          'خطا',\n          9000,\n          () => {\n            alert('callback');\n          },\n          null,\n          cName,\n        );\n        break;\n      default:\n        NotificationManager.info('Info message');\n        break;\n    }\n  };\n\n  const fetchStudents = async (values) => {\n    const response = await callApi(\n      `students/class-marks/list/?institute=${selectedInstitute.value}&classs=${selectedClass.value}&shift=${selecedStudyTime.value}&department=${selectedDepartment.value}&educational_year=${selectedEducationalYear.value}&subject=${selectedSubject.value}`,\n      '',\n      null,\n    );\n    if (response.data && response.status === 200) {\n      console.log('response of students', response);\n      setStudents(response.data);\n      setIsNext(true);\n    } else {\n      console.log('subject error');\n    }\n  };\n\n  const onSubmit = async (values) => {\n    const newStudents = [];\n    Object.keys(arr).forEach((id) => {\n      newStudents.push({ student_id: id, ...arr[id] });\n    });\n    console.log('arr is: ', arr);\n    const educationalYear = selectedEducationalYear.value;\n    const instituteId = selectedInstitute.value;\n    const departmentId = selectedDepartment.value;\n    const classId = selectedClass.value;\n    const subjectId = selectedSubject.value;\n    const shift = selecedStudyTime.value;\n\n    console.log('educationalYear', educationalYear);\n    console.log('instituteId', instituteId);\n    console.log('departmentId', departmentId);\n    console.log('classId', classId);\n    console.log('subjectId', subjectId);\n\n    // const newStudents = students.map((student, index) => {\n    //   return {\n    //     student_id: student.student_id,\n    //     marks: values.score[student.student_id],\n    //   };\n    // });\n\n    console.log('newStudents', newStudents);\n\n    let data = [\n      {\n        educational_year: educationalYear,\n        institute: instituteId,\n        department: departmentId,\n        classs: classId,\n        subject: subjectId,\n        shift: shift,\n      },\n      ...newStudents,\n    ];\n\n    console.log('data', data);\n\n    const response = await callApi(\n      'students/class-marks/create/',\n      'POST',\n      data,\n    );\n    if (response.status >= 200 || response.status < 300 > 201) {\n      // console.log('response of students', response);\n      setIsSubmitted(true);\n      createNotification('success', 'filled');\n    } else {\n      console.log('marks error');\n      setIsSubmitted(false);\n      createNotification('error', 'filled');\n    }\n  };\n\n  // console.log('condsotlsa f', students);\n  return (\n    <>\n      <Card>\n        <div className=\"mt-4 ml-5\">\n          <h2 className=\"mt-5 m-5 titleStyle\">\n            {<IntlMessages id=\"marks.title\" />}\n          </h2>\n        </div>\n        <CardBody>\n          {!isNext ? (\n            <Formik\n              initialValues={initialValues}\n              onSubmit={fetchStudents}\n              validationSchema={ValidationSchema}\n            >\n              {({\n                errors,\n                touched,\n                values,\n                setFieldTouched,\n                setFieldValue,\n                handleSubmit,\n              }) => (\n                <Form className=\"av-tooltip tooltip-label-right  style\">\n                  <Row className=\"m-5\">\n                    <Colxx xxs=\"6\">\n                      {/* set if condition, if institutes are loaded */}\n                      <FormGroup className=\"form-group has-float-label error-l-150 \">\n                        <Label>\n                          <IntlMessages id=\"forms.InstituteLabel\" />\n                        </Label>\n                        <FormikReactSelect\n                          name=\"institute\"\n                          id=\"institute\"\n                          // value={values.institute}\n                          options={institutes}\n                          onChange={setFieldValue}\n                          onBlur={setFieldTouched}\n                          onClick={setSelectedInstitute(values.institute)}\n                        />\n\n                        {errors.institute && touched.institute ? (\n                          <div className=\"invalid-feedback d-block bg-danger text-white \">\n                            {errors.institute}\n                          </div>\n                        ) : null}\n                      </FormGroup>\n\n                      <FormGroup className=\"form-group has-float-label mt-5  error-l-150\">\n                        <Label>\n                          <IntlMessages id=\"forms.StudyTimeLabel\" />\n                        </Label>\n                        <FormikReactSelect\n                          name=\"studyTime\"\n                          id=\"studyTime\"\n                          value={values.studyTime}\n                          options={studyTimeOptions}\n                          onChange={setFieldValue}\n                          onBlur={setFieldTouched}\n                          onClick={setSelectedStudyTime(values.studyTime)}\n                        />\n                        {errors.studyTime && touched.studyTime ? (\n                          <div className=\"invalid-feedback d-block bg-danger text-white \">\n                            {errors.studyTime}\n                          </div>\n                        ) : null}\n                      </FormGroup>\n\n                      <FormGroup className=\"form-group has-float-label mt-5  error-l-150\">\n                        <Label>\n                          <IntlMessages id=\"forms.educationYearLabel\" />\n                        </Label>\n                        <FormikReactSelect\n                          name=\"educationalYear\"\n                          id=\"educationalYear\"\n                          options={educationalYearsOptions}\n                          onChange={setFieldValue}\n                          onBlur={setFieldTouched}\n                          onClick={setSelectedEducationalYear(\n                            values.educationalYear,\n                          )}\n                        />\n                        {errors.educationalYear && touched.educationalYear ? (\n                          <div className=\"invalid-feedback d-block bg-danger text-white \">\n                            {errors.educationalYear}\n                          </div>\n                        ) : null}\n                      </FormGroup>\n                    </Colxx>\n\n                    <Colxx xxs=\"6\">\n                      <FormGroup className=\"form-group has-float-label error-l-150 \">\n                        <Label>\n                          <IntlMessages id=\"marks.ClassLabel\" />\n                        </Label>\n                        <FormikReactSelect\n                          name=\"classs\"\n                          id=\"classs\"\n                          value={values.classs}\n                          options={classes}\n                          onChange={setFieldValue}\n                          onBlur={setFieldTouched}\n                          onClick={setSelectedClass(values.classs)}\n                          required\n                        />\n                        {errors.classs && touched.classs ? (\n                          <div className=\"invalid-feedback d-block bg-danger text-white \">\n                            {errors.classs}\n                          </div>\n                        ) : null}\n                      </FormGroup>\n\n                      <FormGroup className=\"form-group has-float-label mt-5 error-l-150\">\n                        <Label>\n                          <IntlMessages id=\"forms.studyDepartment\" />\n                        </Label>\n                        <FormikReactSelect\n                          name=\"department\"\n                          id=\"department\"\n                          value={values.department}\n                          options={departments}\n                          onChange={setFieldValue}\n                          onBlur={setFieldTouched}\n                          onClick={setSelectedDepartment(values.department)}\n                          required\n                        />\n                        {errors.department && touched.department ? (\n                          <div className=\"invalid-feedback d-block bg-danger text-white \">\n                            {errors.department}\n                          </div>\n                        ) : null}\n                      </FormGroup>\n                      <FormGroup className=\"form-group has-float-label mt-5 error-l-150\">\n                        <Label>\n                          <IntlMessages id=\"marks.SubjectLabel\" />\n                        </Label>\n                        <FormikReactSelect\n                          name=\"subject\"\n                          id=\"subject\"\n                          value={values.subject}\n                          options={subjects}\n                          onChange={setFieldValue}\n                          onBlur={setFieldTouched}\n                          onClick={setSelectedSubject(values.subject)}\n                          required\n                        />\n                        {errors.subject && touched.subject ? (\n                          <div className=\"invalid-feedback d-block bg-danger text-white \">\n                            {errors.subject}\n                          </div>\n                        ) : null}\n                      </FormGroup>\n                    </Colxx>\n                  </Row>\n                  <Row>\n                    <Colxx>\n                      <Button\n                        onClick={handleSubmit}\n                        color=\"primary\"\n                        className=\"float-right  buttonStyle\"\n                        size=\"lg\"\n                        // type=\"submit\"\n                        style={{ margin: '2% 0% 10% 6%' }}\n                      >\n                        <span className=\"label\">\n                          <IntlMessages id=\"button.Next\" />\n                        </span>\n                      </Button>\n                    </Colxx>\n                  </Row>\n                </Form>\n              )}\n            </Formik>\n          ) : (\n            <>\n              {!isSubmitted ? (\n                <>\n                  <Row\n                    className=\"border border bg-primary me-5 p-1 \"\n                    style={{ marginInline: '16%' }}\n                  >\n                    <Colxx xxs=\"2\">\n                      <Label style={{ fontSize: '20px', fontWeight: 'bold' }}>\n                        <IntlMessages id=\"forms.FieldLabel\" />\n                      </Label>\n                      {/* {console.log('selectedDepartment', selectedDepartment)} */}\n                      <h5>{selectedDepartment.label}</h5>\n                    </Colxx>\n\n                    <Colxx xxs=\"2\">\n                      <Label style={{ fontSize: '20px', fontWeight: 'bold' }}>\n                        <IntlMessages id=\"marks.ClassLabel\" />\n                      </Label>\n                      <h5>{selectedClassLabel.classs}</h5>\n                    </Colxx>\n\n                    <Colxx xxs=\"2\">\n                      <Label style={{ fontSize: '20px', fontWeight: 'bold' }}>\n                        <IntlMessages id=\"forms.StudyTimeLabel\" />\n                      </Label>\n                      <h5>{selecedStudyTime.label}</h5>\n                    </Colxx>\n\n                    <Colxx xxs=\"2\">\n                      <Label style={{ fontSize: '20px', fontWeight: 'bold' }}>\n                        <IntlMessages id=\"marks.SemesterLabel\" />\n                      </Label>\n                      <h5>{selectedClassLabel.semester}</h5>\n                    </Colxx>\n\n                    <Colxx xxs=\"2\">\n                      <Label style={{ fontSize: '20px', fontWeight: 'bold' }}>\n                        <IntlMessages id=\"marks.SectionLabel\" />\n                      </Label>\n                      <h5>{selectedClassLabel.section}</h5>\n                    </Colxx>\n\n                    <Colxx xxs=\"2\">\n                      <Label style={{ fontSize: '20px', fontWeight: 'bold' }}>\n                        <IntlMessages id=\"marks.SubjectLabel\" />\n                      </Label>\n                      <h5>{selectedSubject.label}</h5>\n                    </Colxx>\n                  </Row>\n                  <Formik\n                    initialValues={initialValues}\n                    onSubmit={onSubmit}\n                    // validationSchema={ValidationSchema}\n                  >\n                    {({ errors, touched }) => (\n                      <Form className=\"av-tooltip tooltip-label-right \">\n                        <Row\n                          className=\"justify-content-center  border border\"\n                          style={{\n                            marginInline: '16%',\n                            height: '30rem',\n                            overflowY: 'scroll',\n                            overflowX: 'hidden',\n                          }}\n                        >\n                          <table className=\"table \">\n                            <thead className=\"thead-dark\">\n                              <tr>\n                                <th\n                                  scope=\"col\"\n                                  style={{\n                                    fontSize: '15px',\n                                    textAlign: 'center',\n                                  }}\n                                >\n                                  <IntlMessages id=\"marks.No\" />\n                                </th>\n                                <th\n                                  scope=\"col\"\n                                  style={{\n                                    fontSize: '15px',\n                                    textAlign: 'center',\n                                  }}\n                                >\n                                  <IntlMessages id=\"marks.FullName\" />\n                                </th>\n                                <th\n                                  scope=\"col\"\n                                  style={{\n                                    fontSize: '15px',\n                                    textAlign: 'center',\n                                  }}\n                                >\n                                  <IntlMessages id=\"marks.FatherName\" />\n                                </th>\n                                <th\n                                  scope=\"col\"\n                                  style={{\n                                    fontSize: '15px',\n                                    textAlign: 'center',\n                                  }}\n                                >\n                                  <IntlMessages id=\"marks.ID\" />\n                                </th>\n                                <th\n                                  scope=\"col\"\n                                  style={{\n                                    fontSize: '15px',\n                                    textAlign: 'center',\n                                  }}\n                                >\n                                  <IntlMessages id=\"marks.Marks\" />\n                                </th>\n                              </tr>\n                            </thead>\n                            <tbody\n                              className=\"border border \"\n                              style={{\n                                overflowY: 'scroll',\n                                overflowX: 'hidden',\n                              }}\n                            >\n                              {students.length > 0 &&\n                                students.map((student, index) => (\n                                  <tr key={index}>\n                                    <th\n                                      scope=\"row\"\n                                      style={{\n                                        fontSize: '20px',\n                                        textAlign: 'center',\n                                      }}\n                                    >\n                                      {index + 1}\n                                    </th>\n                                    <td\n                                      style={{\n                                        fontSize: '20px',\n                                        textAlign: 'center',\n                                      }}\n                                    >\n                                      {student.name}\n                                    </td>\n                                    <td\n                                      style={{\n                                        fontSize: '20px',\n                                        textAlign: 'center',\n                                      }}\n                                    >\n                                      {student.father_name}\n                                    </td>\n                                    <td\n                                      style={{\n                                        fontSize: '20px',\n                                        textAlign: 'center',\n                                      }}\n                                    >\n                                      {student.student_id}\n                                    </td>\n\n                                    {/* Marks Entry */}\n                                    <td>\n                                      <div\n                                        style={{\n                                          margin: '-7px',\n                                          fontSize: '15px',\n                                        }}\n                                      >\n                                        <input\n                                          type=\"number\"\n                                          // style={{\n                                          //   fontSize: '15px',\n                                          //   textAlign: 'center',\n                                          // }}\n                                          className=\"form-control\"\n                                          // name={`score[${student.student_id}]`}\n                                          name=\"marks\"\n                                          min={0}\n                                          max={100}\n                                          onChange={(e) => {\n                                            const newArr = arr;\n                                            newArr[student.student_id] = {\n                                              ...newArr[student.student_id],\n                                              [e.target.name]: Number.parseInt(\n                                                e.target.value,\n                                              ),\n                                            };\n                                            setArr(newArr);\n                                          }}\n                                        />\n                                        {errors.score && touched.score ? (\n                                          <div className=\"invalid-feedback d-block\">\n                                            {errors.score}\n                                          </div>\n                                        ) : null}\n                                      </div>\n                                    </td>\n                                  </tr>\n                                ))}\n                            </tbody>\n                            <tfoot className=\"thead-dark\">\n                              <tr>\n                                <th\n                                  scope=\"col\"\n                                  style={{\n                                    fontSize: '15px',\n                                    textAlign: 'center',\n                                  }}\n                                >\n                                  <IntlMessages id=\"marks.No\" />\n                                </th>\n                                <th\n                                  scope=\"col\"\n                                  style={{\n                                    fontSize: '15px',\n                                    textAlign: 'center',\n                                  }}\n                                >\n                                  <IntlMessages id=\"marks.FullName\" />\n                                </th>\n                                <th\n                                  scope=\"col\"\n                                  style={{\n                                    fontSize: '15px',\n                                    textAlign: 'center',\n                                  }}\n                                >\n                                  <IntlMessages id=\"marks.FatherName\" />\n                                </th>\n                                <th\n                                  scope=\"col\"\n                                  style={{\n                                    fontSize: '15px',\n                                    textAlign: 'center',\n                                  }}\n                                >\n                                  <IntlMessages id=\"marks.ID\" />\n                                </th>\n                                <th\n                                  scope=\"col\"\n                                  style={{\n                                    fontSize: '15px',\n                                    textAlign: 'center',\n                                  }}\n                                >\n                                  <IntlMessages id=\"marks.Marks\" />\n                                </th>\n                              </tr>\n                            </tfoot>\n                          </table>\n                        </Row>\n                        <Row className=\" justify-content-center\">\n                          <Colxx xxs=\"9\" className=\"m-5\">\n                            <Button\n                              className=\" m-4 \"\n                              color=\"primary\"\n                              onClick={() => setIsNext(false)}\n                            >\n                              <IntlMessages id=\"button.Back\" />\n                            </Button>\n\n                            <div className=\"d-flex justify-content-between align-items-center m-4 float-right\">\n                              <Button\n                                size=\"lg\"\n                                type=\"submit\"\n                                color=\"primary\"\n                                // onSubmit={onSubmit}\n                                // onClick={() => setIsSubmitted(true)}\n                              >\n                                <IntlMessages id=\"button.SubmitButton\" />\n                              </Button>\n                            </div>\n                          </Colxx>\n                        </Row>\n                      </Form>\n                    )}\n                  </Formik>\n                </>\n              ) : (\n                <div className=\"wizard-basic-step text-center pt-3\">\n                  <div>\n                    <h1 className=\"mb-2\">\n                      <IntlMessages id=\"wizard.content-thanks\" />\n                    </h1>\n                    <h3>\n                      <IntlMessages id=\"wizard.registered\" />\n                    </h3>\n                    <Button\n                      className=\"m-5 bg-primary\"\n                      // onClick={() => window.location.reload()}\n                      onClick={() => {\n                        setIsNext(false);\n                        setIsSubmitted(false);\n                      }}\n                    >\n                      <IntlMessages id=\"button.Back\" />\n                    </Button>\n                  </div>\n                </div>\n              )}\n            </>\n          )}\n        </CardBody>\n      </Card>\n    </>\n  );\n};\n\nexport default MarksRegistration;\n"],"names":["ValidationSchema","Yup","shape","institute","value","required","nullable","_jsx","IntlMessages","id","educationalYear","studyTime","classs","department","subject","initialValues","marks","_ref","match","_useState","useState","_useState2","_slicedToArray","isNext","setIsNext","_useState3","_useState4","_useState5","_useState6","isSubmitted","setIsSubmitted","_useState7","_useState8","setFields","_useState9","_useState10","institutes","setInstitutes","_useState11","_useState12","departments","setDepartments","_useState13","_useState14","classes","setClasses","_useState15","_useState16","subjects","setSubjects","_useState17","_useState18","students","setStudents","_useState19","_useState20","selectedInstitute","setSelectedInstitute","_useState21","_useState22","selectedDepartment","setSelectedDepartment","_useState23","_useState24","selectedClass","setSelectedClass","_useState25","_useState26","selectedSubject","setSelectedSubject","_useState27","_useState28","selecedStudyTime","setSelectedStudyTime","_useState29","_useState30","selectedEducationalYear","setSelectedEducationalYear","_useState31","_useState32","_useState33","_useState34","_useState35","_useState36","_useState37","_useState38","markId","useParams","_useState39","_useState40","arr","setArr","_useState41","semester","section","_useState42","selectedClassLabel","setselectedClassLabel","_fetchStudent","_asyncToGenerator","_regeneratorRuntime","mark","_callee8","_yield$axios$get","wrap","_context8","prev","next","axios","concat","sent","data","stop","apply","arguments","useEffect","isEmptyArray","_selectedClass$label$","label","split","_selectedClass$label$2","fetchStudent","fetchInstitutes","_ref2","_callee","response","updatedData","_context","callApi","console","warn","status","map","item","name","log","fetchFields","_ref3","_callee2","_context2","fetchDepartments","_ref4","_callee3","instituteId","_context3","abrupt","_x","fetchClasses","_ref5","_callee4","_context4","fetchSubjects","_ref6","_callee5","_context5","createNotification","type","className","cName","NotificationManager","success","error","alert","info","fetchStudents","_ref7","_callee6","values","_context6","_x2","onSubmit","_ref8","_callee7","newStudents","departmentId","classId","subjectId","shift","_context7","Object","keys","forEach","push","_objectSpread","student_id","educational_year","_x3","_Fragment","children","_jsxs","Card","CardBody","Button","onClick","Row","style","marginInline","Colxx","xxs","Label","fontSize","fontWeight","Formik","_ref10","errors","touched","Form","height","overflowY","overflowX","scope","textAlign","length","student","index","father_name","margin","min","max","onChange","e","newArr","_defineProperty","target","Number","parseInt","score","color","size","validationSchema","_ref9","setFieldTouched","setFieldValue","handleSubmit","FormGroup","FormikReactSelect","options","onBlur","studyTimeOptions","educationalYearsOptions"],"sourceRoot":""}