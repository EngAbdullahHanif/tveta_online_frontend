{"version":3,"sources":["views/app/students/marks-register.js","helpers/currentUser.js","views/app/institutes/index.js"],"names":["ValidationSchema","Yup","shape","institute","value","required","nullable","_jsx","IntlMessages","id","educationalYear","studyTime","classs","department","subject","initialValues","MarksRegistration","_ref","match","_useState","useState","_useState2","_slicedToArray","isNext","setIsNext","_useState3","_useState4","_useState5","_useState6","isSubmitted","setIsSubmitted","_useState7","_useState8","setFields","_useState9","_useState10","institutes","setInstitutes","_useState11","_useState12","departments","setDepartments","_useState13","_useState14","classes","setClasses","_useState15","_useState16","subjects","setSubjects","_useState17","_useState18","students","setStudents","_useState19","_useState20","selectedInstitute","setSelectedInstitute","_useState21","_useState22","selectedDepartment","setSelectedDepartment","_useState23","_useState24","selectedClass","setSelectedClass","_useState25","_useState26","selectedSubject","setSelectedSubject","_useState27","_useState28","selecedStudyTime","setSelectedStudyTime","_useState29","_useState30","selectedEducationalYear","setSelectedEducationalYear","_useState31","_useState32","_useState33","_useState34","_useState35","_useState36","_useState37","_useState38","markId","useParams","_useState39","semester","section","_useState40","selectedClassLabel","setselectedClassLabel","useEffect","isEmptyArray","_selectedClass$label$","label","split","_selectedClass$label$2","_fetchStudent","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_yield$axios$get","wrap","_context","prev","next","axios","get","concat","studentMarkId","sent","data","stop","apply","arguments","fetchStudent","fetchInstitutes","_ref2","_callee2","response","updatedData","_context2","callApi","console","warn","status","map","item","name","log","fetchFields","_ref3","_callee3","_context3","fetchDepartments","_ref4","_callee4","instituteId","_context4","abrupt","_x","fetchClasses","_ref5","_callee5","_context5","fetchSubjects","_ref6","_callee6","_context6","createNotification","type","className","cName","NotificationManager","success","error","alert","info","fetchStudents","_ref7","_callee7","values","_context7","_x2","onSubmit","_ref8","_callee8","departmentId","classId","subjectId","shift","newStudents","_context8","student","index","student_id","marks","score","educational_year","_toConsumableArray","_x3","_Fragment","children","_jsxs","Card","CardBody","Button","onClick","Row","style","marginInline","Colxx","xxs","Label","fontSize","fontWeight","Formik","_ref10","errors","Form","height","overflowY","overflowX","scope","textAlign","length","father_name","margin","Field","min","max","touched","color","size","validationSchema","_ref9","setFieldTouched","setFieldValue","handleSubmit","FormGroup","FormikReactSelect","options","onChange","onBlur","studyTimeOptions","educationalYearsOptions","currentUser","user","JSON","parse","localStorage","getItem","user_id","InstituteList","React","lazy","PromotionDemotionList","InstituteRegister","InstitueCreate","InstituteUpgrade","InstituteProfile","InstituteDepartmentRegister","InstituteDepartmentList","Institues","props","Suspense","fallback","Switch","Redirect","exact","from","url","to","ProtectedRoute","path","component","roles","userRole","superUser","admin","provincial"],"mappings":"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","file":"static/js/marks-register.38974726.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Formik, Form, Field, isEmptyArray } from 'formik';\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\nimport callApi from 'helpers/callApi';\nimport currentUser from 'helpers/currentUser';\nimport {\n  studyTimeOptions,\n  educationalYearsOptions,\n} from './../global-data/options';\nimport './../../../assets/css/global-style.css';\n\n// Year  and SHift\nimport * as Yup from 'yup';\nimport {\n  Row,\n  Card,\n  CardBody,\n  FormGroup,\n  Label,\n  Button,\n  CardTitle,\n  Input,\n} from 'reactstrap';\nimport Select from 'react-select';\nimport { NotificationManager } from 'components/common/react-notifications';\n\nimport IntlMessages from 'helpers/IntlMessages';\nimport { Colxx } from 'components/common/CustomBootstrap';\nimport {\n  FormikReactSelect,\n  FormikTagsInput,\n  FormikDatePicker,\n} from 'containers/form-validations/FormikFields';\nimport userEvent from '@testing-library/user-event';\n\nimport Institues from '../institutes';\n\nconst ValidationSchema = Yup.object().shape({\n  institute: Yup.object()\n    .shape({\n      value: Yup.string().required(),\n    })\n    .nullable()\n    .required(<IntlMessages id=\"forms.InstituteErr\" />),\n  educationalYear: Yup.object()\n    .shape({\n      value: Yup.string().required(),\n    })\n    .nullable()\n    .required(<IntlMessages id=\"forms.educationYearErr\" />),\n\n  studyTime: Yup.object()\n    .shape({\n      value: Yup.string().required(),\n    })\n    .nullable()\n    .required(<IntlMessages id=\"forms.StudyTimeErr\" />),\n  classs: Yup.object()\n    .shape({\n      value: Yup.string().required(),\n    })\n    .nullable()\n    .required(<IntlMessages id=\"marks.ClassErr\" />),\n  department: Yup.object()\n    .shape({\n      value: Yup.string().required(),\n    })\n    .nullable()\n    .required(<IntlMessages id=\"teacher.departmentIdErr\" />),\n  subject: Yup.object()\n    .shape({\n      value: Yup.string().required(),\n    })\n    .nullable()\n    .required(<IntlMessages id=\"marks.SubjectErr\" />),\n});\nconst initialValues = {\n  institute: [],\n  educationalYear: [],\n  studyTime: [],\n  classs: [],\n  department: [],\n  subject: [],\n};\n\nconst MarksRegistration = ({ match }) => {\n  const [isNext, setIsNext] = useState(false);\n  const [counter, setCounter] = useState(0);\n  const [isSubmitted, setIsSubmitted] = useState(false);\n  const [fields, setFields] = useState([]);\n  const [institutes, setInstitutes] = useState([]);\n  const [departments, setDepartments] = useState([]);\n  const [classes, setClasses] = useState([]);\n  const [subjects, setSubjects] = useState([]);\n  const [students, setStudents] = useState([]);\n  const [selectedInstitute, setSelectedInstitute] = useState();\n  const [selectedDepartment, setSelectedDepartment] = useState('');\n  const [selectedClass, setSelectedClass] = useState('');\n  const [selectedSubject, setSelectedSubject] = useState('');\n  const [selecedStudyTime, setSelectedStudyTime] = useState('');\n  const [selectedEducationalYear, setSelectedEducationalYear] = useState('');\n  const [passingScore, setPassingScore] = useState(55);\n  const [subjectGrad, setSubjectGrad] = useState();\n  const [subjectGPA, setSubjectGPA] = useState();\n  const [examId, setExamId] = useState();\n  const { markId } = useParams();\n  // separate and set labels for classes\n  const [selectedClassLabel, setselectedClassLabel] = useState({\n    classs: '',\n    semester: '',\n    section: '',\n  });\n  const int = [\n    {\n      label: 'Dept 1',\n      value: '1',\n      institute: '1',\n    },\n    {\n      label: 'Dept 2',\n      value: '2',\n      institute: '8',\n    },\n    {\n      label: 'Dept 3',\n      value: '3',\n      institute: '1',\n    },\n    {\n      label: 'Dept 4',\n      value: '4',\n      institute: 'انستیتوت تکنالوژی افغان',\n    },\n  ];\n  useEffect(() => {\n    if (!isEmptyArray(selectedClass) && selectedClass !== '') {\n      const [semester, classs, section] = selectedClass.label.split('-');\n      setselectedClassLabel({ classs, semester, section });\n    }\n  }, [selectedClass]);\n\n  if (markId) {\n    useEffect(() => {\n      async function fetchStudent() {\n        const { data } = await axios.get(\n          `${studentMarkId}/?student_id=${markId}`\n        );\n        // console.log(data, 'object of the data');\n\n        // const instGender = genderOptions.map((studentGender) => {\n        //   if (studentGender.value === data[0].gender) {\n        //     setInitialGender(studentGender);\n        //   }\n        // });\n      }\n      fetchStudent();\n      //setUpdateMode(true);\n    }, []);\n  }\n\n  const fetchInstitutes = async () => {\n    const response = await callApi('institute/', '', null);\n    console.warn('Reponse Institutes: ', response);\n    if (response.data && response.status === 200) {\n      const updatedData = await response.data.map((item) => ({\n        value: item.id,\n        label: item.name,\n      }));\n      console.warn('Updated Institutes: ', updatedData);\n      setInstitutes(updatedData);\n    } else {\n      console.log('institute error');\n    }\n  };\n\n  const fetchFields = async () => {\n    const response = await callApi('institute/field/', '', null);\n    if (response.data && response.status === 200) {\n      const updatedData = await response.data.map((item) => ({\n        value: item.id,\n        label: item.name,\n      }));\n      setFields(updatedData);\n    } else {\n      console.log('field error');\n    }\n  };\n  const fetchDepartments = async (instituteId) => {\n    if (!instituteId || !instituteId.value) {\n      return;\n    }\n    const response = await callApi(\n      `institute/institite-department/?institute=${instituteId.value}`,\n      'GET',\n      null\n    );\n    // console.log('response of department', response);\n    if (response.data && response.status === 200) {\n      console.log('response of department', response);\n      const updatedData = await response.data.map((item) => ({\n        value: item.department.id,\n        label: item.department.name,\n      }));\n      console.log('updatedData of department', updatedData);\n      setDepartments(updatedData); //Set it up when data in Backend is ready\n    } else {\n      console.log('department error');\n    }\n  };\n\n  const fetchClasses = async () => {\n    const response = await callApi('institute/classs/', '', null);\n    if (response.data && response.status === 200) {\n      const updatedData = await response.data.map((item) => ({\n        value: item.id,\n        label: item.name + ' - ' + item.semester + ' - ' + item.section,\n      }));\n      setClasses(updatedData);\n    } else {\n      console.log('class error');\n    }\n  };\n\n  const fetchSubjects = async () => {\n    const response = await callApi('institute/subject/', '', null);\n    if (response.data && response.status === 200) {\n      const updatedData = await response.data.map((item) => ({\n        value: item.id,\n        label: item.name,\n      }));\n      setSubjects(updatedData);\n    } else {\n      console.log('subject error');\n    }\n  };\n\n  useEffect(() => {\n    fetchInstitutes();\n    fetchFields();\n    fetchClasses();\n    fetchSubjects();\n  }, []);\n\n  useEffect(() => {\n    if (selectedInstitute) {\n      console.log('selectedInstitute', selectedInstitute);\n      fetchDepartments(selectedInstitute);\n    }\n  }, [selectedInstitute]);\n\n  // notification message\n  const createNotification = (type, className) => {\n    const cName = className || '';\n    switch (type) {\n      case 'success':\n        NotificationManager.success(\n          'نمری په بریالیتوب سره ثبت شوی',\n          'موفقیت',\n          3000,\n          null,\n          null,\n          cName\n        );\n        break;\n      case 'error':\n        NotificationManager.error(\n          'نمری ثبت نه شوی بیا کوشش وکری',\n          'خطا',\n          9000,\n          () => {\n            alert('callback');\n          },\n          null,\n          cName\n        );\n        break;\n      default:\n        NotificationManager.info('Info message');\n        break;\n    }\n  };\n\n  const fetchStudents = async (values) => {\n    const response = await callApi(\n      `students/class-marks/list/?institute=${selectedInstitute.value}&classs=${selectedClass.value}&shift=${selecedStudyTime.value}&department=${selectedDepartment.value}&educational_year=${selectedEducationalYear.value}&subject=${selectedSubject.value}`,\n      '',\n      null\n    );\n    if (response.data && response.status === 200) {\n      console.log('response of students', response);\n      setStudents(response.data);\n      setIsNext(true);\n    } else {\n      console.log('subject error');\n    }\n  };\n\n  const onSubmit = async (values) => {\n    const educationalYear = selectedEducationalYear.value;\n    const instituteId = selectedInstitute.value;\n    const departmentId = selectedDepartment.value;\n    const classId = selectedClass.value;\n    const subjectId = selectedSubject.value;\n    const shift = selecedStudyTime.value;\n\n    console.log('educationalYear', educationalYear);\n    console.log('instituteId', instituteId);\n    console.log('departmentId', departmentId);\n    console.log('classId', classId);\n    console.log('subjectId', subjectId);\n\n    const newStudents = students.map((student, index) => {\n      return {\n        student_id: student.student_id,\n        marks: values.score[student.student_id],\n      };\n    });\n\n    console.log('newStudents', newStudents);\n\n    let data = [\n      {\n        educational_year: educationalYear,\n        institute: instituteId,\n        department: departmentId,\n        classs: classId,\n        subject: subjectId,\n        shift: shift,\n      },\n      ...newStudents,\n    ];\n\n    console.log('data', data);\n\n    const response = await callApi(\n      'students/class-marks/create/',\n      'POST',\n      data\n    );\n    if (\n      response.status === 200 ||\n      response.status === 201 ||\n      response.status === 202\n    ) {\n      // console.log('response of students', response);\n      setIsSubmitted(true);\n      createNotification('success', 'filled');\n    } else {\n      console.log('marks error');\n      setIsSubmitted(false);\n      createNotification('error', 'filled');\n    }\n  };\n\n  // console.log('condsotlsa f', students);\n  return (\n    <>\n      <Card>\n        <div className=\"mt-4 ml-5\">\n          <h2 className=\"mt-5 m-5 titleStyle\">\n            {<IntlMessages id=\"marks.title\" />}\n          </h2>\n        </div>\n        <CardBody>\n          {!isNext ? (\n            <Formik\n              initialValues={initialValues}\n              onSubmit={fetchStudents}\n              validationSchema={ValidationSchema}\n            >\n              {({\n                errors,\n                touched,\n                values,\n                setFieldTouched,\n                setFieldValue,\n                handleSubmit,\n              }) => (\n                <Form className=\"av-tooltip tooltip-label-right  style\">\n                  <Row className=\"m-5\">\n                    <Colxx xxs=\"6\">\n                      {/* set if condition, if institutes are loaded */}\n                      <FormGroup className=\"form-group has-float-label error-l-150 \">\n                        <Label>\n                          <IntlMessages id=\"forms.InstituteLabel\" />\n                        </Label>\n                        <FormikReactSelect\n                          name=\"institute\"\n                          id=\"institute\"\n                          // value={values.institute}\n                          options={institutes}\n                          onChange={setFieldValue}\n                          onBlur={setFieldTouched}\n                          onClick={setSelectedInstitute(values.institute)}\n                        />\n\n                        {errors.institute && touched.institute ? (\n                          <div className=\"invalid-feedback d-block bg-danger text-white \">\n                            {errors.institute}\n                          </div>\n                        ) : null}\n                      </FormGroup>\n\n                      <FormGroup className=\"form-group has-float-label mt-5  error-l-150\">\n                        <Label>\n                          <IntlMessages id=\"forms.StudyTimeLabel\" />\n                        </Label>\n                        <FormikReactSelect\n                          name=\"studyTime\"\n                          id=\"studyTime\"\n                          value={values.studyTime}\n                          options={studyTimeOptions}\n                          onChange={setFieldValue}\n                          onBlur={setFieldTouched}\n                          onClick={setSelectedStudyTime(values.studyTime)}\n                        />\n                        {errors.studyTime && touched.studyTime ? (\n                          <div className=\"invalid-feedback d-block bg-danger text-white \">\n                            {errors.studyTime}\n                          </div>\n                        ) : null}\n                      </FormGroup>\n\n                      <FormGroup className=\"form-group has-float-label mt-5  error-l-150\">\n                        <Label>\n                          <IntlMessages id=\"forms.educationYearLabel\" />\n                        </Label>\n                        <FormikReactSelect\n                          name=\"educationalYear\"\n                          id=\"educationalYear\"\n                          options={educationalYearsOptions}\n                          onChange={setFieldValue}\n                          onBlur={setFieldTouched}\n                          onClick={setSelectedEducationalYear(\n                            values.educationalYear\n                          )}\n                        />\n                        {errors.educationalYear && touched.educationalYear ? (\n                          <div className=\"invalid-feedback d-block bg-danger text-white \">\n                            {errors.educationalYear}\n                          </div>\n                        ) : null}\n                      </FormGroup>\n                    </Colxx>\n\n                    <Colxx xxs=\"6\">\n                      <FormGroup className=\"form-group has-float-label error-l-150 \">\n                        <Label>\n                          <IntlMessages id=\"marks.ClassLabel\" />\n                        </Label>\n                        <FormikReactSelect\n                          name=\"classs\"\n                          id=\"classs\"\n                          value={values.classs}\n                          options={classes}\n                          onChange={setFieldValue}\n                          onBlur={setFieldTouched}\n                          onClick={setSelectedClass(values.classs)}\n                          required\n                        />\n                        {errors.classs && touched.classs ? (\n                          <div className=\"invalid-feedback d-block bg-danger text-white \">\n                            {errors.classs}\n                          </div>\n                        ) : null}\n                      </FormGroup>\n\n                      <FormGroup className=\"form-group has-float-label mt-5 error-l-150\">\n                        <Label>\n                          <IntlMessages id=\"forms.studyDepartment\" />\n                        </Label>\n                        <FormikReactSelect\n                          name=\"department\"\n                          id=\"department\"\n                          value={values.department}\n                          options={departments}\n                          onChange={setFieldValue}\n                          onBlur={setFieldTouched}\n                          onClick={setSelectedDepartment(values.department)}\n                          required\n                        />\n                        {errors.department && touched.department ? (\n                          <div className=\"invalid-feedback d-block bg-danger text-white \">\n                            {errors.department}\n                          </div>\n                        ) : null}\n                      </FormGroup>\n                      <FormGroup className=\"form-group has-float-label mt-5 error-l-150\">\n                        <Label>\n                          <IntlMessages id=\"marks.SubjectLabel\" />\n                        </Label>\n                        <FormikReactSelect\n                          name=\"subject\"\n                          id=\"subject\"\n                          value={values.subject}\n                          options={subjects}\n                          onChange={setFieldValue}\n                          onBlur={setFieldTouched}\n                          onClick={setSelectedSubject(values.subject)}\n                          required\n                        />\n                        {errors.subject && touched.subject ? (\n                          <div className=\"invalid-feedback d-block bg-danger text-white \">\n                            {errors.subject}\n                          </div>\n                        ) : null}\n                      </FormGroup>\n                    </Colxx>\n                  </Row>\n                  <Row>\n                    <Colxx>\n                      <Button\n                        onClick={handleSubmit}\n                        color=\"primary\"\n                        className=\"float-right  buttonStyle\"\n                        size=\"lg\"\n                        // type=\"submit\"\n                        style={{ margin: '2% 0% 10% 6%' }}\n                      >\n                        <span className=\"label\">\n                          <IntlMessages id=\"button.Next\" />\n                        </span>\n                      </Button>\n                    </Colxx>\n                  </Row>\n                </Form>\n              )}\n            </Formik>\n          ) : (\n            <>\n              {!isSubmitted ? (\n                <>\n                  <Row\n                    className=\"border border bg-primary me-5 p-1 \"\n                    style={{ marginInline: '16%' }}\n                  >\n                    <Colxx xxs=\"2\">\n                      <Label style={{ fontSize: '20px', fontWeight: 'bold' }}>\n                        <IntlMessages id=\"forms.FieldLabel\" />\n                      </Label>\n                      {/* {console.log('selectedDepartment', selectedDepartment)} */}\n                      <h5>{selectedDepartment.label}</h5>\n                    </Colxx>\n\n                    <Colxx xxs=\"2\">\n                      <Label style={{ fontSize: '20px', fontWeight: 'bold' }}>\n                        <IntlMessages id=\"marks.ClassLabel\" />\n                      </Label>\n                      <h5>{selectedClassLabel.classs}</h5>\n                    </Colxx>\n\n                    <Colxx xxs=\"2\">\n                      <Label style={{ fontSize: '20px', fontWeight: 'bold' }}>\n                        <IntlMessages id=\"forms.StudyTimeLabel\" />\n                      </Label>\n                      <h5>{selecedStudyTime.label}</h5>\n                    </Colxx>\n\n                    <Colxx xxs=\"2\">\n                      <Label style={{ fontSize: '20px', fontWeight: 'bold' }}>\n                        <IntlMessages id=\"marks.SemesterLabel\" />\n                      </Label>\n                      <h5>{selectedClassLabel.semester}</h5>\n                    </Colxx>\n\n                    <Colxx xxs=\"2\">\n                      <Label style={{ fontSize: '20px', fontWeight: 'bold' }}>\n                        <IntlMessages id=\"marks.SectionLabel\" />\n                      </Label>\n                      <h5>{selectedClassLabel.section}</h5>\n                    </Colxx>\n\n                    <Colxx xxs=\"2\">\n                      <Label style={{ fontSize: '20px', fontWeight: 'bold' }}>\n                        <IntlMessages id=\"marks.SubjectLabel\" />\n                      </Label>\n                      <h5>{selectedSubject.label}</h5>\n                    </Colxx>\n                  </Row>\n                  <Formik\n                    initialValues={initialValues}\n                    onSubmit={onSubmit}\n                    // validationSchema={ValidationSchema}\n                  >\n                    {({ errors }) => (\n                      <Form className=\"av-tooltip tooltip-label-right \">\n                        <Row\n                          className=\"justify-content-center  border border\"\n                          style={{\n                            marginInline: '16%',\n                            height: '30rem',\n                            overflowY: 'scroll',\n                            overflowX: 'hidden',\n                          }}\n                        >\n                          <table className=\"table \">\n                            <thead className=\"thead-dark\">\n                              <tr>\n                                <th\n                                  scope=\"col\"\n                                  style={{\n                                    fontSize: '15px',\n                                    textAlign: 'center',\n                                  }}\n                                >\n                                  <IntlMessages id=\"marks.No\" />\n                                </th>\n                                <th\n                                  scope=\"col\"\n                                  style={{\n                                    fontSize: '15px',\n                                    textAlign: 'center',\n                                  }}\n                                >\n                                  <IntlMessages id=\"marks.FullName\" />\n                                </th>\n                                <th\n                                  scope=\"col\"\n                                  style={{\n                                    fontSize: '15px',\n                                    textAlign: 'center',\n                                  }}\n                                >\n                                  <IntlMessages id=\"marks.FatherName\" />\n                                </th>\n                                <th\n                                  scope=\"col\"\n                                  style={{\n                                    fontSize: '15px',\n                                    textAlign: 'center',\n                                  }}\n                                >\n                                  <IntlMessages id=\"marks.ID\" />\n                                </th>\n                                <th\n                                  scope=\"col\"\n                                  style={{\n                                    fontSize: '15px',\n                                    textAlign: 'center',\n                                  }}\n                                >\n                                  <IntlMessages id=\"marks.Marks\" />\n                                </th>\n                              </tr>\n                            </thead>\n                            <tbody\n                              className=\"border border \"\n                              style={{\n                                overflowY: 'scroll',\n                                overflowX: 'hidden',\n                              }}\n                            >\n                              {students.length > 0 &&\n                                students.map((student, index) => (\n                                  <tr key={index}>\n                                    <th\n                                      scope=\"row\"\n                                      style={{\n                                        fontSize: '20px',\n                                        textAlign: 'center',\n                                      }}\n                                    >\n                                      {index + 1}\n                                    </th>\n                                    <td\n                                      style={{\n                                        fontSize: '20px',\n                                        textAlign: 'center',\n                                      }}\n                                    >\n                                      {student.name}\n                                    </td>\n                                    <td\n                                      style={{\n                                        fontSize: '20px',\n                                        textAlign: 'center',\n                                      }}\n                                    >\n                                      {student.father_name}\n                                    </td>\n                                    <td\n                                      style={{\n                                        fontSize: '20px',\n                                        textAlign: 'center',\n                                      }}\n                                    >\n                                      {student.student_id}\n                                    </td>\n\n                                    {/* Marks Entry */}\n                                    <td>\n                                      <div\n                                        style={{\n                                          margin: '-7px',\n                                          fontSize: '15px',\n                                        }}\n                                      >\n                                        <Field\n                                          type=\"number\"\n                                          style={{\n                                            fontSize: '15px',\n                                            textAlign: 'center',\n                                          }}\n                                          className=\"form-control\"\n                                          name={`score[${student.student_id}]`}\n                                          min=\"0\"\n                                          max=\"100\"\n                                        />\n                                        {errors.score && touched.score ? (\n                                          <div className=\"invalid-feedback d-block\">\n                                            {errors.score}\n                                          </div>\n                                        ) : null}\n                                      </div>\n                                    </td>\n                                  </tr>\n                                ))}\n                            </tbody>\n                            <tfoot className=\"thead-dark\">\n                              <tr>\n                                <th\n                                  scope=\"col\"\n                                  style={{\n                                    fontSize: '15px',\n                                    textAlign: 'center',\n                                  }}\n                                >\n                                  <IntlMessages id=\"marks.No\" />\n                                </th>\n                                <th\n                                  scope=\"col\"\n                                  style={{\n                                    fontSize: '15px',\n                                    textAlign: 'center',\n                                  }}\n                                >\n                                  <IntlMessages id=\"marks.FullName\" />\n                                </th>\n                                <th\n                                  scope=\"col\"\n                                  style={{\n                                    fontSize: '15px',\n                                    textAlign: 'center',\n                                  }}\n                                >\n                                  <IntlMessages id=\"marks.FatherName\" />\n                                </th>\n                                <th\n                                  scope=\"col\"\n                                  style={{\n                                    fontSize: '15px',\n                                    textAlign: 'center',\n                                  }}\n                                >\n                                  <IntlMessages id=\"marks.ID\" />\n                                </th>\n                                <th\n                                  scope=\"col\"\n                                  style={{\n                                    fontSize: '15px',\n                                    textAlign: 'center',\n                                  }}\n                                >\n                                  <IntlMessages id=\"marks.Marks\" />\n                                </th>\n                              </tr>\n                            </tfoot>\n                          </table>\n                        </Row>\n                        <Row className=\" justify-content-center\">\n                          <Colxx xxs=\"9\" className=\"m-5\">\n                            <Button\n                              className=\" m-4 \"\n                              color=\"primary\"\n                              onClick={() => setIsNext(false)}\n                            >\n                              <IntlMessages id=\"button.Back\" />\n                            </Button>\n\n                            <div className=\"d-flex justify-content-between align-items-center m-4 float-right\">\n                              <Button\n                                size=\"lg\"\n                                type=\"submit\"\n                                color=\"primary\"\n                                // onSubmit={onSubmit}\n                                // onClick={() => setIsSubmitted(true)}\n                              >\n                                <IntlMessages id=\"button.SubmitButton\" />\n                              </Button>\n                            </div>\n                          </Colxx>\n                        </Row>\n                      </Form>\n                    )}\n                  </Formik>\n                </>\n              ) : (\n                <div className=\"wizard-basic-step text-center pt-3\">\n                  <div>\n                    <h1 className=\"mb-2\">\n                      <IntlMessages id=\"wizard.content-thanks\" />\n                    </h1>\n                    <h3>\n                      <IntlMessages id=\"wizard.registered\" />\n                    </h3>\n                    <Button\n                      className=\"m-5 bg-primary\"\n                      // onClick={() => window.location.reload()}\n                      onClick={() => {\n                        setIsNext(false);\n                        setIsSubmitted(false);\n                      }}\n                    >\n                      <IntlMessages id=\"button.Back\" />\n                    </Button>\n                  </div>\n                </div>\n              )}\n            </>\n          )}\n        </CardBody>\n      </Card>\n    </>\n  );\n};\n\nexport default MarksRegistration;\n","const currentUser = () => {\n  const user = JSON.parse(localStorage.getItem('user'));\n  console.log('user is here', user.user_id);\n  return user.user_id;\n};\n\nexport default currentUser;\n","import { userRole } from 'constants/defaultValues';\nimport { ProtectedRoute } from 'helpers/authHelper';\nimport React, { Suspense } from 'react';\nimport { Redirect, Route, Switch } from 'react-router-dom';\n\nconst InstituteList = React.lazy(() =>\n  import('./institute-list/InstituteListMain')\n);\nconst PromotionDemotionList = React.lazy(() =>\n  import('./promotion-demotion-list/PromotionDemortionListMain')\n);\nconst InstituteRegister = React.lazy(() => import('./institute-register.js'));\n\nconst InstitueCreate = React.lazy(() => import('./institute-create'));\nconst InstituteUpgrade = React.lazy(() => import('./institute-upgrade'));\nconst InstituteProfile = React.lazy(() => import('./institute-profile'));\nconst InstituteDepartmentRegister = React.lazy(() =>\n  import('./institute-department-register')\n);\n\nconst InstituteDepartmentList = React.lazy(() =>\n  import('./institute-department-list/InstituteDepartmentListMain')\n);\n\nconst Institues = ({ match, props }) => (\n  <Suspense fallback={<div className=\"loading\" />}>\n    <Switch>\n      <Redirect exact from={`${match.url}/`} to={`${match.url}/institutes`} />\n      <ProtectedRoute\n        path={`${match.url}/institutes`}\n        component={InstituteList}\n        roles={[\n          userRole.superUser,\n          userRole.admin,\n          userRole.provincial,\n          userRole.institute,\n        ]}\n        props={props}\n      />\n      <ProtectedRoute\n        path={`${match.url}/promotion-demotion-list`}\n        component={PromotionDemotionList}\n        roles={[\n          userRole.superUser,\n          userRole.admin,\n          userRole.provincial,\n          userRole.institute,\n        ]}\n        props={props}\n      />\n\n      <ProtectedRoute\n        exact\n        path={`${match.url}/register`}\n        component={InstituteRegister}\n        roles={[\n          userRole.superUser,\n          userRole.admin,\n          userRole.provincial,\n          userRole.institute,\n        ]}\n        props={props}\n      />\n      <ProtectedRoute\n        path={`${match.url}/register/:instituteId`}\n        component={InstituteRegister}\n        roles={[\n          userRole.superUser,\n          userRole.admin,\n          userRole.provincial,\n          userRole.institute,\n        ]}\n        props={props}\n      />\n      <ProtectedRoute\n        path={`${match.url}/institute-create`}\n        component={InstitueCreate}\n        roles={[\n          userRole.superUser,\n          userRole.admin,\n          userRole.provincial,\n          userRole.institute,\n        ]}\n        props={props}\n      />\n\n      <ProtectedRoute\n        path={`${match.url}/institute-upgrade`}\n        component={InstituteUpgrade}\n        roles={[\n          userRole.superUser,\n          userRole.admin,\n          userRole.provincial,\n          userRole.institute,\n        ]}\n        props={props}\n      />\n      <ProtectedRoute\n        path={`${match.url}/institute/:instituteId`}\n        component={InstituteProfile}\n        roles={[\n          userRole.superUser,\n          userRole.admin,\n          userRole.provincial,\n          userRole.institute,\n        ]}\n        props={props}\n      />\n      <ProtectedRoute\n        path={`${match.url}/institute-department/register`}\n        component={InstituteDepartmentRegister}\n        roles={[\n          userRole.superUser,\n          userRole.admin,\n          userRole.provincial,\n          userRole.institute,\n        ]}\n        props={props}\n      />\n      <ProtectedRoute\n        path={`${match.url}/institute-department/list`}\n        component={InstituteDepartmentList}\n        roles={[\n          userRole.superUser,\n          userRole.admin,\n          userRole.provincial,\n          userRole.institute,\n        ]}\n        props={props}\n      />\n      <Redirect to=\"/error\" />\n    </Switch>\n  </Suspense>\n);\nexport default Institues;\n"],"sourceRoot":""}