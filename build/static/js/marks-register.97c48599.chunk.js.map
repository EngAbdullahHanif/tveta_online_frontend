{"version":3,"file":"static/js/marks-register.97c48599.chunk.js","mappings":"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","sources":["views/app/students/marks-register.js"],"sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport { Formik, Form, isEmptyArray } from 'formik';\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\nimport callApi from 'helpers/callApi';\nimport {\n  studyTimeOptions,\n  educationalYearsOptions,\n} from './../global-data/options';\nimport './../../../assets/css/global-style.css';\n\n// Year  and SHift\nimport * as Yup from 'yup';\nimport { Row, Card, CardBody, FormGroup, Label, Button } from 'reactstrap';\nimport { NotificationManager } from 'components/common/react-notifications';\n\nimport IntlMessages from 'helpers/IntlMessages';\nimport { Colxx } from 'components/common/CustomBootstrap';\nimport { FormikReactSelect } from 'containers/form-validations/FormikFields';\nimport { AuthContext } from 'context/AuthContext';\n\nconst ValidationSchema = Yup.object().shape({\n  institute: Yup.object()\n    .shape({\n      value: Yup.string().required(),\n    })\n    .nullable()\n    .required(<IntlMessages id=\"forms.InstituteErr\" />),\n  educationalYear: Yup.object()\n    .shape({\n      value: Yup.string().required(),\n    })\n    .nullable()\n    .required(<IntlMessages id=\"forms.educationYearErr\" />),\n\n  studyTime: Yup.object()\n    .shape({\n      value: Yup.string().required(),\n    })\n    .nullable()\n    .required(<IntlMessages id=\"forms.StudyTimeErr\" />),\n  classs: Yup.object()\n    .shape({\n      value: Yup.string().required(),\n    })\n    .nullable()\n    .required(<IntlMessages id=\"marks.ClassErr\" />),\n  department: Yup.object()\n    .shape({\n      value: Yup.string().required(),\n    })\n    .nullable()\n    .required(<IntlMessages id=\"teacher.departmentIdErr\" />),\n  subject: Yup.object()\n    .shape({\n      value: Yup.string().required(),\n    })\n    .nullable()\n    .required(<IntlMessages id=\"marks.SubjectErr\" />),\n});\nconst initialValues = {\n  institute: [],\n  educationalYear: [],\n  studyTime: [],\n  classs: [],\n  department: [],\n  subject: [],\n  marks: 0,\n};\n\nconst MarksRegistration = ({ match }) => {\n  const { institutes } = useContext(AuthContext);\n  const [isNext, setIsNext] = useState(false);\n  const [counter, setCounter] = useState(0);\n  const [isSubmitted, setIsSubmitted] = useState(false);\n  const [fields, setFields] = useState([]);\n  // const [institutes, setInstitutes] = useState([]);\n  const [departments, setDepartments] = useState([]);\n  const [classes, setClasses] = useState([]);\n  const [subjects, setSubjects] = useState([]);\n  const [students, setStudents] = useState([]);\n  const [selectedInstitute, setSelectedInstitute] = useState();\n  const [selectedDepartment, setSelectedDepartment] = useState('');\n  const [selectedClass, setSelectedClass] = useState('');\n  const [selectedSubject, setSelectedSubject] = useState('');\n  const [selecedStudyTime, setSelectedStudyTime] = useState('');\n  const [selectedEducationalYear, setSelectedEducationalYear] = useState('');\n  const [passingScore, setPassingScore] = useState(55);\n  const [subjectGrad, setSubjectGrad] = useState();\n  const [subjectGPA, setSubjectGPA] = useState();\n  const [examId, setExamId] = useState();\n  const { markId } = useParams();\n  const [arr, setArr] = useState({});\n  // separate and set labels for classes\n  const [selectedClassLabel, setselectedClassLabel] = useState({\n    classs: '',\n    semester: '',\n    section: '',\n  });\n  const int = [\n    {\n      label: 'Dept 1',\n      value: '1',\n      institute: '1',\n    },\n    {\n      label: 'Dept 2',\n      value: '2',\n      institute: '8',\n    },\n    {\n      label: 'Dept 3',\n      value: '3',\n      institute: '1',\n    },\n    {\n      label: 'Dept 4',\n      value: '4',\n      institute: 'انستیتوت تکنالوژی افغان',\n    },\n  ];\n  useEffect(() => {\n    if (!isEmptyArray(selectedClass) && selectedClass !== '') {\n      const [semester, classs, section] = selectedClass.label.split('-');\n      setselectedClassLabel({ classs, semester, section });\n    }\n  }, [selectedClass]);\n\n  async function fetchStudent() {\n    const { data } = await axios.get(\n      // `${studentMarkId}/?student_id=${markId}`,\n      `${1}/?student_id=${markId}`,\n    );\n    // console.log(data, 'object of the data');\n\n    // const instGender = genderOptions.map((studentGender) => {\n    //   if (studentGender.value === data[0].gender) {\n    //     setInitialGender(studentGender);\n    //   }\n    // });\n  }\n  useEffect(() => {\n    if (markId) {\n      fetchStudent();\n    }\n    //setUpdateMode(true);\n  }, []);\n\n  // const fetchInstitutes = async () => {\n  //   const response = await callApi('institute/', '', null);\n  //   console.warn('Reponse Institutes: ', response);\n  //   if (response.data && response.status === 200) {\n  //     const updatedData = await response.data.map((item) => ({\n  //       value: item.id,\n  //       label: item.name,\n  //     }));\n  //     console.warn('Updated Institutes: ', updatedData);\n  //     setInstitutes(updatedData);\n  //   } else {\n  //     console.log('institute error');\n  //   }\n  // };\n\n  const fetchFields = async () => {\n    const response = await callApi('institute/field/', '', null);\n    if (response.data && response.status === 200) {\n      const updatedData = await response.data.map((item) => ({\n        value: item.id,\n        label: item.name,\n      }));\n      setFields(updatedData);\n    } else {\n      console.log('field error');\n    }\n  };\n  const fetchDepartments = async (instituteId) => {\n    if (!instituteId || !instituteId.value) {\n      return;\n    }\n    const response = await callApi(\n      `institute/institite-department/?institute=${instituteId.value}`,\n      'GET',\n      null,\n    );\n    // console.log('response of department', response);\n    if (response.data && response.status === 200) {\n      console.log('response of department', response);\n      const updatedData = await response.data.map((item) => ({\n        value: item.department,\n        label: item.department,\n      }));\n      console.log('updatedData of department', updatedData);\n      setDepartments(updatedData); //Set it up when data in Backend is ready\n    } else {\n      console.log('department error');\n    }\n  };\n\n  const fetchClasses = async () => {\n    const response = await callApi('institute/classs/', '', null);\n    if (response.data && response.status === 200) {\n      const updatedData = await response.data.map((item) => ({\n        value: item.id,\n        label: item.name + ' - ' + item.semester + ' - ' + item.section,\n      }));\n      setClasses(updatedData);\n    } else {\n      console.log('class error');\n    }\n  };\n\n  const fetchSubjects = async () => {\n    const response = await callApi('institute/subject/', '', null);\n    if (response.data && response.status === 200) {\n      const updatedData = await response.data.map((item) => ({\n        value: item.id,\n        label: item.name,\n      }));\n      setSubjects(updatedData);\n    } else {\n      console.log('subject error');\n    }\n  };\n\n  useEffect(() => {\n    // fetchInstitutes();\n    fetchFields();\n    fetchClasses();\n    fetchSubjects();\n  }, []);\n\n  useEffect(() => {\n    if (selectedInstitute) {\n      console.log('selectedInstitute', selectedInstitute);\n      fetchDepartments(selectedInstitute);\n    }\n  }, [selectedInstitute]);\n\n  // notification message\n  const createNotification = (type, className) => {\n    const cName = className || '';\n    switch (type) {\n      case 'success':\n        NotificationManager.success(\n          'نمری په بریالیتوب سره ثبت شوی',\n          'موفقیت',\n          3000,\n          null,\n          null,\n          cName,\n        );\n        break;\n      case 'error':\n        NotificationManager.error(\n          'نمری ثبت نه شوی بیا کوشش وکری',\n          'خطا',\n          9000,\n          () => {\n            alert('callback');\n          },\n          null,\n          cName,\n        );\n        break;\n      default:\n        NotificationManager.info('Info message');\n        break;\n    }\n  };\n\n  const fetchStudents = async (values) => {\n    const response = await callApi(\n      `students/class-marks/list/?institute=${selectedInstitute.value}&classs=${selectedClass.value}&shift=${selecedStudyTime.value}&department=${selectedDepartment.value}&educational_year=${selectedEducationalYear.value}&subject=${selectedSubject.value}`,\n      '',\n      null,\n    );\n    if (response.data && response.status === 200) {\n      console.log('response of students', response);\n      setStudents(response.data);\n      setIsNext(true);\n    } else {\n      console.log('subject error');\n    }\n  };\n\n  const onSubmit = async (values) => {\n    const newStudents = [];\n    Object.keys(arr).forEach((id) => {\n      newStudents.push({ student_id: id, ...arr[id] });\n    });\n    console.log('arr is: ', arr);\n    const educationalYear = selectedEducationalYear.value;\n    const instituteId = selectedInstitute.value;\n    const departmentId = selectedDepartment.value;\n    const classId = selectedClass.value;\n    const subjectId = selectedSubject.value;\n    const shift = selecedStudyTime.value;\n\n    console.log('educationalYear', educationalYear);\n    console.log('instituteId', instituteId);\n    console.log('departmentId', departmentId);\n    console.log('classId', classId);\n    console.log('subjectId', subjectId);\n\n    // const newStudents = students.map((student, index) => {\n    //   return {\n    //     student_id: student.student_id,\n    //     marks: values.score[student.student_id],\n    //   };\n    // });\n\n    console.log('newStudents', newStudents);\n\n    let data = [\n      {\n        educational_year: educationalYear,\n        institute: instituteId,\n        department: departmentId,\n        classs: classId,\n        subject: subjectId,\n        shift: shift,\n      },\n      ...newStudents,\n    ];\n\n    console.log('data', data);\n\n    const response = await callApi(\n      'students/class-marks/create/',\n      'POST',\n      data,\n    );\n    if (response.status >= 200 || response.status < 300 > 201) {\n      // console.log('response of students', response);\n      setIsSubmitted(true);\n      createNotification('success', 'filled');\n    } else {\n      console.log('marks error');\n      setIsSubmitted(false);\n      createNotification('error', 'filled');\n    }\n  };\n\n  // console.log('condsotlsa f', students);\n  return (\n    <>\n      <Card>\n        <div className=\"mt-4 ml-5\">\n          <h2 className=\"mt-5 m-5 titleStyle\">\n            {<IntlMessages id=\"marks.title\" />}\n          </h2>\n        </div>\n        <CardBody>\n          {!isNext ? (\n            <Formik\n              initialValues={initialValues}\n              onSubmit={fetchStudents}\n              validationSchema={ValidationSchema}\n            >\n              {({\n                errors,\n                touched,\n                values,\n                setFieldTouched,\n                setFieldValue,\n                handleSubmit,\n              }) => (\n                <Form className=\"av-tooltip tooltip-label-right  style\">\n                  <Row className=\"m-5\">\n                    <Colxx xxs=\"6\">\n                      {/* set if condition, if institutes are loaded */}\n                      <FormGroup className=\"form-group has-float-label error-l-150 \">\n                        <Label>\n                          <IntlMessages id=\"forms.InstituteLabel\" />\n                        </Label>\n                        <FormikReactSelect\n                          name=\"institute\"\n                          id=\"institute\"\n                          // value={values.institute}\n                          options={institutes}\n                          onChange={setFieldValue}\n                          onBlur={setFieldTouched}\n                          onClick={setSelectedInstitute(values.institute)}\n                        />\n\n                        {errors.institute && touched.institute ? (\n                          <div className=\"invalid-feedback d-block bg-danger text-white \">\n                            {errors.institute}\n                          </div>\n                        ) : null}\n                      </FormGroup>\n\n                      <FormGroup className=\"form-group has-float-label mt-5  error-l-150\">\n                        <Label>\n                          <IntlMessages id=\"forms.StudyTimeLabel\" />\n                        </Label>\n                        <FormikReactSelect\n                          name=\"studyTime\"\n                          id=\"studyTime\"\n                          value={values.studyTime}\n                          options={studyTimeOptions}\n                          onChange={setFieldValue}\n                          onBlur={setFieldTouched}\n                          onClick={setSelectedStudyTime(values.studyTime)}\n                        />\n                        {errors.studyTime && touched.studyTime ? (\n                          <div className=\"invalid-feedback d-block bg-danger text-white \">\n                            {errors.studyTime}\n                          </div>\n                        ) : null}\n                      </FormGroup>\n\n                      <FormGroup className=\"form-group has-float-label mt-5  error-l-150\">\n                        <Label>\n                          <IntlMessages id=\"forms.educationYearLabel\" />\n                        </Label>\n                        <FormikReactSelect\n                          name=\"educationalYear\"\n                          id=\"educationalYear\"\n                          options={educationalYearsOptions}\n                          onChange={setFieldValue}\n                          onBlur={setFieldTouched}\n                          onClick={setSelectedEducationalYear(\n                            values.educationalYear,\n                          )}\n                        />\n                        {errors.educationalYear && touched.educationalYear ? (\n                          <div className=\"invalid-feedback d-block bg-danger text-white \">\n                            {errors.educationalYear}\n                          </div>\n                        ) : null}\n                      </FormGroup>\n                    </Colxx>\n\n                    <Colxx xxs=\"6\">\n                      <FormGroup className=\"form-group has-float-label error-l-150 \">\n                        <Label>\n                          <IntlMessages id=\"marks.ClassLabel\" />\n                        </Label>\n                        <FormikReactSelect\n                          name=\"classs\"\n                          id=\"classs\"\n                          value={values.classs}\n                          options={classes}\n                          onChange={setFieldValue}\n                          onBlur={setFieldTouched}\n                          onClick={setSelectedClass(values.classs)}\n                          required\n                        />\n                        {errors.classs && touched.classs ? (\n                          <div className=\"invalid-feedback d-block bg-danger text-white \">\n                            {errors.classs}\n                          </div>\n                        ) : null}\n                      </FormGroup>\n\n                      <FormGroup className=\"form-group has-float-label mt-5 error-l-150\">\n                        <Label>\n                          <IntlMessages id=\"forms.studyDepartment\" />\n                        </Label>\n                        <FormikReactSelect\n                          name=\"department\"\n                          id=\"department\"\n                          value={values.department}\n                          options={departments}\n                          onChange={setFieldValue}\n                          onBlur={setFieldTouched}\n                          onClick={setSelectedDepartment(values.department)}\n                          required\n                        />\n                        {errors.department && touched.department ? (\n                          <div className=\"invalid-feedback d-block bg-danger text-white \">\n                            {errors.department}\n                          </div>\n                        ) : null}\n                      </FormGroup>\n                      <FormGroup className=\"form-group has-float-label mt-5 error-l-150\">\n                        <Label>\n                          <IntlMessages id=\"marks.SubjectLabel\" />\n                        </Label>\n                        <FormikReactSelect\n                          name=\"subject\"\n                          id=\"subject\"\n                          value={values.subject}\n                          options={subjects}\n                          onChange={setFieldValue}\n                          onBlur={setFieldTouched}\n                          onClick={setSelectedSubject(values.subject)}\n                          required\n                        />\n                        {errors.subject && touched.subject ? (\n                          <div className=\"invalid-feedback d-block bg-danger text-white \">\n                            {errors.subject}\n                          </div>\n                        ) : null}\n                      </FormGroup>\n                    </Colxx>\n                  </Row>\n                  <Row>\n                    <Colxx>\n                      <Button\n                        onClick={handleSubmit}\n                        color=\"primary\"\n                        className=\"float-right  buttonStyle\"\n                        size=\"lg\"\n                        // type=\"submit\"\n                        style={{ margin: '2% 0% 10% 6%' }}\n                      >\n                        <span className=\"label\">\n                          <IntlMessages id=\"button.Next\" />\n                        </span>\n                      </Button>\n                    </Colxx>\n                  </Row>\n                </Form>\n              )}\n            </Formik>\n          ) : (\n            <>\n              {!isSubmitted ? (\n                <>\n                  <Row\n                    className=\"border border bg-primary me-5 p-1 \"\n                    style={{ marginInline: '16%' }}\n                  >\n                    <Colxx xxs=\"2\">\n                      <Label style={{ fontSize: '20px', fontWeight: 'bold' }}>\n                        <IntlMessages id=\"forms.FieldLabel\" />\n                      </Label>\n                      {/* {console.log('selectedDepartment', selectedDepartment)} */}\n                      <h5>{selectedDepartment.label}</h5>\n                    </Colxx>\n\n                    <Colxx xxs=\"2\">\n                      <Label style={{ fontSize: '20px', fontWeight: 'bold' }}>\n                        <IntlMessages id=\"marks.ClassLabel\" />\n                      </Label>\n                      <h5>{selectedClassLabel.classs}</h5>\n                    </Colxx>\n\n                    <Colxx xxs=\"2\">\n                      <Label style={{ fontSize: '20px', fontWeight: 'bold' }}>\n                        <IntlMessages id=\"forms.StudyTimeLabel\" />\n                      </Label>\n                      <h5>{selecedStudyTime.label}</h5>\n                    </Colxx>\n\n                    <Colxx xxs=\"2\">\n                      <Label style={{ fontSize: '20px', fontWeight: 'bold' }}>\n                        <IntlMessages id=\"marks.SemesterLabel\" />\n                      </Label>\n                      <h5>{selectedClassLabel.semester}</h5>\n                    </Colxx>\n\n                    <Colxx xxs=\"2\">\n                      <Label style={{ fontSize: '20px', fontWeight: 'bold' }}>\n                        <IntlMessages id=\"marks.SectionLabel\" />\n                      </Label>\n                      <h5>{selectedClassLabel.section}</h5>\n                    </Colxx>\n\n                    <Colxx xxs=\"2\">\n                      <Label style={{ fontSize: '20px', fontWeight: 'bold' }}>\n                        <IntlMessages id=\"marks.SubjectLabel\" />\n                      </Label>\n                      <h5>{selectedSubject.label}</h5>\n                    </Colxx>\n                  </Row>\n                  <Formik\n                    initialValues={initialValues}\n                    onSubmit={onSubmit}\n                    // validationSchema={ValidationSchema}\n                  >\n                    {({ errors, touched }) => (\n                      <Form className=\"av-tooltip tooltip-label-right \">\n                        <Row\n                          className=\"justify-content-center  border border\"\n                          style={{\n                            marginInline: '16%',\n                            height: '30rem',\n                            overflowY: 'scroll',\n                            overflowX: 'hidden',\n                          }}\n                        >\n                          <table className=\"table \">\n                            <thead className=\"thead-dark\">\n                              <tr>\n                                <th\n                                  scope=\"col\"\n                                  style={{\n                                    fontSize: '15px',\n                                    textAlign: 'center',\n                                  }}\n                                >\n                                  <IntlMessages id=\"marks.No\" />\n                                </th>\n                                <th\n                                  scope=\"col\"\n                                  style={{\n                                    fontSize: '15px',\n                                    textAlign: 'center',\n                                  }}\n                                >\n                                  <IntlMessages id=\"marks.FullName\" />\n                                </th>\n                                <th\n                                  scope=\"col\"\n                                  style={{\n                                    fontSize: '15px',\n                                    textAlign: 'center',\n                                  }}\n                                >\n                                  <IntlMessages id=\"marks.FatherName\" />\n                                </th>\n                                <th\n                                  scope=\"col\"\n                                  style={{\n                                    fontSize: '15px',\n                                    textAlign: 'center',\n                                  }}\n                                >\n                                  <IntlMessages id=\"marks.ID\" />\n                                </th>\n                                <th\n                                  scope=\"col\"\n                                  style={{\n                                    fontSize: '15px',\n                                    textAlign: 'center',\n                                  }}\n                                >\n                                  <IntlMessages id=\"marks.Marks\" />\n                                </th>\n                              </tr>\n                            </thead>\n                            <tbody\n                              className=\"border border \"\n                              style={{\n                                overflowY: 'scroll',\n                                overflowX: 'hidden',\n                              }}\n                            >\n                              {students.length > 0 &&\n                                students.map((student, index) => (\n                                  <tr key={index}>\n                                    <th\n                                      scope=\"row\"\n                                      style={{\n                                        fontSize: '20px',\n                                        textAlign: 'center',\n                                      }}\n                                    >\n                                      {index + 1}\n                                    </th>\n                                    <td\n                                      style={{\n                                        fontSize: '20px',\n                                        textAlign: 'center',\n                                      }}\n                                    >\n                                      {student.name}\n                                    </td>\n                                    <td\n                                      style={{\n                                        fontSize: '20px',\n                                        textAlign: 'center',\n                                      }}\n                                    >\n                                      {student.father_name}\n                                    </td>\n                                    <td\n                                      style={{\n                                        fontSize: '20px',\n                                        textAlign: 'center',\n                                      }}\n                                    >\n                                      {student.student_id}\n                                    </td>\n\n                                    {/* Marks Entry */}\n                                    <td>\n                                      <div\n                                        style={{\n                                          margin: '-7px',\n                                          fontSize: '15px',\n                                        }}\n                                      >\n                                        <input\n                                          type=\"number\"\n                                          // style={{\n                                          //   fontSize: '15px',\n                                          //   textAlign: 'center',\n                                          // }}\n                                          className=\"form-control\"\n                                          // name={`score[${student.student_id}]`}\n                                          name=\"marks\"\n                                          min={0}\n                                          max={100}\n                                          onChange={(e) => {\n                                            const newArr = arr;\n                                            newArr[student.student_id] = {\n                                              ...newArr[student.student_id],\n                                              [e.target.name]: Number.parseInt(\n                                                e.target.value,\n                                              ),\n                                            };\n                                            setArr(newArr);\n                                          }}\n                                        />\n                                        {errors.score && touched.score ? (\n                                          <div className=\"invalid-feedback d-block\">\n                                            {errors.score}\n                                          </div>\n                                        ) : null}\n                                      </div>\n                                    </td>\n                                  </tr>\n                                ))}\n                            </tbody>\n                            <tfoot className=\"thead-dark\">\n                              <tr>\n                                <th\n                                  scope=\"col\"\n                                  style={{\n                                    fontSize: '15px',\n                                    textAlign: 'center',\n                                  }}\n                                >\n                                  <IntlMessages id=\"marks.No\" />\n                                </th>\n                                <th\n                                  scope=\"col\"\n                                  style={{\n                                    fontSize: '15px',\n                                    textAlign: 'center',\n                                  }}\n                                >\n                                  <IntlMessages id=\"marks.FullName\" />\n                                </th>\n                                <th\n                                  scope=\"col\"\n                                  style={{\n                                    fontSize: '15px',\n                                    textAlign: 'center',\n                                  }}\n                                >\n                                  <IntlMessages id=\"marks.FatherName\" />\n                                </th>\n                                <th\n                                  scope=\"col\"\n                                  style={{\n                                    fontSize: '15px',\n                                    textAlign: 'center',\n                                  }}\n                                >\n                                  <IntlMessages id=\"marks.ID\" />\n                                </th>\n                                <th\n                                  scope=\"col\"\n                                  style={{\n                                    fontSize: '15px',\n                                    textAlign: 'center',\n                                  }}\n                                >\n                                  <IntlMessages id=\"marks.Marks\" />\n                                </th>\n                              </tr>\n                            </tfoot>\n                          </table>\n                        </Row>\n                        <Row className=\" justify-content-center\">\n                          <Colxx xxs=\"9\" className=\"m-5\">\n                            <Button\n                              className=\" m-4 \"\n                              color=\"primary\"\n                              onClick={() => setIsNext(false)}\n                            >\n                              <IntlMessages id=\"button.Back\" />\n                            </Button>\n\n                            <div className=\"d-flex justify-content-between align-items-center m-4 float-right\">\n                              <Button\n                                size=\"lg\"\n                                type=\"submit\"\n                                color=\"primary\"\n                                // onSubmit={onSubmit}\n                                // onClick={() => setIsSubmitted(true)}\n                              >\n                                <IntlMessages id=\"button.SubmitButton\" />\n                              </Button>\n                            </div>\n                          </Colxx>\n                        </Row>\n                      </Form>\n                    )}\n                  </Formik>\n                </>\n              ) : (\n                <div className=\"wizard-basic-step text-center pt-3\">\n                  <div>\n                    <h1 className=\"mb-2\">\n                      <IntlMessages id=\"wizard.content-thanks\" />\n                    </h1>\n                    <h3>\n                      <IntlMessages id=\"wizard.registered\" />\n                    </h3>\n                    <Button\n                      className=\"m-5 bg-primary\"\n                      // onClick={() => window.location.reload()}\n                      onClick={() => {\n                        setIsNext(false);\n                        setIsSubmitted(false);\n                      }}\n                    >\n                      <IntlMessages id=\"button.Back\" />\n                    </Button>\n                  </div>\n                </div>\n              )}\n            </>\n          )}\n        </CardBody>\n      </Card>\n    </>\n  );\n};\n\nexport default MarksRegistration;\n"],"names":["ValidationSchema","Yup","shape","institute","value","required","nullable","_jsx","IntlMessages","id","educationalYear","studyTime","classs","department","subject","initialValues","marks","_ref","match","institutes","useContext","AuthContext","_useState","useState","_useState2","_slicedToArray","isNext","setIsNext","_useState3","_useState4","_useState5","_useState6","isSubmitted","setIsSubmitted","_useState7","_useState8","setFields","_useState9","_useState10","departments","setDepartments","_useState11","_useState12","classes","setClasses","_useState13","_useState14","subjects","setSubjects","_useState15","_useState16","students","setStudents","_useState17","_useState18","selectedInstitute","setSelectedInstitute","_useState19","_useState20","selectedDepartment","setSelectedDepartment","_useState21","_useState22","selectedClass","setSelectedClass","_useState23","_useState24","selectedSubject","setSelectedSubject","_useState25","_useState26","selecedStudyTime","setSelectedStudyTime","_useState27","_useState28","selectedEducationalYear","setSelectedEducationalYear","_useState29","_useState30","_useState31","_useState32","_useState33","_useState34","_useState35","_useState36","markId","useParams","_useState37","_useState38","arr","setArr","_useState39","semester","section","_useState40","selectedClassLabel","setselectedClassLabel","_fetchStudent","_asyncToGenerator","_regeneratorRuntime","mark","_callee7","_yield$axios$get","wrap","_context7","prev","next","axios","concat","sent","data","stop","apply","arguments","useEffect","isEmptyArray","_selectedClass$label$","label","split","_selectedClass$label$2","fetchStudent","fetchFields","_ref2","_callee","response","updatedData","_context","callApi","status","map","item","name","console","log","fetchDepartments","_ref3","_callee2","instituteId","_context2","abrupt","_x","fetchClasses","_ref4","_callee3","_context3","fetchSubjects","_ref5","_callee4","_context4","createNotification","type","className","cName","NotificationManager","success","error","alert","info","fetchStudents","_ref6","_callee5","values","_context5","_x2","onSubmit","_ref7","_callee6","newStudents","departmentId","classId","subjectId","shift","_context6","Object","keys","forEach","push","_objectSpread","student_id","educational_year","_x3","_Fragment","children","_jsxs","Card","CardBody","Button","onClick","Row","style","marginInline","Colxx","xxs","Label","fontSize","fontWeight","Formik","_ref9","errors","touched","Form","height","overflowY","overflowX","scope","textAlign","length","student","index","father_name","margin","min","max","onChange","e","newArr","_defineProperty","target","Number","parseInt","score","color","size","validationSchema","_ref8","setFieldTouched","setFieldValue","handleSubmit","FormGroup","FormikReactSelect","options","onBlur","studyTimeOptions","educationalYearsOptions"],"sourceRoot":""}