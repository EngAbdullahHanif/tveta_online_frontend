{"version":3,"sources":["views/app/students/single-student-marksUpdate.js","views/app/students/rejected-subject-marks-update.js","helpers/currentUser.js","views/app/institutes/index.js"],"names":["chanceOptions","IntlMessages","value","label","_jsx","id","ValidationSchema","Yup","shape","institute","required","nullable","educationlaYear","studyTime","classs","department","subject","studentId","chance","initialValues","MarksUpdate","_ref","match","_useState","useState","_useState2","_slicedToArray","_useState3","_useState4","isNext","setIsNext","_useState5","_useState6","setFields","_useState7","_useState8","institutes","setInstitutes","_useState9","_useState10","departments","setDepartments","_useState11","_useState12","classes","setClasses","_useState13","_useState14","subjects","setSubjects","_useState15","_useState16","students","setStudents","_useState17","_useState18","selectedInstitute","setSelectedInstitute","_useState19","_useState20","selectedDepartment","setSelectedDepartment","_useState21","_useState22","selectedClass","setSelectedClass","_useState23","_useState24","selectedSubject","setSelectedSubject","_useState25","_useState26","selecedStudyTime","setSelectedStudyTime","_useState27","_useState28","selectedEducationalYear","setSelectedEducationalYear","_useState29","_useState30","_useState31","_useState32","_useState33","_useState34","_useState35","_useState36","reload","setReload","_useState37","_useState38","fetchInstitutes","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","updatedData","wrap","_context","prev","next","axios","get","sent","data","map","item","name","stop","apply","arguments","fetchFields","_ref3","_callee2","_context2","fetchDepartments","_ref4","_callee3","_context3","fetchClasses","_ref5","_callee4","_context4","semester","section","fetchSubjects","_ref6","_callee5","_context5","useEffect","handleClick","event","concat","then","console","log","onSubmit","values","educational_year","institute_id","department_id","class_id","subject_id","newStudents","student","index","student_id","score","Department","_toConsumableArray","post","res","err","_Fragment","children","_jsxs","Card","className","CardBody","Button","onClick","handleSearch","Formik","validationSchema","_ref7","errors","touched","setFieldTouched","setFieldValue","Form","Row","Colxx","xxs","FormGroup","Label","FormikReactSelect","options","onChange","onBlur","studyTimeOptions","Field","type","color","size","style","marginInline","scope","overflowX","class","father_name","educationalYear","MarksRegistration","isSubmitted","setIsSubmitted","markId","useParams","_useState39","_useState40","selectedClassLabel","setselectedClassLabel","isEmptyArray","_selectedClass$label$","split","_selectedClass$label$2","_fetchStudent","_yield$axios$get","studentMarkId","fetchStudent","callApi","warn","status","instituteId","abrupt","_x","_callee6","_context6","createNotification","cName","NotificationManager","success","error","alert","info","fetchStudents","_callee7","_context7","_x2","_ref8","_callee8","departmentId","classId","subjectId","shift","_context8","marks","exam_result_id","class_exam_id","_x3","fontSize","fontWeight","_ref10","height","overflowY","textAlign","length","student_name","student_father_name","margin","min","max","_ref9","handleSubmit","educationalYearsOptions","currentUser","user","JSON","parse","localStorage","getItem","user_id","InstituteList","React","lazy","PromotionDemotionList","InstituteRegister","InstitueCreate","InstituteUpgrade","InstituteProfile","InstituteDepartmentRegister","InstituteDepartmentList","Institues","props","Suspense","fallback","Switch","Redirect","exact","from","url","to","ProtectedRoute","path","component","roles","userRole","superUser","authenticated"],"mappings":"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","file":"static/js/marks-update.d7286c4f.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Formik, Form, Field } from 'formik';\nimport axios from 'axios';\nimport { studyTimeOptions } from '../global-data/options';\n\n// Year  and SHift\nimport * as Yup from 'yup';\nimport {\n  Row,\n  Card,\n  CardBody,\n  FormGroup,\n  Label,\n  Button,\n  CardTitle,\n  Input,\n} from 'reactstrap';\nimport Select from 'react-select';\n\nimport IntlMessages from 'helpers/IntlMessages';\nimport { Colxx } from 'components/common/CustomBootstrap';\nimport {\n  FormikReactSelect,\n  FormikTagsInput,\n  FormikDatePicker,\n} from 'containers/form-validations/FormikFields';\nimport userEvent from '@testing-library/user-event';\n\nconst LevelOfEdcationOptions = [\n  { value: '1', label: 'اصلی' },\n  { value: '2', label: 'فرعی' },\n];\n\nconst FieldOptions = [\n  { value: '14th', label: 'Computer Science' },\n  { value: 'bachelor', label: 'Agriculture' },\n  { value: 'master', label: 'BBA' },\n  { value: 'PHD', label: 'Mechenical Engineering' },\n];\n\nconst SemesterOptions = [\n  { value: '1', label: <IntlMessages id=\"marks.SemesterOption_1\" /> },\n  { value: '2', label: <IntlMessages id=\"marks.SemesterOption_2\" /> },\n  // { value: '3', label: <IntlMessages id=\"marks.SemesterOption_3\" /> },\n  //   { value: '4', label: <IntlMessages id=\"marks.SemesterOption_4\" /> },\n];\n\nconst SectionOptions = [\n  { value: '1', label: <IntlMessages id=\"marks.SectionOption_1\" /> },\n  { value: '2', label: <IntlMessages id=\"marks.SectionOption_2\" /> },\n  { value: '3', label: <IntlMessages id=\"marks.SectionOption_3\" /> },\n  { value: '4', label: <IntlMessages id=\"marks.SectionOption_4\" /> },\n  { value: '5', label: <IntlMessages id=\"marks.SectionOption_5\" /> },\n];\n\nconst ClassOptions = [\n  { value: '1', label: <IntlMessages id=\"marks.ClassOption_1\" /> },\n  { value: '2', label: <IntlMessages id=\"marks.ClassOption_2\" /> },\n  { value: '3', label: <IntlMessages id=\"marks.ClassOption_3\" /> },\n  { value: '4', label: <IntlMessages id=\"marks.ClassOption_4\" /> },\n  { value: '5', label: <IntlMessages id=\"marks.ClassOption_5\" /> },\n  { value: '6', label: <IntlMessages id=\"marks.ClassOption_6\" /> },\n];\n\nconst chanceOptions = [\n  { value: '1', label: <IntlMessages id=\"forms.chanceOne\" /> },\n  { value: '2', label: <IntlMessages id=\"forms.chanceTwo\" /> },\n];\n\nconst SubjectOptions = [\n  { value: '14th', label: 'Computer Science' },\n  { value: 'bachelor', label: 'Agriculture' },\n  { value: 'master', label: 'BBA' },\n  { value: 'PHD', label: 'Mechenical Engineering' },\n];\n\nconst orderOptions = [\n  { column: 'title', label: 'Product Name' },\n  { column: 'category', label: 'Category' },\n  { column: 'status', label: 'Status' },\n];\nconst pageSizes = [10, 20, 40, 80];\n\nconst ValidationSchema = Yup.object().shape({\n  institute: Yup.object()\n    .shape({\n      value: Yup.string().required(),\n    })\n    .nullable()\n    .required(<IntlMessages id=\"forms.InstituteErr\" />),\n\n  educationlaYear: Yup.string().required(\n    <IntlMessages id=\"forms.educationYearErr\" />\n  ),\n\n  studyTime: Yup.object()\n    .shape({\n      value: Yup.string().required(),\n    })\n    .nullable()\n    .required(<IntlMessages id=\"forms.StudyTimeErr\" />),\n\n  classs: Yup.object()\n    .shape({\n      value: Yup.string().required(),\n    })\n    .nullable()\n    .required(<IntlMessages id=\"marks.ClassErr\" />),\n\n  department: Yup.object()\n    .shape({\n      value: Yup.string().required(),\n    })\n    .nullable()\n    .required(<IntlMessages id=\"teacher.departmentIdErr\" />),\n\n  subject: Yup.object()\n    .shape({\n      value: Yup.string().required(),\n    })\n    .nullable()\n    .required(<IntlMessages id=\"marks.SubjectErr\" />),\n\n  studentId: Yup.object()\n    .shape({\n      value: Yup.string().required(),\n    })\n    .nullable()\n    .required(<IntlMessages id=\"marks.studentIdErr\" />),\n\n  chance: Yup.object()\n    .shape({\n      value: Yup.string().required(),\n    })\n    .nullable()\n    .required(<IntlMessages id=\"marks.chanceErr\" />),\n});\n\nconst initialValues = {\n  institute: [],\n  educationlaYear: '',\n  studyTime: [],\n  classs: [],\n  department: [],\n  subject: [],\n  studentId: [],\n  chance: [],\n};\nconst MarksUpdate = ({ match }) => {\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [isNext, setIsNext] = useState(true);\n  const [fields, setFields] = useState([]);\n  const [institutes, setInstitutes] = useState([]);\n  const [departments, setDepartments] = useState([]);\n  const [classes, setClasses] = useState([]);\n  const [subjects, setSubjects] = useState([]);\n  const [students, setStudents] = useState([]);\n  const [selectedInstitute, setSelectedInstitute] = useState('');\n  const [selectedDepartment, setSelectedDepartment] = useState('');\n  const [selectedClass, setSelectedClass] = useState('');\n  const [selectedSubject, setSelectedSubject] = useState('');\n  const [selecedStudyTime, setSelectedStudyTime] = useState('');\n  const [selectedEducationalYear, setSelectedEducationalYear] = useState('');\n  const [passingScore, setPassingScore] = useState(55);\n  const [subjectGrad, setSubjectGrad] = useState();\n  const [subjectGPA, setSubjectGPA] = useState();\n  const [reload, setReload] = useState(false);\n\n  const [examId, setExamId] = useState();\n\n  const fetchInstitutes = async () => {\n    const response = await axios.get('http://localhost:8000/institute/');\n    const updatedData = await response.data.map((item) => ({\n      value: item.id,\n      label: item.name,\n    }));\n    setInstitutes(updatedData);\n  };\n  const fetchFields = async () => {\n    const response = await axios.get('http://localhost:8000/institute/field/');\n    const updatedData = await response.data.map((item) => ({\n      value: item.id,\n      label: item.name,\n    }));\n    setFields(updatedData);\n  };\n  const fetchDepartments = async () => {\n    const response = await axios.get(\n      'http://localhost:8000/institute/department/'\n    );\n    const updatedData = await response.data.map((item) => ({\n      value: item.id,\n      label: item.name,\n    }));\n    setDepartments(updatedData);\n  };\n\n  const fetchClasses = async () => {\n    const response = await axios.get('http://localhost:8000/institute/classs/');\n    const updatedData = await response.data.map((item) => ({\n      value: item.id,\n      label: item.name + ' - ' + item.semester + ' - ' + item.section,\n    }));\n    setClasses(updatedData);\n  };\n\n  const fetchSubjects = async () => {\n    const response = await axios.get(\n      'http://localhost:8000/institute/subject/'\n    );\n    const updatedData = await response.data.map((item) => ({\n      value: item.id,\n      label: item.name,\n    }));\n    setSubjects(updatedData);\n  };\n\n  useEffect(() => {\n    fetchInstitutes();\n    fetchFields();\n    fetchDepartments();\n    fetchClasses();\n    fetchSubjects();\n  }, []);\n\n  const handleClick = (event) => {\n    // setIsNext(event);\n    axios\n      .get(\n        `http://localhost:8000/api/student-for-marks?institute=${selectedInstitute.value}&classs=${selectedClass.value}&study_time=${selecedStudyTime.value}&department=${selectedDepartment.value}&educational_year=${selectedEducationalYear}`\n      )\n      .then((response) => {\n        console.log('response.data', response.data);\n        setStudents(response.data);\n        setIsNext(false);\n      });\n    console.log(\n      `http://localhost:8000/api/student-for-marks?institute=${selectedInstitute.value}&classs=${selectedClass.value}&study_time=${selecedStudyTime.value}&department=${selectedDepartment.value}&educational_year=${selectedEducationalYear}`\n    );\n    console.log('students', students);\n  };\n\n  const onSubmit = (values) => {\n    console.log('values', values);\n    const educational_year = selectedEducationalYear;\n    const institute_id = selectedInstitute.value;\n    const department_id = selectedDepartment.value;\n    const class_id = selectedClass.value;\n    const subject_id = selectedSubject.value;\n\n    // i want to create an array which first node has exam_id and the rest of the nodes has student_id and marks\n    // values.score[student.student_id]\n    const newStudents = students.map((student, index) => {\n      return {\n        student_id: student.student_id,\n        score: values.score[student.student_id],\n      };\n    });\n\n    let data = [\n      {\n        educational_year: educational_year,\n        institute_id: institute_id,\n        Department: department_id,\n        class_id: class_id,\n        subject_id: subject_id,\n      },\n      ...newStudents,\n    ];\n\n    console.log('data', data);\n\n    axios\n      .post('http://localhost:8000/api/create_marks/', data)\n      .then((res) => {\n        console.log('res', res);\n      })\n      .then((err) => {\n        console.log('err', err);\n      });\n\n    // students.map(async (student, index) => {\n    //   let exam_id = '';\n    //   const examData = {\n    //     educational_year: educational_year,\n    //     student_id: student.student_id,\n    //     institute_id: institute_id,\n    //     Department: department_id,\n    //     class_id: class_id,\n    //     semister: 1,\n    //     teacher_id: 1,\n    //     user_id: 1,\n    //     verification: 1,\n    //   };\n    //   const exam = await axios.post(\n    //     'http://localhost:8000/api/create_marks/',\n    //     examData\n    //   );\n    //   const updatedExam = await exam.data;\n    //   exam_id = updatedExam;\n\n    //   console.log('exam_id', exam_id, index);\n\n    //   const data = {\n    //     exam_marks_id: exam_id,\n    //     subject_id: subject_id,\n    //     exam_types: 1,\n    //     score: values.score[student.student_id],\n    //     passing_score: 55,\n    //     user_id: 1,\n    //   };\n    //   console.log('data', data, index);\n    //   axios.post('http://localhost:8000/api/create_marks_details/', data);\n    // });\n  };\n  return (\n    <>\n      <Card>\n        <h3 className=\"mt-5 m-5\">\n          {<IntlMessages id=\"marks.singleStudentMarksUpdate\" />}\n        </h3>\n        <CardBody>\n          {!reload ? (\n            <>\n              {isNext ? (\n                <Formik\n                  initialValues={initialValues}\n                  onSubmit={onSubmit}\n                  validationSchema={ValidationSchema}\n                >\n                  {({\n                    errors,\n                    touched,\n                    values,\n                    setFieldTouched,\n                    setFieldValue,\n                  }) => (\n                    <Form className=\"av-tooltip tooltip-label-right \">\n                      <Row className=\"m-5\">\n                        <Colxx xxs=\"6\">\n                          {/* set if condition, if institutes are loaded */}\n                          <FormGroup className=\"form-group has-float-label error-l-150 \">\n                            <Label>\n                              <IntlMessages id=\"forms.InstituteLabel\" />\n                            </Label>\n                            <FormikReactSelect\n                              name=\"institute\"\n                              id=\"institute\"\n                              value={values.institute}\n                              options={institutes}\n                              onChange={setFieldValue}\n                              onBlur={setFieldTouched}\n                              onClick={setSelectedInstitute(values.institute)}\n                            />\n\n                            {errors.institute && touched.institute ? (\n                              <div className=\"invalid-feedback d-block bg-danger text-white\">\n                                {errors.institute}\n                              </div>\n                            ) : null}\n                          </FormGroup>\n\n                          <FormGroup className=\"form-group has-float-label mt-5  error-l-150\">\n                            <Label>\n                              <IntlMessages id=\"forms.StudyTimeLabel\" />\n                            </Label>\n                            <FormikReactSelect\n                              name=\"studyTime\"\n                              id=\"studyTime\"\n                              value={values.studyTime}\n                              options={studyTimeOptions}\n                              onChange={setFieldValue}\n                              onBlur={setFieldTouched}\n                              onClick={setSelectedStudyTime(values.studyTime)}\n                            />\n                            {errors.studyTime && touched.studyTime ? (\n                              <div className=\"invalid-feedback d-block bg-danger text-white\">\n                                {errors.studyTime}\n                              </div>\n                            ) : null}\n                          </FormGroup>\n\n                          <FormGroup className=\"form-group has-float-label mt-5 error-l-150\">\n                            <Label>\n                              <IntlMessages id=\"forms.educationYearLabel\" />\n                            </Label>\n                            <Field\n                              type=\"number\"\n                              id=\"educationlaYear\"\n                              className=\"form-control\"\n                              name=\"educationlaYear\"\n                              // assign value to selectedEducationalYear\n                              onClick={setSelectedEducationalYear(\n                                values.educationlaYear\n                              )}\n                            />\n                            {errors.educationlaYear &&\n                            touched.educationlaYear ? (\n                              <div className=\"invalid-feedback d-block bg-danger text-white\">\n                                {errors.educationlaYear}\n                              </div>\n                            ) : null}\n                          </FormGroup>\n\n                          {/* <FormGroup className=\"form-group has-float-label mt-5  error-l-150\">\n                            <Label>\n                              <IntlMessages id=\"marks.studentId\" />\n                            </Label>\n                            <FormikReactSelect\n                              name=\"studentId\"\n                              id=\"studentId\"\n                              value={values.studentId}\n                              options={StudyTimeOptions}\n                              onChange={setFieldValue}\n                              onBlur={setFieldTouched}\n                              onClick={setSelectedStudyTime(values.studentId)}\n                            />\n                            {errors.studentId && touched.studentId ? (\n                              <div className=\"invalid-feedback d-block bg-danger text-white\">\n                                {errors.studentId}\n                              </div>\n                            ) : null}\n                          </FormGroup> */}\n                        </Colxx>\n\n                        <Colxx xxs=\"6\">\n                          <FormGroup className=\"form-group has-float-label error-l-150 \">\n                            <Label>\n                              <IntlMessages id=\"marks.ClassLabel\" />\n                            </Label>\n                            <FormikReactSelect\n                              name=\"classs\"\n                              id=\"classs\"\n                              value={values.classs}\n                              options={classes}\n                              onChange={setFieldValue}\n                              onBlur={setFieldTouched}\n                              onClick={setSelectedClass(values.classs)}\n                              required\n                            />\n                            {errors.classs && touched.classs ? (\n                              <div className=\"invalid-feedback d-block bg-danger text-white\">\n                                {errors.classs}\n                              </div>\n                            ) : null}\n                          </FormGroup>\n\n                          <FormGroup className=\"form-group has-float-label mt-5 error-l-150\">\n                            <Label>\n                              <IntlMessages id=\"forms.studyDepartment\" />\n                            </Label>\n                            <FormikReactSelect\n                              name=\"department\"\n                              id=\"department\"\n                              value={values.department}\n                              options={departments}\n                              onChange={setFieldValue}\n                              onBlur={setFieldTouched}\n                              onClick={setSelectedDepartment(values.department)}\n                              required\n                            />\n                            {errors.department && touched.department ? (\n                              <div className=\"invalid-feedback d-block bg-danger text-white\">\n                                {errors.department}\n                              </div>\n                            ) : null}\n                          </FormGroup>\n\n                          <FormGroup className=\"form-group has-float-label mt-5 error-l-150\">\n                            <Label>\n                              <IntlMessages id=\"marks.SubjectLabel\" />\n                            </Label>\n                            <FormikReactSelect\n                              name=\"subject\"\n                              id=\"subject\"\n                              value={values.subject}\n                              options={subjects}\n                              onChange={setFieldValue}\n                              onBlur={setFieldTouched}\n                              onClick={setSelectedSubject(values.subject)}\n                              required\n                            />\n                            {errors.subject && touched.subject ? (\n                              <div className=\"invalid-feedback d-block bg-danger text-white\">\n                                {errors.subject}\n                              </div>\n                            ) : null}\n                          </FormGroup>\n\n                          <FormGroup className=\"form-group has-float-label mt-5 error-l-150\">\n                            <Label>\n                              <IntlMessages id=\"marks.chance\" />\n                            </Label>\n                            <FormikReactSelect\n                              name=\"chance\"\n                              id=\"chance\"\n                              value={values.chance}\n                              options={chanceOptions}\n                              onChange={setFieldValue}\n                              onBlur={setFieldTouched}\n                              onClick={setSelectedSubject(values.chance)}\n                              required\n                            />\n                            {errors.chance && touched.chance ? (\n                              <div className=\"invalid-feedback d-block bg-danger text-white\">\n                                {errors.chance}\n                              </div>\n                            ) : null}\n                          </FormGroup>\n                        </Colxx>\n                      </Row>\n\n                      <Row>\n                        <Colxx>\n                          <Button\n                            color=\"primary\"\n                            className=\"float-right m-5\"\n                            size=\"lg\"\n                            type=\"submit\"\n                            onClick={() => {\n                              onSubmit;\n                              handleClick(false);\n                            }}\n                          >\n                            <span className=\"spinner d-inline-block\">\n                              <span className=\"bounce1\" />\n                              <span className=\"bounce2\" />\n                              <span className=\"bounce3\" />\n                            </span>\n                            <span className=\"label\">\n                              <IntlMessages id=\"button.Next\" />\n                            </span>\n                          </Button>\n                        </Colxx>\n                      </Row>\n                    </Form>\n                  )}\n                </Formik>\n              ) : (\n                <>\n                  <Row\n                    className=\"border border bg-primary me-5 p-1 \"\n                    style={{ marginInline: '16%' }}\n                  >\n                    <Colxx xxs=\"2\">\n                      <Label>\n                        <IntlMessages id=\"forms.FieldLabel\" />\n                      </Label>\n                      {console.log('selectedDepartment', selectedDepartment)}\n                      <h6>{selectedDepartment.label}</h6>\n                    </Colxx>\n\n                    <Colxx xxs=\"2\">\n                      <Label>\n                        <IntlMessages id=\"marks.ClassLabel\" />\n                      </Label>\n                      <h6>{selectedClass.label}</h6>\n                    </Colxx>\n\n                    <Colxx xxs=\"2\">\n                      <Label>\n                        <IntlMessages id=\"forms.StudyTimeLabel\" />\n                      </Label>\n                      <h6>{selecedStudyTime.label}</h6>\n                    </Colxx>\n\n                    <Colxx xxs=\"2\">\n                      <Label>\n                        <IntlMessages id=\"marks.SemesterLabel\" />\n                      </Label>\n                      <h6>{selectedClass.label}</h6>\n                    </Colxx>\n\n                    <Colxx xxs=\"2\">\n                      <Label>\n                        <IntlMessages id=\"marks.SectionLabel\" />\n                      </Label>\n                      <h6>{selectedClass.label}</h6>\n                    </Colxx>\n\n                    <Colxx xxs=\"2\">\n                      <Label>\n                        <IntlMessages id=\"marks.SubjectLabel\" />\n                      </Label>\n                      <h6>{selectedSubject.label}</h6>\n                    </Colxx>\n                  </Row>\n\n                  <Row\n                    className=\"justify-content-center  border border\"\n                    style={{ marginInline: '16%' }}\n                  >\n                    <table className=\"table\">\n                      <thead className=\"thead-dark\">\n                        <tr>\n                          <th scope=\"col\">\n                            <IntlMessages id=\"marks.No\" />\n                          </th>\n                          <th scope=\"col\">\n                            <IntlMessages id=\"marks.FullName\" />\n                          </th>\n                          <th scope=\"col\">\n                            <IntlMessages id=\"marks.FatherName\" />\n                          </th>\n                          <th scope=\"col\">\n                            <IntlMessages id=\"marks.ID\" />\n                          </th>\n                          <th scope=\"col\">\n                            <IntlMessages id=\"marks.Marks\" />\n                          </th>\n                        </tr>\n                      </thead>\n                    </table>\n                  </Row>\n\n                  <Row\n                    className=\"justify-content-center \"\n                    style={{\n                      marginInline: '16%',\n                      overflowX: 'hidden',\n                    }}\n                  >\n                    <table class=\"table \">\n                      <tbody>\n                        {students.map((student, index) => (\n                          <tr>\n                            <th scope=\"row\">{index}</th>\n                            <td>{student.name}</td>\n                            <td>{student.father_name}</td>\n                            <td>{student.student_id}</td>\n\n                            {/* Marks Entry */}\n                            <div class=\"form-group mx-sm-3 mb-2\">\n                              <FormGroup className=\"form-group\">\n                                <Field\n                                  type=\"number\"\n                                  className=\"form-control\"\n                                  name={`score[${student.student_id}]`}\n                                />\n                                {errors.score && touched.score ? (\n                                  <div className=\"invalid-feedback d-block\">\n                                    {errors.score}\n                                  </div>\n                                ) : null}\n                              </FormGroup>\n                            </div>\n                          </tr>\n                        ))}\n                      </tbody>\n                    </table>\n                  </Row>\n\n                  <Row className=\" justify-content-center\">\n                    <Colxx xxs=\"9\" className=\"m-5\">\n                      <Button\n                        className=\" m-4 \"\n                        onClick={() => handleClick(true)}\n                      >\n                        <IntlMessages id=\"button.Back\" />\n                      </Button>\n\n                      <div className=\"d-flex justify-content-between align-items-center m-4 float-right\">\n                        <Button\n                          className={`btn-shadow btn-multiple-state `}\n                          size=\"lg\"\n                          type=\"submit\"\n                        >\n                          {/* You should Use formik in order to submit form */}\n                          onClick ={() => setReload(true)}\n                          <span className=\"label\">\n                            <IntlMessages id=\"button.SubmitButton\" />\n                          </span>\n                        </Button>\n                      </div>\n                    </Colxx>\n                  </Row>\n                </>\n              )}\n            </>\n          ) : (\n            <div className=\"wizard-basic-step text-center pt-3\">\n              <div>\n                <h1 className=\"mb-2\">\n                  <IntlMessages id=\"wizard.content-thanks\" />\n                </h1>\n                <h3>\n                  <IntlMessages id=\"wizard.registered\" />\n                </h3>\n                <Button\n                  className=\"m-5 bg-primary\"\n                  onClick={() => {\n                    {\n                      setReload(false);\n                      setIsNext(true);\n                      handleSearch(true);\n                    }\n                  }}\n                >\n                  <IntlMessages id=\"button.Back\" />\n                </Button>\n              </div>\n            </div>\n          )}\n        </CardBody>\n      </Card>\n    </>\n  );\n};\n\nexport default MarksUpdate;\n","import React, { useState, useEffect } from 'react';\nimport { Formik, Form, Field, isEmptyArray } from 'formik';\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\nimport callApi from 'helpers/callApi';\nimport currentUser from 'helpers/currentUser';\nimport {\n  studyTimeOptions,\n  educationalYearsOptions,\n} from './../global-data/options';\nimport './../../../assets/css/global-style.css';\n\n// Year  and SHift\nimport * as Yup from 'yup';\nimport {\n  Row,\n  Card,\n  CardBody,\n  FormGroup,\n  Label,\n  Button,\n  CardTitle,\n  Input,\n} from 'reactstrap';\nimport Select from 'react-select';\nimport { NotificationManager } from 'components/common/react-notifications';\n\nimport IntlMessages from 'helpers/IntlMessages';\nimport { Colxx } from 'components/common/CustomBootstrap';\nimport {\n  FormikReactSelect,\n  FormikTagsInput,\n  FormikDatePicker,\n} from 'containers/form-validations/FormikFields';\nimport userEvent from '@testing-library/user-event';\n\nimport Institues from '../institutes';\n\nconst ValidationSchema = Yup.object().shape({\n  institute: Yup.object()\n    .shape({\n      value: Yup.string().required(),\n    })\n    .nullable()\n    .required(<IntlMessages id=\"forms.InstituteErr\" />),\n  educationalYear: Yup.object()\n    .shape({\n      value: Yup.string().required(),\n    })\n    .nullable()\n    .required(<IntlMessages id=\"forms.educationYearErr\" />),\n\n  studyTime: Yup.object()\n    .shape({\n      value: Yup.string().required(),\n    })\n    .nullable()\n    .required(<IntlMessages id=\"forms.StudyTimeErr\" />),\n  classs: Yup.object()\n    .shape({\n      value: Yup.string().required(),\n    })\n    .nullable()\n    .required(<IntlMessages id=\"marks.ClassErr\" />),\n  department: Yup.object()\n    .shape({\n      value: Yup.string().required(),\n    })\n    .nullable()\n    .required(<IntlMessages id=\"teacher.departmentIdErr\" />),\n  subject: Yup.object()\n    .shape({\n      value: Yup.string().required(),\n    })\n    .nullable()\n    .required(<IntlMessages id=\"marks.SubjectErr\" />),\n});\nconst initialValues = {\n  institute: [],\n  educationalYear: [],\n  studyTime: [],\n  classs: [],\n  department: [],\n  subject: [],\n};\n\nconst MarksRegistration = ({ match }) => {\n  const [isNext, setIsNext] = useState(false);\n  const [counter, setCounter] = useState(0);\n  const [isSubmitted, setIsSubmitted] = useState(false);\n  const [fields, setFields] = useState([]);\n  const [institutes, setInstitutes] = useState([]);\n  const [departments, setDepartments] = useState([]);\n  const [classes, setClasses] = useState([]);\n  const [subjects, setSubjects] = useState([]);\n  const [students, setStudents] = useState([]);\n  const [selectedInstitute, setSelectedInstitute] = useState();\n  const [selectedDepartment, setSelectedDepartment] = useState('');\n  const [selectedClass, setSelectedClass] = useState('');\n  const [selectedSubject, setSelectedSubject] = useState('');\n  const [selecedStudyTime, setSelectedStudyTime] = useState('');\n  const [selectedEducationalYear, setSelectedEducationalYear] = useState('');\n  const [passingScore, setPassingScore] = useState(55);\n  const [subjectGrad, setSubjectGrad] = useState();\n  const [subjectGPA, setSubjectGPA] = useState();\n  const [examId, setExamId] = useState();\n  const { markId } = useParams();\n  // separate and set labels for classes\n  const [selectedClassLabel, setselectedClassLabel] = useState({\n    classs: '',\n    semester: '',\n    section: '',\n  });\n  const int = [\n    {\n      label: 'Dept 1',\n      value: '1',\n      institute: '1',\n    },\n    {\n      label: 'Dept 2',\n      value: '2',\n      institute: '8',\n    },\n    {\n      label: 'Dept 3',\n      value: '3',\n      institute: '1',\n    },\n    {\n      label: 'Dept 4',\n      value: '4',\n      institute: 'انستیتوت تکنالوژی افغان',\n    },\n  ];\n  useEffect(() => {\n    if (!isEmptyArray(selectedClass) && selectedClass !== '') {\n      const [semester, classs, section] = selectedClass.label.split('-');\n      setselectedClassLabel({ classs, semester, section });\n    }\n  }, [selectedClass]);\n\n  if (markId) {\n    useEffect(() => {\n      async function fetchStudent() {\n        const { data } = await axios.get(\n          `${studentMarkId}/?student_id=${markId}`\n        );\n        // console.log(data, 'object of the data');\n\n        // const instGender = genderOptions.map((studentGender) => {\n        //   if (studentGender.value === data[0].gender) {\n        //     setInitialGender(studentGender);\n        //   }\n        // });\n      }\n      fetchStudent();\n      //setUpdateMode(true);\n    }, []);\n  }\n\n  const fetchInstitutes = async () => {\n    const response = await callApi('institute/', '', null);\n    console.warn('Reponse Institutes: ', response);\n    if (response.data && response.status === 200) {\n      const updatedData = await response.data.map((item) => ({\n        value: item.id,\n        label: item.name,\n      }));\n      console.warn('Updated Institutes: ', updatedData);\n      setInstitutes(updatedData);\n    } else {\n      console.log('institute error');\n    }\n  };\n\n  const fetchFields = async () => {\n    const response = await callApi('institute/field/', '', null);\n    if (response.data && response.status === 200) {\n      const updatedData = await response.data.map((item) => ({\n        value: item.id,\n        label: item.name,\n      }));\n      setFields(updatedData);\n    } else {\n      console.log('field error');\n    }\n  };\n  const fetchDepartments = async (instituteId) => {\n    if (!instituteId || !instituteId.value) {\n      return;\n    }\n    const response = await callApi(\n      `institute/institite-department/?institute=${instituteId.value}`,\n      '',\n      null\n    );\n    // console.log('response of department', response);\n    if (response.data && response.status === 200) {\n      console.log('response of department', response);\n      const updatedData = await response.data.map((item) => ({\n        value: item.department.id,\n        label: item.department.name,\n      }));\n      console.log('updatedData of department', updatedData);\n      setDepartments(updatedData); //Set it up when data in Backend is ready\n    } else {\n      console.log('department error');\n    }\n  };\n\n  const fetchClasses = async () => {\n    const response = await callApi('institute/classs/', '', null);\n    if (response.data && response.status === 200) {\n      const updatedData = await response.data.map((item) => ({\n        value: item.id,\n        label: item.name + ' - ' + item.semester + ' - ' + item.section,\n      }));\n      setClasses(updatedData);\n    } else {\n      console.log('class error');\n    }\n  };\n\n  const fetchSubjects = async () => {\n    const response = await callApi('institute/subject/', '', null);\n    if (response.data && response.status === 200) {\n      const updatedData = await response.data.map((item) => ({\n        value: item.id,\n        label: item.name,\n      }));\n      setSubjects(updatedData);\n    } else {\n      console.log('subject error');\n    }\n  };\n\n  useEffect(() => {\n    fetchInstitutes();\n    fetchFields();\n    fetchClasses();\n    fetchSubjects();\n  }, []);\n\n  useEffect(() => {\n    if (selectedInstitute) {\n      console.log('selectedInstitute', selectedInstitute);\n      fetchDepartments(selectedInstitute);\n    }\n  }, [selectedInstitute]);\n\n  // notification message\n  const createNotification = (type, className) => {\n    const cName = className || '';\n    switch (type) {\n      case 'success':\n        NotificationManager.success(\n          'نمری په بریالیتوب سره ثبت شوی',\n          'موفقیت',\n          3000,\n          null,\n          null,\n          cName\n        );\n        break;\n      case 'error':\n        NotificationManager.error(\n          'نمری ثبت نه شوی بیا کوشش وکری',\n          'خطا',\n          9000,\n          () => {\n            alert('callback');\n          },\n          null,\n          cName\n        );\n        break;\n      default:\n        NotificationManager.info('Info message');\n        break;\n    }\n  };\n\n  const fetchStudents = async (values) => {\n    const response = await callApi(\n      `students/rejected-subject-marks-list/?institute=${selectedInstitute.value}&classs=${selectedClass.value}&shift=${selecedStudyTime.value}&department=${selectedDepartment.value}&educational_year=${selectedEducationalYear.value}&subject=${selectedSubject.value}`,\n      '',\n      null\n    );\n    if (response.data && response.status === 200) {\n      console.log('response of students', response);\n      setStudents(response.data);\n      setIsNext(true);\n    } else {\n      console.log('subject error');\n    }\n  };\n\n  const onSubmit = async (values) => {\n    const educationalYear = selectedEducationalYear.value;\n    const instituteId = selectedInstitute.value;\n    const departmentId = selectedDepartment.value;\n    const classId = selectedClass.value;\n    const subjectId = selectedSubject.value;\n    const shift = selecedStudyTime.value;\n\n    console.log('educationalYear', educationalYear);\n    console.log('instituteId', instituteId);\n    console.log('departmentId', departmentId);\n    console.log('classId', classId);\n    console.log('subjectId', subjectId);\n\n    const newStudents = students.map((student, index) => {\n      return {\n        student_id: student.student,\n        marks: values.score[student.student],\n        exam_result_id: student.class_exam_id,\n      };\n    });\n\n    console.log('newStudents', newStudents);\n\n    let data = [\n      {\n        educational_year: educationalYear,\n        institute: instituteId,\n        department: departmentId,\n        classs: classId,\n        subject: subjectId,\n        shift: shift,\n      },\n      ...newStudents,\n    ];\n\n    console.log('data', data);\n\n    const response = await callApi(\n      'students/update-rejected-subject-marks/',\n      'POST',\n      data\n    );\n    if (\n      response.status === 200 ||\n      response.status === 201 ||\n      response.status === 202\n    ) {\n      // console.log('response of students', response);\n      setIsSubmitted(true);\n      createNotification('success', 'filled');\n    } else {\n      console.log('marks error');\n      //   setIsSubmitted(false);\n      createNotification('error', 'filled');\n    }\n  };\n\n  // console.log('condsotlsa f', students);\n  return (\n    <>\n      <Card>\n        <div className=\"mt-4 ml-5\">\n          <h2 className=\"mt-5 m-5 titleStyle\">د رد شویو نمرو اپدیت</h2>\n        </div>\n        <CardBody>\n          {!isNext ? (\n            <Formik\n              initialValues={initialValues}\n              onSubmit={fetchStudents}\n              validationSchema={ValidationSchema}\n            >\n              {({\n                errors,\n                touched,\n                values,\n                setFieldTouched,\n                setFieldValue,\n                handleSubmit,\n              }) => (\n                <Form className=\"av-tooltip tooltip-label-right  style\">\n                  <Row className=\"m-5\">\n                    <Colxx xxs=\"6\">\n                      {/* set if condition, if institutes are loaded */}\n                      <FormGroup className=\"form-group has-float-label error-l-150 \">\n                        <Label>\n                          <IntlMessages id=\"forms.InstituteLabel\" />\n                        </Label>\n                        <FormikReactSelect\n                          name=\"institute\"\n                          id=\"institute\"\n                          // value={values.institute}\n                          options={institutes}\n                          onChange={setFieldValue}\n                          onBlur={setFieldTouched}\n                          onClick={setSelectedInstitute(values.institute)}\n                        />\n\n                        {errors.institute && touched.institute ? (\n                          <div className=\"invalid-feedback d-block bg-danger text-white \">\n                            {errors.institute}\n                          </div>\n                        ) : null}\n                      </FormGroup>\n\n                      <FormGroup className=\"form-group has-float-label mt-5  error-l-150\">\n                        <Label>\n                          <IntlMessages id=\"forms.StudyTimeLabel\" />\n                        </Label>\n                        <FormikReactSelect\n                          name=\"studyTime\"\n                          id=\"studyTime\"\n                          value={values.studyTime}\n                          options={studyTimeOptions}\n                          onChange={setFieldValue}\n                          onBlur={setFieldTouched}\n                          onClick={setSelectedStudyTime(values.studyTime)}\n                        />\n                        {errors.studyTime && touched.studyTime ? (\n                          <div className=\"invalid-feedback d-block bg-danger text-white \">\n                            {errors.studyTime}\n                          </div>\n                        ) : null}\n                      </FormGroup>\n\n                      <FormGroup className=\"form-group has-float-label mt-5  error-l-150\">\n                        <Label>\n                          <IntlMessages id=\"forms.educationYearLabel\" />\n                        </Label>\n                        <FormikReactSelect\n                          name=\"educationalYear\"\n                          id=\"educationalYear\"\n                          options={educationalYearsOptions}\n                          onChange={setFieldValue}\n                          onBlur={setFieldTouched}\n                          onClick={setSelectedEducationalYear(\n                            values.educationalYear\n                          )}\n                        />\n                        {errors.educationalYear && touched.educationalYear ? (\n                          <div className=\"invalid-feedback d-block bg-danger text-white \">\n                            {errors.educationalYear}\n                          </div>\n                        ) : null}\n                      </FormGroup>\n                    </Colxx>\n\n                    <Colxx xxs=\"6\">\n                      <FormGroup className=\"form-group has-float-label error-l-150 \">\n                        <Label>\n                          <IntlMessages id=\"marks.ClassLabel\" />\n                        </Label>\n                        <FormikReactSelect\n                          name=\"classs\"\n                          id=\"classs\"\n                          value={values.classs}\n                          options={classes}\n                          onChange={setFieldValue}\n                          onBlur={setFieldTouched}\n                          onClick={setSelectedClass(values.classs)}\n                          required\n                        />\n                        {errors.classs && touched.classs ? (\n                          <div className=\"invalid-feedback d-block bg-danger text-white \">\n                            {errors.classs}\n                          </div>\n                        ) : null}\n                      </FormGroup>\n\n                      <FormGroup className=\"form-group has-float-label mt-5 error-l-150\">\n                        <Label>\n                          <IntlMessages id=\"forms.studyDepartment\" />\n                        </Label>\n                        <FormikReactSelect\n                          name=\"department\"\n                          id=\"department\"\n                          value={values.department}\n                          options={departments}\n                          onChange={setFieldValue}\n                          onBlur={setFieldTouched}\n                          onClick={setSelectedDepartment(values.department)}\n                          required\n                        />\n                        {errors.department && touched.department ? (\n                          <div className=\"invalid-feedback d-block bg-danger text-white \">\n                            {errors.department}\n                          </div>\n                        ) : null}\n                      </FormGroup>\n                      <FormGroup className=\"form-group has-float-label mt-5 error-l-150\">\n                        <Label>\n                          <IntlMessages id=\"marks.SubjectLabel\" />\n                        </Label>\n                        <FormikReactSelect\n                          name=\"subject\"\n                          id=\"subject\"\n                          value={values.subject}\n                          options={subjects}\n                          onChange={setFieldValue}\n                          onBlur={setFieldTouched}\n                          onClick={setSelectedSubject(values.subject)}\n                          required\n                        />\n                        {errors.subject && touched.subject ? (\n                          <div className=\"invalid-feedback d-block bg-danger text-white \">\n                            {errors.subject}\n                          </div>\n                        ) : null}\n                      </FormGroup>\n                    </Colxx>\n                  </Row>\n                  <Row>\n                    <Colxx>\n                      <Button\n                        onClick={handleSubmit}\n                        color=\"primary\"\n                        className=\"float-right  buttonStyle\"\n                        size=\"lg\"\n                        // type=\"submit\"\n                        style={{ margin: '2% 0% 10% 6%' }}\n                      >\n                        <span className=\"label\">\n                          <IntlMessages id=\"button.Next\" />\n                        </span>\n                      </Button>\n                    </Colxx>\n                  </Row>\n                </Form>\n              )}\n            </Formik>\n          ) : (\n            <>\n              {!isSubmitted ? (\n                <>\n                  <Row\n                    className=\"border border bg-primary me-5 p-1 \"\n                    style={{ marginInline: '16%' }}\n                  >\n                    <Colxx xxs=\"2\">\n                      <Label style={{ fontSize: '20px', fontWeight: 'bold' }}>\n                        <IntlMessages id=\"forms.FieldLabel\" />\n                      </Label>\n                      {/* {console.log('selectedDepartment', selectedDepartment)} */}\n                      <h5>{selectedDepartment.label}</h5>\n                    </Colxx>\n\n                    <Colxx xxs=\"2\">\n                      <Label style={{ fontSize: '20px', fontWeight: 'bold' }}>\n                        <IntlMessages id=\"marks.ClassLabel\" />\n                      </Label>\n                      <h5>{selectedClassLabel.classs}</h5>\n                    </Colxx>\n\n                    <Colxx xxs=\"2\">\n                      <Label style={{ fontSize: '20px', fontWeight: 'bold' }}>\n                        <IntlMessages id=\"forms.StudyTimeLabel\" />\n                      </Label>\n                      <h5>{selecedStudyTime.label}</h5>\n                    </Colxx>\n\n                    <Colxx xxs=\"2\">\n                      <Label style={{ fontSize: '20px', fontWeight: 'bold' }}>\n                        <IntlMessages id=\"marks.SemesterLabel\" />\n                      </Label>\n                      <h5>{selectedClassLabel.semester}</h5>\n                    </Colxx>\n\n                    <Colxx xxs=\"2\">\n                      <Label style={{ fontSize: '20px', fontWeight: 'bold' }}>\n                        <IntlMessages id=\"marks.SectionLabel\" />\n                      </Label>\n                      <h5>{selectedClassLabel.section}</h5>\n                    </Colxx>\n\n                    <Colxx xxs=\"2\">\n                      <Label style={{ fontSize: '20px', fontWeight: 'bold' }}>\n                        <IntlMessages id=\"marks.SubjectLabel\" />\n                      </Label>\n                      <h5>{selectedSubject.label}</h5>\n                    </Colxx>\n                  </Row>\n                  <Formik\n                    initialValues={initialValues}\n                    onSubmit={onSubmit}\n                    // validationSchema={ValidationSchema}\n                  >\n                    {({ errors }) => (\n                      <Form className=\"av-tooltip tooltip-label-right \">\n                        <Row\n                          className=\"justify-content-center  border border\"\n                          style={{\n                            marginInline: '16%',\n                            height: '30rem',\n                            overflowY: 'scroll',\n                            overflowX: 'hidden',\n                          }}\n                        >\n                          <table className=\"table \">\n                            <thead className=\"thead-dark\">\n                              <tr>\n                                <th\n                                  scope=\"col\"\n                                  style={{\n                                    fontSize: '15px',\n                                    textAlign: 'center',\n                                  }}\n                                >\n                                  <IntlMessages id=\"marks.No\" />\n                                </th>\n                                <th\n                                  scope=\"col\"\n                                  style={{\n                                    fontSize: '15px',\n                                    textAlign: 'center',\n                                  }}\n                                >\n                                  <IntlMessages id=\"marks.FullName\" />\n                                </th>\n                                <th\n                                  scope=\"col\"\n                                  style={{\n                                    fontSize: '15px',\n                                    textAlign: 'center',\n                                  }}\n                                >\n                                  <IntlMessages id=\"marks.FatherName\" />\n                                </th>\n                                <th\n                                  scope=\"col\"\n                                  style={{\n                                    fontSize: '15px',\n                                    textAlign: 'center',\n                                  }}\n                                >\n                                  <IntlMessages id=\"marks.ID\" />\n                                </th>\n                                <th\n                                  scope=\"col\"\n                                  style={{\n                                    fontSize: '15px',\n                                    textAlign: 'center',\n                                  }}\n                                >\n                                  <IntlMessages id=\"پخوانی نمری\" />\n                                </th>\n                                <th\n                                  scope=\"col\"\n                                  style={{\n                                    fontSize: '15px',\n                                    textAlign: 'center',\n                                  }}\n                                >\n                                  <IntlMessages id=\"marks.Marks\" />\n                                </th>\n                              </tr>\n                            </thead>\n                            <tbody\n                              className=\"border border \"\n                              style={{\n                                overflowY: 'scroll',\n                                overflowX: 'hidden',\n                              }}\n                            >\n                              {students.length > 0 &&\n                                students.map((student, index) => (\n                                  <tr key={index}>\n                                    <th\n                                      scope=\"row\"\n                                      style={{\n                                        fontSize: '20px',\n                                        textAlign: 'center',\n                                      }}\n                                    >\n                                      {index + 1}\n                                    </th>\n                                    <td\n                                      style={{\n                                        fontSize: '20px',\n                                        textAlign: 'center',\n                                      }}\n                                    >\n                                      {student.student_name}\n                                    </td>\n                                    <td\n                                      style={{\n                                        fontSize: '20px',\n                                        textAlign: 'center',\n                                      }}\n                                    >\n                                      {student.student_father_name}\n                                    </td>\n                                    <td\n                                      style={{\n                                        fontSize: '20px',\n                                        textAlign: 'center',\n                                      }}\n                                    >\n                                      {student.student}\n                                    </td>\n                                    <td\n                                      style={{\n                                        fontSize: '20px',\n                                        textAlign: 'center',\n                                      }}\n                                    >\n                                      {student.subject_id.map((subject) => {\n                                        return <>{subject.marks}</>;\n                                      })}\n                                    </td>\n\n                                    {/* Marks Entry */}\n                                    <td>\n                                      <div\n                                        style={{\n                                          margin: '-7px',\n                                          fontSize: '15px',\n                                        }}\n                                      >\n                                        <Field\n                                          type=\"number\"\n                                          style={{\n                                            fontSize: '15px',\n                                            textAlign: 'center',\n                                          }}\n                                          className=\"form-control\"\n                                          name={`score[${student.student}]`}\n                                          min=\"0\"\n                                          max=\"100\"\n                                        />\n                                        {errors.score && touched.score ? (\n                                          <div className=\"invalid-feedback d-block\">\n                                            {errors.score}\n                                          </div>\n                                        ) : null}\n                                      </div>\n                                    </td>\n                                  </tr>\n                                ))}\n                            </tbody>\n                            <tfoot className=\"thead-dark\">\n                              <tr>\n                                <th\n                                  scope=\"col\"\n                                  style={{\n                                    fontSize: '15px',\n                                    textAlign: 'center',\n                                  }}\n                                >\n                                  <IntlMessages id=\"marks.No\" />\n                                </th>\n                                <th\n                                  scope=\"col\"\n                                  style={{\n                                    fontSize: '15px',\n                                    textAlign: 'center',\n                                  }}\n                                >\n                                  <IntlMessages id=\"marks.FullName\" />\n                                </th>\n                                <th\n                                  scope=\"col\"\n                                  style={{\n                                    fontSize: '15px',\n                                    textAlign: 'center',\n                                  }}\n                                >\n                                  <IntlMessages id=\"marks.FatherName\" />\n                                </th>\n                                <th\n                                  scope=\"col\"\n                                  style={{\n                                    fontSize: '15px',\n                                    textAlign: 'center',\n                                  }}\n                                >\n                                  <IntlMessages id=\"marks.ID\" />\n                                </th>\n                                <th\n                                  scope=\"col\"\n                                  style={{\n                                    fontSize: '15px',\n                                    textAlign: 'center',\n                                  }}\n                                >\n                                  <IntlMessages id=\"پخوانی نمری\" />\n                                </th>\n                                <th\n                                  scope=\"col\"\n                                  style={{\n                                    fontSize: '15px',\n                                    textAlign: 'center',\n                                  }}\n                                >\n                                  <IntlMessages id=\"marks.Marks\" />\n                                </th>\n                              </tr>\n                            </tfoot>\n                          </table>\n                        </Row>\n                        <Row className=\" justify-content-center\">\n                          <Colxx xxs=\"9\" className=\"m-5\">\n                            <Button\n                              className=\" m-4 \"\n                              color=\"primary\"\n                              onClick={() => setIsNext(false)}\n                            >\n                              <IntlMessages id=\"button.Back\" />\n                            </Button>\n\n                            <div className=\"d-flex justify-content-between align-items-center m-4 float-right\">\n                              <Button\n                                size=\"lg\"\n                                type=\"submit\"\n                                color=\"primary\"\n                                // onSubmit={onSubmit}\n                                // onClick={() => setIsSubmitted(true)}\n                              >\n                                <IntlMessages id=\"button.SubmitButton\" />\n                              </Button>\n                            </div>\n                          </Colxx>\n                        </Row>\n                      </Form>\n                    )}\n                  </Formik>\n                </>\n              ) : (\n                <div className=\"wizard-basic-step text-center pt-3\">\n                  <div>\n                    <h1 className=\"mb-2\">\n                      <IntlMessages id=\"wizard.content-thanks\" />\n                    </h1>\n                    <h3>\n                      <IntlMessages id=\"wizard.registered\" />\n                    </h3>\n                    <Button\n                      className=\"m-5 bg-primary\"\n                      // onClick={() => window.location.reload()}\n                      onClick={() => {\n                        setIsNext(false);\n                        setIsSubmitted(false);\n                      }}\n                    >\n                      <IntlMessages id=\"button.Back\" />\n                    </Button>\n                  </div>\n                </div>\n              )}\n            </>\n          )}\n        </CardBody>\n      </Card>\n    </>\n  );\n};\n\nexport default MarksRegistration;\n","const currentUser = () => {\n  const user = JSON.parse(localStorage.getItem('user'));\n  console.log('user is here', user.user_id);\n  return user.user_id;\n};\n\nexport default currentUser;\n","import { userRole } from 'constants/defaultValues';\nimport { ProtectedRoute } from 'helpers/authHelper';\nimport React, { Suspense } from 'react';\nimport { Redirect, Route, Switch } from 'react-router-dom';\n\nconst InstituteList = React.lazy(() =>\n  import('./institute-list/InstituteListMain')\n);\nconst PromotionDemotionList = React.lazy(() =>\n  import('./promotion-demotion-list/PromotionDemortionListMain')\n);\nconst InstituteRegister = React.lazy(() => import('./institute-register.js'));\n\nconst InstitueCreate = React.lazy(() => import('./institute-create'));\nconst InstituteUpgrade = React.lazy(() => import('./institute-upgrade'));\nconst InstituteProfile = React.lazy(() => import('./institute-profile'));\nconst InstituteDepartmentRegister = React.lazy(() =>\n  import('./institute-department-register')\n);\n\nconst InstituteDepartmentList = React.lazy(() =>\n  import('./institute-department-list/InstituteDepartmentListMain')\n);\n\nconst Institues = ({ match, props }) => (\n  <Suspense fallback={<div className=\"loading\" />}>\n    <Switch>\n      <Redirect exact from={`${match.url}/`} to={`${match.url}/institutes`} />\n      <ProtectedRoute\n        path={`${match.url}/institutes`}\n        component={InstituteList}\n        roles={[userRole.superUser, userRole.authenticated]}\n        props={props}\n      />\n      <ProtectedRoute\n        path={`${match.url}/promotion-demotion-list`}\n        component={PromotionDemotionList}\n        roles={[userRole.superUser, userRole.authenticated]}\n        props={props}\n      />\n\n      <ProtectedRoute\n        exact\n        path={`${match.url}/register`}\n        component={InstituteRegister}\n        roles={[userRole.superUser, userRole.authenticated]}\n        props={props}\n      />\n      <ProtectedRoute\n        path={`${match.url}/register/:instituteId`}\n        component={InstituteRegister}\n        roles={[userRole.superUser, userRole.authenticated]}\n        props={props}\n      />\n      <ProtectedRoute\n        path={`${match.url}/institute-create`}\n        component={InstitueCreate}\n        roles={[userRole.superUser, userRole.authenticated]}\n        props={props}\n      />\n\n      <ProtectedRoute\n        path={`${match.url}/institute-upgrade`}\n        component={InstituteUpgrade}\n        roles={[userRole.superUser, userRole.authenticated]}\n        props={props}\n      />\n      <ProtectedRoute\n        path={`${match.url}/institute/:instituteId`}\n        component={InstituteProfile}\n        roles={[userRole.superUser, userRole.authenticated]}\n        props={props}\n      />\n      <ProtectedRoute\n        path={`${match.url}/institute-department/register`}\n        component={InstituteDepartmentRegister}\n        roles={[userRole.superUser, userRole.authenticated]}\n        props={props}\n      />\n      <ProtectedRoute\n        path={`${match.url}/institute-department/list`}\n        component={InstituteDepartmentList}\n        roles={[userRole.superUser, userRole.authenticated]}\n        props={props}\n      />\n      <Redirect to=\"/error\" />\n    </Switch>\n  </Suspense>\n);\nexport default Institues;\n"],"sourceRoot":""}