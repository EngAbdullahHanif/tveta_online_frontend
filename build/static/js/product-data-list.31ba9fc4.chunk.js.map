{"version":3,"file":"static/js/product-data-list.31ba9fc4.chunk.js","mappings":"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","sources":["views/app/pages/product/data-list.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nimport axios from 'axios';\n\nimport { servicePath } from 'constants/defaultValues';\n\nimport ListPageHeading from 'views/app/teachers/bio/teacher-list/TeacherListHeading';\nimport AddNewModal from 'containers/pages/AddNewModal';\nimport ListPageListing from 'views/app/teachers/bio/teacher-list/TeacherListCatagory';\nimport useMousetrap from 'hooks/use-mousetrap';\n\nconst getIndex = (value, arr, prop) => {\n  for (let i = 0; i < arr.length; i += 1) {\n    if (arr[i][prop] === value) {\n      return i;\n    }\n  }\n  return -1;\n};\n\nconst apiUrl = `${servicePath}/cakes/paging`;\n\nconst orderOptions = [\n  { column: 'title', label: 'Product Name' },\n  { column: 'category', label: 'Category' },\n  { column: 'status', label: 'Status' },\n];\nconst pageSizes = [4, 8, 12, 20];\n\nconst categories = [\n  { label: 'Cakes', value: 'Cakes', key: 0 },\n  { label: 'Cupcakes', value: 'Cupcakes', key: 1 },\n  { label: 'Desserts', value: 'Desserts', key: 2 },\n];\n\nconst DataListPages = ({ match }) => {\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [displayMode, setDisplayMode] = useState('list');\n  const [currentPage, setCurrentPage] = useState(1);\n  const [selectedPageSize, setSelectedPageSize] = useState(8);\n  const [selectedOrderOption, setSelectedOrderOption] = useState({\n    column: 'title',\n    label: 'Product Name',\n  });\n\n  const [modalOpen, setModalOpen] = useState(false);\n  const [totalItemCount, setTotalItemCount] = useState(0);\n  const [totalPage, setTotalPage] = useState(1);\n  const [search, setSearch] = useState('');\n  const [selectedItems, setSelectedItems] = useState([]);\n  const [items, setItems] = useState([]);\n  const [lastChecked, setLastChecked] = useState(null);\n\n  useEffect(() => {\n    setCurrentPage(1);\n  }, [selectedPageSize, selectedOrderOption]);\n\n  useEffect(() => {\n    async function fetchData() {\n      axios\n        .get(\n          `${apiUrl}?pageSize=${selectedPageSize}&currentPage=${currentPage}&orderBy=${selectedOrderOption.column}&search=${search}`,\n        )\n        .then((res) => {\n          return res.data;\n        })\n        .then((data) => {\n          setTotalPage(data.totalPage);\n          setItems(\n            data.data.map((x) => {\n              return { ...x, img: x.img.replace('img/', 'img/products/') };\n            }),\n          );\n          setSelectedItems([]);\n          setTotalItemCount(data.totalItem);\n          setIsLoaded(true);\n        });\n    }\n    fetchData();\n  }, [selectedPageSize, currentPage, selectedOrderOption, search]);\n\n  const onCheckItem = (event, id) => {\n    if (\n      event.target.tagName === 'A' ||\n      (event.target.parentElement && event.target.parentElement.tagName === 'A')\n    ) {\n      return true;\n    }\n    if (lastChecked === null) {\n      setLastChecked(id);\n    }\n\n    let selectedList = [...selectedItems];\n    if (selectedList.includes(id)) {\n      selectedList = selectedList.filter((x) => x !== id);\n    } else {\n      selectedList.push(id);\n    }\n    setSelectedItems(selectedList);\n\n    if (event.shiftKey) {\n      let newItems = [...items];\n      const start = getIndex(id, newItems, 'id');\n      const end = getIndex(lastChecked, newItems, 'id');\n      newItems = newItems.slice(Math.min(start, end), Math.max(start, end) + 1);\n      selectedItems.push(\n        ...newItems.map((item) => {\n          return item.id;\n        }),\n      );\n      selectedList = Array.from(new Set(selectedItems));\n      setSelectedItems(selectedList);\n    }\n    document.activeElement.blur();\n    return false;\n  };\n\n  const handleChangeSelectAll = (isToggle) => {\n    if (selectedItems.length >= items.length) {\n      if (isToggle) {\n        setSelectedItems([]);\n      }\n    } else {\n      setSelectedItems(items.map((x) => x.id));\n    }\n    document.activeElement.blur();\n    return false;\n  };\n\n  const onContextMenuClick = (e, data) => {\n    console.log('onContextMenuClick - selected items', selectedItems);\n    console.log('onContextMenuClick - action : ', data.action);\n  };\n\n  const onContextMenu = (e, data) => {\n    const clickedProductId = data.data;\n    if (!selectedItems.includes(clickedProductId)) {\n      setSelectedItems([clickedProductId]);\n    }\n\n    return true;\n  };\n\n  useMousetrap(['ctrl+a', 'command+a'], () => {\n    handleChangeSelectAll(false);\n  });\n\n  useMousetrap(['ctrl+d', 'command+d'], () => {\n    setSelectedItems([]);\n    return false;\n  });\n\n  const startIndex = (currentPage - 1) * selectedPageSize;\n  const endIndex = currentPage * selectedPageSize;\n\n  return !isLoaded ? (\n    <div className=\"loading\" />\n  ) : (\n    <>\n      <div className=\"disable-text-selection\">\n        <ListPageHeading\n          heading=\"menu.data-list\"\n          displayMode={displayMode}\n          changeDisplayMode={setDisplayMode}\n          handleChangeSelectAll={handleChangeSelectAll}\n          changeOrderBy={(column) => {\n            setSelectedOrderOption(\n              orderOptions.find((x) => x.column === column),\n            );\n          }}\n          changePageSize={setSelectedPageSize}\n          selectedPageSize={selectedPageSize}\n          totalItemCount={totalItemCount}\n          selectedOrderOption={selectedOrderOption}\n          match={match}\n          startIndex={startIndex}\n          endIndex={endIndex}\n          selectedItemsLength={selectedItems ? selectedItems.length : 0}\n          itemsLength={items ? items.length : 0}\n          onSearchKey={(e) => {\n            if (e.key === 'Enter') {\n              setSearch(e.target.value.toLowerCase());\n            }\n          }}\n          orderOptions={orderOptions}\n          pageSizes={pageSizes}\n          toggleModal={() => setModalOpen(!modalOpen)}\n        />\n        <AddNewModal\n          modalOpen={modalOpen}\n          toggleModal={() => setModalOpen(!modalOpen)}\n          categories={categories}\n        />\n        <ListPageListing\n          items={items}\n          displayMode={displayMode}\n          selectedItems={selectedItems}\n          onCheckItem={onCheckItem}\n          currentPage={currentPage}\n          totalPage={totalPage}\n          onContextMenuClick={onContextMenuClick}\n          onContextMenu={onContextMenu}\n          onChangePage={setCurrentPage}\n        />\n      </div>\n    </>\n  );\n};\n\nexport default DataListPages;\n"],"names":["getIndex","value","arr","prop","i","length","apiUrl","concat","servicePath","orderOptions","column","label","pageSizes","categories","key","_ref","match","_useState","useState","_useState2","_slicedToArray","isLoaded","setIsLoaded","_useState3","_useState4","displayMode","setDisplayMode","_useState5","_useState6","currentPage","setCurrentPage","_useState7","_useState8","selectedPageSize","setSelectedPageSize","_useState9","_useState10","selectedOrderOption","setSelectedOrderOption","_useState11","_useState12","modalOpen","setModalOpen","_useState13","_useState14","totalItemCount","setTotalItemCount","_useState15","_useState16","totalPage","setTotalPage","_useState17","_useState18","search","setSearch","_useState19","_useState20","selectedItems","setSelectedItems","_useState21","_useState22","items","setItems","_useState23","_useState24","lastChecked","setLastChecked","useEffect","_fetchData","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","axios","then","res","data","map","x","_objectSpread","img","replace","totalItem","stop","apply","arguments","fetchData","handleChangeSelectAll","isToggle","id","document","activeElement","blur","useMousetrap","startIndex","endIndex","_jsx","_Fragment","children","_jsxs","className","ListPageHeading","heading","changeDisplayMode","changeOrderBy","find","changePageSize","selectedItemsLength","itemsLength","onSearchKey","e","target","toLowerCase","toggleModal","AddNewModal","ListPageListing","onCheckItem","event","tagName","parentElement","selectedList","_toConsumableArray","includes","filter","push","shiftKey","newItems","start","end","slice","Math","min","max","item","Array","from","Set","onContextMenuClick","console","log","action","onContextMenu","clickedProductId","onChangePage"],"sourceRoot":""}