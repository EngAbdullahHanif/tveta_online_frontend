{"version":3,"sources":["views/app/pages/product/image-list.js","components/common/CustomSelectInput.js","containers/pages/Pagination.js","hooks/use-mousetrap.js","containers/pages/ImageListView.js","../node_modules/reactstrap/es/Input.js","views/app/teachers/bio/teacher-list/TeacherListHeading.js","views/app/teachers/bio/teacher-list/TeacherListBody.js","views/app/teachers/bio/teacher-list/TeacherListCatagory.js","containers/pages/AddNewModal.js"],"names":["getIndex","value","arr","prop","i","length","apiUrl","concat","servicePath","orderOptions","column","label","pageSizes","categories","key","ImageListPages","_ref","match","_useState","useState","_useState2","_slicedToArray","isLoaded","setIsLoaded","_useState3","_useState4","displayMode","setDisplayMode","_useState5","_useState6","currentPage","setCurrentPage","_useState7","_useState8","selectedPageSize","setSelectedPageSize","_useState9","_useState10","selectedOrderOption","setSelectedOrderOption","_useState11","_useState12","modalOpen","setModalOpen","_useState13","_useState14","totalItemCount","setTotalItemCount","_useState15","_useState16","totalPage","setTotalPage","_useState17","_useState18","search","setSearch","_useState19","_useState20","selectedItems","setSelectedItems","_useState21","_useState22","items","setItems","_useState23","_useState24","lastChecked","setLastChecked","useEffect","_fetchData","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","axios","get","then","res","data","map","x","_objectSpread","img","replace","totalItem","stop","apply","arguments","fetchData","handleChangeSelectAll","isToggle","id","document","activeElement","blur","useMousetrap","startIndex","endIndex","_jsx","_Fragment","children","_jsxs","className","ListPageHeading","heading","changeDisplayMode","changeOrderBy","find","changePageSize","selectedItemsLength","itemsLength","onSearchKey","e","target","toLowerCase","toggleModal","AddNewModal","ListPageListing","onCheckItem","event","tagName","parentElement","selectedList","_toConsumableArray","includes","filter","push","shiftKey","newItems","start","end","slice","Math","min","max","item","Array","from","Set","onContextMenuClick","console","log","action","onContextMenu","clickedProductId","onChangePage","CustomSelectInput","props","customProps","autoCorrect","autoCapitalize","components","Input","Pagination","_ref$totalPage","_ref$currentPage","_ref$numberLimit","numberLimit","_ref$lastIsActive","lastIsActive","_ref$firstIsActive","firstIsActive","startPoint","endPoint","parseInt","points","firstPageButtonClassName","lastPageButtonClassName","prevPageButtonClassName","nextPageButtonClassName","Colxx","xxs","Nav","NavItem","NavLink","onClick","handlerKey","handlerCallback","actionRef","useRef","current","mousetrap","bind","evt","combo","preventDefault","unbind","ImageListView","product","isSelect","collect","sm","lg","xl","ContextMenuTrigger","Card","classnames","active","to","CardImg","top","alt","title","src","Badge","color","statusColor","pill","status","CardBody","Row","CustomInput","type","checked","onChange","CardSubtitle","CardText","date","React","memo","propTypes","PropTypes","node","string","size","oneOfType","number","bsSize","valid","bool","invalid","tag","tagPropType","innerRef","object","func","plaintext","addon","cssModule","_React$Component","_this","call","this","getRef","_assertThisInitialized","focus","_inheritsLoose","_proto","prototype","ref","render","_this$props","attributes","_objectWithoutPropertiesLoose","checkInput","indexOf","isNotaNumber","RegExp","Tag","formControlClass","test","warnOnce","classes","mapToCssModules","classNames","createElement","_extends","Component","defaultProps","injectIntl","intl","onIdSearchKey","changeGenderBy","selectedGenderOption","genderOptionsForList","selectedProvinceOption","changeProvinceBy","provincesOptionsForList","onResetClick","selectLevelOfEducationOption","changeLevelOfEducationBy","levelOfEdcationForList","onDistrictSearchKey","onProvinceSearchKey","reset","onInstituteSelect","institutes","displayOptionsIsOpen","setDisplayOptionsIsOpen","selectedInstitute","setSelectedInstitute","messages","IntlMessages","Button","Collapse","isOpen","href","ThumbListIcon","ImageListIcon","UncontrolledDropdown","DropdownToggle","caret","style","fontSize","DropdownMenu","gender","index","DropdownItem","height","overflowY","overflowX","order","name","placeholder","onKeyPress","getElementById","Separator","TeacherListBody","teacher","modalBasic","setModalBasic","setDeletion","handleClick","_ref2","callApi","response","window","location","reload","_x","maxHeight","width","textAlign","father_name","current_province","phone_number","major","grade","display","flexDirection","BsPencilSquare","outline","Modal","toggle","marginTop","ModalHeader","ModalBody","ModalFooter","marginLeft","DataListView","ContextMenuContainer","wrapClassName","backdrop","Label","Select","classNamePrefix","options"],"mappings":"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","file":"static/js/product-image-list.fdc46479.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nimport axios from 'axios';\n\nimport { servicePath } from 'constants/defaultValues';\n\nimport ListPageHeading from 'views/app/teachers/bio/teacher-list/TeacherListHeading';\nimport AddNewModal from 'containers/pages/AddNewModal';\nimport ListPageListing from 'views/app/teachers/bio/teacher-list/TeacherListCatagory';\nimport useMousetrap from 'hooks/use-mousetrap';\n\nconst getIndex = (value, arr, prop) => {\n  for (let i = 0; i < arr.length; i += 1) {\n    if (arr[i][prop] === value) {\n      return i;\n    }\n  }\n  return -1;\n};\n\nconst apiUrl = `${servicePath}/cakes/paging`;\n\nconst orderOptions = [\n  { column: 'title', label: 'Product Name' },\n  { column: 'category', label: 'Category' },\n  { column: 'status', label: 'Status' },\n];\nconst pageSizes = [4, 8, 12, 20];\n\nconst categories = [\n  { label: 'Cakes', value: 'Cakes', key: 0 },\n  { label: 'Cupcakes', value: 'Cupcakes', key: 1 },\n  { label: 'Desserts', value: 'Desserts', key: 2 },\n];\n\nconst ImageListPages = ({ match }) => {\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [displayMode, setDisplayMode] = useState('imagelist');\n  const [currentPage, setCurrentPage] = useState(1);\n  const [selectedPageSize, setSelectedPageSize] = useState(8);\n  const [selectedOrderOption, setSelectedOrderOption] = useState({\n    column: 'title',\n    label: 'Product Name',\n  });\n\n  const [modalOpen, setModalOpen] = useState(false);\n  const [totalItemCount, setTotalItemCount] = useState(0);\n  const [totalPage, setTotalPage] = useState(1);\n  const [search, setSearch] = useState('');\n  const [selectedItems, setSelectedItems] = useState([]);\n  const [items, setItems] = useState([]);\n  const [lastChecked, setLastChecked] = useState(null);\n\n  useEffect(() => {\n    setCurrentPage(1);\n  }, [selectedPageSize, selectedOrderOption]);\n\n  useEffect(() => {\n    async function fetchData() {\n      axios\n        .get(\n          `${apiUrl}?pageSize=${selectedPageSize}&currentPage=${currentPage}&orderBy=${selectedOrderOption.column}&search=${search}`\n        )\n        .then((res) => {\n          return res.data;\n        })\n        .then((data) => {\n          setTotalPage(data.totalPage);\n          setItems(\n            data.data.map((x) => {\n              return { ...x, img: x.img.replace('img/', 'img/products/') };\n            })\n          );\n          setSelectedItems([]);\n          setTotalItemCount(data.totalItem);\n          setIsLoaded(true);\n        });\n    }\n    fetchData();\n  }, [selectedPageSize, currentPage, selectedOrderOption, search]);\n\n  const onCheckItem = (event, id) => {\n    if (\n      event.target.tagName === 'A' ||\n      (event.target.parentElement && event.target.parentElement.tagName === 'A')\n    ) {\n      return true;\n    }\n    if (lastChecked === null) {\n      setLastChecked(id);\n    }\n\n    let selectedList = [...selectedItems];\n    if (selectedList.includes(id)) {\n      selectedList = selectedList.filter((x) => x !== id);\n    } else {\n      selectedList.push(id);\n    }\n    setSelectedItems(selectedList);\n\n    if (event.shiftKey) {\n      let newItems = [...items];\n      const start = getIndex(id, newItems, 'id');\n      const end = getIndex(lastChecked, newItems, 'id');\n      newItems = newItems.slice(Math.min(start, end), Math.max(start, end) + 1);\n      selectedItems.push(\n        ...newItems.map((item) => {\n          return item.id;\n        })\n      );\n      selectedList = Array.from(new Set(selectedItems));\n      setSelectedItems(selectedList);\n    }\n    document.activeElement.blur();\n    return false;\n  };\n\n  const handleChangeSelectAll = (isToggle) => {\n    if (selectedItems.length >= items.length) {\n      if (isToggle) {\n        setSelectedItems([]);\n      }\n    } else {\n      setSelectedItems(items.map((x) => x.id));\n    }\n    document.activeElement.blur();\n    return false;\n  };\n\n  const onContextMenuClick = (e, data) => {\n    // params : (e,data,target)\n    console.log('onContextMenuClick - selected items', selectedItems);\n    console.log('onContextMenuClick - action : ', data.action);\n  };\n\n  const onContextMenu = (e, data) => {\n    const clickedProductId = data.data;\n    if (!selectedItems.includes(clickedProductId)) {\n      setSelectedItems([clickedProductId]);\n    }\n\n    return true;\n  };\n\n  useMousetrap(['ctrl+a', 'command+a'], () => {\n    handleChangeSelectAll(false);\n  });\n\n  useMousetrap(['ctrl+d', 'command+d'], () => {\n    setSelectedItems([]);\n    return false;\n  });\n\n  const startIndex = (currentPage - 1) * selectedPageSize;\n  const endIndex = currentPage * selectedPageSize;\n\n  return !isLoaded ? (\n    <div className=\"loading\" />\n  ) : (\n    <>\n      <div className=\"disable-text-selection\">\n        <ListPageHeading\n          heading=\"menu.image-list\"\n          displayMode={displayMode}\n          changeDisplayMode={setDisplayMode}\n          handleChangeSelectAll={handleChangeSelectAll}\n          changeOrderBy={(column) => {\n            setSelectedOrderOption(\n              orderOptions.find((x) => x.column === column)\n            );\n          }}\n          changePageSize={setSelectedPageSize}\n          selectedPageSize={selectedPageSize}\n          totalItemCount={totalItemCount}\n          selectedOrderOption={selectedOrderOption}\n          match={match}\n          startIndex={startIndex}\n          endIndex={endIndex}\n          selectedItemsLength={selectedItems ? selectedItems.length : 0}\n          itemsLength={items ? items.length : 0}\n          onSearchKey={(e) => {\n            if (e.key === 'Enter') {\n              setSearch(e.target.value.toLowerCase());\n            }\n          }}\n          orderOptions={orderOptions}\n          pageSizes={pageSizes}\n          toggleModal={() => setModalOpen(!modalOpen)}\n        />\n        <AddNewModal\n          modalOpen={modalOpen}\n          toggleModal={() => setModalOpen(!modalOpen)}\n          categories={categories}\n        />\n        <ListPageListing\n          items={items}\n          displayMode={displayMode}\n          selectedItems={selectedItems}\n          onCheckItem={onCheckItem}\n          currentPage={currentPage}\n          totalPage={totalPage}\n          onContextMenuClick={onContextMenuClick}\n          onContextMenu={onContextMenu}\n          onChangePage={setCurrentPage}\n        />\n      </div>\n    </>\n  );\n};\n\nexport default ImageListPages;\n","import React from 'react';\nimport { components } from 'react-select';\n\nconst CustomSelectInput = (props) => {\n  const customProps = { ...props };\n  delete customProps.autoCorrect;\n  delete customProps.autoCapitalize;\n  return <components.Input {...customProps} />;\n};\n\nexport default CustomSelectInput;\n","import React from 'react';\nimport { Nav, NavItem, NavLink } from 'reactstrap';\nimport { Colxx } from 'components/common/CustomBootstrap';\n\nconst Pagination = ({\n  totalPage = 0,\n  currentPage = 1,\n  numberLimit = 5,\n  lastIsActive = true,\n  firstIsActive = true,\n  onChangePage,\n}) => {\n  let startPoint = 1;\n  let endPoint = numberLimit;\n\n  if (numberLimit > totalPage) {\n    startPoint = 1;\n    endPoint = totalPage;\n  } else if (currentPage <= parseInt(numberLimit / 2, 10)) {\n    startPoint = 1;\n    endPoint = numberLimit;\n  } else if (currentPage + parseInt(numberLimit / 2, 10) <= totalPage) {\n    startPoint = currentPage - parseInt(numberLimit / 2, 10);\n    endPoint = currentPage + parseInt(numberLimit / 2, 10);\n  } else {\n    startPoint = totalPage - (numberLimit - 1);\n    endPoint = totalPage;\n  }\n  startPoint = startPoint === 0 ? 1 : startPoint;\n  const points = [];\n  for (let i = startPoint; i <= endPoint; i += 1) {\n    points.push(i);\n  }\n\n  const firstPageButtonClassName = currentPage <= 1 ? 'disabled' : '';\n  const lastPageButtonClassName = currentPage >= totalPage ? 'disabled' : '';\n  const prevPageButtonClassName = currentPage <= 1 ? 'disabled' : '';\n  const nextPageButtonClassName = currentPage >= totalPage ? 'disabled' : '';\n  return totalPage > 1 ? (\n    <Colxx xxs=\"12\" className=\"mt-3 mb-3\">\n      <Nav className=\"pagination justify-content-center\">\n        {firstIsActive && (\n          <NavItem className={`page-item ${firstPageButtonClassName}`}>\n            <NavLink\n              className=\"page-link first c-pointer\"\n              onClick={() => onChangePage(1)}\n            >\n              <i className=\"simple-icon-control-start\" />\n            </NavLink>\n          </NavItem>\n        )}\n\n        <NavItem className={`page-item ${prevPageButtonClassName}`}>\n          <NavLink\n            className=\"page-link prev c-pointer\"\n            onClick={() => onChangePage(currentPage - 1)}\n          >\n            <i className=\"simple-icon-arrow-left\" />\n          </NavLink>\n        </NavItem>\n        {points.map((i) => {\n          return (\n            <NavItem\n              key={i}\n              className={`page-item ${currentPage === i && 'active'}`}\n            >\n              <NavLink\n                className=\"page-link c-pointer\"\n                onClick={() => onChangePage(i)}\n              >\n                {i}\n              </NavLink>\n            </NavItem>\n          );\n        })}\n        <NavItem className={`page-item ${nextPageButtonClassName}`}>\n          <NavLink\n            className=\"page-link next c-pointer\"\n            onClick={() => onChangePage(currentPage + 1)}\n          >\n            <i className=\"simple-icon-arrow-right\" />\n          </NavLink>\n        </NavItem>\n        {lastIsActive && (\n          <NavItem className={`page-item ${lastPageButtonClassName}`}>\n            <NavLink\n              className=\"page-link last c-pointer\"\n              onClick={() => onChangePage(totalPage)}\n            >\n              <i className=\"simple-icon-control-end\" />\n            </NavLink>\n          </NavItem>\n        )}\n      </Nav>\n    </Colxx>\n  ) : (\n    <Colxx xxs=\"12\" className=\"mt-2\" />\n  );\n};\n\nexport default Pagination;\n","/* eslint-disable no-unused-expressions */\nimport mousetrap from 'mousetrap';\nimport { useEffect, useRef } from 'react';\n\n/**\n * Use mousetrap hook\n *\n * @param  {(string | string[])} handlerKey - A key, key combo or array of combos according to Mousetrap documentation.\n * @param  { function } handlerCallback - A function that is triggered on key combo catch.\n */\nexport default (handlerKey, handlerCallback) => {\n  const actionRef = useRef(null);\n  actionRef.current = handlerCallback;\n\n  useEffect(() => {\n    mousetrap.bind(handlerKey, (evt, combo) => {\n      typeof actionRef.current === 'function' && actionRef.current(evt, combo);\n      evt.preventDefault();\n    });\n    return () => {\n      mousetrap.unbind(handlerKey);\n    };\n  }, [handlerKey]);\n};\n","import React from 'react';\nimport {\n  Row,\n  Card,\n  CardBody,\n  CardSubtitle,\n  CardImg,\n  CardText,\n  CustomInput,\n  Badge,\n} from 'reactstrap';\nimport { NavLink } from 'react-router-dom';\nimport classnames from 'classnames';\nimport { ContextMenuTrigger } from 'react-contextmenu';\nimport { Colxx } from 'components/common/CustomBootstrap';\n\nconst ImageListView = ({ product, isSelect, collect, onCheckItem }) => {\n  return (\n    <Colxx sm=\"6\" lg=\"4\" xl=\"3\" className=\"mb-3\" key={product.id}>\n      <ContextMenuTrigger id=\"menu_id\" data={product.id} collect={collect}>\n        <Card\n          onClick={(event) => onCheckItem(event, product.id)}\n          className={classnames({\n            active: isSelect,\n          })}\n        >\n          <div className=\"position-relative\">\n            <NavLink to={`?p=${product.id}`} className=\"w-40 w-sm-100\">\n              <CardImg top alt={product.title} src={product.img} />\n            </NavLink>\n            <Badge\n              color={product.statusColor}\n              pill\n              className=\"position-absolute badge-top-left\"\n            >\n              {product.status}\n            </Badge>\n          </div>\n          <CardBody>\n            <Row>\n              <Colxx xxs=\"2\">\n                <CustomInput\n                  className=\"item-check mb-0\"\n                  type=\"checkbox\"\n                  id={`check_${product.id}`}\n                  checked={isSelect}\n                  onChange={() => {}}\n                  label=\"\"\n                />\n              </Colxx>\n              <Colxx xxs=\"10\" className=\"mb-3\">\n                <CardSubtitle>{product.title}</CardSubtitle>\n                <CardText className=\"text-muted text-small mb-0 font-weight-light\">\n                  {product.date}\n                </CardText>\n              </Colxx>\n            </Row>\n          </CardBody>\n        </Card>\n      </ContextMenuTrigger>\n    </Colxx>\n  );\n};\n\n/* React.memo detail : https://reactjs.org/docs/react-api.html#reactpurecomponent  */\nexport default React.memo(ImageListView);\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\n\n/* eslint react/prefer-stateless-function: 0 */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, warnOnce, tagPropType } from './utils';\nvar propTypes = {\n  children: PropTypes.node,\n  type: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  bsSize: PropTypes.string,\n  valid: PropTypes.bool,\n  invalid: PropTypes.bool,\n  tag: tagPropType,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.func, PropTypes.string]),\n  plaintext: PropTypes.bool,\n  addon: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  type: 'text'\n};\n\nvar Input = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(Input, _React$Component);\n\n  function Input(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n    _this.getRef = _this.getRef.bind(_assertThisInitialized(_this));\n    _this.focus = _this.focus.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  var _proto = Input.prototype;\n\n  _proto.getRef = function getRef(ref) {\n    if (this.props.innerRef) {\n      this.props.innerRef(ref);\n    }\n\n    this.ref = ref;\n  };\n\n  _proto.focus = function focus() {\n    if (this.ref) {\n      this.ref.focus();\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        className = _this$props.className,\n        cssModule = _this$props.cssModule,\n        type = _this$props.type,\n        bsSize = _this$props.bsSize,\n        valid = _this$props.valid,\n        invalid = _this$props.invalid,\n        tag = _this$props.tag,\n        addon = _this$props.addon,\n        plaintext = _this$props.plaintext,\n        innerRef = _this$props.innerRef,\n        attributes = _objectWithoutPropertiesLoose(_this$props, [\"className\", \"cssModule\", \"type\", \"bsSize\", \"valid\", \"invalid\", \"tag\", \"addon\", \"plaintext\", \"innerRef\"]);\n\n    var checkInput = ['radio', 'checkbox'].indexOf(type) > -1;\n    var isNotaNumber = new RegExp('\\\\D', 'g');\n    var fileInput = type === 'file';\n    var textareaInput = type === 'textarea';\n    var selectInput = type === 'select';\n    var rangeInput = type === 'range';\n    var Tag = tag || (selectInput || textareaInput ? type : 'input');\n    var formControlClass = 'form-control';\n\n    if (plaintext) {\n      formControlClass = formControlClass + \"-plaintext\";\n      Tag = tag || 'input';\n    } else if (fileInput) {\n      formControlClass = formControlClass + \"-file\";\n    } else if (rangeInput) {\n      formControlClass = formControlClass + \"-range\";\n    } else if (checkInput) {\n      if (addon) {\n        formControlClass = null;\n      } else {\n        formControlClass = 'form-check-input';\n      }\n    }\n\n    if (attributes.size && isNotaNumber.test(attributes.size)) {\n      warnOnce('Please use the prop \"bsSize\" instead of the \"size\" to bootstrap\\'s input sizing.');\n      bsSize = attributes.size;\n      delete attributes.size;\n    }\n\n    var classes = mapToCssModules(classNames(className, invalid && 'is-invalid', valid && 'is-valid', bsSize ? \"form-control-\" + bsSize : false, formControlClass), cssModule);\n\n    if (Tag === 'input' || tag && typeof tag === 'function') {\n      attributes.type = type;\n    }\n\n    if (attributes.children && !(plaintext || type === 'select' || typeof Tag !== 'string' || Tag === 'select')) {\n      warnOnce(\"Input with a type of \\\"\" + type + \"\\\" cannot have children. Please use \\\"value\\\"/\\\"defaultValue\\\" instead.\");\n      delete attributes.children;\n    }\n\n    return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n      ref: innerRef,\n      className: classes,\n      \"aria-invalid\": invalid\n    }));\n  };\n\n  return Input;\n}(React.Component);\n\nInput.propTypes = propTypes;\nInput.defaultProps = defaultProps;\nexport default Input;","import React, { useState } from 'react';\n\nimport ReactAutoSugegst from 'containers/forms/ReactAutoSugegst';\n\nimport {\n  Row,\n  Button,\n  UncontrolledDropdown,\n  DropdownMenu,\n  DropdownItem,\n  DropdownToggle,\n  Collapse,\n} from 'reactstrap';\n\nimport { injectIntl } from 'react-intl';\n\nimport { Colxx, Separator } from 'components/common/CustomBootstrap';\nimport IntlMessages from 'helpers/IntlMessages';\n\nimport { ThumbListIcon, ImageListIcon } from 'components/svg';\n// import Breadcrumb from '../navs/Breadcrumb';\n\nconst ListPageHeading = ({\n  intl,\n  displayMode,\n  changeDisplayMode,\n  handleChangeSelectAll,\n  changePageSize,\n  selectedPageSize,\n  totalItemCount,\n  match,\n  startIndex,\n  endIndex,\n  selectedItemsLength,\n  itemsLength,\n  pageSizes,\n  // toggleModal,\n  heading,\n  onIdSearchKey,\n  changeGenderBy,\n  selectedGenderOption,\n  genderOptionsForList,\n  // province\n  selectedProvinceOption,\n  changeProvinceBy,\n  provincesOptionsForList,\n  // Level Of Education\n  selectLevelOfEducationOption,\n  changeLevelOfEducationBy,\n  levelOfEdcationForList,\n  onDistrictSearchKey,\n  onProvinceSearchKey,\n  onResetClick,\n  reset,\n  institutes,\n  onInstituteSelect,\n}) => {\n  const [dropdownSplitOpen, setDropdownSplitOpen] = useState(false);\n  const [displayOptionsIsOpen, setDisplayOptionsIsOpen] = useState(false);\n\n  const [selectedInstitute, setSelectedInstitute] = useState('');\n  onInstituteSelect(selectedInstitute);\n  const { messages } = intl;\n\n  return (\n    <Row>\n      <Colxx xxs=\"12\">\n        <div className=\"mb-2\">\n          <h1>\n            <IntlMessages id={heading} />\n          </h1>\n        </div>\n\n        <div className=\"mb-2\">\n          <Button\n            color=\"empty\"\n            className=\"pt-0 pl-0 d-inline-block d-md-none\"\n            onClick={() => setDisplayOptionsIsOpen(!displayOptionsIsOpen)}\n          >\n            <IntlMessages id=\"pages.display-options\" />{' '}\n            <i className=\"simple-icon-arrow-down align-middle\" />\n          </Button>\n          <Collapse\n            isOpen={displayOptionsIsOpen}\n            className=\"d-md-block\"\n            id=\"displayOptions\"\n          >\n            <span className=\"mr-3 d-inline-block float-md-left\">\n              <a\n                href=\"#/\"\n                className={`mr-2 view-icon ${\n                  displayMode === 'thumblist' ? 'active' : ''\n                }`}\n                onClick={() => changeDisplayMode('thumblist')}\n              >\n                <ThumbListIcon />\n              </a>\n              <a\n                href=\"#/\"\n                className={`mr-2 view-icon ${\n                  displayMode === 'imagelist' ? 'active' : ''\n                }`}\n                onClick={() => changeDisplayMode('imagelist')}\n              >\n                <ImageListIcon />\n              </a>\n            </span>\n            <br />\n            <br />\n            <div className=\"d-block d-md-inline-block pt-1 \">\n              <div className=\"row\">\n                <UncontrolledDropdown className=\"mr-1 float-md-left btn-group mb-1 \">\n                  <DropdownToggle\n                    caret\n                    color=\"outline-dark\"\n                    size=\"xs\"\n                    style={{ fontSize: '18px' }}\n                  >\n                    <IntlMessages id=\"filter\" />\n                    {selectedGenderOption?.label || 'جنسیت'}\n                  </DropdownToggle>\n                  <DropdownMenu>\n                    {genderOptionsForList.map((gender, index) => {\n                      return (\n                        <DropdownItem\n                          key={index}\n                          onClick={() => changeGenderBy(gender.value)}\n                          style={{ fontSize: '17px' }}\n                        >\n                          {gender.label}\n                        </DropdownItem>\n                      );\n                    })}\n                  </DropdownMenu>\n                </UncontrolledDropdown>\n                <UncontrolledDropdown className=\"mr-1 float-md-left btn-group mb-1 \">\n                  <DropdownToggle\n                    caret\n                    color=\"outline-dark\"\n                    size=\"xs\"\n                    style={{ fontSize: '18px' }}\n                  >\n                    <IntlMessages id=\"filter\" />\n                    {selectedProvinceOption?.label || 'ولایت'}\n                  </DropdownToggle>\n                  <DropdownMenu\n                    style={{\n                      height: '200px',\n                      overflowY: 'scroll',\n                      overflowX: 'hidden',\n                    }}\n                  >\n                    {provincesOptionsForList.map((order, index) => {\n                      return (\n                        <DropdownItem\n                          key={index}\n                          onClick={() => changeProvinceBy(order.column)}\n                          style={{ fontSize: '18px' }}\n                        >\n                          {order.label}\n                        </DropdownItem>\n                      );\n                    })}\n                  </DropdownMenu>\n                </UncontrolledDropdown>\n                {/* <div className=\"search-sm d-inline-block float-md-left mr-1 mb-1 align-top\">\n                  <input\n                    type=\"text\"\n                    name=\"district\"\n                    id=\"district\"\n                    style={{ fontSize: '18px' }}\n                    placeholder={messages['search.district']}\n                    onKeyPress={(e) => onDistrictSearchKey(e)}\n                  />\n                </div> */}\n                <div className=\"search-sm d-inline-block float-md-left mr-1 mb-1 align-top\">\n                  <input\n                    type=\"text\"\n                    name=\"keyword\"\n                    id=\"search\"\n                    style={{ fontSize: '18px' }}\n                    placeholder={messages['search.id']}\n                    onKeyPress={(e) => onIdSearchKey(e)}\n                  />\n                </div>\n\n                {/* <UncontrolledDropdown className=\"mr-1 float-md-left btn-group mb-1 \">\n                  <DropdownToggle\n                    caret\n                    color=\"outline-dark\"\n                    size=\"xs\"\n                    style={{ fontSize: '18px' }}\n                  >\n                    <IntlMessages id=\"filter\" />\n                    {selectLevelOfEducationOption.label}\n                  </DropdownToggle>\n                  <DropdownMenu>\n                    {levelOfEdcationForList.map((order, index) => {\n                      return (\n                        <DropdownItem\n                          key={index}\n                          onClick={() => changeLevelOfEducationBy(order.column)}\n                          style={{ fontSize: '18px' }}\n                        >\n                          {order.label}\n                        </DropdownItem>\n                      );\n                    })}\n                  </DropdownMenu>\n                </UncontrolledDropdown> */}\n\n                {/* <div\n                  style={{ fontSize: '18px' }}\n                  className=\" d-inline-block float-md-left mr-1 mb-1 align-top\"\n                >\n                  <ReactAutoSugegst\n                    data={institutes}\n                    select={(opt) => {\n                      setSelectedInstitute(opt);\n                    }}\n                    style={{ fontSize: '18px' }}\n                    placeholder={messages['search.institute.name']}\n                  />\n                </div> */}\n              </div>\n\n              <Button\n                style={{ fontSize: '18px' }}\n                color=\"outline-dark\"\n                size=\"xs\"\n                className=\"float-md-left mb-1\"\n                onClick={() => {\n                  document.getElementById('search').value = '';\n                  changeGenderBy('all');\n                  changeProvinceBy('all');\n                  // document.getElementById('district').value = null;\n\n                  setSelectedInstitute('');\n                  onResetClick(!reset);\n                }}\n              >\n                <IntlMessages id=\"pages.reset\" />\n              </Button>\n            </div>\n          </Collapse>\n        </div>\n        <Separator className=\"mb-5\" />\n      </Colxx>\n    </Row>\n  );\n};\n\nexport default injectIntl(ListPageHeading);\n","import React, { useState } from 'react';\nimport './list.css';\nimport {\n  Card,\n  Badge,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Button,\n} from 'reactstrap';\nimport { NavLink } from 'react-router-dom';\nimport classnames from 'classnames';\nimport IntlMessages from 'helpers/IntlMessages';\nimport { ContextMenuTrigger } from 'react-contextmenu';\nimport { Colxx } from 'components/common/CustomBootstrap';\nimport { BsTrashFill } from 'react-icons/bs';\nimport { BsPencilSquare } from 'react-icons/bs';\nimport callApi from 'helpers/callApi';\n\nconst TeacherListBody = ({ teacher, isSelect, collect, onCheckItem }) => {\n  const [modalBasic, setModalBasic] = useState(false);\n  const [dataDeletion, setDeletion] = useState(false);\n\n  const handleClick = async (event) => {\n    setDeletion(event);\n    console.log('API should be called here', teacher);\n    await callApi(`teachers/${teacher.id}/`, 'DELETE').then((response) => {\n      console.log('RESPONSE on Teacher DELETE: ', response.data);\n      window.location.reload();\n    });\n  };\n  return (\n    <Colxx xxs=\"12\" key={teacher.id} className=\"mt-2\">\n      <ContextMenuTrigger id=\"menu_id\" data={teacher.id} collect={collect}>\n        <Card\n          onClick={(event) => onCheckItem(event, teacher.id)}\n          className={classnames('d-flex flex-row', {\n            active: isSelect,\n          })}\n        >\n          <div\n            className=\"d-flex flex-grow-1 min-width-zero\"\n            style={{ maxHeight: '50px', width: '100%' }}\n          >\n            <div\n              className=\" py-3 card-body align-self-center d-flex flex-column flex-lg-row min-width-zero align-items-lg-center \"\n              style={{\n                width: '100%',\n              }}\n            >\n              <NavLink to={`teacher/${teacher.id}`} style={{ width: '110px' }}>\n                <p\n                  className=\"list-item-heading mb-1 truncate  \"\n                  style={{ fontSize: '20px' }}\n                >\n                  {teacher.id}\n                </p>\n              </NavLink>\n              <NavLink to={`teacher/${teacher.id}`}>\n                <p\n                  className=\"list-item-heading mb-1 truncate  \"\n                  style={{ fontSize: '20px', width: '170px' }}\n                >\n                  {teacher.name}\n                </p>\n              </NavLink>\n              <p\n                className=\"mb-1 text-small \"\n                style={{ width: '170px', textAlign: 'right', fontSize: '20px' }}\n              >\n                {teacher.father_name}\n              </p>\n              <p\n                className=\"mb-1 text-small responsiveness1 \"\n                style={{ fontSize: '20px', width: '110px' }}\n              >\n                {teacher.current_province}\n              </p>\n              <p\n                className=\"mb-1 text-small responsiveness2 \"\n                style={{ fontSize: '20px', width: '110px' }}\n              >\n                {teacher.phone_number}\n              </p>\n              <p\n                className=\"mb-1 text-small responsiveness3 \"\n                style={{ fontSize: '20px', width: '170px' }}\n              >\n                {teacher.major}\n              </p>\n              <p\n                className=\"mb-1 text-small responsiveness4 \"\n                style={{ fontSize: '20px', width: '170px' }}\n              >\n                {teacher.grade}\n              </p>\n              {/* {teacher.status_type === '2' && ( */}\n              <div className=\"mb-1 text-small \" style={{ width: '100px' }}>\n                <Badge color=\"danger\" pill style={{ fontSize: '12px' }}>\n                  منفک\n                </Badge>\n              </div>\n              {/* )} */}\n            </div>\n\n            {/* Delete and update Icons */}\n            <>\n              <div\n                style={{ display: 'flex', flexDirection: 'row' }}\n                className=\"align-self-center pr-4\"\n              >\n                <NavLink to={`/app/teachers/register/${teacher.id}`}>\n                  <div>\n                    <BsPencilSquare\n                      outline\n                      style={{ fontSize: '20px' }}\n                      id=\"updateIcon\"\n                    />\n                  </div>\n                </NavLink>\n                <div className=\"ml-2\">\n                  {/* <BsTrashFill\n                    id=\"deleteIcon\"\n                    outline\n                    onClick={() => setModalBasic(true)}\n                    style={{ fontSize: '20px' }}\n                  /> */}\n                </div>\n              </div>\n              <Modal\n                isOpen={modalBasic}\n                toggle={() => setModalBasic(!modalBasic)}\n                style={{ marginTop: '10%' }}\n              >\n                <ModalHeader>\n                  <IntlMessages id=\"modal.deletion-message-title\" />\n                </ModalHeader>\n                <ModalBody className=\"text-center\">\n                  <IntlMessages id=\"modal.deletion-message-details\" />\n                </ModalBody>\n                <ModalFooter>\n                  <Button\n                    onClick={() => setModalBasic(false)}\n                    style={{ marginLeft: '55%' }}\n                  >\n                    نه/ نخیر\n                  </Button>\n                  <Button\n                    color=\"danger\"\n                    onClick={() => {\n                      setModalBasic(false);\n                      handleClick(true);\n                    }}\n                    style={{ marginLeft: '5%' }}\n                  >\n                    هو / بلی\n                  </Button>{' '}\n                </ModalFooter>\n              </Modal>\n            </>\n            {/* <div className=\"custom-control custom-checkbox pl-1 align-self-center pr-4\">\n              <CustomInput\n                className=\"item-check mb-0\"\n                type=\"checkbox\"\n                id={`check_${teacher.id}`}\n                checked={isSelect}\n                onChange={() => {}}\n                label=\"\"\n              />\n            </div> */}\n          </div>\n        </Card>\n      </ContextMenuTrigger>\n    </Colxx>\n  );\n};\n\n/* React.memo detail : https://reactjs.org/docs/react-api.html#reactpurecomponent  */\nexport default React.memo(TeacherListBody);\n\nconst style1 = {\n  maxWidth: '700px',\n};\n","import React, { useState } from 'react';\nimport {\n  Row,\n  Modal,\n  Button,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n} from 'reactstrap';\n\nimport Pagination from '../../../../../containers/pages/Pagination';\nimport ContextMenuContainer from '../../../../../containers/pages/ContextMenuContainer';\nimport DataListView from '../../../../../containers/pages/DataListView';\nimport ImageListView from '../../../../../containers/pages/ImageListView';\nimport TeacherListBody from './TeacherListBody';\n\nfunction collect(props) {\n  return { data: props.data };\n}\n\nconst ListPageListing = ({\n  items,\n  displayMode,\n  selectedItems,\n  onCheckItem,\n  currentPage,\n  totalPage,\n  onContextMenuClick,\n  onContextMenu,\n  onChangePage,\n}) => {\n  const [modalBasic, setModalBasic] = useState(true);\n\n  return (\n    <>\n      <Row>\n        {items.length === 0 ? (\n          <div className=\"no-result\">\n            <h5>هیچ داده ای برای نمایش وجود ندارد</h5>\n          </div>\n        ) : null}\n        {items.map((teacher) => {\n          console.log(teacher, 'showing items here')\n          if (displayMode === 'imagelist') {\n            return (\n              <ImageListView\n                key={teacher.id}\n                teacher={teacher}\n                isSelect={selectedItems.includes(teacher.id)}\n                collect={collect}\n                onCheckItem={onCheckItem}\n              />\n            );\n          }\n          if (displayMode === 'thumblist') {\n            return (\n              <TeacherListBody\n                key={teacher.id}\n                teacher={teacher}\n                isSelect={selectedItems.includes(teacher.id)}\n                collect={collect}\n                onCheckItem={onCheckItem}\n              />\n            );\n          }\n          return (\n            <DataListView\n              key={teacher.id}\n              teacher={teacher}\n              isSelect={selectedItems.includes(teacher.id)}\n              onCheckItem={onCheckItem}\n              collect={collect}\n            />\n          );\n        })}\n        <Pagination\n          currentPage={currentPage}\n          totalPage={totalPage}\n          onChangePage={(i) => onChangePage(i)}\n        />\n        <ContextMenuContainer\n          onContextMenuClick={onContextMenuClick}\n          onContextMenu={onContextMenu}\n        />\n      </Row>\n    </>\n  );\n};\n\nexport default React.memo(ListPageListing);\n","import React from 'react';\nimport {\n  CustomInput,\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Input,\n  Label,\n} from 'reactstrap';\nimport Select from 'react-select';\nimport CustomSelectInput from 'components/common/CustomSelectInput';\nimport IntlMessages from 'helpers/IntlMessages';\n\nconst AddNewModal = ({ modalOpen, toggleModal, categories }) => {\n  return (\n    <Modal\n      isOpen={modalOpen}\n      toggle={toggleModal}\n      wrapClassName=\"modal-right\"\n      backdrop=\"static\"\n    >\n      <ModalHeader toggle={toggleModal}>\n        <IntlMessages id=\"pages.add-new-modal-title\" />\n      </ModalHeader>\n      <ModalBody>\n        <Label>\n          <IntlMessages id=\"pages.product-name\" />\n        </Label>\n        <Input />\n        <Label className=\"mt-4\">\n          <IntlMessages id=\"pages.category\" />\n        </Label>\n        <Select\n          components={{ Input: CustomSelectInput }}\n          className=\"react-select\"\n          classNamePrefix=\"react-select\"\n          name=\"form-field-name\"\n          options={categories}\n        />\n        <Label className=\"mt-4\">\n          <IntlMessages id=\"pages.description\" />\n        </Label>\n        <Input type=\"textarea\" name=\"text\" id=\"exampleText\" />\n        <Label className=\"mt-4\">\n          <IntlMessages id=\"pages.status\" />\n        </Label>\n        <CustomInput\n          type=\"radio\"\n          id=\"exCustomRadio\"\n          name=\"customRadio\"\n          label=\"درصف\"\n        />\n        <CustomInput\n          type=\"radio\"\n          id=\"exCustomRadio2\"\n          name=\"customRadio\"\n          label=\"درحال پخت\"\n        />\n      </ModalBody>\n      <ModalFooter>\n        <Button color=\"secondary\" outline onClick={toggleModal}>\n          <IntlMessages id=\"pages.cancel\" />\n        </Button>\n        <Button color=\"primary\" onClick={toggleModal}>\n          <IntlMessages id=\"pages.submit\" />\n        </Button>\n      </ModalFooter>\n    </Modal>\n  );\n};\n\nexport default AddNewModal;\n"],"sourceRoot":""}