{"version":3,"file":"static/js/profile.958bb051.chunk.js","mappings":"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","sources":["config/index.js","config/production.js","config/styling.js","containers/form-validations/FormikFields.js","views/app/teachers/bio/teacher-profile.js","views/app/workers/worker-list/worker-profile.js"],"sourcesContent":["let config;\n\nif (process.env.NODE_ENV) {\n  if (process.env.NODE_ENV === 'production') {\n    config = require('./production');\n  } else {\n    config = require('./development');\n  }\n} else {\n  config = require('./development');\n}\n\nexport default config;\n","const API_URL = 'http://103.132.98.58:8000';\n\nexport { API_URL };\n","export const inputLabel = { fontSize: 16, fontWeight: 'bold' };\nexport const buttonStyle = { fontSize: 16 };\n","import React from 'react';\nimport Select from 'react-select';\nimport { CustomInput } from 'reactstrap';\nimport IntlMessages from 'helpers/IntlMessages';\n\nimport TagsInput from 'react-tagsinput';\nimport 'react-tagsinput/react-tagsinput.css';\nimport Switch from 'rc-switch';\nimport 'rc-switch/assets/index.css';\n\nimport DatePicker from 'react-multi-date-picker';\n\nimport 'react-datepicker/dist/react-datepicker.css';\nimport { Input } from 'antd';\n\nconst FormikReactSelect = ({\n  name,\n  value,\n  options,\n  isMulti,\n  className,\n  onChange,\n  onBlur,\n  onClick,\n  defaultValue,\n  isDisabled,\n  isLoading,\n  isClearable,\n  isRtl,\n  isSearchable,\n  placeholder,\n}) => {\n  const handleChange = (val) => {\n    onChange(name, val);\n  };\n\n  const handleBlur = () => {\n    onBlur(name, true);\n  };\n\n  return (\n    <Select\n      className={`react-select ${className}`}\n      classNamePrefix=\"react-select\"\n      placeholder={\n        placeholder || <IntlMessages id=\"forms.EducationLevelDefaultValue\" />\n      }\n      options={options}\n      isMulti={isMulti}\n      initial\n      onChange={handleChange}\n      onBlur={handleBlur}\n      value={value}\n      defaultValue={defaultValue}\n      isDisabled={isDisabled}\n      isLoading={isLoading}\n      isClearable={isClearable}\n      isRtl={isRtl}\n      isSearchable={isSearchable}\n    />\n  );\n};\n\nconst FormikCheckboxGroup = ({\n  name,\n  value,\n  options,\n  inline = false,\n  onChange,\n  onBlur,\n}) => {\n  const handleChange = (val) => {\n    const valueArray = [...value] || [];\n    if (!valueArray.includes(val)) {\n      valueArray.push(val);\n    } else {\n      valueArray.splice(valueArray.indexOf(val), 1);\n    }\n    onChange(name, valueArray);\n  };\n\n  const handleBlur = () => {\n    onBlur(name, true);\n  };\n\n  return (\n    <>\n      {options.map((child, index) => {\n        return (\n          <div\n            key={`${name}_${child.value}_${index}`}\n            className={`position-relative form-check ${\n              inline ? 'form-check-inline' : ''\n            }`}\n          >\n            <input\n              name={name}\n              type=\"checkbox\"\n              className=\"form-check-input\"\n              onChange={() => handleChange(child.value)}\n              onBlur={handleBlur}\n              defaultChecked={value.includes(child.value)}\n              disabled={child.disabled}\n            />\n            <label className=\"form-check-label\">{child.label}</label>\n          </div>\n        );\n      })}\n    </>\n  );\n};\n\nconst FormikCustomCheckboxGroup = ({\n  name,\n  value,\n  options,\n  inline = false,\n  onChange,\n  onBlur,\n}) => {\n  const handleChange = (val) => {\n    const valueArray = [...value] || [];\n    if (!valueArray.includes(val)) {\n      valueArray.push(val);\n    } else {\n      valueArray.splice(valueArray.indexOf(val), 1);\n    }\n    onChange(name, valueArray);\n  };\n\n  const handleBlur = () => {\n    onBlur(name, true);\n  };\n\n  return (\n    <>\n      {options.map((child, index) => {\n        return (\n          <CustomInput\n            key={`${name}_${child.value}_${index}`}\n            id={`${name}_${child.value}_${index}`}\n            type=\"checkbox\"\n            name={child.name}\n            label={child.label}\n            onChange={() => handleChange(child.value)}\n            onBlur={handleBlur}\n            checked={value.includes(child.value)}\n            disabled={child.disabled}\n            inline={inline}\n          />\n        );\n      })}\n    </>\n  );\n};\n\nconst FormikCheckbox = ({ name, value, disabled, label, onChange, onBlur }) => {\n  const handleChange = (_event) => {\n    onChange(name, !value);\n  };\n  const handleBlur = () => {\n    onBlur(name, true);\n  };\n  return (\n    <div className=\"position-relative form-check form-check-inline\">\n      <input\n        name={name}\n        type=\"checkbox\"\n        className=\"form-check-input\"\n        onChange={handleChange}\n        onBlur={handleBlur}\n        checked={value}\n        disabled={disabled}\n      />\n      <label className=\"form-check-label\">{label}</label>\n    </div>\n  );\n};\n\nconst FormikCustomCheckbox = ({\n  name,\n  value,\n  disabled,\n  label,\n  onChange,\n  onBlur,\n}) => {\n  const handleChange = (_event) => {\n    onChange(name, !value);\n  };\n  const handleBlur = () => {\n    onBlur(name, true);\n  };\n  return (\n    <CustomInput\n      type=\"checkbox\"\n      id={name}\n      name={name}\n      label={label}\n      onChange={handleChange}\n      onBlur={handleBlur}\n      checked={value}\n      disabled={disabled}\n      inline\n    />\n  );\n};\n\nconst FormikRadioButtonGroup = ({\n  name,\n  value,\n  options,\n  inline = false,\n  onChange,\n  onBlur,\n}) => {\n  const handleChange = (val) => {\n    onChange(name, val);\n  };\n\n  const handleBlur = () => {\n    onBlur(name, true);\n  };\n\n  return (\n    <>\n      {options.map((child, index) => {\n        return (\n          <div\n            key={`${name}_${child.value}_${index}`}\n            className={`position-relative form-check ${\n              inline ? 'form-check-inline' : ''\n            }`}\n          >\n            <input\n              id={child.value}\n              name={name}\n              type=\"radio\"\n              className=\"form-check-input\"\n              onChange={() => handleChange(child.value)}\n              onBlur={handleBlur}\n              defaultChecked={value === child.value}\n              disabled={child.disabled}\n            />\n            <label className=\"form-check-label\">{child.label}</label>\n          </div>\n        );\n      })}\n    </>\n  );\n};\n\nconst FormikCustomRadioGroup = ({\n  name,\n  value,\n  options,\n  inline = false,\n  onChange,\n  onBlur,\n}) => {\n  const handleChange = (val) => {\n    onChange(name, val);\n  };\n\n  const handleBlur = () => {\n    onBlur(name, true);\n  };\n\n  return (\n    <>\n      {options.map((child, index) => {\n        return (\n          <CustomInput\n            key={`${name}_${child.value}_${index}`}\n            type=\"radio\"\n            id={`${name}_${child.value}_${index}`}\n            name={child.name}\n            label={child.label}\n            onChange={() => handleChange(child.value)}\n            onBlur={handleBlur}\n            checked={value === child.value}\n            disabled={child.disabled}\n            inline={inline}\n          />\n        );\n      })}\n    </>\n  );\n};\n\nconst FormikTagsInput = ({ name, value, onChange, onBlur }) => {\n  const handleChange = (val) => {\n    onBlur(name, true);\n    onChange(name, val);\n  };\n\n  return <TagsInput name={name} value={value} onChange={handleChange} />;\n};\n\nconst FormikInputText = ({ name, value, onChange, onBlur, ...otherProps }) => {\n  // const handleChange = (val) => {\n  //   onBlur(name, true);\n  //   onChange(name, val);\n  // };\n  return (\n    <Input\n      name={name}\n      value={value}\n      onChange={onChange}\n      style={{ height: 48, borderRadius: 0 }}\n      {...otherProps}\n    />\n  );\n};\n\nconst FormikSwitch = ({ name, value, className, onChange, onBlur }) => {\n  const handleChange = (val) => {\n    onBlur(name, true);\n    onChange(name, val);\n  };\n\n  return (\n    <Switch\n      name={name}\n      className={className}\n      checked={value}\n      onChange={handleChange}\n    />\n  );\n};\n\nconst FormikDatePicker = ({ name, value, className, onChange, onBlur }) => {\n  const handleChange = (val) => {\n    onChange(name, val);\n  };\n\n  const handleBlur = (_val) => {\n    onBlur(name, true);\n  };\n\n  return (\n    <DatePicker\n      name={name}\n      className={className}\n      selected={value}\n      onChange={handleChange}\n      onBlur={handleBlur}\n    />\n  );\n};\n\nexport {\n  FormikReactSelect,\n  FormikCheckboxGroup,\n  FormikCustomCheckboxGroup,\n  FormikCheckbox,\n  FormikCustomCheckbox,\n  FormikRadioButtonGroup,\n  FormikCustomRadioGroup,\n  FormikTagsInput,\n  FormikInputText,\n  FormikSwitch,\n  FormikDatePicker,\n};\n","import React, { useState, useEffect, useContext } from 'react';\nimport { Formik, Field } from 'formik';\nimport { useParams } from 'react-router-dom';\n\nimport callApi from 'helpers/callApi';\nimport { AuthContext } from 'context/AuthContext';\nimport {\n  Row,\n  Card,\n  CardBody,\n  Label,\n  Button,\n  CardTitle,\n  Table,\n  // Modal,\n  // ModalHeader,\n  // ModalBody,\n  // ModalFooter,\n} from 'reactstrap';\n\nimport DatePicker from 'react-multi-date-picker';\nimport persian from 'react-date-object/calendars/persian';\nimport persian_fa from 'react-date-object/locales/persian_fa';\n\nimport {\n  contractTypeOptions,\n  dateOfBirthOptoions,\n  degreeTypeOptions,\n  // evaluationTypeOptions,\n  genderOptions,\n  gradeOptions,\n  hireTypeOptions,\n  jobTypeOptions,\n  langOptions,\n  outcomeOptions,\n  persianMonthOptions,\n  stepOptions,\n  teacherContractStatusOptions,\n  teacherFeedbackOptions,\n} from '../../global-data/options';\nimport logo from './../../../../assets/logos/AdminLogo.png';\nimport profilePhoto from './../../../../assets/img/profiles/user.png';\n\nimport IntlMessages from 'helpers/IntlMessages';\nimport { Colxx, Separator } from 'components/common/CustomBootstrap';\n\nimport { FormikReactSelect } from 'containers/form-validations/FormikFields';\nimport config from '../../../../config';\nimport {\n  teacherContractValidationSchema,\n  teacherEducationValidationSchema,\n  // teacherHREvaluationValidationSchema,\n} from 'views/app/global-data/forms-validation';\nimport { message, Spin, Popconfirm } from 'antd';\nimport { BsPencilSquare, BsTrashFill } from 'react-icons/bs';\nimport { Spinner } from 'react-bootstrap';\nimport {\n  // teacherEvaluationValidationSchema,\n  teacherIncentivesValidationSchema,\n} from './../../global-data/forms-validation';\nimport { buttonStyle, inputLabel } from 'config/styling';\nimport { NavLink } from 'react-router-dom/cjs/react-router-dom';\nconst servicePath = config.API_URL;\n// const teacherApiUrl = `${servicePath}/teachers/`;\n// const teacherHREvaluationApiUrl = `${servicePath}/teachers/hr-evaluation`;\nconst teacherTransferApiUrl = `${servicePath}/teachers/institute`;\n// const { RangePicker } = DatePicker;\n\nconst TeacherProfile = () => {\n  const { institutes, contextFields, provinces, districts } =\n    useContext(AuthContext);\n  console.log('INSTITUTES: ', institutes);\n  const [isNext, setIsNext] = useState(true);\n  const { teacherId } = useParams();\n  const [teacher, setTeacher] = useState([]);\n  const [teacherEvaluation, setTeacherEvaluation] = useState([]);\n  const [teacherHREvaluation, setTeacherHREvaluation] = useState([]);\n  const [teacherTransfer, setTeacherTransfer] = useState([]);\n  const [teacherEducation, setTeacherEducation] = useState([]);\n  const [teacherContracts, setTeacherContracts] = useState([]);\n  const [teacherIncentives, setTeacherIncentives] = useState([]);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [cvFile, setCVFile] = useState();\n  const [startDate, setStartDate] = useState();\n  const [endDate, setEndDate] = useState();\n  const [score, setScore] = useState(1);\n  const [evaluationDate, setEvaluationDate] = useState();\n\n  const [updatingRecord, setUpdatingRecord] = useState({});\n  const [loading, setLoading] = useState(false);\n\n  async function fetchTeacherEvaluation() {\n    setLoading(true);\n    const response = await callApi(\n      `evaluations/teaching-process/?teacher=${teacherId}`,\n    );\n    setLoading(false);\n    if (response.data && response.status === 200) {\n      setTeacherEvaluation(response?.data.results);\n      console.log('EVVVVVVVVVVVVVVVVVVVVVVVV', response.data.results);\n      setIsLoaded(true);\n    } else {\n      console.log('students error');\n    }\n  }\n  const resetUpdate = () => {\n    setUpdatingRecord(null);\n    recId = null;\n    setStartDate(null);\n    setEndDate(null);\n    setScore(null);\n    setEvaluationDate(null);\n  };\n\n  async function fetchTeacher() {\n    const response = await callApi(`teachers/${teacherId}`, '', null);\n    const data = response.data;\n    setTeacher(data);\n    setIsLoaded(true);\n  }\n  // async function fetchTeacherEvaluation() {\n  //   const response = await callApi(\n  //     `teachers/${teacherId}/evaluations/`,\n  //     '',\n  //     null,\n  //   );\n\n  //   console.log(`${teacherEvaluationApiUrl}/?teacher_id=${teacherId}`);\n  //   const data = response.data;\n  //   console.log('TEACHER EVALUATIONS: ', data);\n\n  //   setTeacherEvaluation(data);\n  // }\n  async function fetchTeacherHREvaluation() {\n    await callApi(`evaluations/public-service/?employee=${teacherId}`).then(\n      (response) => {\n        setTeacherHREvaluation(response?.data.results);\n        console.log('HR Evaluations: ', response?.data.results);\n      },\n    );\n  }\n  async function fetchTeacherTransfer() {\n    try {\n      const response = await callApi(\n        `teachers/institute/?teacher_id=${teacherId}`,\n        '',\n        null,\n      );\n      const data = response.data;\n      console.log(`${teacherTransferApiUrl}/?teacher_id=${teacherId}`);\n      setTeacherTransfer(data);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  async function fetchTeacherEducation() {\n    const response = await callApi(\n      `teachers/${teacherId}/educations`,\n      '',\n      null,\n    );\n\n    const data = response.data;\n    console.log('Teacher Educations: ', data);\n    setTeacherEducation(data);\n  }\n  async function fetchTeacherContracts() {\n    const response = await callApi(\n      `teachers/${teacherId}/contracts/`,\n      '',\n      null,\n    );\n\n    const data = response.data;\n    console.log('Teacher Contracts: ', data);\n    setTeacherContracts(data);\n  }\n  async function fetchTeacherIncentives() {\n    const response = await callApi(\n      `teachers/${teacherId}/feedbacks/`,\n      '',\n      null,\n    );\n\n    const data = response.data;\n    console.log('Teacher Contracts: ', data);\n    setTeacherIncentives(data);\n  }\n  let recId;\n  const handleRecord = (item) => {\n    recId = item.id;\n    setUpdatingRecord(item);\n    setStartDate(item.startDate);\n    setEndDate(item.endDate);\n    setScore(item.score);\n    setEvaluationDate(item.evaluationDate);\n  };\n  useEffect(() => {\n    fetchTeacher();\n    fetchTeacherEvaluation();\n    fetchTeacherHREvaluation();\n    fetchTeacherTransfer();\n    fetchTeacherEducation();\n    fetchTeacherContracts();\n    // fetchInstitutes();\n    fetchTeacherIncentives();\n    // fetchFields();\n  }, []);\n\n  const deleteContract = async (item) => {\n    await callApi(`teachers/${teacherId}/contracts/${item}/`, 'DELETE').then(\n      (response) => {\n        console.log('Response in Contract Delete: ', response.data);\n        fetchTeacherContracts();\n      },\n    );\n  };\n  const deleteEducation = async (item) => {\n    await callApi(`teachers/${teacherId}/educations/${item}/`, 'DELETE').then(\n      (response) => {\n        console.log('Response in Education Delete: ', response.data);\n        fetchTeacherEducation();\n      },\n    );\n  };\n  const deleteEvaluation = async (item) => {\n    await callApi(`evaluations/teaching-process/${item}/`, 'DELETE').then(\n      (response) => {\n        fetchTeacherEvaluation();\n      },\n    );\n  };\n  const deleteHREvaluation = async (item) => {\n    await callApi(`evaluations/public-service/${item}/`, 'DELETE').then(\n      (response) => {\n        fetchTeacherHREvaluation();\n      },\n    );\n  };\n  const deleteInsentive = async (item) => {\n    await callApi(`teachers/${teacherId}/feedbacks/${item}/`, 'DELETE').then(\n      (response) => {\n        console.log('Response in Incentive Delete: ', response.data);\n        fetchTeacherIncentives();\n      },\n    );\n  };\n  const addEducation = async (inputData) => {\n    setLoading(true);\n    let apiParams = {\n      endPoint: `teachers/${teacherId}/educations/`,\n      method: 'POST',\n    };\n    if (recId || updatingRecord.id) {\n      apiParams.endPoint = `teachers/${teacherId}/educations/${updatingRecord.id}/`;\n      apiParams.method = 'PATCH';\n    }\n    console.log('File: ', cvFile);\n    console.log('Form Data in Teacher Education: ', inputData);\n    const formData = new FormData();\n    cvFile && formData.append('document', cvFile);\n    formData.append('degree', inputData.degree?.value);\n    formData.append('institution', inputData.institute);\n    formData.append('field_of_study', inputData.field_of_study);\n    formData.append('year_completed', inputData.year_of_completion?.value);\n    formData.append('description', inputData.description);\n    formData.append('teacher', teacherId);\n    console.log('API PARAMS: ', apiParams);\n    await callApi(apiParams.endPoint, apiParams.method, formData).then(\n      (response) => {\n        console.log('RESPONSE in teacher Education: ', response.data);\n        if (response.status >= 200 && response.status <= 299) {\n          setLoading(false);\n          message.success('Education Added');\n          fetchTeacherEducation();\n          // window.location.reload();\n          resetUpdate();\n        } else {\n          message.error('Data Not Saved Check your Payload');\n        }\n      },\n    );\n  };\n\n  const addContract = async (inputData) => {\n    setLoading(true);\n    let apiParams = {\n      endPoint: `teachers/${teacherId}/contracts/`,\n      method: 'POST',\n    };\n    if (recId || updatingRecord.id) {\n      apiParams.endPoint = `teachers/${teacherId}/contracts/${updatingRecord.id}/`;\n      apiParams.method = 'PATCH';\n    }\n    console.log('File: ', cvFile);\n    console.log('Form Data in Teacher Contract: ', inputData);\n    const formData = new FormData();\n    formData.append('document', cvFile);\n    formData.append('job_type', inputData.jobType?.value);\n    formData.append('grade', inputData.grade?.value);\n    formData.append('step', inputData.step?.value);\n    formData.append('teaching_language', inputData.teaching_language?.value);\n    formData.append('contract_type', inputData.contract_type?.value);\n    formData.append('hire_type', inputData.hireType?.value);\n    formData.append('start_date', startDate);\n    endDate && formData.append('end_date', endDate);\n    formData.append('teacher', teacherId);\n    formData.append('institute', inputData.institute?.value);\n    formData.append('teaching_field', inputData.field?.value);\n    formData.append('status', inputData.status?.value);\n\n    for (const entry of formData.entries()) {\n      console.log(entry);\n      if (entry[1] === 'undefined') {\n        formData.delete(entry[0]);\n      }\n    }\n    await callApi(apiParams.endPoint, apiParams.method, formData).then(\n      (response) => {\n        console.log('RESPONSE in teacher Evaluation;: ', response.data);\n\n        if (response.status >= 200 && response.status < 300) {\n          setLoading(false);\n          message.success('Data Saved Successfully');\n          fetchTeacherContracts();\n          // window.location.reload();\n          resetUpdate();\n        } else {\n          message.error('Data Not Saved Check your Payload');\n        }\n      },\n    );\n  };\n\n  const addEvaluation = async (inputData) => {\n    setLoading(true);\n    console.log('Form Data in Teacher HR Evaluation: ', inputData);\n    let apiParams = {\n      endPoint: `teachers/evaluation-create/`,\n      method: 'POST',\n    };\n    if (recId || updatingRecord.id) {\n      apiParams.endPoint = `teachers/${teacherId}/evaluations/${updatingRecord.id}/`;\n      apiParams.method = 'PATCH';\n    }\n    const data = {\n      topic: inputData.topic,\n      evaluator_name: inputData.evaluator_name,\n      evaluation_type: inputData.evaluation_type?.value,\n      strong_points: inputData.strong_points,\n      weak_points: inputData.weak_points,\n      suggestions: inputData.suggestions,\n      score,\n      evaluation_date: evaluationDate,\n      teacher: teacher.id,\n      institute: inputData.institute?.value,\n      department: inputData.department?.value,\n      classs: inputData.classs?.value,\n      subject: inputData.subject?.value,\n    };\n    console.log('Evaluation Date: ', data);\n    await callApi(apiParams.endPoint, apiParams.method, data).then(\n      (response) => {\n        console.log('RESPONSE in teacher Contract;: ', response.data);\n\n        if (response.status >= 200 && response.status < 300) {\n          setLoading(false);\n          message.success('Data Saved Successfully');\n          fetchTeacherEvaluation();\n          // window.location.reload();\n          resetUpdate();\n        } else {\n          message.error('Data Not Saved Check your Payload');\n        }\n      },\n    );\n  };\n\n  const addHREvaluation = async (inputData) => {\n    setLoading(true);\n    let apiParams = {\n      endPoint: `teachers/${teacherId}/hr-evaluations/`,\n      method: 'POST',\n    };\n    if (recId || updatingRecord.id) {\n      apiParams.endPoint = `teachers/${teacherId}/hr-evaluations/${updatingRecord.id}/`;\n      apiParams.method = 'PATCH';\n    }\n    const data = {\n      evaluator_name: inputData.evaluator_name,\n      score,\n      educational_year: '1402',\n      evaluation_date: evaluationDate,\n      teacher: teacher.id,\n      institute: inputData.institute?.value,\n      new_grade: inputData.grade?.value,\n      new_step: inputData.step?.value,\n    };\n    console.log('HR Evaluation Data: ', data);\n    await callApi(apiParams.endPoint, apiParams.method, data).then(\n      (response) => {\n        console.log('RESPONSE in teacher HR Evaluation;: ', response.data);\n\n        if (response.status >= 200 && response.status < 300) {\n          setLoading(false);\n          message.success('Data Saved Successfully');\n          fetchTeacherHREvaluation();\n          // window.location.reload();\n          resetUpdate();\n        } else {\n          message.error('Data Not Saved Check your Payload');\n        }\n      },\n    );\n  };\n  const addIncentive = async (inputData, { resetForm }) => {\n    setLoading(true);\n    let apiParams = {\n      endPoint: `teachers/${teacherId}/feedbacks/`,\n      method: 'POST',\n    };\n    if (recId || updatingRecord.id) {\n      apiParams.endPoint = `teachers/${teacherId}/feedbacks/${updatingRecord.id}/`;\n      apiParams.method = 'PATCH';\n    }\n    const data = {\n      type: inputData.type?.value,\n      teacher: teacher.id,\n      institute: inputData.institute?.value,\n      details: inputData.details,\n    };\n    console.log('Incentive Data Data: ', data);\n    await callApi(apiParams.endPoint, apiParams.method, data).then(\n      (response) => {\n        console.log('RESPONSE in teacher Incentive Data: ', response.data);\n        resetUpdate();\n        if (response.status >= 200 && response.status < 300) {\n          setLoading(false);\n          message.success('Data Saved Successfully');\n          fetchTeacherIncentives();\n          resetForm();\n          resetUpdate();\n        } else {\n          message.error('Data Not Saved Check your Payload');\n        }\n      },\n    );\n    setLoading(false);\n  };\n\n  return (\n    <>\n      <Row>\n        <Colxx className=\"mt-5 m-5\" xxs=\"8\">\n          <h2>{<IntlMessages id=\"teacher.Profile\" />}</h2>\n        </Colxx>\n        <Colxx className=\"mt-4 max\">\n          <div className=\"d-flex align-items-center flex-column\">\n            <img src={logo} alt=\"Logo\" width={'30%'} />\n            <p>\n              د تخنیکی او مسلکی زده کړو اداره\n              <br />\n              اداره تعلیمات تخنیکی و مسلکی\n            </p>\n          </div>\n        </Colxx>\n      </Row>\n      {loading && <Spinner />}\n      <Row>\n        <Colxx xxs=\"1\"></Colxx>\n        <Colxx>\n          <img src={teacher?.photo || profilePhoto} alt=\"Photo\" width={'10%'} />\n        </Colxx>\n      </Row>\n      <Row>\n        <Colxx\n          className=\" d-flex justify-content-center\"\n          style={{ marginRight: '2%' }}\n        >\n          <div className=\"d-inline-block\">\n            <Row>\n              <Colxx\n                className=\" d-flex justify-content-center \"\n                style={{ marginBottom: '2%' }}\n              >\n                <div className=\"d-inline-block\">\n                  <Button\n                    style={{\n                      backgroundColor: 'blue',\n                      fontWeight: 'bold',\n                      fontSize: '18px',\n                    }}\n                  >\n                    <a\n                      href={`/app/teachers/print/${teacherId}`}\n                      target=\"_blank\"\n                    >\n                      <span className=\"label\" style={{ color: '#fff' }}>\n                        پرنت\n                      </span>\n                    </a>\n                  </Button>\n                </div>\n              </Colxx>\n            </Row>\n          </div>\n        </Colxx>\n      </Row>\n      {teacher && (\n        <>\n          {isNext ? (\n            <>\n              <Card className=\"rounded m-4\">\n                <CardBody>\n                  <div>\n                    <Row>\n                      <Colxx className=\" pt-5\" style={{ paddingInline: '3%' }}>\n                        <h2\n                          className=\"bg-primary \"\n                          style={{\n                            padding: '8px',\n                            paddingInline: '30px',\n                            borderRadius: '10px',\n                          }}\n                        >\n                          <IntlMessages id=\"forms.personalInfo\" />\n                        </h2>\n                      </Colxx>\n                    </Row>\n                    <Row className=\"justify-content-center   rounded \">\n                      <Colxx style={{ paddingInline: '4%' }} xxs=\"\">\n                        <Label style={inputLabel}>\n                          <IntlMessages id=\"teacher.NameLabel\" />\n                        </Label>\n                        <h2>{teacher.name}</h2>\n\n                        <Label style={inputLabel}>\n                          <IntlMessages id=\"teacher.FatherNameLabel\" />\n                        </Label>\n                        <h2>{teacher.father_name}</h2>\n                        <Label style={inputLabel}>\n                          <IntlMessages id=\"teacher.GrandFatherNameLabel\" />\n                        </Label>\n                        <h2>{teacher.father_name}</h2>\n\n                        <Label style={inputLabel}>\n                          <IntlMessages id=\"gender.gender\" />\n                        </Label>\n                        <h2>\n                          {\n                            genderOptions.find(\n                              (op) => op.value === teacher.gender,\n                            )?.label\n                          }\n                        </h2>\n\n                        <Label style={inputLabel}>\n                          <IntlMessages id=\"teacher.PhoneNoLabel\" />\n                        </Label>\n                        <h2>{teacher.phone_number}</h2>\n                        <Label style={inputLabel}>\n                          <IntlMessages id=\"teacher.EmailLabel\" />\n                        </Label>\n                        <h2>{teacher.email}</h2>\n                        <br />\n                        <br />\n                      </Colxx>\n                      <Colxx style={{ paddingInline: '4%' }}>\n                        <Label style={inputLabel}>\n                          <IntlMessages id=\"forms.StdTazkiraNoLabel\" />\n                        </Label>\n                        <h2>{teacher.registration_number}</h2>\n                        <Label style={inputLabel}>\n                          <IntlMessages id=\"forms.StdIdCardCoverLabel\" />\n                        </Label>\n                        <h2>{teacher.cover_number}</h2>\n                        <Label style={inputLabel}>\n                          <IntlMessages id=\"forms.StdIdCardPageNoLabel\" />\n                        </Label>\n                        <h2>{teacher.page_number}</h2>\n                        <Label style={inputLabel}>\n                          <IntlMessages id=\"forms.StdDoBLabel\" />\n                        </Label>\n                        <h2>\n                          {teacher.year_of_birth}-\n                          {teacher.month_of_birth || 'میاشت'}-\n                          {teacher.day_of_birth || 'ورځ'}\n                        </h2>\n                        <Label style={inputLabel}>\n                          <IntlMessages id=\"forms.EducationLevelLabel\" />\n                        </Label>\n                        <h2>ماستر</h2>\n                        <Label style={inputLabel}>\n                          <IntlMessages id=\"teacher.MajorLabel\" />\n                        </Label>\n                        <h2>Mechannical Engineering</h2>\n                        <br />\n                        <br />\n                      </Colxx>\n                    </Row>\n                    <Row>\n                      <Colxx style={{ paddingInline: '4%' }}>\n                        <h2\n                          className=\"bg-primary rounded \"\n                          style={{ padding: '1%', paddingInline: '3%' }}\n                        >\n                          <IntlMessages id=\"forms.PermanentAddressLabel\" />\n                        </h2>\n                        <Separator />\n                        <br />\n                        <Row>\n                          <Colxx>\n                            <Label style={inputLabel}>\n                              <IntlMessages id=\"forms.ProvinceLabel\" />\n                            </Label>\n                            <h2>\n                              {provinces.map((pro) => {\n                                if (teacher.main_province === pro.value)\n                                  return pro.label;\n                              })}\n                            </h2>\n                          </Colxx>\n                          <Colxx>\n                            <Label style={inputLabel}>\n                              <IntlMessages id=\"forms.DistrictLabel\" />\n                            </Label>\n                            <h2>\n                              {districts.map((pro) => {\n                                if (teacher.main_district === pro.value)\n                                  return pro.label;\n                              })}\n                            </h2>\n                          </Colxx>\n                        </Row>\n                      </Colxx>\n                      <Colxx style={{ paddingInline: '4%' }}>\n                        <h2\n                          className=\"bg-primary rounded \"\n                          style={{ padding: '1%', paddingInline: '3%' }}\n                        >\n                          <IntlMessages id=\"forms.CurrentAddresslabel\" />\n                        </h2>\n                        <Separator />\n                        <br />\n                        <Row>\n                          <Colxx>\n                            <Label style={inputLabel}>\n                              <IntlMessages id=\"forms.ProvinceLabel\" />\n                            </Label>\n                            <h2>\n                              {provinces.map((pro) => {\n                                if (teacher.current_province === pro.value)\n                                  return pro.label;\n                              })}\n                            </h2>\n                          </Colxx>\n                          <Colxx>\n                            <Label style={inputLabel}>\n                              <IntlMessages id=\"forms.DistrictLabel\" />\n                            </Label>\n                            <h2>\n                              {districts.map((pro) => {\n                                if (teacher.current_district === pro.value)\n                                  return pro.label;\n                              })}\n                            </h2>\n                          </Colxx>\n                        </Row>\n                      </Colxx>\n                    </Row>\n                  </div>\n                </CardBody>\n              </Card>\n              {/* Education Details Start */}\n              <Card className=\"rounded m-4 mt-5\">\n                <CardBody>\n                  <Colxx className=\" pt-5\" style={{ paddingInline: '3%' }}>\n                    <h2\n                      className=\"bg-primary \"\n                      style={{\n                        padding: '8px',\n                        paddingInline: '30px',\n                        borderRadius: '10px',\n                      }}\n                    >\n                      تحصیلات\n                    </h2>\n                  </Colxx>\n\n                  <Row className=\"justify-content-center   rounded \">\n                    <Colxx style={{ paddingInline: '4%' }}>\n                      {/* <Modal\n                        isOpen={educationAlert}\n                        toggle={() => setEducationAlert(!educationAlert)}\n                        style={{ marginTop: '10%' }}\n                      >\n                        <ModalHeader>\n                          <IntlMessages id=\"modal.deletion-message-title\" />\n                        </ModalHeader>\n                        <ModalBody className=\"text-center\">\n                          <IntlMessages id=\"modal.deletion-message-details\" />\n                        </ModalBody>\n                        <ModalFooter>\n                          <Button\n                            style={buttonStyle}\n                            onClick={() => setEducationAlert(false)}\n                          >\n                            نه/ نخیر\n                          </Button>\n                          <Button\n                            style={buttonStyle}\n                            color=\"danger\"\n                            onClick={() => {\n                              setEducationAlert(false);\n                              // deleteEducation(item?.id);\n                            }}\n                          >\n                            هو / بلی\n                          </Button>\n                        </ModalFooter>\n                      </Modal> */}\n                      <table\n                        className=\"table table-striped  table-lg\"\n                        style={{ fontSize: 18 }}\n                      >\n                        <thead>\n                          <tr>\n                            <th scope=\"col\">آیدی</th>\n                            <th scope=\"col\">پوهنتون/مرجع</th>\n                            <th scope=\"col\">درجه تحصیلی</th>\n                            <th scope=\"col\">رشته</th>\n                            <th scope=\"col\">د فراغت کال/سال فراغت</th>\n                            <th scope=\"col\">آسناد/ سی وی</th>\n                            <th scope=\"col\">توضیحات</th>\n                            <th scope=\"col\">ایدیت/دیلیت</th>\n                          </tr>\n                        </thead>\n                        <tbody>\n                          {teacherEducation.map((item, index) => {\n                            return (\n                              <tr>\n                                <th scope=\"row\">{item.id}</th>\n                                <td>{item.institution}</td>\n                                <td>{item.degree}</td>\n                                <td>{item.field_of_study}</td>\n                                <td>{item.year_completed}</td>\n                                <td>\n                                  <a\n                                    href={item.document}\n                                    target=\"_blank\"\n                                    rel=\"noopener noreferrer\"\n                                  >\n                                    Download\n                                  </a>\n                                </td>\n                                <td>{item.description}</td>\n                                <td>\n                                  <BsPencilSquare\n                                    color=\"green\"\n                                    data-toggle=\"modal\"\n                                    data-target=\"#exampleModal\"\n                                    data-whatever=\"@getbootstrap\"\n                                    outline\n                                    style={{ fontSize: '20px' }}\n                                    id=\"updateIcon\"\n                                    onClick={() => handleRecord(item)}\n                                  />\n\n                                  <Popconfirm\n                                    title=\"ډلیټ\"\n                                    icon={\n                                      <BsTrashFill\n                                        color=\"red\"\n                                        id=\"deleteIcon\"\n                                        outline\n                                        style={{ fontSize: '20px' }}\n                                      />\n                                    }\n                                    description={`مطمعین یاست چې  (${item.id})  ډیلیټ کړی. `}\n                                    onConfirm={() => deleteEducation(item.id)}\n                                    okText=\"ډیلیټ\"\n                                    okType=\"danger\"\n                                    cancelText=\"نه\"\n                                  >\n                                    <BsTrashFill\n                                      color=\"red\"\n                                      id=\"deleteIcon\"\n                                      outline\n                                      style={{ fontSize: '20px' }}\n                                    />\n                                  </Popconfirm>\n                                </td>\n                              </tr>\n                            );\n                          })}\n                        </tbody>\n                      </table>\n\n                      <br />\n                      <br />\n                      <Button\n                        style={buttonStyle}\n                        className=\"btn btn-primary\"\n                        data-toggle=\"modal\"\n                        data-target=\"#exampleModal\"\n                        data-whatever=\"@getbootstrap\"\n                      >\n                        اضافه نمودن تحصیل\n                      </Button>\n\n                      <div\n                        className=\"modal fade\"\n                        id=\"exampleModal\"\n                        tabindex=\"-1\"\n                        role=\"dialog\"\n                        aria-labelledby=\"exampleModalLabel\"\n                        aria-hidden=\"true\"\n                      >\n                        <div className=\"modal-dialog\" role=\"document\">\n                          <div className=\"modal-content\">\n                            <div className=\"modal-header\">\n                              <h5\n                                className=\"modal-title\"\n                                id=\"exampleModalLabel\"\n                              >\n                                ثبت تحصیل استاد\n                              </h5>\n                              <button\n                                type=\"button\"\n                                className=\"close\"\n                                data-dismiss=\"modal\"\n                                aria-label=\"Close\"\n                                onClick={resetUpdate}\n                              >\n                                <span aria-hidden=\"true\">&times;</span>\n                              </button>\n                            </div>\n                            <div className=\"modal-body\">\n                              <Formik\n                                enableReinitialize={true}\n                                initialValues={\n                                  !updatingRecord\n                                    ? {\n                                        degree: [],\n                                        institute: '',\n                                        field_of_study: '',\n                                        year_of_completion: [],\n                                        description: '',\n                                      }\n                                    : {\n                                        degree: degreeTypeOptions.filter(\n                                          (inst) => {\n                                            if (\n                                              inst.value ===\n                                              updatingRecord.degree\n                                            )\n                                              return inst;\n                                          },\n                                        ),\n                                        institute: updatingRecord?.institution,\n\n                                        field_of_study:\n                                          updatingRecord.field_of_study,\n                                        year_of_completion:\n                                          dateOfBirthOptoions.filter((inst) => {\n                                            if (\n                                              inst.value ===\n                                              updatingRecord.year_completed\n                                            )\n                                              return inst;\n                                          }),\n                                        description: updatingRecord.description,\n                                      }\n                                }\n                                validationSchema={\n                                  teacherEducationValidationSchema\n                                }\n                                onSubmit={(formData) => {\n                                  addEducation(formData);\n                                }}\n                              >\n                                {({\n                                  errors,\n                                  touched,\n                                  values,\n                                  setFieldTouched,\n                                  setFieldValue,\n                                  handleSubmit,\n                                }) => (\n                                  <>\n                                    <form>\n                                      <div className=\"form-group\">\n                                        <label\n                                          style={inputLabel}\n                                          for=\"degree\"\n                                          className=\"col-form-label\"\n                                        >\n                                          دگری\n                                          <span style={{ color: 'red' }}>\n                                            *\n                                          </span>\n                                        </label>\n                                        <FormikReactSelect\n                                          name=\"degree\"\n                                          id=\"degree\"\n                                          value={values.degree}\n                                          options={degreeTypeOptions}\n                                          onChange={setFieldValue}\n                                          onBlur={setFieldTouched}\n                                          required\n                                        />\n                                        {touched.degree && errors.degree ? (\n                                          <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                                            {errors.degree}\n                                          </div>\n                                        ) : null}\n                                      </div>\n                                      <div className=\"form-group\">\n                                        <label\n                                          style={inputLabel}\n                                          for=\"recipient-name\"\n                                          className=\"col-form-label\"\n                                        >\n                                          پوهنتون/انستیتوت\n                                          <span style={{ color: 'red' }}>\n                                            *\n                                          </span>\n                                        </label>\n                                        <Field\n                                          className=\"form-control fieldStyle\"\n                                          name=\"institute\"\n                                        />\n                                        {errors.institute &&\n                                        touched.institute ? (\n                                          <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                                            {errors.institute}\n                                          </div>\n                                        ) : null}\n                                      </div>\n                                      <div className=\"form-group\">\n                                        <label\n                                          style={inputLabel}\n                                          for=\"field_of_study\"\n                                          className=\"col-form-label\"\n                                        >\n                                          رشته\n                                          <span style={{ color: 'red' }}>\n                                            *\n                                          </span>\n                                        </label>\n                                        <Field\n                                          className=\"form-control fieldStyle\"\n                                          name=\"field_of_study\"\n                                        />\n                                        {errors.field_of_study &&\n                                        touched.field_of_study ? (\n                                          <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                                            {errors.field_of_study}\n                                          </div>\n                                        ) : null}\n                                      </div>\n                                      <div className=\"form-group\">\n                                        <label\n                                          style={inputLabel}\n                                          for=\"year_of_completion\"\n                                          className=\"col-form-label\"\n                                        >\n                                          سال تکمیل\n                                          <span style={{ color: 'red' }}>\n                                            *\n                                          </span>\n                                        </label>\n\n                                        <FormikReactSelect\n                                          name=\"year_of_completion\"\n                                          id=\"year_of_completion\"\n                                          defaultValue={\n                                            values?.year_of_completion\n                                          }\n                                          options={dateOfBirthOptoions}\n                                          onChange={setFieldValue}\n                                          onBlur={setFieldTouched}\n                                          required\n                                        />\n                                        {errors.year_of_completion &&\n                                        touched.year_of_completion ? (\n                                          <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                                            {errors.year_of_completion}\n                                          </div>\n                                        ) : null}\n                                      </div>\n\n                                      <div className=\"form-group\">\n                                        <label\n                                          style={inputLabel}\n                                          for=\"description\"\n                                          className=\"col-form-label\"\n                                        >\n                                          جزئیات\n                                        </label>\n                                        <Field\n                                          className=\"form-control fieldStyle\"\n                                          name=\"description\"\n                                        />\n                                      </div>\n                                      <div className=\"form-group\">\n                                        <label\n                                          style={inputLabel}\n                                          for=\"recipient-name\"\n                                          className=\"col-form-label\"\n                                        >\n                                          اسناد\n                                          <span style={{ color: 'red' }}>\n                                            *\n                                          </span>\n                                        </label>\n                                        <input\n                                          className=\"form-control\"\n                                          type=\"file\"\n                                          id=\"formFile\"\n                                          onChange={(e) => {\n                                            setCVFile(e.target.files[0]);\n                                          }}\n                                        />\n                                      </div>\n                                    </form>\n                                    <div className=\"modal-footer\">\n                                      <button\n                                        style={buttonStyle}\n                                        type=\"button\"\n                                        className=\"btn btn-secondary\"\n                                        data-dismiss=\"modal\"\n                                        onClick={resetUpdate}\n                                      >\n                                        لغو\n                                      </button>\n                                      <button\n                                        style={buttonStyle}\n                                        type=\"submit\"\n                                        className=\"btn btn-primary\"\n                                        // data-dismiss=\"modal\"\n                                        onClick={handleSubmit}\n                                      >\n                                        اضافه تعلیم/تحصیل\n                                      </button>\n                                    </div>\n                                  </>\n                                )}\n                              </Formik>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </Colxx>\n                  </Row>\n                </CardBody>\n              </Card>\n              {/* Education Details End */}\n              {/* Contract Details Start */}\n              <Card className=\"rounded m-4 mt-5\">\n                <CardBody>\n                  <Colxx className=\" pt-5\" style={{ paddingInline: '3%' }}>\n                    <h2\n                      className=\"bg-primary \"\n                      style={{\n                        padding: '8px',\n                        paddingInline: '30px',\n                        borderRadius: '10px',\n                      }}\n                    >\n                      <IntlMessages id=\"قرارداد\" />\n                    </h2>\n                  </Colxx>\n\n                  <Row className=\"justify-content-center   rounded\">\n                    <Colxx style={{ paddingInline: '4%' }}>\n                      <table\n                        className=\"table table-striped table-lg\"\n                        style={{ fontSize: 18 }}\n                      >\n                        <thead>\n                          <tr>\n                            <th scope=\"col\">آیدی</th>\n                            <th scope=\"col\">نوع قرارداد/ قرارداد ډول</th>\n                            <th scope=\"col\">بست</th>\n                            <th scope=\"col\">قدم</th>\n                            <th scope=\"col\">نوع وظیفه</th>\n                            <th scope=\"col\">زبان</th>\n                            <th scope=\"col\">مدت قرارداد</th>\n                            <th scope=\"col\">آسناد</th>\n                            <th scope=\"col\">آیدیت/ دیلیت</th>\n                          </tr>\n                        </thead>\n                        <tbody>\n                          {teacherContracts.map((item, index) => {\n                            return (\n                              <tr>\n                                <th scope=\"row\">{item.id}</th>\n                                <td>\n                                  {contractTypeOptions.map((inst) => {\n                                    if (inst.value === item.contract_type)\n                                      return (\n                                        <IntlMessages\n                                          id={inst.label.props.id}\n                                        />\n                                      );\n                                  })}\n                                </td>\n                                <td>\n                                  {gradeOptions.map((inst) => {\n                                    if (inst.value === item.grade)\n                                      return (\n                                        <IntlMessages\n                                          id={inst.label.props.id}\n                                        />\n                                      );\n                                  })}\n                                </td>\n                                <td>\n                                  {stepOptions.map((inst) => {\n                                    if (inst.value === item.step)\n                                      return (\n                                        <IntlMessages\n                                          id={inst.label.props.id}\n                                        />\n                                      );\n                                  })}\n                                </td>\n                                <td>\n                                  {jobTypeOptions.map((inst) => {\n                                    if (inst.value === item.job_type)\n                                      return inst.label;\n                                  })}\n                                </td>\n                                <td>\n                                  {langOptions.map((inst) => {\n                                    if (inst.value === item.teaching_language)\n                                      return (\n                                        <IntlMessages\n                                          id={inst.label.props.id}\n                                        />\n                                      );\n                                  })}\n                                </td>\n                                <td>\n                                  {item.start_date}-{item.end_date}\n                                </td>\n                                <td>\n                                  <a\n                                    href={item.document}\n                                    target=\"_blank\"\n                                    rel=\"noopener noreferrer\"\n                                  >\n                                    ډاونلوډ\n                                  </a>\n                                </td>\n                                <td>{item.description}</td>\n                                <td>\n                                  <BsPencilSquare\n                                    color=\"green\"\n                                    data-toggle=\"modal\"\n                                    data-target=\"#contractModal\"\n                                    data-whatever=\"@getbootstrap\"\n                                    outline\n                                    style={{ fontSize: '20px' }}\n                                    id=\"updateIcon\"\n                                    onClick={() => handleRecord(item)}\n                                  />\n\n                                  <Popconfirm\n                                    title=\"ډلیټ\"\n                                    icon={\n                                      <BsTrashFill\n                                        color=\"red\"\n                                        id=\"deleteIcon\"\n                                        outline\n                                        style={{ fontSize: '20px' }}\n                                      />\n                                    }\n                                    description={`مطمعین یاست چې  (${item.id})  ډیلیټ کړی. `}\n                                    onConfirm={() => deleteContract(item.id)}\n                                    okText=\"ډیلیټ\"\n                                    okType=\"danger\"\n                                    cancelText=\"نه\"\n                                  >\n                                    <BsTrashFill\n                                      color=\"red\"\n                                      id=\"deleteIcon\"\n                                      outline\n                                      // onClick={() => setInsentiveAlert(true)}\n                                      style={{ fontSize: '20px' }}\n                                    />\n                                  </Popconfirm>\n                                </td>\n                              </tr>\n                            );\n                          })}\n                        </tbody>\n                      </table>\n\n                      <br />\n                      <br />\n                      <Button\n                        style={buttonStyle}\n                        className=\"btn btn-primary\"\n                        data-toggle=\"modal\"\n                        data-target=\"#contractModal\"\n                        data-whatever=\"@getbootstrap\"\n                      >\n                        اضافه نمودن قرارداد\n                      </Button>\n\n                      <div\n                        className=\"modal fade\"\n                        id=\"contractModal\"\n                        tabindex=\"-1\"\n                        role=\"dialog\"\n                        aria-labelledby=\"contractModalLabel\"\n                        aria-hidden=\"true\"\n                      >\n                        <div className=\"modal-dialog\" role=\"document\">\n                          <div className=\"modal-content\">\n                            <div className=\"modal-header\">\n                              <h5\n                                className=\"modal-title\"\n                                id=\"contractModalLabel\"\n                              >\n                                ثبت قرارداد استاد\n                              </h5>\n                              <button\n                                type=\"button\"\n                                className=\"close\"\n                                data-dismiss=\"modal\"\n                                aria-label=\"Close\"\n                                // onClick={resetUpdate}\n                              >\n                                <span aria-hidden=\"true\">&times;</span>\n                              </button>\n                            </div>\n                            <div className=\"modal-body\">\n                              <Formik\n                                enableReinitialize={true}\n                                initialValues={\n                                  !updatingRecord\n                                    ? {\n                                        jobType: [],\n                                        grade: [],\n                                        step: [],\n                                        teaching_language: [],\n                                        hireType: [],\n                                        contract_type: [],\n                                        institute: [],\n                                        field: [],\n                                        status: [],\n                                      }\n                                    : {\n                                        jobType: jobTypeOptions.find(\n                                          (inst) =>\n                                            inst.value ===\n                                            updatingRecord.job_type,\n                                        ),\n                                        grade: gradeOptions.find(\n                                          (inst) =>\n                                            inst.value === updatingRecord.grade,\n                                        ),\n                                        step: stepOptions.find(\n                                          (inst) =>\n                                            inst.value === updatingRecord.step,\n                                        ),\n                                        teaching_language: langOptions.find(\n                                          (inst) =>\n                                            inst.value ===\n                                            updatingRecord.teaching_language,\n                                        ),\n                                        hireType: hireTypeOptions.find(\n                                          (inst) =>\n                                            inst.value ===\n                                            updatingRecord.hire_type,\n                                        ),\n                                        contract_type: contractTypeOptions.find(\n                                          (inst) =>\n                                            inst.value ===\n                                            updatingRecord.contract_type,\n                                        ),\n                                        institute: institutes.find(\n                                          (inst) =>\n                                            inst.value ===\n                                            updatingRecord.institute,\n                                        ),\n                                        field: contextFields.find(\n                                          (inst) =>\n                                            inst.value ===\n                                            updatingRecord.teaching_field,\n                                        ),\n                                        status:\n                                          teacherContractStatusOptions.find(\n                                            (inst) =>\n                                              inst.value ===\n                                              updatingRecord.status,\n                                          ),\n                                        jobType: jobTypeOptions.find(\n                                          (inst) =>\n                                            inst.value ===\n                                            updatingRecord.job_type,\n                                        ),\n                                      }\n                                }\n                                validationSchema={\n                                  teacherContractValidationSchema\n                                }\n                                onSubmit={addContract}\n                              >\n                                {({\n                                  errors,\n                                  touched,\n                                  values,\n                                  setFieldTouched,\n                                  setFieldValue,\n                                  handleSubmit,\n                                }) => (\n                                  <>\n                                    <form>\n                                      <div\n                                        style={{\n                                          display: 'flex',\n                                          flexDirection: 'row',\n                                        }}\n                                      >\n                                        <div className=\"form-group w-100\">\n                                          <label\n                                            style={inputLabel}\n                                            for=\"institute\"\n                                            className=\"col-form-label\"\n                                          >\n                                            انستتیوت\n                                            <span style={{ color: 'red' }}>\n                                              *\n                                            </span>\n                                          </label>\n                                          <FormikReactSelect\n                                            name=\"institute\"\n                                            id=\"institute\"\n                                            value={values.institute}\n                                            options={institutes}\n                                            onChange={setFieldValue}\n                                            onBlur={setFieldTouched}\n                                            required\n                                          />\n                                          {errors.institute &&\n                                          touched.institute ? (\n                                            <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                                              {errors.institute}\n                                            </div>\n                                          ) : null}\n                                        </div>\n                                        <div className=\"form-group w-100\">\n                                          <label\n                                            style={inputLabel}\n                                            for=\"field\"\n                                            className=\"col-form-label\"\n                                          >\n                                            رشته\n                                            <span style={{ color: 'red' }}>\n                                              *\n                                            </span>\n                                          </label>\n\n                                          <FormikReactSelect\n                                            name=\"field\"\n                                            id=\"field\"\n                                            value={values?.field}\n                                            options={contextFields}\n                                            onChange={setFieldValue}\n                                            onBlur={setFieldTouched}\n                                            required\n                                          />\n\n                                          {errors.field && touched.field ? (\n                                            <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                                              {errors.field}\n                                            </div>\n                                          ) : null}\n                                        </div>\n                                      </div>\n\n                                      <div className=\"form-group\">\n                                        <label\n                                          style={inputLabel}\n                                          for=\"jobType\"\n                                          className=\"col-form-label\"\n                                        >\n                                          ده دندی ډول\n                                          <span style={{ color: 'red' }}>\n                                            *\n                                          </span>\n                                        </label>\n                                        <FormikReactSelect\n                                          name=\"jobType\"\n                                          id=\"jobType\"\n                                          value={values.jobType}\n                                          options={jobTypeOptions}\n                                          onChange={setFieldValue}\n                                          onBlur={setFieldTouched}\n                                          required\n                                        />\n                                        {errors.jobType && touched.jobType ? (\n                                          <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                                            {errors.jobType}\n                                          </div>\n                                        ) : null}\n                                      </div>\n\n                                      <div\n                                        style={{\n                                          display: 'flex',\n                                          flexDirection: 'row',\n                                        }}\n                                      >\n                                        <div className=\"form-group w-100\">\n                                          <label\n                                            style={inputLabel}\n                                            for=\"grade\"\n                                            className=\"col-form-label\"\n                                          >\n                                            بست\n                                            <span style={{ color: 'red' }}>\n                                              *\n                                            </span>\n                                          </label>\n\n                                          <FormikReactSelect\n                                            name=\"grade\"\n                                            id=\"grade\"\n                                            value={values.grade}\n                                            options={gradeOptions}\n                                            onChange={setFieldValue}\n                                            onBlur={setFieldTouched}\n                                            required\n                                          />\n                                          {errors.grade && touched.grade ? (\n                                            <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                                              {errors.grade}\n                                            </div>\n                                          ) : null}\n                                        </div>\n                                        <div className=\"form-group w-100\">\n                                          <label\n                                            style={inputLabel}\n                                            for=\"step\"\n                                            className=\"col-form-label\"\n                                          >\n                                            قدم\n                                            <span style={{ color: 'red' }}>\n                                              *\n                                            </span>\n                                          </label>\n                                          <FormikReactSelect\n                                            name=\"step\"\n                                            id=\"step\"\n                                            value={values.step}\n                                            options={stepOptions}\n                                            onChange={setFieldValue}\n                                            onBlur={setFieldTouched}\n                                            required\n                                          />\n                                          {errors.step && touched.step ? (\n                                            <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                                              {errors.step}\n                                            </div>\n                                          ) : null}\n                                        </div>\n                                      </div>\n\n                                      <div className=\"form-group\">\n                                        <label\n                                          style={inputLabel}\n                                          for=\"teaching_language\"\n                                          className=\"col-form-label\"\n                                        >\n                                          ده تدریس ژبه\n                                          <span style={{ color: 'red' }}>\n                                            *\n                                          </span>\n                                        </label>\n                                        <FormikReactSelect\n                                          name=\"teaching_language\"\n                                          id=\"teaching_language\"\n                                          value={values.teaching_language}\n                                          options={langOptions}\n                                          onChange={setFieldValue}\n                                          onBlur={setFieldTouched}\n                                          required\n                                        />\n                                        {errors.teaching_language &&\n                                        touched.teaching_language ? (\n                                          <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                                            {errors.teaching_language}\n                                          </div>\n                                        ) : null}\n                                      </div>\n                                      <div className=\"form-group\">\n                                        <label\n                                          style={inputLabel}\n                                          for=\"contractType\"\n                                          className=\"col-form-label\"\n                                        >\n                                          قرارداد ډول\n                                          <span style={{ color: 'red' }}>\n                                            *\n                                          </span>\n                                        </label>\n                                        <FormikReactSelect\n                                          name=\"contract_type\"\n                                          id=\"contract_type\"\n                                          value={values.contract_type}\n                                          options={contractTypeOptions}\n                                          onChange={setFieldValue}\n                                          onBlur={setFieldTouched}\n                                          required\n                                        />\n                                        {errors.contract_type &&\n                                        touched.contract_type ? (\n                                          <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                                            {errors.contract_type}\n                                          </div>\n                                        ) : null}\n                                      </div>\n                                      <div className=\"form-group\">\n                                        <label\n                                          style={inputLabel}\n                                          for=\"hireType\"\n                                          className=\"col-form-label\"\n                                        >\n                                          استخدام ډول\n                                          <span style={{ color: 'red' }}>\n                                            *\n                                          </span>\n                                        </label>\n                                        <FormikReactSelect\n                                          name=\"hireType\"\n                                          id=\"hireType\"\n                                          value={values.hireType}\n                                          options={hireTypeOptions}\n                                          onChange={setFieldValue}\n                                          onBlur={setFieldTouched}\n                                          required\n                                        />\n                                        {errors.hireType && touched.hireType ? (\n                                          <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                                            {errors.hireType}\n                                          </div>\n                                        ) : null}\n                                      </div>\n\n                                      <div\n                                        style={{\n                                          display: 'flex',\n                                          flexDirection: 'row',\n                                          justifyContent: 'space-between',\n                                        }}\n                                      >\n                                        <div>\n                                          <label\n                                            style={inputLabel}\n                                            for=\"year_of_completion\"\n                                            className=\"col-form-label\"\n                                          >\n                                            قرارداد شروع تاریخ\n                                          </label>\n                                          <br />\n\n                                          <DatePicker\n                                            name=\"startDate\"\n                                            calendar={persian}\n                                            locale={persian_fa}\n                                            value={updatingRecord?.start_date}\n                                            months={persianMonthOptions}\n                                            onChange={(e) =>\n                                              setStartDate(\n                                                new Date(\n                                                  e.toDate(),\n                                                ).getFullYear() +\n                                                  '-' +\n                                                  (new Date(\n                                                    e.toDate(),\n                                                  ).getMonth() +\n                                                    1) +\n                                                  '-' +\n                                                  new Date(\n                                                    e.toDate(),\n                                                  ).getDate(),\n                                              )\n                                            }\n                                          />\n                                        </div>\n                                        <div>\n                                          <label\n                                            style={inputLabel}\n                                            for=\"year_of_completion\"\n                                            className=\"col-form-label\"\n                                          >\n                                            قرارداد پای تاریخ\n                                          </label>\n                                          <br />\n\n                                          <DatePicker\n                                            name=\"endDate\"\n                                            calendar={persian}\n                                            value={updatingRecord?.end_date}\n                                            locale={persian_fa}\n                                            months={persianMonthOptions}\n                                            onChange={(e) => {\n                                              if (!e) return;\n                                              setEndDate(\n                                                new Date(\n                                                  e.toDate(),\n                                                ).getFullYear() +\n                                                  '-' +\n                                                  (new Date(\n                                                    e.toDate(),\n                                                  ).getMonth() +\n                                                    1) +\n                                                  '-' +\n                                                  new Date(\n                                                    e.toDate(),\n                                                  ).getDate(),\n                                              );\n                                            }}\n                                          />\n                                        </div>\n                                      </div>\n\n                                      <div className=\"form-group w-100\">\n                                        <label\n                                          style={inputLabel}\n                                          for=\"institute\"\n                                          className=\"col-form-label\"\n                                        >\n                                          حالت قرارداد\n                                          <span style={{ color: 'red' }}>\n                                            *\n                                          </span>\n                                        </label>\n                                        <FormikReactSelect\n                                          name=\"status\"\n                                          id=\"status\"\n                                          value={values.status}\n                                          options={teacherContractStatusOptions}\n                                          onChange={setFieldValue}\n                                          onBlur={setFieldTouched}\n                                          required\n                                        />\n                                        {errors.status && touched.status ? (\n                                          <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                                            {errors.status}\n                                          </div>\n                                        ) : null}\n                                      </div>\n\n                                      <div className=\"form-group\">\n                                        <label\n                                          style={inputLabel}\n                                          for=\"recipient-name\"\n                                          className=\"col-form-label\"\n                                        >\n                                          اسناد\n                                          <span style={{ color: 'red' }}>\n                                            *\n                                          </span>\n                                        </label>\n                                        <input\n                                          className=\"form-control\"\n                                          type=\"file\"\n                                          id=\"formFile\"\n                                          onChange={(e) => {\n                                            setCVFile(e.target.files[0]);\n                                          }}\n                                        />\n                                      </div>\n                                    </form>\n                                    <div className=\"modal-footer\">\n                                      <button\n                                        style={buttonStyle}\n                                        type=\"button\"\n                                        className=\"btn btn-secondary\"\n                                        data-dismiss=\"modal\"\n                                        onClick={resetUpdate}\n                                      >\n                                        لغو‍\n                                      </button>\n                                      <button\n                                        style={buttonStyle}\n                                        type=\"submit\"\n                                        className=\"btn btn-primary\"\n                                        // data-dismiss=\"modal\"\n                                        onClick={handleSubmit}\n                                      >\n                                        ثبت\n                                      </button>\n                                    </div>\n                                  </>\n                                )}\n                              </Formik>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </Colxx>\n                  </Row>\n                </CardBody>\n              </Card>\n              {/* Contract Details End */}\n              {/* Evaluation Details Start */}\n              <Card className=\"rounded m-4 mt-5\">\n                <CardBody>\n                  <Colxx className=\" pt-5\" style={{ paddingInline: '3%' }}>\n                    <h2\n                      className=\"bg-primary \"\n                      style={{\n                        padding: '8px',\n                        paddingInline: '30px',\n                        borderRadius: '10px',\n                      }}\n                    >\n                      <IntlMessages id=\"ارزیابی\" />\n                    </h2>\n                  </Colxx>\n\n                  <Row className=\"justify-content-center   rounded\">\n                    <Colxx style={{ paddingInline: '4%' }}>\n                      <table\n                        className=\"table table-striped table-lg\"\n                        style={{ fontSize: 18 }}\n                      >\n                        <thead>\n                          <tr>\n                            <th scope=\"col\">آیدی</th>\n                            <th scope=\"col\">ارزوونکی / ارزیابی کننده</th>\n                            <th scope=\"col\">نېټه/ تاریخ </th>\n                            <th scope=\"col\">انسستیوت</th>\n                            <th scope=\"col\">سمستر</th>\n                            <th scope=\"col\">مضمون</th>\n                            <th scope=\"col\">اعلی</th>\n                            <th scope=\"col\">عالی</th>\n                            <th scope=\"col\">خوب</th>\n                            <th scope=\"col\">متوسط</th>\n                            <th scope=\"col\">ضعیف</th>\n                            <th scope=\"col\">موجود نیست</th>\n                            <th scope=\"col\"> دیلیت</th>\n                          </tr>\n                        </thead>\n                        <tbody>\n                          {teacherEvaluation.map((item, index) => {\n                            return (\n                              <tr>\n                                <th scope=\"row\">{item.id}</th>\n                                <td>{item.evaluator_name}</td>\n                                <td>{item.date}</td>\n                                <td>\n                                  {\n                                    institutes.find(\n                                      (op) => op.value === item.institute,\n                                    )?.label\n                                  }\n                                </td>\n                                <td>{item.semester}</td>\n                                <td>{item.subject}</td>\n                                <td>{item.outstanding}</td>\n                                <td>{item.excellent}</td>\n                                <td>{item.good}</td>\n                                <td>{item.average}</td>\n                                <td>{item.weak}</td>\n                                <td>{item.not_applicable}</td>\n                                <td>\n                                  {/* <a\n                                    data-toggle=\"modal\"\n                                    data-target=\"#evaluationModal\"\n                                    data-whatever=\"@getbootstrap\"\n                                  >\n                                    Edit\n                                  </a>\n                                  /<a>Delete</a> */}\n\n                                  {/* <BsPencilSquare\n                                    color=\"green\"\n                                    data-toggle=\"modal\"\n                                    data-target=\"#evaluationModal\"\n                                    data-whatever=\"@getbootstrap\"\n                                    outline\n                                    style={{ fontSize: '20px' }}\n                                    id=\"updateIcon\"\n                                    onClick={() => handleRecord(item)}\n                                  /> */}\n\n                                  <Popconfirm\n                                    title=\"ډلیټ\"\n                                    icon={\n                                      <BsTrashFill\n                                        color=\"red\"\n                                        id=\"deleteIcon\"\n                                        outline\n                                        style={{ fontSize: '20px' }}\n                                      />\n                                    }\n                                    description={`مطمعین یاست چې  (${item.id})  ډیلیټ کړی. `}\n                                    onConfirm={() => deleteEvaluation(item.id)}\n                                    okText=\"ډیلیټ\"\n                                    okType=\"danger\"\n                                    cancelText=\"نه\"\n                                  >\n                                    <BsTrashFill\n                                      color=\"red\"\n                                      id=\"deleteIcon\"\n                                      outline\n                                      // onClick={() => setInsentiveAlert(true)}\n                                      style={{ fontSize: '20px' }}\n                                    />\n                                  </Popconfirm>\n                                </td>\n                              </tr>\n                            );\n                          })}\n                        </tbody>\n                      </table>\n                      <br />\n                      <br />\n                      <NavLink\n                        to={{\n                          pathname:\n                            `/app/evaluations/teacher-evalaution/teaching_proccess/` +\n                            teacherId,\n                          state: { item: teacher },\n                        }}\n                        style={buttonStyle}\n                        className=\"btn btn-primary\"\n                        // data-toggle=\"modal\"\n                        // data-target=\"#evaluationModal\"\n                        // data-whatever=\"@getbootstrap\"\n                      >\n                        اضافه نمودن ارزیابی\n                      </NavLink>\n\n                      {/* <div\n                        className=\"modal fade\"\n                        id=\"evaluationModal\"\n                        tabindex=\"-1\"\n                        role=\"dialog\"\n                        aria-labelledby=\"evaluationModalLabel\"\n                        aria-hidden=\"true\"\n                      >\n                        <div className=\"modal-dialog\" role=\"document\">\n                          <div className=\"modal-content\">\n                            <div className=\"modal-header\">\n                              <h5\n                                className=\"modal-title\"\n                                id=\"evaluationModalLabel\"\n                              >\n                                ثبت ارزیابی\n                              </h5>\n                              <button\n                                type=\"button\"\n                                className=\"close\"\n                                data-dismiss=\"modal\"\n                                aria-label=\"Close\"\n                              >\n                                <span aria-hidden=\"true\">&times;</span>\n                              </button>\n                            </div>\n                            <div className=\"modal-body\">\n                              <Formik\n                                enableReinitialize={true}\n                                initialValues={\n                                  !updatingRecord\n                                    ? {\n                                        topic: '',\n                                        evaluator_name: '',\n                                        evaluation_type: [],\n                                        strong_points: '',\n                                        weak_points: '',\n                                        suggestions: '',\n                                        evaluation_date: '',\n                                        institute: [],\n                                        department: [],\n                                        classs: [],\n                                        subject: [],\n                                      }\n                                    : {\n                                        topic: updatingRecord.topic,\n                                        evaluator_name:\n                                          updatingRecord.evaluator_name,\n                                        evaluation_type:\n                                          evaluationTypeOptions.find(\n                                            (inst) =>\n                                              inst.value ===\n                                              updatingRecord.evaluation_type,\n                                          ),\n                                        strong_points:\n                                          updatingRecord.strong_points,\n                                        weak_points: updatingRecord.weak_points,\n                                        suggestions: updatingRecord.suggestions,\n                                        evaluation_date:\n                                          updatingRecord.evaluation_date,\n                                        institute: institutes.find(\n                                          (inst) =>\n                                            inst.value ===\n                                            updatingRecord.institute,\n                                        ),\n                                        department: departments.find(\n                                          (dep) =>\n                                            dep.value ===\n                                            updatingRecord.department,\n                                        ),\n                                        classs: classes.find(\n                                          (dep) =>\n                                            dep.value === updatingRecord.classs,\n                                        ),\n                                        subject: subjects.find(\n                                          (dep) =>\n                                            dep.value ===\n                                            updatingRecord.subject,\n                                        ),\n                                      }\n                                }\n                                validationSchema={\n                                  teacherEvaluationValidationSchema\n                                }\n                                onSubmit={(formData) => {\n                                  addEvaluation(formData);\n                                }}\n                              >\n                                {({\n                                  errors,\n                                  touched,\n                                  values,\n                                  setFieldTouched,\n                                  setFieldValue,\n                                  handleSubmit,\n                                }) => (\n                                  <>\n                                    <form>\n                                      <div\n                                        style={{\n                                          display: 'flex',\n                                          flexDirection: 'row',\n                                        }}\n                                      >\n                                        <div className=\"form-group w-100\">\n                                          <label\n                                            style={inputLabel}\n                                            for=\"evaluator_name\"\n                                            className=\"col-form-label\"\n                                          >\n                                            ارزیابی کننده\n                                            <span style={{ color: 'red' }}>\n                                              *\n                                            </span>\n                                          </label>\n                                          <Field\n                                            className=\"form-control fieldStyle\"\n                                            name=\"evaluator_name\"\n                                          />\n                                          {errors.evaluator_name &&\n                                          touched.evaluator_name ? (\n                                            <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                                              {errors.evaluator_name}\n                                            </div>\n                                          ) : null}\n                                        </div>\n                                        <div className=\"form-group w-100\">\n                                          <label\n                                            style={inputLabel}\n                                            for=\"evaluation_type\"\n                                            className=\"col-form-label\"\n                                          >\n                                            ارزیابی ډول\n                                            <span style={{ color: 'red' }}>\n                                              *\n                                            </span>\n                                          </label>\n                                          <FormikReactSelect\n                                            name=\"evaluation_type\"\n                                            id=\"evaluation_type\"\n                                            value={values.evaluation_type}\n                                            options={evaluationTypeOptions}\n                                            onChange={setFieldValue}\n                                            onBlur={setFieldTouched}\n                                            required\n                                          />\n                                          {errors.evaluation_type &&\n                                          touched.evaluation_type ? (\n                                            <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                                              {errors.evaluation_type}\n                                            </div>\n                                          ) : null}\n                                        </div>\n                                      </div>\n\n                                      <div\n                                        style={{\n                                          display: 'flex',\n                                          flexDirection: 'row',\n                                        }}\n                                      >\n                                        <div className=\"form-group w-100\">\n                                          <label\n                                            style={inputLabel}\n                                            for=\"institute\"\n                                            className=\"col-form-label\"\n                                          >\n                                            انستتیوت\n                                            <span style={{ color: 'red' }}>\n                                              *\n                                            </span>\n                                          </label>\n                                          <FormikReactSelect\n                                            name=\"institute\"\n                                            id=\"institute\"\n                                            value={values.institute}\n                                            options={institutes}\n                                            onChange={setFieldValue}\n                                            onBlur={setFieldTouched}\n                                            required\n                                          />\n                                          {errors.institute &&\n                                          touched.institute ? (\n                                            <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                                              {errors.institute}\n                                            </div>\n                                          ) : null}\n                                        </div>\n                                        <div className=\"form-group w-100\">\n                                          <label\n                                            style={inputLabel}\n                                            for=\"department\"\n                                            className=\"col-form-label\"\n                                          >\n                                            ډیپارتمنت\n                                            <span style={{ color: 'red' }}>\n                                              *\n                                            </span>\n                                          </label>\n                                          <FormikReactSelect\n                                            name=\"department\"\n                                            id=\"department\"\n                                            value={values.department}\n                                            options={departments}\n                                            onChange={setFieldValue}\n                                            onBlur={setFieldTouched}\n                                            required\n                                          />\n                                          {errors.department &&\n                                          touched.department ? (\n                                            <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                                              {errors.department}\n                                            </div>\n                                          ) : null}\n                                        </div>\n                                      </div>\n                                      <div className=\"form-group\">\n                                        <label\n                                          style={inputLabel}\n                                          for=\"classs\"\n                                          className=\"col-form-label\"\n                                        >\n                                          صنف\n                                          <span style={{ color: 'red' }}>\n                                            *\n                                          </span>\n                                        </label>\n                                        <FormikReactSelect\n                                          name=\"classs\"\n                                          id=\"classs\"\n                                          value={values.classs}\n                                          options={classes}\n                                          onChange={setFieldValue}\n                                          onBlur={setFieldTouched}\n                                          required\n                                        />\n                                        {errors.classs && touched.classs ? (\n                                          <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                                            {errors.classs}\n                                          </div>\n                                        ) : null}\n                                      </div>\n                                      <div\n                                        style={{\n                                          display: 'flex',\n                                          flexDirection: 'row',\n                                        }}\n                                      >\n                                        <div className=\"form-group w-100\">\n                                          <label\n                                            style={inputLabel}\n                                            for=\"subject\"\n                                            className=\"col-form-label\"\n                                          >\n                                            مضمون\n                                            <span style={{ color: 'red' }}>\n                                              *\n                                            </span>\n                                          </label>\n\n                                          <FormikReactSelect\n                                            name=\"subject\"\n                                            id=\"subject\"\n                                            value={values.subject}\n                                            options={subjects}\n                                            onChange={setFieldValue}\n                                            onBlur={setFieldTouched}\n                                            required\n                                          />\n                                          {errors.subject && touched.subject ? (\n                                            <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                                              {errors.subject}\n                                            </div>\n                                          ) : null}\n                                        </div>\n                                        <div className=\"\">\n                                          <label\n                                            style={inputLabel}\n                                            for=\"year_of_completion\"\n                                            className=\"col-form-label\"\n                                          >\n                                            ارزیابی تاریخ\n                                            <span style={{ color: 'red' }}>\n                                              *\n                                            </span>\n                                          </label>\n                                          <br />\n\n                                          <DatePicker\n                                            style={{\n                                              width: '100%',\n                                              height: 38,\n                                              borderRadius: 0,\n                                            }}\n                                            name=\"evaluation_date\"\n                                            calendar={persian}\n                                            locale={persian_fa}\n                                            value={\n                                              updatingRecord?.evaluation_date\n                                            }\n                                            months={persianMonthOptions}\n                                            onChange={(e) =>\n                                              setEvaluationDate(\n                                                new Date(\n                                                  e.toDate(),\n                                                ).getFullYear() +\n                                                  '-' +\n                                                  (new Date(\n                                                    e.toDate(),\n                                                  ).getMonth() +\n                                                    1) +\n                                                  '-' +\n                                                  new Date(\n                                                    e.toDate(),\n                                                  ).getDate(),\n                                              )\n                                            }\n                                          />\n                                        </div>\n                                      </div>\n\n                                      <div className=\"form-group\">\n                                        <label\n                                          style={inputLabel}\n                                          for=\"topic\"\n                                          className=\"col-form-label\"\n                                        >\n                                          موضوع\n                                          <span style={{ color: 'red' }}>\n                                            *\n                                          </span>\n                                        </label>\n                                        <Field\n                                          className=\"form-control fieldStyle\"\n                                          name=\"topic\"\n                                        />\n                                        {errors.topic && touched.topic ? (\n                                          <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                                            {errors.topic}\n                                          </div>\n                                        ) : null}\n                                      </div>\n\n                                      <div className=\"form-group\">\n                                        <label\n                                          style={inputLabel}\n                                          for=\"strong_points\"\n                                          className=\"col-form-label\"\n                                        >\n                                          مثبت پواینت\n                                          <span style={{ color: 'red' }}>\n                                            *\n                                          </span>\n                                        </label>\n                                        <Field\n                                          className=\"form-control fieldStyle\"\n                                          name=\"strong_points\"\n                                        />\n                                        {errors.strong_points &&\n                                        touched.strong_points ? (\n                                          <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                                            {errors.strong_points}\n                                          </div>\n                                        ) : null}\n                                      </div>\n                                      <div className=\"form-group\">\n                                        <label\n                                          style={inputLabel}\n                                          for=\"weak_points\"\n                                          className=\"col-form-label\"\n                                        >\n                                          منفی پواینت\n                                          <span style={{ color: 'red' }}>\n                                            *\n                                          </span>\n                                        </label>\n                                        <Field\n                                          className=\"form-control fieldStyle\"\n                                          name=\"weak_points\"\n                                        />\n                                        {errors.weak_points &&\n                                        touched.weak_points ? (\n                                          <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                                            {errors.weak_points}\n                                          </div>\n                                        ) : null}\n                                      </div>\n\n                                      <div className=\"form-group\">\n                                        <label\n                                          style={inputLabel}\n                                          for=\"suggestions\"\n                                          className=\"col-form-label\"\n                                        >\n                                          توسعه\n                                          <span style={{ color: 'red' }}>\n                                            *\n                                          </span>\n                                        </label>\n                                        <Field\n                                          className=\"form-control fieldStyle\"\n                                          name=\"suggestions\"\n                                        />\n                                        {errors.suggestions &&\n                                        touched.suggestions ? (\n                                          <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                                            {errors.suggestions}\n                                          </div>\n                                        ) : null}\n                                      </div>\n                                      <label\n                                        style={inputLabel}\n                                        for=\"score\"\n                                        className=\"col-form-label\"\n                                      >\n                                        نمری\n                                        <span style={{ color: 'red' }}>*</span>\n                                      </label>\n                                      <div\n                                        style={{\n                                          display: 'flex',\n                                          flexDirection: 'row',\n                                          justifyContent: 'space-between',\n                                        }}\n                                      >\n                                        <Col span={4}>\n                                          <InputNumber\n                                            min={1}\n                                            max={10}\n                                            style={{ margin: '0 16px' }}\n                                            value={score}\n                                            onChange={(val) => setScore(val)}\n                                          />\n                                        </Col>\n                                        <Col span={17}>\n                                          <Slider\n                                            min={1}\n                                            max={10}\n                                            onChange={(val) => setScore(val)}\n                                            value={\n                                              typeof score === 'number'\n                                                ? score\n                                                : 0\n                                            }\n                                          />\n                                        </Col>\n                                      </div>\n                                    </form>\n                                    <div className=\"modal-footer\">\n                                      <button\n                                        style={buttonStyle}\n                                        type=\"button\"\n                                        className=\"btn btn-secondary\"\n                                        data-dismiss=\"modal\"\n                                        onClick={resetUpdate}\n                                      >\n                                        لغو\n                                      </button>\n                                      <button\n                                        style={buttonStyle}\n                                        type=\"submit\"\n                                        className=\"btn btn-primary\"\n                                        // data-dismiss=\"modal\"\n                                        onClick={handleSubmit}\n                                      >\n                                        ثبت\n                                      </button>\n                                    </div>\n                                  </>\n                                )}\n                              </Formik>\n                            </div>\n                          </div>\n                        </div>\n                      </div> */}\n                    </Colxx>\n                  </Row>\n\n                  {/* HR Evaluation */}\n                  <Colxx className=\" pt-5\" style={{ paddingInline: '3%' }}>\n                    <h2\n                      className=\"bg-primary \"\n                      style={{\n                        padding: '8px',\n                        paddingInline: '30px',\n                        borderRadius: '10px',\n                      }}\n                    >\n                      <IntlMessages id=\"ارزیابی منابع بشری\" />\n                    </h2>\n                  </Colxx>\n\n                  <Row className=\"justify-content-center   rounded\">\n                    <Colxx style={{ paddingInline: '4%' }}>\n                      <table\n                        className=\"table table-striped table-lg\"\n                        style={{ fontSize: 18 }}\n                      >\n                        <thead>\n                          <tr>\n                            <th scope=\"col\">آیدی</th>\n                            <th scope=\"col\">عنوان</th>\n                            <th scope=\"col\">تاریخ ارزیابی نېټه</th>\n                            <th scope=\"col\">انسستتیوت</th>\n                            <th scope=\"col\">نمره خود</th>\n                            <th scope=\"col\">نمره امر </th>\n                            <th scope=\"col\">نمره امر مافوق</th>\n                            <th scope=\"col\"> ارزیابی نتیجه</th>\n                            <th scope=\"col\">بست</th>\n                            <th scope=\"col\">ایډیټ/ډیلیټ</th>\n                          </tr>\n                        </thead>\n                        <tbody>\n                          {teacherHREvaluation.map((item, index) => {\n                            return (\n                              <tr>\n                                <th scope=\"row\">{item.id}</th>\n                                <td>{item.title}</td>\n                                <td>{item.evaluation_date}</td>\n                                <td>\n                                  {\n                                    institutes.find(\n                                      (op) => op.value === item.institute,\n                                    )?.label\n                                  }\n                                </td>\n                                <td>{item.self_total_score}</td>\n                                <td>{item.upper_director_score}</td>\n                                <td>{item.director_total_score}</td>\n                                <td>\n                                  {\n                                    outcomeOptions.find(\n                                      (op) =>\n                                        op.value === item.evaluation_outcome,\n                                    )?.label\n                                  }\n                                </td>\n                                <td>{item.step}</td>\n                                <td>\n                                  {/* <BsPencilSquare\n                                    color=\"green\"\n                                    data-toggle=\"modal\"\n                                    data-target=\"#hrEvaluationModal\"\n                                    data-whatever=\"@getbootstrap\"\n                                    outline\n                                    style={{ fontSize: '20px' }}\n                                    id=\"updateIcon\"\n                                    onClick={() => handleRecord(item)}\n                                  /> */}\n\n                                  <Popconfirm\n                                    title=\"ډلیټ\"\n                                    icon={\n                                      <BsTrashFill\n                                        color=\"red\"\n                                        id=\"deleteIcon\"\n                                        outline\n                                        style={{ fontSize: '20px' }}\n                                      />\n                                    }\n                                    description={`مطمعین یاست چې  (${item.id})  ډیلیټ کړی. `}\n                                    onConfirm={() =>\n                                      deleteHREvaluation(item.id)\n                                    }\n                                    okText=\"ډیلیټ\"\n                                    okType=\"danger\"\n                                    cancelText=\"نه\"\n                                  >\n                                    <BsTrashFill\n                                      color=\"red\"\n                                      id=\"deleteIcon\"\n                                      outline\n                                      // onClick={() => setInsentiveAlert(true)}\n                                      style={{ fontSize: '20px' }}\n                                    />\n                                  </Popconfirm>\n                                </td>\n                              </tr>\n                            );\n                          })}\n                        </tbody>\n                      </table>\n                      <br />\n                      <br />\n                      <NavLink\n                        to={{\n                          pathname:\n                            `/app/evaluations/teacher-evalaution/public_service/` +\n                            teacherId,\n                          state: { item: teacher },\n                        }}\n                        style={buttonStyle}\n                        className=\"btn btn-primary\"\n                        // data-toggle=\"modal\"\n                        // data-target=\"#hrEvaluationModal\"\n                        // data-whatever=\"@getbootstrap\"\n                      >\n                        اضافه نمودن ارزیابی منابع بشری\n                      </NavLink>\n\n                      {/* <div\n                        className=\"modal fade\"\n                        id=\"hrEvaluationModal\"\n                        tabindex=\"-1\"\n                        role=\"dialog\"\n                        aria-labelledby=\"hrEvaluationModalLabel\"\n                        aria-hidden=\"true\"\n                      >\n                        <div className=\"modal-dialog\" role=\"document\">\n                          <div className=\"modal-content\">\n                            <div className=\"modal-header\">\n                              <h5\n                                className=\"modal-title\"\n                                id=\"hrEvaluationModalLabel\"\n                              >\n                                ثبت ارزیابی منابع بشری\n                              </h5>\n                              <button\n                                type=\"button\"\n                                className=\"close\"\n                                data-dismiss=\"modal\"\n                                aria-label=\"Close\"\n                              >\n                                <span aria-hidden=\"true\">&times;</span>\n                              </button>\n                            </div>\n                            <div className=\"modal-body\">\n                              <Formik\n                                enableReinitialize={true}\n                                initialValues={\n                                  !updatingRecord\n                                    ? {\n                                        evaluator_name: '',\n                                        evaluation_date: '',\n                                        institute: [],\n                                        grade: [],\n                                        step: [],\n                                      }\n                                    : {\n                                        evaluator_name:\n                                          updatingRecord.evaluator_name,\n                                        evaluation_date:\n                                          updatingRecord.evaluation_date,\n                                        institute: institutes.filter((inst) => {\n                                          if (\n                                            inst.value ===\n                                            updatingRecord.institute\n                                          )\n                                            return inst;\n                                        }),\n                                        grade: gradeOptions.filter((inst) => {\n                                          if (\n                                            inst.value ===\n                                            updatingRecord.new_grade\n                                          )\n                                            return inst;\n                                        }),\n                                        step: stepOptions.filter((inst) => {\n                                          if (\n                                            inst.value ===\n                                            updatingRecord.new_step\n                                          )\n                                            return inst;\n                                        }),\n                                      }\n                                }\n                                validationSchema={\n                                  teacherHREvaluationValidationSchema\n                                }\n                                onSubmit={(formData) => {\n                                  addHREvaluation(formData);\n                                }}\n                              >\n                                {({\n                                  errors,\n                                  touched,\n                                  values,\n                                  setFieldTouched,\n                                  setFieldValue,\n                                  handleSubmit,\n                                }) => (\n                                  <>\n                                    <form>\n                                      <div className=\"form-group w-100\">\n                                        <label\n                                          style={inputLabel}\n                                          for=\"evaluator_name\"\n                                          className=\"col-form-label\"\n                                        >\n                                          ارزیابی کننده\n                                          <span style={{ color: 'red' }}>\n                                            *\n                                          </span>\n                                        </label>\n                                        <Field\n                                          className=\"form-control fieldStyle\"\n                                          name=\"evaluator_name\"\n                                        />\n                                        {errors.evaluator_name &&\n                                        touched.evaluator_name ? (\n                                          <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                                            {errors.evaluator_name}\n                                          </div>\n                                        ) : null}\n                                      </div>\n\n                                      <div\n                                        style={{\n                                          display: 'flex',\n                                          flexDirection: 'row',\n                                        }}\n                                      >\n                                        <div className=\"form-group w-100\">\n                                          <label\n                                            style={inputLabel}\n                                            for=\"institute\"\n                                            className=\"col-form-label\"\n                                          >\n                                            انستتیوت\n                                            <span style={{ color: 'red' }}>\n                                              *\n                                            </span>\n                                          </label>\n                                          <FormikReactSelect\n                                            name=\"institute\"\n                                            id=\"institute\"\n                                            value={values.institute}\n                                            options={institutes}\n                                            onChange={setFieldValue}\n                                            onBlur={setFieldTouched}\n                                            required\n                                          />\n                                          {errors.institute &&\n                                          touched.institute ? (\n                                            <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                                              {errors.institute}\n                                            </div>\n                                          ) : null}\n                                        </div>\n                                      </div>\n                                      <div\n                                        style={{\n                                          display: 'flex',\n                                          flexDirection: 'row',\n                                        }}\n                                      >\n                                        <div className=\"form-group w-100\">\n                                          <label\n                                            style={inputLabel}\n                                            for=\"grade\"\n                                            className=\"col-form-label\"\n                                          >\n                                            بست\n                                            <span style={{ color: 'red' }}>\n                                              *\n                                            </span>\n                                          </label>\n\n                                          <FormikReactSelect\n                                            name=\"grade\"\n                                            id=\"grade\"\n                                            value={values.grade}\n                                            options={gradeOptions}\n                                            onChange={setFieldValue}\n                                            onBlur={setFieldTouched}\n                                            required\n                                          />\n                                          {errors.grade && touched.grade ? (\n                                            <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                                              {errors.grade}\n                                            </div>\n                                          ) : null}\n                                        </div>\n                                        <div className=\"form-group w-100\">\n                                          <label\n                                            style={inputLabel}\n                                            for=\"step\"\n                                            className=\"col-form-label\"\n                                          >\n                                            قدم\n                                            <span style={{ color: 'red' }}>\n                                              *\n                                            </span>\n                                          </label>\n                                          <FormikReactSelect\n                                            name=\"step\"\n                                            id=\"step\"\n                                            value={values.step}\n                                            options={stepOptions}\n                                            onChange={setFieldValue}\n                                            onBlur={setFieldTouched}\n                                            required\n                                          />\n                                          {errors.step && touched.step ? (\n                                            <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                                              {errors.step}\n                                            </div>\n                                          ) : null}\n                                        </div>\n                                      </div>\n\n                                      <div\n                                        style={{\n                                          display: 'flex',\n                                          flexDirection: 'row',\n                                        }}\n                                      >\n                                        <div className=\"\">\n                                          <label\n                                            style={inputLabel}\n                                            for=\"year_of_completion\"\n                                            className=\"col-form-label\"\n                                          >\n                                            ارزیابی تاریخ\n                                            <span style={{ color: 'red' }}>\n                                              *\n                                            </span>\n                                          </label>\n                                          <br />\n\n                                          <DatePicker\n                                            placeholder=\"Date\"\n                                            style={{\n                                              width: '100%',\n                                              height: 38,\n                                              borderRadius: 0,\n                                            }}\n                                            name=\"evaluation_date\"\n                                            calendar={persian}\n                                            locale={persian_fa}\n                                            value={\n                                              updatingRecord?.evaluation_date\n                                            }\n                                            months={persianMonthOptions}\n                                            onChange={(e) =>\n                                              setEvaluationDate(\n                                                new Date(\n                                                  e.toDate(),\n                                                ).getFullYear() +\n                                                  '-' +\n                                                  (new Date(\n                                                    e.toDate(),\n                                                  ).getMonth() +\n                                                    1) +\n                                                  '-' +\n                                                  new Date(\n                                                    e.toDate(),\n                                                  ).getDate(),\n                                              )\n                                            }\n                                          />\n                                        </div>\n                                      </div>\n\n                                      <label\n                                        style={inputLabel}\n                                        for=\"score\"\n                                        className=\"col-form-label\"\n                                      >\n                                        نمری\n                                        <span style={{ color: 'red' }}>*</span>\n                                      </label>\n                                      <div\n                                        style={{\n                                          display: 'flex',\n                                          flexDirection: 'row',\n                                          justifyContent: 'space-between',\n                                        }}\n                                      >\n                                        <Col span={4}>\n                                          <InputNumber\n                                            min={1}\n                                            max={10}\n                                            style={{ margin: '0 16px' }}\n                                            value={score}\n                                            onChange={(val) => setScore(val)}\n                                          />\n                                        </Col>\n                                        <Col span={17}>\n                                          <Slider\n                                            min={1}\n                                            max={10}\n                                            onChange={(val) => setScore(val)}\n                                            value={\n                                              typeof score === 'number'\n                                                ? score\n                                                : 0\n                                            }\n                                          />\n                                        </Col>\n                                      </div>\n                                    </form>\n                                    <div className=\"modal-footer\">\n                                      <button\n                                        style={buttonStyle}\n                                        type=\"button\"\n                                        className=\"btn btn-secondary\"\n                                        data-dismiss=\"modal\"\n                                        onClick={resetUpdate}\n                                      >\n                                        لغو\n                                      </button>\n                                      <button\n                                        style={buttonStyle}\n                                        type=\"submit\"\n                                        className=\"btn btn-primary\"\n                                        // data-dismiss=\"modal\"\n                                        onClick={handleSubmit}\n                                      >\n                                        ثبت\n                                      </button>\n                                    </div>\n                                  </>\n                                )}\n                              </Formik>\n                            </div>\n                          </div>\n                        </div>\n                      </div> */}\n                    </Colxx>\n                  </Row>\n                  {/* HR Evaluation End */}\n                </CardBody>\n              </Card>\n              {/* Evaluation Details End */}\n              {/* Insentives Start */}\n              <Card className=\"rounded m-4 mt-5\">\n                <CardBody>\n                  <Colxx className=\" pt-5\" style={{ paddingInline: '3%' }}>\n                    <h2\n                      className=\"bg-primary \"\n                      style={{\n                        padding: '8px',\n                        paddingInline: '30px',\n                        borderRadius: '10px',\n                      }}\n                    >\n                      <IntlMessages id=\"مکافات\" />\n                    </h2>\n                  </Colxx>\n\n                  <Row className=\"justify-content-center   rounded\">\n                    <Colxx style={{ paddingInline: '4%' }}>\n                      <table\n                        className=\"table table-striped table-lg\"\n                        style={{ fontSize: 18 }}\n                      >\n                        <thead>\n                          <tr>\n                            <th scope=\"col\">آیدی</th>\n                            <th scope=\"col\">استاد/معلم</th>\n                            <th scope=\"col\">انستتیوت</th>\n                            <th scope=\"col\">نوع</th>\n                            <th scope=\"col\">توضیحات</th>\n                          </tr>\n                        </thead>\n                        <tbody>\n                          {teacherIncentives.map((item, index) => {\n                            return (\n                              <tr key={item.id}>\n                                <th scope=\"row\">{item.id}</th>\n                                <td>{item.teacher}</td>\n                                <td>{item.institute}</td>\n                                <td>{item.type}</td>\n                                <td>{item.details}</td>\n                                <td>\n                                  <BsPencilSquare\n                                    color=\"green\"\n                                    data-toggle=\"modal\"\n                                    data-target=\"#incentiveModal\"\n                                    data-whatever=\"@getbootstrap\"\n                                    outline\n                                    style={{ fontSize: '20px' }}\n                                    id=\"updateIcon\"\n                                    onClick={() => handleRecord(item)}\n                                  />\n                                  <Popconfirm\n                                    title=\"ډلیټ\"\n                                    icon={\n                                      <BsTrashFill\n                                        color=\"red\"\n                                        id=\"deleteIcon\"\n                                        outline\n                                        style={{ fontSize: '20px' }}\n                                      />\n                                    }\n                                    description={`مطمعین یاست چې  (${item.id})  ډیلیټ کړی. `}\n                                    onConfirm={() => deleteInsentive(item.id)}\n                                    okText=\"ډیلیټ\"\n                                    okType=\"danger\"\n                                    cancelText=\"نه\"\n                                  >\n                                    <BsTrashFill\n                                      color=\"red\"\n                                      id=\"deleteIcon\"\n                                      outline\n                                      // onClick={() => setInsentiveAlert(true)}\n                                      style={{ fontSize: '20px' }}\n                                    />\n                                  </Popconfirm>\n                                </td>\n                                {/* <Modal\n                                  isOpen={insentiveAlert}\n                                  toggle={() =>\n                                    setInsentiveAlert(!insentiveAlert)\n                                  }\n                                  style={{ marginTop: '10%' }}\n                                >\n                                  <ModalHeader>\n                                    <IntlMessages id=\"modal.deletion-message-title\" />\n                                  </ModalHeader>\n                                  <ModalBody className=\"text-center\">\n                                    <IntlMessages id=\"modal.deletion-message-details\" />\n                                  </ModalBody>\n                                  <ModalFooter>\n                                    <Button\n                                      onClick={() => setInsentiveAlert(false)}\n                                      style={{ marginLeft: '55%' }}\n                                    >\n                                      نه/ نخیر\n                                    </Button>\n                                    <Button\n                                      color=\"danger\"\n                                      onClick={() => {\n                                        setInsentiveAlert(false);\n                                        deleteInsentive(item.id);\n                                      }}\n                                      style={{ marginLeft: '5%' }}\n                                    >\n                                      هو / بلی\n                                    </Button>\n                                  </ModalFooter>\n                                </Modal> */}\n                              </tr>\n                            );\n                          })}\n                        </tbody>\n                      </table>\n\n                      <br />\n                      <br />\n                      <Button\n                        style={buttonStyle}\n                        className=\"btn btn-primary\"\n                        data-toggle=\"modal\"\n                        data-target=\"#incentiveModal\"\n                        data-whatever=\"@getbootstrap\"\n                      >\n                        ثبت مکافات\n                      </Button>\n\n                      <div\n                        className=\"modal fade\"\n                        id=\"incentiveModal\"\n                        tabindex=\"-1\"\n                        role=\"dialog\"\n                        aria-labelledby=\"incentiveModalLabel\"\n                        aria-hidden=\"true\"\n                      >\n                        <div className=\"modal-dialog\" role=\"document\">\n                          <div className=\"modal-content\">\n                            <div className=\"modal-header\">\n                              <h5\n                                className=\"modal-title\"\n                                id=\"hrEvaluationModalLabel\"\n                              >\n                                ثبت مکافات\n                              </h5>\n                              <button\n                                type=\"button\"\n                                className=\"close\"\n                                data-dismiss=\"modal\"\n                                aria-label=\"Close\"\n                                onClick={resetUpdate}\n                              >\n                                <span aria-hidden=\"true\">&times;</span>\n                              </button>\n                            </div>\n                            <div className=\"modal-body\">\n                              <Formik\n                                enableReinitialize={true}\n                                initialValues={\n                                  !updatingRecord\n                                    ? {\n                                        institute: [],\n                                        type: [],\n                                        details: '',\n                                      }\n                                    : {\n                                        institute: institutes.filter((inst) => {\n                                          if (\n                                            inst.value ===\n                                            updatingRecord.institute\n                                          )\n                                            return inst;\n                                        }),\n                                        type: teacherFeedbackOptions.filter(\n                                          (inst) => {\n                                            if (\n                                              inst.value === updatingRecord.type\n                                            )\n                                              return inst;\n                                          },\n                                        ),\n                                        details: updatingRecord.details,\n                                      }\n                                }\n                                validationSchema={\n                                  teacherIncentivesValidationSchema\n                                }\n                                onSubmit={addIncentive}\n                              >\n                                {({\n                                  errors,\n                                  touched,\n                                  values,\n                                  setFieldTouched,\n                                  setFieldValue,\n                                  handleSubmit,\n                                }) => (\n                                  <>\n                                    <form>\n                                      <div className=\"form-group w-100\">\n                                        <label\n                                          style={inputLabel}\n                                          for=\"type\"\n                                          className=\"col-form-label\"\n                                        >\n                                          ډول\n                                          <span style={{ color: 'red' }}>\n                                            *\n                                          </span>\n                                        </label>\n                                        <FormikReactSelect\n                                          name=\"type\"\n                                          id=\"type\"\n                                          value={values.type}\n                                          options={teacherFeedbackOptions}\n                                          onChange={setFieldValue}\n                                          onBlur={setFieldTouched}\n                                          required\n                                        />\n                                        {errors.type && touched.type ? (\n                                          <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                                            {errors.type}\n                                          </div>\n                                        ) : null}\n                                      </div>\n                                      <div className=\"form-group w-100\">\n                                        <label\n                                          style={inputLabel}\n                                          for=\"institute\"\n                                          className=\"col-form-label\"\n                                        >\n                                          انستتیوت\n                                          <span style={{ color: 'red' }}>\n                                            *\n                                          </span>\n                                        </label>\n                                        <FormikReactSelect\n                                          name=\"institute\"\n                                          id=\"institute\"\n                                          value={values.institute}\n                                          options={institutes}\n                                          onChange={setFieldValue}\n                                          onBlur={setFieldTouched}\n                                          required\n                                        />\n                                        {errors.institute &&\n                                        touched.institute ? (\n                                          <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                                            {errors.institute}\n                                          </div>\n                                        ) : null}\n                                      </div>\n                                      <div className=\"form-group\">\n                                        <label\n                                          style={inputLabel}\n                                          for=\"recipient-name\"\n                                          className=\"col-form-label\"\n                                        >\n                                          توضیحات\n                                          <span style={{ color: 'red' }}>\n                                            *\n                                          </span>\n                                        </label>\n                                        <Field\n                                          className=\"form-control fieldStyle\"\n                                          name=\"details\"\n                                        />\n                                        {errors.details && touched.details ? (\n                                          <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                                            {errors.details}\n                                          </div>\n                                        ) : null}\n                                      </div>\n                                    </form>\n                                    <div className=\"modal-footer\">\n                                      <button\n                                        style={buttonStyle}\n                                        type=\"button\"\n                                        className=\"btn btn-secondary\"\n                                        data-dismiss=\"modal\"\n                                        onClick={resetUpdate}\n                                      >\n                                        لفو\n                                      </button>\n                                      <button\n                                        style={buttonStyle}\n                                        type=\"submit\"\n                                        className=\"btn btn-primary\"\n                                        // data-dismiss=\"modal\"\n                                        onClick={handleSubmit}\n                                      >\n                                        ثبت\n                                        {loading && <Spin />}\n                                      </button>\n                                    </div>\n                                  </>\n                                )}\n                              </Formik>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </Colxx>\n                  </Row>\n                </CardBody>\n              </Card>\n              {/* Insentives End */}\n            </>\n          ) : (\n            <div className=\"p-2\">\n              <Row className=\"justify-content-center pt-5 rounded\">\n                <Colxx xxs=\"10\">\n                  <Card className=\"mb-4\">\n                    <CardBody>\n                      <CardTitle>\n                        <IntlMessages id=\"teacher.EvalautionHrTitle1\" />\n                      </CardTitle>\n\n                      <Table striped>\n                        <thead>\n                          <tr>\n                            <th># </th>\n                            <th>\n                              <IntlMessages id=\"forms.InstituteLabel\" />\n                            </th>\n                            <th>\n                              <IntlMessages id=\"teacher.curretGradeLabel\" />\n                            </th>\n                            <th>\n                              <IntlMessages id=\"teacher.currentStepLabel\" />\n                            </th>\n                            <th>\n                              <IntlMessages id=\"teacher.newGradeLabel\" />\n                            </th>\n                            <th>\n                              <IntlMessages id=\"teacher.newStepLabel\" />\n                            </th>\n                            <th>\n                              <IntlMessages id=\"marks.Marks\" />\n                            </th>\n                            <th>\n                              <IntlMessages id=\"teacher.evaluationDateLabel\" />\n                            </th>\n                          </tr>\n                        </thead>\n                        <tbody>\n                          {teacherHREvaluation.map((item, index) => (\n                            <tr key={index}>\n                              <th scope=\"row\">{index + 1}</th>\n                              <td>{item?.institute_id?.name}</td>\n                              <td>{item?.current_grade}</td>\n                              <td>{item?.current_step}</td>\n                              <td>{item?.new_grade}</td>\n                              <td>{item?.new_step}</td>\n                              <td>{item?.score}</td>\n                              <td>{item?.evaluation_date}</td>\n                            </tr>\n                          ))}\n                        </tbody>\n                      </Table>\n                    </CardBody>\n                  </Card>\n                </Colxx>\n              </Row>\n\n              <Row className=\"justify-content-center pt-5 rounded\">\n                <Colxx xxs=\"10\">\n                  <Card className=\"mb-4\">\n                    <CardBody>\n                      <CardTitle>\n                        <IntlMessages id=\"teacher.EvalautionTitle1\" />\n                      </CardTitle>\n\n                      <Table striped>\n                        <thead>\n                          <tr>\n                            <th># </th>\n                            <th>\n                              <IntlMessages id=\"forms.InstituteLabel\" />\n                            </th>\n                            <th> دیپارتمنت</th>\n                            <th> صنف - سمستر</th>\n                            <th>مضمون</th>\n\n                            <th>\n                              <IntlMessages id=\"marks.Marks\" />\n                            </th>\n                            <th>\n                              <IntlMessages id=\"teacher.evaluationDateLabel\" />\n                            </th>\n                          </tr>\n                        </thead>\n                        <tbody>\n                          {teacherEvaluation.map((item, index) => (\n                            <tr key={index}>\n                              <th scope=\"row\">{index + 1}</th>\n                              <td>{item?.institute_id?.name}</td>\n                              <td>{item?.department_id?.name}</td>\n                              <td>\n                                {item?.class_id?.name +\n                                  ' - ' +\n                                  item?.class_id?.semester}\n                              </td>\n                              <td>{item?.topic}</td>\n                              <td>{item?.score}</td>\n                              <td>{item?.evaluation_date}</td>\n                            </tr>\n                          ))}\n                        </tbody>\n                      </Table>\n                    </CardBody>\n                  </Card>\n                </Colxx>\n              </Row>\n\n              <Row className=\"justify-content-center pt-5 rounded\">\n                <Colxx xxs=\"10\">\n                  <Card className=\"mb-4\">\n                    <CardBody>\n                      <CardTitle>\n                        <IntlMessages id=\"teacher.Transfer\" />\n                      </CardTitle>\n\n                      <Table striped>\n                        <thead>\n                          <tr>\n                            <th># </th>\n                            <th>\n                              <IntlMessages id=\"forms.InstituteLabel\" />\n                            </th>\n                            <th> ولایت</th>\n                            <th> د مقرری تاریخ</th>\n                          </tr>\n                        </thead>\n                        <tbody>\n                          {teacherTransfer.map((item, index) => (\n                            <tr key={index}>\n                              <th scope=\"row\">{index + 1}</th>\n                              <td>{item.institute_id.name}</td>\n                              <td>{item.institute_id.province}</td>\n                              <td>{item.hire_date}</td>\n                            </tr>\n                          ))}\n                        </tbody>\n                      </Table>\n                    </CardBody>\n                  </Card>\n                </Colxx>\n              </Row>\n\n              <Card className=\"rounded\">\n                <CardBody>\n                  <Row\n                    className=\"  p-2\"\n                    style={{ borderRadius: '5px', minHeight: '200px' }}\n                  >\n                    <Colxx className=\"m-3 border\">\n                      <h1 className=\"p-2\">مکافات</h1>\n                      <div className=\"p-2\" style={{ minHeight: '150px' }}>\n                        یک استاد (یا معلم خصوصی) خوب در مرحله اول باید به کاری\n                        که انجام می دهد علاقه داشته باشد. اگر علاقه ای در کار\n                        نباشد روش ها و تکنیک های دیگر برای تبدیل شدن به استاد\n                        خوب موثر واقع نخواهد شد. استاد باید دروسی را تدریس کند\n                        که خودش به آن درس ها علاقه دارد و بر آن دروس مسلط است.\n                        اساتید عالی معمولا همواره در حال یادگیری هستند و تونایی\n                        های خودشان را به صورت مداوم افزایش می دهند. این اساتید\n                        در کلاس درس به دانشجو احترام می گذارند و سعی می کنند\n                        مطالب را از دید دانشجو ببینند و به ساده ترین زبان ممکن\n                        مطالب را توضیح می دهند. در کلاس های دانشگاه بسیار خوب\n                        است کلاس به صورت دوطرفه و تعاملی برگزار گردد. اساتید خوب\n                        که دانشجویان راضی و موفقی دارند اینطور نیست که در کلاس\n                        فقط خودشان حرف بزنند و متکلم وحده باشند. به هر میزان\n                        دانشجویان در کلاس مشارکت بیشتری داشته باشند در نهایت\n                        بازدهی کلاس بالاتر خواهد بود. اساتید خوب با پرسیدن\n                        سوالات مناسب حین تدریس سطح سواد دانشجویان را مورد\n                        ارزیابی قرار می دهند و متناسب با آن تدریس می کنند. این\n                        اساتید جو راحت و آزادی را در کلاس ایجاد می نمایند به\n                        گونه ای که دانشجویان در عین حال که به استاد و کلاس\n                        احترام می گذارند سوالات خودشان را هم راحت می پرسند و\n                        اظهار نظر می کنند. در ادامه با استناد به مقالات معتبر\n                        علمی در رابطه با ویژگی های استاد خوب توضیح داده می شود.\n                      </div>\n                    </Colxx>\n\n                    <Colxx className=\"m-3 border\">\n                      <h1 className=\"p-2\">مجازات</h1>\n                      <div className=\"p-2\" style={{ minHeight: '150px' }}>\n                        یک استاد (یا معلم خصوصی) خوب در مرحله اول باید به کاری\n                        که انجام می دهد علاقه داشته باشد. اگر علاقه ای در کار\n                        نباشد روش ها و تکنیک های دیگر برای تبدیل شدن به استاد\n                        خوب موثر واقع نخواهد شد. استاد باید دروسی را تدریس کند\n                        که خودش به آن درس ها علاقه دارد و بر آن دروس مسلط است.\n                        اساتید عالی معمولا همواره در حال یادگیری هستند و تونایی\n                        های خودشان را به صورت مداوم افزایش می دهند. این اساتید\n                        در کلاس درس به دانشجو احترام می گذارند و سعی می کنند\n                        مطالب را از دید دانشجو ببینند و به ساده ترین زبان ممکن\n                        مطالب را توضیح می دهند.\n                      </div>\n                    </Colxx>\n                  </Row>\n                </CardBody>\n              </Card>\n            </div>\n          )}\n        </>\n      )}\n    </>\n  );\n};\n\nexport default TeacherProfile;\n","import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n//import CustomSelectInput from 'components/common/CustomSelectInput';\n\nimport { Row } from 'reactstrap';\n//import logo from './../../../../assets/logos/AdminLogo.png';\nimport logo from '../../../../assets/logos/AdminLogo.png';\n\nimport IntlMessages from 'helpers/IntlMessages';\nimport { Colxx } from 'components/common/CustomBootstrap';\n\nimport config from '../../../../config';\nconst servicePath = config.API_URL;\nconst teacherApiUrl = `${servicePath}/teachers/`;\nconst teacherEvaluationApiUrl = `${servicePath}/teachers/evaluation`;\nconst teacherHREvaluationApiUrl = `${servicePath}/teachers/hr-evaluation`;\nconst teacherTransferApiUrl = `${servicePath}/teachers/institute`;\nconst roughInfo = {\n  workerId: '1',\n  workerName: 'نعمان احمدی',\n  workerProvince: 'ننگرهار',\n  workerStep: '3',\n  workerGrade: '4',\n  workerGradeType: 'مامور',\n  workerPosition: 'سیستم سازی',\n  workerAppointedDate: '1401/3/6',\n  workerStartDate: '1401/5/1',\n  workerDateOfBirth: '1401/1/2',\n  workerQualification: 'لسانس',\n  workerField: 'سافتویز انجینری',\n  workerGender: 'مرد',\n  workerTazkera: '34534545',\n  workerTashkilGrade: '3',\n  workerAppointedType: 'حکمی',\n};\nconst TeacherProfile = () => {\n  const [isNext, setIsNext] = useState(false);\n  const [isLoaded, setIsLoaded] = useState(true);\n  const { teacherId } = useParams();\n  const [teacher, setTeacher] = useState([]);\n  const [institute, setInstitute] = useState([]);\n  const [teacherEvaluation, setTeacherEvaluation] = useState([]);\n  const [teacherHREvaluation, setTeacherHREvaluation] = useState([]);\n  const [teacherTransfer, setTeacherTransfer] = useState([]);\n  const [workerProfile, setWorkerProfile] = useState({});\n\n  // here we are fetching data for the displaying the list\n  useEffect(() => {\n    // const timeOut = setTimeout(SetRoughData, 3000);\n    SetRoughData();\n  }, []);\n\n  function SetRoughData() {\n    setWorkerProfile(roughInfo);\n    setIsLoaded(false);\n  }\n\n  // useEffect(() => {\n  //   async function fetchTeacher() {\n  //     const response = await axios.get(`${teacherApiUrl}?id=${teacherId}`);\n  //     const data = response.data;\n  //     setTeacher(data);\n\n  //     const instituteResponse = await axios.get(\n  //       `${teacherApiUrl}institute/?teacher_id=${teacherId}`\n  //     );\n  //     const instituteData = await instituteResponse.data;\n  //     setInstitute(instituteData);\n  //   }\n  //   async function fetchTeacherEvaluation() {\n  //     console.log('data');\n  //     const response = await axios.get(\n  //       `${teacherEvaluationApiUrl}/?teacher_id=${teacherId}`\n  //     );\n  //     console.log(`${teacherEvaluationApiUrl}/?teacher_id=${teacherId}`);\n  //     const data = response.data;\n  //     setTeacherEvaluation(data);\n  //   }\n  //   async function fetchTeacherHREvaluation() {\n  //     const response = await axios.get(\n  //       `${teacherHREvaluationApiUrl}/?teacher_id=${teacherId}`\n  //     );\n  //     const data = response.data;\n  //     setTeacherHREvaluation(data);\n  //   }\n  //   async function fetchTeacherTransfer() {\n  //     const response = await axios.get(\n  //       `${teacherTransferApiUrl}/?teacher_id=${teacherId}`\n  //     );\n  //     const data = response.data;\n  //     console.log(`${teacherTransferApiUrl}/?teacher_id=${teacherId}`);\n  //     setTeacherTransfer(data);\n  //   }\n  //   fetchTeacher();\n  //   fetchTeacherEvaluation();\n  //   fetchTeacherHREvaluation();\n  //   fetchTeacherTransfer();\n  // }, []);\n\n  // console.log('teacher', teacher);\n  // console.log('teacherEvaluation', teacherEvaluation);\n  // console.log('teacherHREvaluation', teacherHREvaluation);\n  // console.log('teacherTransfer', teacherTransfer);\n\n  const handleClick = (event) => {\n    setIsNext(event);\n  };\n\n  const style2 = {\n    padding: '',\n  };\n  const style1 = {\n    backgroungColor: 'blue',\n  };\n\n  return isLoaded ? (\n    <div className=\"loading\" />\n  ) : (\n    <>\n      <Row>\n        <Colxx className=\"mt-5 m-5\" xxs=\"8\">\n          <h3>{<IntlMessages id=\"workerProfile\" />}</h3>\n        </Colxx>\n        <Colxx className=\"mt-4 max\">\n          <div className=\"d-flex align-items-center flex-column\">\n            <img src={logo} alt=\"Logo\" width={'30%'} />\n            <p>\n              د تخنیکی او مسلکی زده کړو اداره\n              <br />\n              اداره تعلیمات تخنیکی و مسلکی\n            </p>\n          </div>\n        </Colxx>\n      </Row>\n      {/* \n      <Row>\n        <Colxx xxs=\"1\"></Colxx>\n        <Colxx>\n          <img src={profilePhoto} alt=\"Photo\" width={'10%'} />{' '}\n        </Colxx>\n      </Row> */}\n      {workerProfile != null ? (\n        <div>\n          <Row>\n            <table className=\"table\">\n              <thead\n                className=\"pl-2 d-flex flex-grow-1  table-dark\"\n                style={{\n                  maxHeight: '55px',\n                  marginRight: 2,\n                  width: '100%',\n                  marginBottom: 20,\n                }}\n              >\n                <tr className=\"card-body align-self-center d-flex flex-column flex-lg-row align-items-lg-center\">\n                  <th\n                    style={{\n                      width: '11%',\n                      paddingInline: '0%',\n                      textAlign: 'right',\n                      borderStyle: 'hidden',\n                    }}\n                  >\n                    <IntlMessages id=\"workerId\" />\n                  </th>\n                  <th\n                    style={{\n                      width: '14%',\n                      paddingInline: '0%',\n                      textAlign: 'right',\n                      borderStyle: 'hidden',\n                    }}\n                  >\n                    <IntlMessages id=\"workerName\" />\n                  </th>\n                  <th\n                    style={{\n                      width: '15%',\n                      padding: '0%',\n                      textAlign: 'right',\n                      borderStyle: 'hidden',\n                    }}\n                  >\n                    <IntlMessages id=\"workerAppointedType\" />\n                  </th>\n                  <th\n                    style={{\n                      width: '15%',\n                      padding: '0%',\n                      textAlign: 'right',\n                      borderStyle: 'hidden',\n                    }}\n                  >\n                    {' '}\n                    <IntlMessages id=\"workerQualification\" />\n                  </th>\n                  <th\n                    style={{\n                      width: '14%',\n                      padding: '0%',\n                      textAlign: 'right',\n                      borderStyle: 'hidden',\n                    }}\n                  >\n                    {' '}\n                    <IntlMessages id=\"workerField\" />\n                  </th>\n                  <th\n                    style={{\n                      width: '15%',\n                      padding: '0%',\n                      textAlign: 'right',\n                      borderStyle: 'hidden',\n                    }}\n                  >\n                    {' '}\n                    <IntlMessages id=\"workerGender\" />\n                  </th>\n                  <th\n                    style={{\n                      width: '15%',\n                      padding: '0%',\n                      textAlign: 'right',\n                      borderStyle: 'hidden',\n                    }}\n                  >\n                    {' '}\n                    <IntlMessages id=\"workerTazkera\" />\n                  </th>\n                  <th\n                    style={{\n                      width: '15%',\n                      padding: '0%',\n                      textAlign: 'right',\n                      borderStyle: 'hidden',\n                    }}\n                  >\n                    {' '}\n                    <IntlMessages id=\"workerDateOfBirth\" />\n                  </th>\n                </tr>\n              </thead>\n            </table>\n          </Row>\n          <Row>\n            <table className=\"table\">\n              <thead\n                className=\"pl-2 d-flex flex-grow-1  table-light\"\n                style={{\n                  maxHeight: '55px',\n                  marginRight: 2,\n                  width: '100%',\n                  marginBottom: 20,\n                }}\n              >\n                <tr className=\"card-body align-self-center d-flex flex-column flex-lg-row align-items-lg-center\">\n                  <th\n                    style={{\n                      width: '11%',\n                      paddingInline: '0%',\n                      textAlign: 'right',\n                      borderStyle: 'hidden',\n                    }}\n                  >\n                    {workerProfile.workerId}\n                  </th>\n                  <th\n                    style={{\n                      width: '14%',\n                      paddingInline: '0%',\n                      textAlign: 'right',\n                      borderStyle: 'hidden',\n                    }}\n                  >\n                    {workerProfile.workerName}\n                  </th>\n                  <th\n                    style={{\n                      width: '15%',\n                      padding: '0%',\n                      textAlign: 'right',\n                      borderStyle: 'hidden',\n                    }}\n                  >\n                    {workerProfile.workerGradeType}\n                  </th>\n                  <th\n                    style={{\n                      width: '15%',\n                      padding: '0%',\n                      textAlign: 'right',\n                      borderStyle: 'hidden',\n                    }}\n                  >\n                    {' '}\n                    {workerProfile.workerQualification}\n                  </th>\n                  <th\n                    style={{\n                      width: '14%',\n                      padding: '0%',\n                      textAlign: 'right',\n                      borderStyle: 'hidden',\n                    }}\n                  >\n                    {' '}\n                    {workerProfile.workerField}\n                  </th>\n                  <th\n                    style={{\n                      width: '15%',\n                      padding: '0%',\n                      textAlign: 'right',\n                      borderStyle: 'hidden',\n                    }}\n                  >\n                    {' '}\n                    {workerProfile.workerGender}\n                  </th>\n                  <th\n                    style={{\n                      width: '15%',\n                      padding: '0%',\n                      textAlign: 'right',\n                      borderStyle: 'hidden',\n                    }}\n                  >\n                    {' '}\n                    {workerProfile.workerTazkera}\n                  </th>\n                  <th\n                    style={{\n                      width: '15%',\n                      padding: '0%',\n                      textAlign: 'right',\n                      borderStyle: 'hidden',\n                    }}\n                  >\n                    {' '}\n                    {workerProfile.workerDateOfBirth}\n                  </th>\n                </tr>\n              </thead>\n            </table>\n          </Row>\n          <Row>\n            <table className=\"table\">\n              <thead\n                className=\"pl-2 d-flex flex-grow-1  table-dark\"\n                style={{\n                  maxHeight: '55px',\n                  marginRight: 2,\n                  width: '100%',\n                  marginBottom: 20,\n                }}\n              >\n                <tr className=\"card-body align-self-center d-flex flex-column flex-lg-row align-items-lg-center\">\n                  <th\n                    style={{\n                      width: '11%',\n                      paddingInline: '0%',\n                      textAlign: 'right',\n                      borderStyle: 'hidden',\n                    }}\n                  >\n                    <IntlMessages id=\"workerPosition\" />\n                  </th>\n                  <th\n                    style={{\n                      width: '14%',\n                      paddingInline: '0%',\n                      textAlign: 'right',\n                      borderStyle: 'hidden',\n                    }}\n                  >\n                    <IntlMessages id=\"workerStep\" />\n                  </th>\n                  <th\n                    style={{\n                      width: '15%',\n                      padding: '0%',\n                      textAlign: 'right',\n                      borderStyle: 'hidden',\n                    }}\n                  >\n                    <IntlMessages id=\"workerGrade\" />\n                  </th>\n                  <th\n                    style={{\n                      width: '15%',\n                      padding: '0%',\n                      textAlign: 'right',\n                      borderStyle: 'hidden',\n                    }}\n                  >\n                    {' '}\n                    <IntlMessages id=\"workerTashkeilGrade\" />\n                  </th>\n                  <th\n                    style={{\n                      width: '14%',\n                      padding: '0%',\n                      textAlign: 'right',\n                      borderStyle: 'hidden',\n                    }}\n                  >\n                    {' '}\n                    <IntlMessages id=\"workerGradeType\" />\n                  </th>\n                  <th\n                    style={{\n                      width: '15%',\n                      padding: '0%',\n                      textAlign: 'right',\n                      borderStyle: 'hidden',\n                    }}\n                  >\n                    {' '}\n                    <IntlMessages id=\"workerAppointedDate\" />\n                  </th>\n                  <th\n                    style={{\n                      width: '15%',\n                      padding: '0%',\n                      textAlign: 'right',\n                      borderStyle: 'hidden',\n                    }}\n                  >\n                    {' '}\n                    <IntlMessages id=\"workerStartDate\" />\n                  </th>\n                  <th\n                    style={{\n                      width: '15%',\n                      padding: '0%',\n                      textAlign: 'right',\n                      borderStyle: 'hidden',\n                    }}\n                  >\n                    {' '}\n                    <IntlMessages id=\"workerProvince\" />\n                  </th>\n                </tr>\n              </thead>\n            </table>\n          </Row>\n          <Row>\n            <table className=\"table\">\n              <thead\n                className=\"pl-2 d-flex flex-grow-1  table-light\"\n                style={{\n                  maxHeight: '55px',\n                  marginRight: 2,\n                  width: '100%',\n                  marginBottom: 20,\n                }}\n              >\n                <tr className=\"card-body align-self-center d-flex flex-column flex-lg-row align-items-lg-center\">\n                  <th\n                    style={{\n                      width: '11%',\n                      paddingInline: '0%',\n                      textAlign: 'right',\n                      borderStyle: 'hidden',\n                    }}\n                  >\n                    {workerProfile.workerPosition}\n                  </th>\n                  <th\n                    style={{\n                      width: '14%',\n                      paddingInline: '0%',\n                      textAlign: 'right',\n                      borderStyle: 'hidden',\n                    }}\n                  >\n                    {workerProfile.workerStep}\n                  </th>\n                  <th\n                    style={{\n                      width: '15%',\n                      padding: '0%',\n                      textAlign: 'right',\n                      borderStyle: 'hidden',\n                    }}\n                  >\n                    {workerProfile.workerGrade}\n                  </th>\n                  <th\n                    style={{\n                      width: '15%',\n                      padding: '0%',\n                      textAlign: 'right',\n                      borderStyle: 'hidden',\n                    }}\n                  >\n                    {' '}\n                    {workerProfile.workerTashkilGrade}\n                  </th>\n                  <th\n                    style={{\n                      width: '14%',\n                      padding: '0%',\n                      textAlign: 'right',\n                      borderStyle: 'hidden',\n                    }}\n                  >\n                    {' '}\n                    {workerProfile.workerGradeType}\n                  </th>\n                  <th\n                    style={{\n                      width: '15%',\n                      padding: '0%',\n                      textAlign: 'right',\n                      borderStyle: 'hidden',\n                    }}\n                  >\n                    {' '}\n                    {workerProfile.workerAppointedDate}\n                  </th>\n                  <th\n                    style={{\n                      width: '15%',\n                      padding: '0%',\n                      textAlign: 'right',\n                      borderStyle: 'hidden',\n                    }}\n                  >\n                    {' '}\n                    {workerProfile.workerStartDate}\n                  </th>\n                  <th\n                    style={{\n                      width: '15%',\n                      padding: '0%',\n                      textAlign: 'right',\n                      borderStyle: 'hidden',\n                    }}\n                  >\n                    {' '}\n                    {workerProfile.workerProvince}\n                  </th>\n                </tr>\n              </thead>\n            </table>\n          </Row>\n        </div>\n      ) : (\n        <div>No data</div>\n      )}\n    </>\n  );\n};\n\nexport default TeacherProfile;\n"],"names":["config","require","API_URL","inputLabel","fontSize","fontWeight","buttonStyle","FormikReactSelect","_ref","name","value","options","isMulti","className","onChange","onBlur","defaultValue","onClick","isDisabled","isLoading","isClearable","isRtl","isSearchable","placeholder","_jsx","Select","concat","classNamePrefix","IntlMessages","id","initial","val","FormikInputText","_ref9","otherProps","_objectWithoutProperties","_excluded","Input","_objectSpread","style","height","borderRadius","FormikDatePicker","_ref11","DatePicker","selected","_val","servicePath","teacherTransferApiUrl","_genderOptions$find","_useContext","useContext","AuthContext","institutes","contextFields","provinces","districts","console","log","_useState","useState","_useState2","_slicedToArray","isNext","teacherId","useParams","_useState3","_useState4","teacher","setTeacher","_useState5","_useState6","teacherEvaluation","setTeacherEvaluation","_useState7","_useState8","teacherHREvaluation","setTeacherHREvaluation","_useState9","_useState10","teacherTransfer","setTeacherTransfer","_useState11","_useState12","teacherEducation","setTeacherEducation","_useState13","_useState14","teacherContracts","setTeacherContracts","_useState15","_useState16","teacherIncentives","setTeacherIncentives","_useState17","_useState18","setIsLoaded","_useState19","_useState20","cvFile","setCVFile","_useState21","_useState22","startDate","setStartDate","_useState23","_useState24","endDate","setEndDate","_useState25","_useState26","setScore","_useState27","_useState28","setEvaluationDate","_useState29","_useState30","updatingRecord","setUpdatingRecord","_useState31","_useState32","loading","setLoading","fetchTeacherEvaluation","_fetchTeacherEvaluation","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee11","response","wrap","_context11","prev","next","callApi","sent","data","status","results","stop","recId","resetUpdate","_fetchTeacher","_callee12","_context12","fetchTeacherHREvaluation","_fetchTeacherHREvaluation","_callee13","_context13","then","_fetchTeacherTransfer","_callee14","_context14","t0","fetchTeacherEducation","_fetchTeacherEducation","_callee15","_context15","fetchTeacherContracts","_fetchTeacherContracts","_callee16","_context16","fetchTeacherIncentives","_fetchTeacherIncentives","_callee17","_context17","handleRecord","item","score","evaluationDate","useEffect","fetchTeacher","fetchTeacherTransfer","deleteContract","_callee","_context","_x","deleteEducation","_ref2","_callee2","_context2","_x2","deleteEvaluation","_ref3","_callee3","_context3","_x3","deleteHREvaluation","_ref4","_callee4","_context4","_x4","deleteInsentive","_ref5","_callee5","_context5","_x5","addEducation","_ref6","_callee6","inputData","_inputData$degree","_inputData$year_of_co","apiParams","formData","_context6","endPoint","method","FormData","append","degree","institute","field_of_study","year_of_completion","description","message","success","error","_x6","addContract","_ref7","_callee7","_inputData$jobType","_inputData$grade","_inputData$step","_inputData$teaching_l","_inputData$contract_t","_inputData$hireType","_inputData$institute","_inputData$field","_inputData$status","_iterator","_step","entry","_context7","jobType","grade","step","teaching_language","contract_type","hireType","field","_createForOfIteratorHelper","entries","s","n","done","delete","err","e","f","_x7","addIncentive","_callee10","_ref10","_inputData$type","_inputData$institute4","resetForm","_context10","type","details","_x10","_x11","_jsxs","_Fragment","children","Row","Colxx","xxs","src","logo","alt","width","Spinner","photo","profilePhoto","marginRight","marginBottom","Button","backgroundColor","href","target","color","Card","CardBody","paddingInline","padding","Label","father_name","genderOptions","find","op","gender","label","phone_number","email","registration_number","cover_number","page_number","year_of_birth","month_of_birth","day_of_birth","Separator","map","pro","main_province","main_district","current_province","current_district","scope","index","institution","year_completed","document","rel","BsPencilSquare","outline","Popconfirm","title","icon","BsTrashFill","onConfirm","okText","okType","cancelText","tabindex","role","Formik","enableReinitialize","initialValues","degreeTypeOptions","filter","inst","dateOfBirthOptoions","validationSchema","teacherEducationValidationSchema","onSubmit","_ref12","errors","touched","values","setFieldTouched","setFieldValue","handleSubmit","for","required","Field","files","contractTypeOptions","props","gradeOptions","stepOptions","jobTypeOptions","job_type","langOptions","start_date","end_date","_defineProperty","hireTypeOptions","hire_type","teaching_field","teacherContractStatusOptions","teacherContractValidationSchema","_ref14","display","flexDirection","justifyContent","calendar","persian","locale","persian_fa","months","persianMonthOptions","Date","toDate","getFullYear","getMonth","getDate","_institutes$find","evaluator_name","date","semester","subject","outstanding","excellent","good","average","weak","not_applicable","NavLink","to","pathname","state","_institutes$find2","_outcomeOptions$find","evaluation_date","self_total_score","upper_director_score","director_total_score","outcomeOptions","evaluation_outcome","teacherFeedbackOptions","teacherIncentivesValidationSchema","_ref15","Spin","CardTitle","Table","striped","_item$institute_id","institute_id","current_grade","current_step","new_grade","new_step","_item$institute_id2","_item$department_id","_item$class_id","_item$class_id2","department_id","class_id","topic","province","hire_date","minHeight","roughInfo","workerId","workerName","workerProvince","workerStep","workerGrade","workerGradeType","workerPosition","workerAppointedDate","workerStartDate","workerDateOfBirth","workerQualification","workerField","workerGender","workerTazkera","workerTashkilGrade","workerAppointedType","isLoaded","workerProfile","setWorkerProfile","maxHeight","textAlign","borderStyle"],"sourceRoot":""}