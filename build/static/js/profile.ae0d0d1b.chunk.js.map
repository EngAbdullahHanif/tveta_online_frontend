{"version":3,"file":"static/js/profile.ae0d0d1b.chunk.js","mappings":"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","sources":["config/index.js","config/production.js","config/styling.js","containers/form-validations/FormikFields.js","views/app/teachers/bio/teacher-profile.js","views/app/workers/worker-list/worker-profile.js"],"sourcesContent":["let config;\n\nif (process.env.NODE_ENV) {\n  if (process.env.NODE_ENV === 'production') {\n    config = require('./production');\n  } else {\n    config = require('./development');\n  }\n} else {\n  config = require('./development');\n}\n\nexport default config;\n","const API_URL = 'http://103.132.98.58:8000';\n\nexport { API_URL };\n","export const inputLabel = { fontSize: 16, fontWeight: 'bold' };\nexport const buttonStyle = { fontSize: 16 };\n","import React from 'react';\nimport Select from 'react-select';\nimport { CustomInput } from 'reactstrap';\nimport IntlMessages from 'helpers/IntlMessages';\n\nimport TagsInput from 'react-tagsinput';\nimport 'react-tagsinput/react-tagsinput.css';\nimport Switch from 'rc-switch';\nimport 'rc-switch/assets/index.css';\n\nimport DatePicker from 'react-multi-date-picker';\n\nimport 'react-datepicker/dist/react-datepicker.css';\nimport { Input } from 'antd';\n\nconst FormikReactSelect = ({\n  name,\n  value,\n  options,\n  isMulti,\n  className,\n  onChange,\n  onBlur,\n  onClick,\n  defaultValue,\n  isDisabled,\n  isLoading,\n  isClearable,\n  isRtl,\n  isSearchable,\n  placeholder,\n}) => {\n  const handleChange = (val) => {\n    onChange(name, val);\n  };\n\n  const handleBlur = () => {\n    onBlur(name, true);\n  };\n\n  return (\n    <Select\n      className={`react-select ${className}`}\n      classNamePrefix=\"react-select\"\n      placeholder={\n        placeholder || <IntlMessages id=\"forms.EducationLevelDefaultValue\" />\n      }\n      options={options}\n      isMulti={isMulti}\n      initial\n      onChange={handleChange}\n      onBlur={handleBlur}\n      value={value}\n      defaultValue={defaultValue}\n      isDisabled={isDisabled}\n      isLoading={isLoading}\n      isClearable={isClearable}\n      isRtl={isRtl}\n      isSearchable={isSearchable}\n    />\n  );\n};\n\nconst FormikCheckboxGroup = ({\n  name,\n  value,\n  options,\n  inline = false,\n  onChange,\n  onBlur,\n}) => {\n  const handleChange = (val) => {\n    const valueArray = [...value] || [];\n    if (!valueArray.includes(val)) {\n      valueArray.push(val);\n    } else {\n      valueArray.splice(valueArray.indexOf(val), 1);\n    }\n    onChange(name, valueArray);\n  };\n\n  const handleBlur = () => {\n    onBlur(name, true);\n  };\n\n  return (\n    <>\n      {options.map((child, index) => {\n        return (\n          <div\n            key={`${name}_${child.value}_${index}`}\n            className={`position-relative form-check ${\n              inline ? 'form-check-inline' : ''\n            }`}\n          >\n            <input\n              name={name}\n              type=\"checkbox\"\n              className=\"form-check-input\"\n              onChange={() => handleChange(child.value)}\n              onBlur={handleBlur}\n              defaultChecked={value.includes(child.value)}\n              disabled={child.disabled}\n            />\n            <label className=\"form-check-label\">{child.label}</label>\n          </div>\n        );\n      })}\n    </>\n  );\n};\n\nconst FormikCustomCheckboxGroup = ({\n  name,\n  value,\n  options,\n  inline = false,\n  onChange,\n  onBlur,\n}) => {\n  const handleChange = (val) => {\n    const valueArray = [...value] || [];\n    if (!valueArray.includes(val)) {\n      valueArray.push(val);\n    } else {\n      valueArray.splice(valueArray.indexOf(val), 1);\n    }\n    onChange(name, valueArray);\n  };\n\n  const handleBlur = () => {\n    onBlur(name, true);\n  };\n\n  return (\n    <>\n      {options.map((child, index) => {\n        return (\n          <CustomInput\n            key={`${name}_${child.value}_${index}`}\n            id={`${name}_${child.value}_${index}`}\n            type=\"checkbox\"\n            name={child.name}\n            label={child.label}\n            onChange={() => handleChange(child.value)}\n            onBlur={handleBlur}\n            checked={value.includes(child.value)}\n            disabled={child.disabled}\n            inline={inline}\n          />\n        );\n      })}\n    </>\n  );\n};\n\nconst FormikCheckbox = ({ name, value, disabled, label, onChange, onBlur }) => {\n  const handleChange = (_event) => {\n    onChange(name, !value);\n  };\n  const handleBlur = () => {\n    onBlur(name, true);\n  };\n  return (\n    <div className=\"position-relative form-check form-check-inline\">\n      <input\n        name={name}\n        type=\"checkbox\"\n        className=\"form-check-input\"\n        onChange={handleChange}\n        onBlur={handleBlur}\n        checked={value}\n        disabled={disabled}\n      />\n      <label className=\"form-check-label\">{label}</label>\n    </div>\n  );\n};\n\nconst FormikCustomCheckbox = ({\n  name,\n  value,\n  disabled,\n  label,\n  onChange,\n  onBlur,\n}) => {\n  const handleChange = (_event) => {\n    onChange(name, !value);\n  };\n  const handleBlur = () => {\n    onBlur(name, true);\n  };\n  return (\n    <CustomInput\n      type=\"checkbox\"\n      id={name}\n      name={name}\n      label={label}\n      onChange={handleChange}\n      onBlur={handleBlur}\n      checked={value}\n      disabled={disabled}\n      inline\n    />\n  );\n};\n\nconst FormikRadioButtonGroup = ({\n  name,\n  value,\n  options,\n  inline = false,\n  onChange,\n  onBlur,\n}) => {\n  const handleChange = (val) => {\n    onChange(name, val);\n  };\n\n  const handleBlur = () => {\n    onBlur(name, true);\n  };\n\n  return (\n    <>\n      {options.map((child, index) => {\n        return (\n          <div\n            key={`${name}_${child.value}_${index}`}\n            className={`position-relative form-check ${\n              inline ? 'form-check-inline' : ''\n            }`}\n          >\n            <input\n              id={child.value}\n              name={name}\n              type=\"radio\"\n              className=\"form-check-input\"\n              onChange={() => handleChange(child.value)}\n              onBlur={handleBlur}\n              defaultChecked={value === child.value}\n              disabled={child.disabled}\n            />\n            <label className=\"form-check-label\">{child.label}</label>\n          </div>\n        );\n      })}\n    </>\n  );\n};\n\nconst FormikCustomRadioGroup = ({\n  name,\n  value,\n  options,\n  inline = false,\n  onChange,\n  onBlur,\n}) => {\n  const handleChange = (val) => {\n    onChange(name, val);\n  };\n\n  const handleBlur = () => {\n    onBlur(name, true);\n  };\n\n  return (\n    <>\n      {options.map((child, index) => {\n        return (\n          <CustomInput\n            key={`${name}_${child.value}_${index}`}\n            type=\"radio\"\n            id={`${name}_${child.value}_${index}`}\n            name={child.name}\n            label={child.label}\n            onChange={() => handleChange(child.value)}\n            onBlur={handleBlur}\n            checked={value === child.value}\n            disabled={child.disabled}\n            inline={inline}\n          />\n        );\n      })}\n    </>\n  );\n};\n\nconst FormikTagsInput = ({ name, value, onChange, onBlur }) => {\n  const handleChange = (val) => {\n    onBlur(name, true);\n    onChange(name, val);\n  };\n\n  return <TagsInput name={name} value={value} onChange={handleChange} />;\n};\n\nconst FormikInputText = ({ name, value, onChange, onBlur, ...otherProps }) => {\n  // const handleChange = (val) => {\n  //   onBlur(name, true);\n  //   onChange(name, val);\n  // };\n  return (\n    <Input\n      name={name}\n      value={value}\n      onChange={onChange}\n      style={{ height: 48, borderRadius: 0 }}\n      {...otherProps}\n    />\n  );\n};\n\nconst FormikSwitch = ({ name, value, className, onChange, onBlur }) => {\n  const handleChange = (val) => {\n    onBlur(name, true);\n    onChange(name, val);\n  };\n\n  return (\n    <Switch\n      name={name}\n      className={className}\n      checked={value}\n      onChange={handleChange}\n    />\n  );\n};\n\nconst FormikDatePicker = ({ name, value, className, onChange, onBlur }) => {\n  const handleChange = (val) => {\n    onChange(name, val);\n  };\n\n  const handleBlur = (_val) => {\n    onBlur(name, true);\n  };\n\n  return (\n    <DatePicker\n      name={name}\n      className={className}\n      selected={value}\n      onChange={handleChange}\n      onBlur={handleBlur}\n    />\n  );\n};\n\nexport {\n  FormikReactSelect,\n  FormikCheckboxGroup,\n  FormikCustomCheckboxGroup,\n  FormikCheckbox,\n  FormikCustomCheckbox,\n  FormikRadioButtonGroup,\n  FormikCustomRadioGroup,\n  FormikTagsInput,\n  FormikInputText,\n  FormikSwitch,\n  FormikDatePicker,\n};\n","import React, { useState, useEffect, useContext } from 'react';\nimport { Formik, Field } from 'formik';\nimport { useParams } from 'react-router-dom';\n\nimport callApi from 'helpers/callApi';\nimport { AuthContext } from 'context/AuthContext';\nimport {\n  Row,\n  Card,\n  CardBody,\n  Label,\n  Button,\n  CardTitle,\n  Table,\n  // Modal,\n  // ModalHeader,\n  // ModalBody,\n  // ModalFooter,\n} from 'reactstrap';\n\nimport DatePicker from 'react-multi-date-picker';\nimport persian from 'react-date-object/calendars/persian';\nimport persian_fa from 'react-date-object/locales/persian_fa';\n\nimport {\n  contractTypeOptions,\n  dateOfBirthOptoions,\n  degreeTypeOptions,\n  evaluationTypeOptions,\n  genderOptions,\n  gradeOptions,\n  hireTypeOptions,\n  jobTypeOptions,\n  langOptions,\n  persianMonthOptions,\n  stepOptions,\n  teacherContractStatusOptions,\n  teacherFeedbackOptions,\n} from '../../global-data/options';\nimport logo from './../../../../assets/logos/AdminLogo.png';\nimport profilePhoto from './../../../../assets/img/profiles/user.png';\n\nimport IntlMessages from 'helpers/IntlMessages';\nimport { Colxx, Separator } from 'components/common/CustomBootstrap';\n\nimport { FormikReactSelect } from 'containers/form-validations/FormikFields';\nimport config from '../../../../config';\nimport {\n  teacherContractValidationSchema,\n  teacherEducationValidationSchema,\n  teacherHREvaluationValidationSchema,\n} from 'views/app/global-data/forms-validation';\nimport { message, Col, InputNumber, Slider, Spin, Popconfirm } from 'antd';\nimport { BsPencilSquare, BsTrashFill } from 'react-icons/bs';\nimport { Spinner } from 'react-bootstrap';\nimport {\n  teacherEvaluationValidationSchema,\n  teacherIncentivesValidationSchema,\n} from './../../global-data/forms-validation';\nimport { buttonStyle, inputLabel } from 'config/styling';\nconst servicePath = config.API_URL;\nconst teacherApiUrl = `${servicePath}/teachers/`;\nconst teacherEvaluationApiUrl = `${servicePath}/teachers/evaluation`;\nconst teacherHREvaluationApiUrl = `${servicePath}/teachers/hr-evaluation`;\nconst teacherTransferApiUrl = `${servicePath}/teachers/institute`;\n// const { RangePicker } = DatePicker;\n\nconst TeacherProfile = () => {\n  const {\n    departments,\n    classes,\n    subjects,\n    institutes,\n    contextFields,\n    provinces,\n    districts,\n  } = useContext(AuthContext);\n  console.log('INSTITUTES: ', institutes);\n  const [isNext, setIsNext] = useState(true);\n  const { teacherId } = useParams();\n  const [teacher, setTeacher] = useState([]);\n  const [teacherEvaluation, setTeacherEvaluation] = useState([]);\n  const [teacherHREvaluation, setTeacherHREvaluation] = useState([]);\n  const [teacherTransfer, setTeacherTransfer] = useState([]);\n  const [teacherEducation, setTeacherEducation] = useState([]);\n  const [teacherContracts, setTeacherContracts] = useState([]);\n  const [teacherIncentives, setTeacherIncentives] = useState([]);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [cvFile, setCVFile] = useState();\n  const [startDate, setStartDate] = useState();\n  const [endDate, setEndDate] = useState();\n  const [score, setScore] = useState(1);\n  const [evaluationDate, setEvaluationDate] = useState();\n  const [contractAlert, setContractAlert] = useState(false);\n  const [educationAlert, setEducationAlert] = useState(false);\n  const [evaluationAlert, setEvaluationAlert] = useState(false);\n  const [insentiveAlert, setInsentiveAlert] = useState(false);\n  const [updatingRecord, setUpdatingRecord] = useState({});\n  const [loading, setLoading] = useState(false);\n\n  const resetUpdate = () => {\n    setUpdatingRecord(null);\n    recId = null;\n    setStartDate(null);\n    setEndDate(null);\n    setScore(null);\n    setEvaluationDate(null);\n  };\n\n  async function fetchTeacher() {\n    const response = await callApi(`teachers/${teacherId}`, '', null);\n    const data = response.data;\n    setTeacher(data);\n    setIsLoaded(true);\n  }\n  async function fetchTeacherEvaluation() {\n    const response = await callApi(\n      `teachers/${teacherId}/evaluations/`,\n      '',\n      null,\n    );\n\n    console.log(`${teacherEvaluationApiUrl}/?teacher_id=${teacherId}`);\n    const data = response.data;\n    console.log('TEACHER EVALUATIONS: ', data);\n\n    setTeacherEvaluation(data);\n  }\n  async function fetchTeacherHREvaluation() {\n    await callApi(`teachers/${teacherId}/hr-evaluations/`).then((response) => {\n      const data = response.data;\n      setTeacherHREvaluation(data);\n      console.log('HR Evaluations: ', data);\n    });\n  }\n  async function fetchTeacherTransfer() {\n    try {\n      const response = await callApi(\n        `teachers/institute/?teacher_id=${teacherId}`,\n        '',\n        null,\n      );\n      const data = response.data;\n      console.log(`${teacherTransferApiUrl}/?teacher_id=${teacherId}`);\n      setTeacherTransfer(data);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  async function fetchTeacherEducation() {\n    const response = await callApi(\n      `teachers/${teacherId}/educations`,\n      '',\n      null,\n    );\n\n    const data = response.data;\n    console.log('Teacher Educations: ', data);\n    setTeacherEducation(data);\n  }\n  async function fetchTeacherContracts() {\n    const response = await callApi(\n      `teachers/${teacherId}/contracts/`,\n      '',\n      null,\n    );\n\n    const data = response.data;\n    console.log('Teacher Contracts: ', data);\n    setTeacherContracts(data);\n  }\n  async function fetchTeacherIncentives() {\n    const response = await callApi(\n      `teachers/${teacherId}/feedbacks/`,\n      '',\n      null,\n    );\n\n    const data = response.data;\n    console.log('Teacher Contracts: ', data);\n    setTeacherIncentives(data);\n  }\n  let recId;\n  const handleRecord = (item) => {\n    console.log('ITEMMMMM: ', item);\n    recId = item.id;\n    setUpdatingRecord(item);\n    setStartDate(item.startDate);\n    setEndDate(item.endDate);\n    setScore(item.score);\n    setEvaluationDate(item.evaluationDate);\n  };\n  useEffect(() => {\n    fetchTeacher();\n    fetchTeacherEvaluation();\n    fetchTeacherHREvaluation();\n    fetchTeacherTransfer();\n    fetchTeacherEducation();\n    fetchTeacherContracts();\n    // fetchInstitutes();\n    fetchTeacherIncentives();\n    // fetchFields();\n  }, []);\n\n  const deleteContract = async (item) => {\n    await callApi(`teachers/${teacherId}/contracts/${item}/`, 'DELETE').then(\n      (response) => {\n        console.log('Response in Contract Delete: ', response.data);\n        fetchTeacherContracts();\n      },\n    );\n  };\n  const deleteEducation = async (item) => {\n    await callApi(`teachers/${teacherId}/educations/${item}/`, 'DELETE').then(\n      (response) => {\n        console.log('Response in Education Delete: ', response.data);\n        fetchTeacherEducation();\n      },\n    );\n  };\n  const deleteEvaluation = async (item) => {\n    await callApi(`teachers/${teacherId}/evaluations/${item}/`, 'DELETE').then(\n      (response) => {\n        console.log('Response in Education Delete: ', response.data);\n        fetchTeacherEvaluation();\n      },\n    );\n  };\n  const deleteHREvaluation = async (item) => {\n    await callApi(\n      `teachers/${teacherId}/hr-evaluations/${item}/`,\n      'DELETE',\n    ).then((response) => {\n      console.log('Response in Education Delete: ', response.data);\n      fetchTeacherHREvaluation();\n    });\n  };\n  const deleteInsentive = async (item) => {\n    await callApi(`teachers/${teacherId}/feedbacks/${item}/`, 'DELETE').then(\n      (response) => {\n        console.log('Response in Incentive Delete: ', response.data);\n        fetchTeacherIncentives();\n      },\n    );\n  };\n  const addEducation = async (inputData) => {\n    setLoading(true);\n    let apiParams = {\n      endPoint: `teachers/${teacherId}/educations/`,\n      method: 'POST',\n    };\n    if (recId || updatingRecord.id) {\n      apiParams.endPoint = `teachers/${teacherId}/educations/${updatingRecord.id}/`;\n      apiParams.method = 'PATCH';\n    }\n    console.log('File: ', cvFile);\n    console.log('Form Data in Teacher Education: ', inputData);\n    const formData = new FormData();\n    cvFile && formData.append('document', cvFile);\n    formData.append('degree', inputData.degree?.value);\n    formData.append('institution', inputData.institute);\n    formData.append('field_of_study', inputData.field_of_study);\n    formData.append('year_completed', inputData.year_of_completion?.value);\n    formData.append('description', inputData.description);\n    formData.append('teacher', teacherId);\n    console.log('API PARAMS: ', apiParams);\n    await callApi(apiParams.endPoint, apiParams.method, formData).then(\n      (response) => {\n        console.log('RESPONSE in teacher Education: ', response.data);\n        if (response.status >= 200 && response.status <= 299) {\n          setLoading(false);\n          message.success('Education Added');\n          fetchTeacherEducation();\n          // window.location.reload();\n          resetUpdate();\n        } else {\n          message.error('Data Not Saved Check your Payload');\n        }\n      },\n    );\n  };\n\n  const addContract = async (inputData) => {\n    setLoading(true);\n    let apiParams = {\n      endPoint: `teachers/${teacherId}/contracts/`,\n      method: 'POST',\n    };\n    if (recId || updatingRecord.id) {\n      apiParams.endPoint = `teachers/${teacherId}/contracts/${updatingRecord.id}/`;\n      apiParams.method = 'PATCH';\n    }\n    console.log('File: ', cvFile);\n    console.log('Form Data in Teacher Contract: ', inputData);\n    const formData = new FormData();\n    formData.append('document', cvFile);\n    formData.append('job_type', inputData.jobType?.value);\n    formData.append('grade', inputData.grade?.value);\n    formData.append('step', inputData.step?.value);\n    formData.append('teaching_language', inputData.teaching_language?.value);\n    formData.append('contract_type', inputData.contract_type?.value);\n    formData.append('hire_type', inputData.hireType?.value);\n    formData.append('start_date', startDate);\n    endDate && formData.append('end_date', endDate);\n    formData.append('teacher', teacherId);\n    formData.append('institute', inputData.institute?.value);\n    formData.append('teaching_field', inputData.field?.value);\n    formData.append('status', inputData.status?.value);\n\n    for (const entry of formData.entries()) {\n      console.log(entry);\n      if (entry[1] === 'undefined') {\n        formData.delete(entry[0]);\n      }\n    }\n    await callApi(apiParams.endPoint, apiParams.method, formData).then(\n      (response) => {\n        console.log('RESPONSE in teacher Evaluation;: ', response.data);\n\n        if (response.status >= 200 && response.status < 300) {\n          setLoading(false);\n          message.success('Data Saved Successfully');\n          fetchTeacherContracts();\n          // window.location.reload();\n          resetUpdate();\n        } else {\n          message.error('Data Not Saved Check your Payload');\n        }\n      },\n    );\n  };\n\n  const addEvaluation = async (inputData) => {\n    setLoading(true);\n    console.log('Form Data in Teacher HR Evaluation: ', inputData);\n    let apiParams = {\n      endPoint: `teachers/evaluation-create/`,\n      method: 'POST',\n    };\n    if (recId || updatingRecord.id) {\n      apiParams.endPoint = `teachers/${teacherId}/evaluations/${updatingRecord.id}/`;\n      apiParams.method = 'PATCH';\n    }\n    const data = {\n      topic: inputData.topic,\n      evaluator_name: inputData.evaluator_name,\n      evaluation_type: inputData.evaluation_type?.value,\n      strong_points: inputData.strong_points,\n      weak_points: inputData.weak_points,\n      suggestions: inputData.suggestions,\n      score,\n      evaluation_date: evaluationDate,\n      teacher: teacher.id,\n      institute: inputData.institute?.value,\n      department: inputData.department?.value,\n      classs: inputData.classs?.value,\n      subject: inputData.subject?.value,\n    };\n    console.log('Evaluation Date: ', data);\n    await callApi(apiParams.endPoint, apiParams.method, data).then(\n      (response) => {\n        console.log('RESPONSE in teacher Contract;: ', response.data);\n\n        if (response.status >= 200 && response.status < 300) {\n          setLoading(false);\n          message.success('Data Saved Successfully');\n          fetchTeacherEvaluation();\n          // window.location.reload();\n          resetUpdate();\n        } else {\n          message.error('Data Not Saved Check your Payload');\n        }\n      },\n    );\n  };\n\n  const addHREvaluation = async (inputData) => {\n    setLoading(true);\n    let apiParams = {\n      endPoint: `teachers/${teacherId}/hr-evaluations/`,\n      method: 'POST',\n    };\n    if (recId || updatingRecord.id) {\n      apiParams.endPoint = `teachers/${teacherId}/hr-evaluations/${updatingRecord.id}/`;\n      apiParams.method = 'PATCH';\n    }\n    const data = {\n      evaluator_name: inputData.evaluator_name,\n      score,\n      educational_year: '1402',\n      evaluation_date: evaluationDate,\n      teacher: teacher.id,\n      institute: inputData.institute?.value,\n      new_grade: inputData.grade?.value,\n      new_step: inputData.step?.value,\n    };\n    console.log('HR Evaluation Data: ', data);\n    await callApi(apiParams.endPoint, apiParams.method, data).then(\n      (response) => {\n        console.log('RESPONSE in teacher HR Evaluation;: ', response.data);\n\n        if (response.status >= 200 && response.status < 300) {\n          setLoading(false);\n          message.success('Data Saved Successfully');\n          fetchTeacherHREvaluation();\n          // window.location.reload();\n          resetUpdate();\n        } else {\n          message.error('Data Not Saved Check your Payload');\n        }\n      },\n    );\n  };\n  const addIncentive = async (inputData, { resetForm }) => {\n    setLoading(true);\n    let apiParams = {\n      endPoint: `teachers/${teacherId}/feedbacks/`,\n      method: 'POST',\n    };\n    if (recId || updatingRecord.id) {\n      apiParams.endPoint = `teachers/${teacherId}/feedbacks/${updatingRecord.id}/`;\n      apiParams.method = 'PATCH';\n    }\n    const data = {\n      type: inputData.type?.value,\n      teacher: teacher.id,\n      institute: inputData.institute?.value,\n      details: inputData.details,\n    };\n    console.log('Incentive Data Data: ', data);\n    await callApi(apiParams.endPoint, apiParams.method, data).then(\n      (response) => {\n        console.log('RESPONSE in teacher Incentive Data: ', response.data);\n        resetUpdate();\n        if (response.status >= 200 && response.status < 300) {\n          setLoading(false);\n          message.success('Data Saved Successfully');\n          fetchTeacherIncentives();\n          resetForm();\n          resetUpdate();\n        } else {\n          message.error('Data Not Saved Check your Payload');\n        }\n      },\n    );\n    setLoading(false);\n  };\n\n  return (\n    <>\n      <Row>\n        <Colxx className=\"mt-5 m-5\" xxs=\"8\">\n          <h2>{<IntlMessages id=\"teacher.Profile\" />}</h2>\n        </Colxx>\n        <Colxx className=\"mt-4 max\">\n          <div className=\"d-flex align-items-center flex-column\">\n            <img src={logo} alt=\"Logo\" width={'30%'} />\n            <p>\n              د تخنیکی او مسلکی زده کړو اداره\n              <br />\n              اداره تعلیمات تخنیکی و مسلکی\n            </p>\n          </div>\n        </Colxx>\n      </Row>\n      {loading && <Spinner />}\n      <Row>\n        <Colxx xxs=\"1\"></Colxx>\n        <Colxx>\n          <img src={teacher?.photo || profilePhoto} alt=\"Photo\" width={'10%'} />\n        </Colxx>\n      </Row>\n      <Row>\n        <Colxx\n          className=\" d-flex justify-content-center\"\n          style={{ marginRight: '2%' }}\n        >\n          <div className=\"d-inline-block\">\n            <Row>\n              <Colxx\n                className=\" d-flex justify-content-center \"\n                style={{ marginBottom: '2%' }}\n              >\n                <div className=\"d-inline-block\">\n                  <Button\n                    style={{\n                      backgroundColor: 'blue',\n                      fontWeight: 'bold',\n                      fontSize: '18px',\n                    }}\n                  >\n                    <a\n                      href={`/app/teachers/print/${teacherId}`}\n                      target=\"_blank\"\n                    >\n                      <span className=\"label\" style={{ color: '#fff' }}>\n                        پرنت\n                      </span>\n                    </a>\n                  </Button>\n                </div>\n              </Colxx>\n            </Row>\n          </div>\n        </Colxx>\n      </Row>\n      {teacher && (\n        <>\n          {isNext ? (\n            <>\n              <Card className=\"rounded m-4\">\n                <CardBody>\n                  <div>\n                    <Row>\n                      <Colxx className=\" pt-5\" style={{ paddingInline: '3%' }}>\n                        <h2\n                          className=\"bg-primary \"\n                          style={{\n                            padding: '8px',\n                            paddingInline: '30px',\n                            borderRadius: '10px',\n                          }}\n                        >\n                          <IntlMessages id=\"forms.personalInfo\" />\n                        </h2>\n                      </Colxx>\n                    </Row>\n                    <Row className=\"justify-content-center   rounded \">\n                      <Colxx style={{ paddingInline: '4%' }} xxs=\"\">\n                        <Label style={inputLabel}>\n                          <IntlMessages id=\"teacher.NameLabel\" />\n                        </Label>\n                        <h2>{teacher.name}</h2>\n\n                        <Label style={inputLabel}>\n                          <IntlMessages id=\"teacher.FatherNameLabel\" />\n                        </Label>\n                        <h2>{teacher.father_name}</h2>\n                        <Label style={inputLabel}>\n                          <IntlMessages id=\"teacher.GrandFatherNameLabel\" />\n                        </Label>\n                        <h2>{teacher.father_name}</h2>\n\n                        <Label style={inputLabel}>\n                          <IntlMessages id=\"gender.gender\" />\n                        </Label>\n                        <h2>\n                          {\n                            genderOptions.find(\n                              (op) => op.value === teacher.gender,\n                            )?.label\n                          }\n                        </h2>\n\n                        <Label style={inputLabel}>\n                          <IntlMessages id=\"teacher.PhoneNoLabel\" />\n                        </Label>\n                        <h2>{teacher.phone_number}</h2>\n                        <Label style={inputLabel}>\n                          <IntlMessages id=\"teacher.EmailLabel\" />\n                        </Label>\n                        <h2>{teacher.email}</h2>\n                        <br />\n                        <br />\n                      </Colxx>\n                      <Colxx style={{ paddingInline: '4%' }}>\n                        <Label style={inputLabel}>\n                          <IntlMessages id=\"forms.StdTazkiraNoLabel\" />\n                        </Label>\n                        <h2>{teacher.registration_number}</h2>\n                        <Label style={inputLabel}>\n                          <IntlMessages id=\"forms.StdIdCardCoverLabel\" />\n                        </Label>\n                        <h2>{teacher.cover_number}</h2>\n                        <Label style={inputLabel}>\n                          <IntlMessages id=\"forms.StdIdCardPageNoLabel\" />\n                        </Label>\n                        <h2>{teacher.page_number}</h2>\n                        <Label style={inputLabel}>\n                          <IntlMessages id=\"forms.StdDoBLabel\" />\n                        </Label>\n                        <h2>\n                          {teacher.year_of_birth}-\n                          {teacher.month_of_birth || 'میاشت'}-\n                          {teacher.day_of_birth || 'ورځ'}\n                        </h2>\n                        <Label style={inputLabel}>\n                          <IntlMessages id=\"forms.EducationLevelLabel\" />\n                        </Label>\n                        <h2>ماستر</h2>\n                        <Label style={inputLabel}>\n                          <IntlMessages id=\"teacher.MajorLabel\" />\n                        </Label>\n                        <h2>Mechannical Engineering</h2>\n                        <br />\n                        <br />\n                      </Colxx>\n                    </Row>\n                    <Row>\n                      <Colxx style={{ paddingInline: '4%' }}>\n                        <h2\n                          className=\"bg-primary rounded \"\n                          style={{ padding: '1%', paddingInline: '3%' }}\n                        >\n                          <IntlMessages id=\"forms.PermanentAddressLabel\" />\n                        </h2>\n                        <Separator />\n                        <br />\n                        <Row>\n                          <Colxx>\n                            <Label style={inputLabel}>\n                              <IntlMessages id=\"forms.ProvinceLabel\" />\n                            </Label>\n                            <h2>\n                              {provinces.map((pro) => {\n                                if (teacher.main_province === pro.value)\n                                  return pro.label;\n                              })}\n                            </h2>\n                          </Colxx>\n                          <Colxx>\n                            <Label style={inputLabel}>\n                              <IntlMessages id=\"forms.DistrictLabel\" />\n                            </Label>\n                            <h2>\n                              {districts.map((pro) => {\n                                if (teacher.main_district === pro.value)\n                                  return pro.label;\n                              })}\n                            </h2>\n                          </Colxx>\n                        </Row>\n                      </Colxx>\n                      <Colxx style={{ paddingInline: '4%' }}>\n                        <h2\n                          className=\"bg-primary rounded \"\n                          style={{ padding: '1%', paddingInline: '3%' }}\n                        >\n                          <IntlMessages id=\"forms.CurrentAddresslabel\" />\n                        </h2>\n                        <Separator />\n                        <br />\n                        <Row>\n                          <Colxx>\n                            <Label style={inputLabel}>\n                              <IntlMessages id=\"forms.ProvinceLabel\" />\n                            </Label>\n                            <h2>\n                              {provinces.map((pro) => {\n                                if (teacher.current_province === pro.value)\n                                  return pro.label;\n                              })}\n                            </h2>\n                          </Colxx>\n                          <Colxx>\n                            <Label style={inputLabel}>\n                              <IntlMessages id=\"forms.DistrictLabel\" />\n                            </Label>\n                            <h2>\n                              {districts.map((pro) => {\n                                if (teacher.current_district === pro.value)\n                                  return pro.label;\n                              })}\n                            </h2>\n                          </Colxx>\n                        </Row>\n                      </Colxx>\n                    </Row>\n                  </div>\n                </CardBody>\n              </Card>\n              {/* Education Details Start */}\n              <Card className=\"rounded m-4 mt-5\">\n                <CardBody>\n                  <Colxx className=\" pt-5\" style={{ paddingInline: '3%' }}>\n                    <h2\n                      className=\"bg-primary \"\n                      style={{\n                        padding: '8px',\n                        paddingInline: '30px',\n                        borderRadius: '10px',\n                      }}\n                    >\n                      تحصیلات\n                    </h2>\n                  </Colxx>\n\n                  <Row className=\"justify-content-center   rounded \">\n                    <Colxx style={{ paddingInline: '4%' }}>\n                      {/* <Modal\n                        isOpen={educationAlert}\n                        toggle={() => setEducationAlert(!educationAlert)}\n                        style={{ marginTop: '10%' }}\n                      >\n                        <ModalHeader>\n                          <IntlMessages id=\"modal.deletion-message-title\" />\n                        </ModalHeader>\n                        <ModalBody className=\"text-center\">\n                          <IntlMessages id=\"modal.deletion-message-details\" />\n                        </ModalBody>\n                        <ModalFooter>\n                          <Button\n                            style={buttonStyle}\n                            onClick={() => setEducationAlert(false)}\n                          >\n                            نه/ نخیر\n                          </Button>\n                          <Button\n                            style={buttonStyle}\n                            color=\"danger\"\n                            onClick={() => {\n                              setEducationAlert(false);\n                              // deleteEducation(item?.id);\n                            }}\n                          >\n                            هو / بلی\n                          </Button>\n                        </ModalFooter>\n                      </Modal> */}\n                      <table\n                        className=\"table table-striped  table-lg\"\n                        style={{ fontSize: 18 }}\n                      >\n                        <thead>\n                          <tr>\n                            <th scope=\"col\">آیدی</th>\n                            <th scope=\"col\">پوهنتون/مرجع</th>\n                            <th scope=\"col\">درجه تحصیلی</th>\n                            <th scope=\"col\">رشته</th>\n                            <th scope=\"col\">د فراغت کال/سال فراغت</th>\n                            <th scope=\"col\">آسناد/ سی وی</th>\n                            <th scope=\"col\">توضیحات</th>\n                            <th scope=\"col\">ایدیت/دیلیت</th>\n                          </tr>\n                        </thead>\n                        <tbody>\n                          {teacherEducation.map((item, index) => {\n                            return (\n                              <tr>\n                                <th scope=\"row\">{item.id}</th>\n                                <td>{item.institution}</td>\n                                <td>{item.degree}</td>\n                                <td>{item.field_of_study}</td>\n                                <td>{item.year_completed}</td>\n                                <td>\n                                  <a\n                                    href={item.document}\n                                    target=\"_blank\"\n                                    rel=\"noopener noreferrer\"\n                                  >\n                                    Download\n                                  </a>\n                                </td>\n                                <td>{item.description}</td>\n                                <td>\n                                  <BsPencilSquare\n                                    color=\"green\"\n                                    data-toggle=\"modal\"\n                                    data-target=\"#exampleModal\"\n                                    data-whatever=\"@getbootstrap\"\n                                    outline\n                                    style={{ fontSize: '20px' }}\n                                    id=\"updateIcon\"\n                                    onClick={() => handleRecord(item)}\n                                  />\n\n                                  <Popconfirm\n                                    title=\"ډلیټ\"\n                                    icon={\n                                      <BsTrashFill\n                                        color=\"red\"\n                                        id=\"deleteIcon\"\n                                        outline\n                                        style={{ fontSize: '20px' }}\n                                      />\n                                    }\n                                    description={`مطمعین یاست چې  (${item.id})  ډیلیټ کړی. `}\n                                    onConfirm={() => deleteEducation(item.id)}\n                                    okText=\"ډیلیټ\"\n                                    okType=\"danger\"\n                                    cancelText=\"نه\"\n                                  >\n                                    <BsTrashFill\n                                      color=\"red\"\n                                      id=\"deleteIcon\"\n                                      outline\n                                      style={{ fontSize: '20px' }}\n                                    />\n                                  </Popconfirm>\n                                </td>\n                              </tr>\n                            );\n                          })}\n                        </tbody>\n                      </table>\n\n                      <br />\n                      <br />\n                      <Button\n                        style={buttonStyle}\n                        className=\"btn btn-primary\"\n                        data-toggle=\"modal\"\n                        data-target=\"#exampleModal\"\n                        data-whatever=\"@getbootstrap\"\n                      >\n                        اضافه نمودن تحصیل\n                      </Button>\n\n                      <div\n                        className=\"modal fade\"\n                        id=\"exampleModal\"\n                        tabindex=\"-1\"\n                        role=\"dialog\"\n                        aria-labelledby=\"exampleModalLabel\"\n                        aria-hidden=\"true\"\n                      >\n                        <div className=\"modal-dialog\" role=\"document\">\n                          <div className=\"modal-content\">\n                            <div className=\"modal-header\">\n                              <h5\n                                className=\"modal-title\"\n                                id=\"exampleModalLabel\"\n                              >\n                                ثبت تحصیل استاد\n                              </h5>\n                              <button\n                                type=\"button\"\n                                className=\"close\"\n                                data-dismiss=\"modal\"\n                                aria-label=\"Close\"\n                                onClick={resetUpdate}\n                              >\n                                <span aria-hidden=\"true\">&times;</span>\n                              </button>\n                            </div>\n                            <div className=\"modal-body\">\n                              <Formik\n                                enableReinitialize={true}\n                                initialValues={\n                                  !updatingRecord\n                                    ? {\n                                        degree: [],\n                                        institute: '',\n                                        field_of_study: '',\n                                        year_of_completion: [],\n                                        description: '',\n                                      }\n                                    : {\n                                        degree: degreeTypeOptions.filter(\n                                          (inst) => {\n                                            if (\n                                              inst.value ===\n                                              updatingRecord.degree\n                                            )\n                                              return inst;\n                                          },\n                                        ),\n                                        institute: updatingRecord?.institution,\n\n                                        field_of_study:\n                                          updatingRecord.field_of_study,\n                                        year_of_completion:\n                                          dateOfBirthOptoions.filter((inst) => {\n                                            if (\n                                              inst.value ===\n                                              updatingRecord.year_completed\n                                            )\n                                              return inst;\n                                          }),\n                                        description: updatingRecord.description,\n                                      }\n                                }\n                                validationSchema={\n                                  teacherEducationValidationSchema\n                                }\n                                onSubmit={(formData) => {\n                                  addEducation(formData);\n                                }}\n                              >\n                                {({\n                                  errors,\n                                  touched,\n                                  values,\n                                  setFieldTouched,\n                                  setFieldValue,\n                                  handleSubmit,\n                                }) => (\n                                  <>\n                                    <form>\n                                      <div className=\"form-group\">\n                                        <label\n                                          style={inputLabel}\n                                          for=\"degree\"\n                                          className=\"col-form-label\"\n                                        >\n                                          دگری\n                                          <span style={{ color: 'red' }}>\n                                            *\n                                          </span>\n                                        </label>\n                                        <FormikReactSelect\n                                          name=\"degree\"\n                                          id=\"degree\"\n                                          value={values.degree}\n                                          options={degreeTypeOptions}\n                                          onChange={setFieldValue}\n                                          onBlur={setFieldTouched}\n                                          required\n                                        />\n                                        {touched.degree && errors.degree ? (\n                                          <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                                            {errors.degree}\n                                          </div>\n                                        ) : null}\n                                      </div>\n                                      <div className=\"form-group\">\n                                        <label\n                                          style={inputLabel}\n                                          for=\"recipient-name\"\n                                          className=\"col-form-label\"\n                                        >\n                                          پوهنتون/انستیتوت\n                                          <span style={{ color: 'red' }}>\n                                            *\n                                          </span>\n                                        </label>\n                                        <Field\n                                          className=\"form-control fieldStyle\"\n                                          name=\"institute\"\n                                        />\n                                        {errors.institute &&\n                                        touched.institute ? (\n                                          <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                                            {errors.institute}\n                                          </div>\n                                        ) : null}\n                                      </div>\n                                      <div className=\"form-group\">\n                                        <label\n                                          style={inputLabel}\n                                          for=\"field_of_study\"\n                                          className=\"col-form-label\"\n                                        >\n                                          رشته\n                                          <span style={{ color: 'red' }}>\n                                            *\n                                          </span>\n                                        </label>\n                                        <Field\n                                          className=\"form-control fieldStyle\"\n                                          name=\"field_of_study\"\n                                        />\n                                        {errors.field_of_study &&\n                                        touched.field_of_study ? (\n                                          <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                                            {errors.field_of_study}\n                                          </div>\n                                        ) : null}\n                                      </div>\n                                      <div className=\"form-group\">\n                                        <label\n                                          style={inputLabel}\n                                          for=\"year_of_completion\"\n                                          className=\"col-form-label\"\n                                        >\n                                          سال تکمیل\n                                          <span style={{ color: 'red' }}>\n                                            *\n                                          </span>\n                                        </label>\n\n                                        <FormikReactSelect\n                                          name=\"year_of_completion\"\n                                          id=\"year_of_completion\"\n                                          defaultValue={\n                                            values?.year_of_completion\n                                          }\n                                          options={dateOfBirthOptoions}\n                                          onChange={setFieldValue}\n                                          onBlur={setFieldTouched}\n                                          required\n                                        />\n                                        {errors.year_of_completion &&\n                                        touched.year_of_completion ? (\n                                          <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                                            {errors.year_of_completion}\n                                          </div>\n                                        ) : null}\n                                      </div>\n\n                                      <div className=\"form-group\">\n                                        <label\n                                          style={inputLabel}\n                                          for=\"description\"\n                                          className=\"col-form-label\"\n                                        >\n                                          جزئیات\n                                        </label>\n                                        <Field\n                                          className=\"form-control fieldStyle\"\n                                          name=\"description\"\n                                        />\n                                      </div>\n                                      <div className=\"form-group\">\n                                        <label\n                                          style={inputLabel}\n                                          for=\"recipient-name\"\n                                          className=\"col-form-label\"\n                                        >\n                                          اسناد\n                                          <span style={{ color: 'red' }}>\n                                            *\n                                          </span>\n                                        </label>\n                                        <input\n                                          className=\"form-control\"\n                                          type=\"file\"\n                                          id=\"formFile\"\n                                          onChange={(e) => {\n                                            setCVFile(e.target.files[0]);\n                                          }}\n                                        />\n                                      </div>\n                                    </form>\n                                    <div className=\"modal-footer\">\n                                      <button\n                                        style={buttonStyle}\n                                        type=\"button\"\n                                        className=\"btn btn-secondary\"\n                                        data-dismiss=\"modal\"\n                                        onClick={resetUpdate}\n                                      >\n                                        لغو\n                                      </button>\n                                      <button\n                                        style={buttonStyle}\n                                        type=\"submit\"\n                                        className=\"btn btn-primary\"\n                                        // data-dismiss=\"modal\"\n                                        onClick={handleSubmit}\n                                      >\n                                        اضافه تعلیم/تحصیل\n                                      </button>\n                                    </div>\n                                  </>\n                                )}\n                              </Formik>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </Colxx>\n                  </Row>\n                </CardBody>\n              </Card>\n              {/* Education Details End */}\n              {/* Contract Details Start */}\n              <Card className=\"rounded m-4 mt-5\">\n                <CardBody>\n                  <Colxx className=\" pt-5\" style={{ paddingInline: '3%' }}>\n                    <h2\n                      className=\"bg-primary \"\n                      style={{\n                        padding: '8px',\n                        paddingInline: '30px',\n                        borderRadius: '10px',\n                      }}\n                    >\n                      <IntlMessages id=\"قرارداد\" />\n                    </h2>\n                  </Colxx>\n\n                  <Row className=\"justify-content-center   rounded\">\n                    <Colxx style={{ paddingInline: '4%' }}>\n                      <table\n                        className=\"table table-striped table-lg\"\n                        style={{ fontSize: 18 }}\n                      >\n                        <thead>\n                          <tr>\n                            <th scope=\"col\">آیدی</th>\n                            <th scope=\"col\">نوع قرارداد/ قرارداد ډول</th>\n                            <th scope=\"col\">بست</th>\n                            <th scope=\"col\">قدم</th>\n                            <th scope=\"col\">نوع وظیفه</th>\n                            <th scope=\"col\">زبان</th>\n                            <th scope=\"col\">مدت قرارداد</th>\n                            <th scope=\"col\">آسناد</th>\n                            <th scope=\"col\">آیدیت/ دیلیت</th>\n                          </tr>\n                        </thead>\n                        <tbody>\n                          {teacherContracts.map((item, index) => {\n                            return (\n                              <tr>\n                                <th scope=\"row\">{item.id}</th>\n                                <td>\n                                  {contractTypeOptions.map((inst) => {\n                                    if (inst.value === item.contract_type)\n                                      return (\n                                        <IntlMessages\n                                          id={inst.label.props.id}\n                                        />\n                                      );\n                                  })}\n                                </td>\n                                <td>\n                                  {gradeOptions.map((inst) => {\n                                    if (inst.value === item.grade)\n                                      return (\n                                        <IntlMessages\n                                          id={inst.label.props.id}\n                                        />\n                                      );\n                                  })}\n                                </td>\n                                <td>\n                                  {stepOptions.map((inst) => {\n                                    if (inst.value === item.step)\n                                      return (\n                                        <IntlMessages\n                                          id={inst.label.props.id}\n                                        />\n                                      );\n                                  })}\n                                </td>\n                                <td>\n                                  {jobTypeOptions.map((inst) => {\n                                    if (inst.value === item.job_type)\n                                      return inst.label;\n                                  })}\n                                </td>\n                                <td>\n                                  {langOptions.map((inst) => {\n                                    if (inst.value === item.teaching_language)\n                                      return (\n                                        <IntlMessages\n                                          id={inst.label.props.id}\n                                        />\n                                      );\n                                  })}\n                                </td>\n                                <td>\n                                  {item.start_date}-{item.end_date}\n                                </td>\n                                <td>\n                                  <a\n                                    href={item.document}\n                                    target=\"_blank\"\n                                    rel=\"noopener noreferrer\"\n                                  >\n                                    ډاونلوډ\n                                  </a>\n                                </td>\n                                <td>{item.description}</td>\n                                <td>\n                                  <BsPencilSquare\n                                    color=\"green\"\n                                    data-toggle=\"modal\"\n                                    data-target=\"#contractModal\"\n                                    data-whatever=\"@getbootstrap\"\n                                    outline\n                                    style={{ fontSize: '20px' }}\n                                    id=\"updateIcon\"\n                                    onClick={() => handleRecord(item)}\n                                  />\n\n                                  <Popconfirm\n                                    title=\"ډلیټ\"\n                                    icon={\n                                      <BsTrashFill\n                                        color=\"red\"\n                                        id=\"deleteIcon\"\n                                        outline\n                                        style={{ fontSize: '20px' }}\n                                      />\n                                    }\n                                    description={`مطمعین یاست چې  (${item.id})  ډیلیټ کړی. `}\n                                    onConfirm={() => deleteContract(item.id)}\n                                    okText=\"ډیلیټ\"\n                                    okType=\"danger\"\n                                    cancelText=\"نه\"\n                                  >\n                                    <BsTrashFill\n                                      color=\"red\"\n                                      id=\"deleteIcon\"\n                                      outline\n                                      // onClick={() => setInsentiveAlert(true)}\n                                      style={{ fontSize: '20px' }}\n                                    />\n                                  </Popconfirm>\n                                </td>\n                              </tr>\n                            );\n                          })}\n                        </tbody>\n                      </table>\n\n                      <br />\n                      <br />\n                      <Button\n                        style={buttonStyle}\n                        className=\"btn btn-primary\"\n                        data-toggle=\"modal\"\n                        data-target=\"#contractModal\"\n                        data-whatever=\"@getbootstrap\"\n                      >\n                        اضافه نمودن قرارداد\n                      </Button>\n\n                      <div\n                        className=\"modal fade\"\n                        id=\"contractModal\"\n                        tabindex=\"-1\"\n                        role=\"dialog\"\n                        aria-labelledby=\"contractModalLabel\"\n                        aria-hidden=\"true\"\n                      >\n                        <div className=\"modal-dialog\" role=\"document\">\n                          <div className=\"modal-content\">\n                            <div className=\"modal-header\">\n                              <h5\n                                className=\"modal-title\"\n                                id=\"contractModalLabel\"\n                              >\n                                ثبت قرارداد استاد\n                              </h5>\n                              <button\n                                type=\"button\"\n                                className=\"close\"\n                                data-dismiss=\"modal\"\n                                aria-label=\"Close\"\n                                // onClick={resetUpdate}\n                              >\n                                <span aria-hidden=\"true\">&times;</span>\n                              </button>\n                            </div>\n                            <div className=\"modal-body\">\n                              <Formik\n                                enableReinitialize={true}\n                                initialValues={\n                                  !updatingRecord\n                                    ? {\n                                        jobType: [],\n                                        grade: [],\n                                        step: [],\n                                        teaching_language: [],\n                                        hireType: [],\n                                        contract_type: [],\n                                        institute: [],\n                                        field: [],\n                                        status: [],\n                                      }\n                                    : {\n                                        jobType: jobTypeOptions.find(\n                                          (inst) =>\n                                            inst.value ===\n                                            updatingRecord.job_type,\n                                        ),\n                                        grade: gradeOptions.find(\n                                          (inst) =>\n                                            inst.value === updatingRecord.grade,\n                                        ),\n                                        step: stepOptions.find(\n                                          (inst) =>\n                                            inst.value === updatingRecord.step,\n                                        ),\n                                        teaching_language: langOptions.find(\n                                          (inst) =>\n                                            inst.value ===\n                                            updatingRecord.teaching_language,\n                                        ),\n                                        hireType: hireTypeOptions.find(\n                                          (inst) =>\n                                            inst.value ===\n                                            updatingRecord.hire_type,\n                                        ),\n                                        contract_type: contractTypeOptions.find(\n                                          (inst) =>\n                                            inst.value ===\n                                            updatingRecord.contract_type,\n                                        ),\n                                        institute: institutes.find(\n                                          (inst) =>\n                                            inst.value ===\n                                            updatingRecord.institute,\n                                        ),\n                                        field: contextFields.find(\n                                          (inst) =>\n                                            inst.value ===\n                                            updatingRecord.teaching_field,\n                                        ),\n                                        status:\n                                          teacherContractStatusOptions.find(\n                                            (inst) =>\n                                              inst.value ===\n                                              updatingRecord.status,\n                                          ),\n                                        jobType: jobTypeOptions.find(\n                                          (inst) =>\n                                            inst.value ===\n                                            updatingRecord.job_type,\n                                        ),\n                                      }\n                                }\n                                validationSchema={\n                                  teacherContractValidationSchema\n                                }\n                                onSubmit={addContract}\n                              >\n                                {({\n                                  errors,\n                                  touched,\n                                  values,\n                                  setFieldTouched,\n                                  setFieldValue,\n                                  handleSubmit,\n                                }) => (\n                                  <>\n                                    <form>\n                                      <div\n                                        style={{\n                                          display: 'flex',\n                                          flexDirection: 'row',\n                                        }}\n                                      >\n                                        <div className=\"form-group w-100\">\n                                          <label\n                                            style={inputLabel}\n                                            for=\"institute\"\n                                            className=\"col-form-label\"\n                                          >\n                                            انستتیوت\n                                            <span style={{ color: 'red' }}>\n                                              *\n                                            </span>\n                                          </label>\n                                          <FormikReactSelect\n                                            name=\"institute\"\n                                            id=\"institute\"\n                                            value={values.institute}\n                                            options={institutes}\n                                            onChange={setFieldValue}\n                                            onBlur={setFieldTouched}\n                                            required\n                                          />\n                                          {errors.institute &&\n                                          touched.institute ? (\n                                            <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                                              {errors.institute}\n                                            </div>\n                                          ) : null}\n                                        </div>\n                                        <div className=\"form-group w-100\">\n                                          <label\n                                            style={inputLabel}\n                                            for=\"field\"\n                                            className=\"col-form-label\"\n                                          >\n                                            رشته\n                                            <span style={{ color: 'red' }}>\n                                              *\n                                            </span>\n                                          </label>\n\n                                          <FormikReactSelect\n                                            name=\"field\"\n                                            id=\"field\"\n                                            value={values?.field}\n                                            options={contextFields}\n                                            onChange={setFieldValue}\n                                            onBlur={setFieldTouched}\n                                            required\n                                          />\n\n                                          {errors.field && touched.field ? (\n                                            <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                                              {errors.field}\n                                            </div>\n                                          ) : null}\n                                        </div>\n                                      </div>\n\n                                      <div className=\"form-group\">\n                                        <label\n                                          style={inputLabel}\n                                          for=\"jobType\"\n                                          className=\"col-form-label\"\n                                        >\n                                          ده دندی ډول\n                                          <span style={{ color: 'red' }}>\n                                            *\n                                          </span>\n                                        </label>\n                                        <FormikReactSelect\n                                          name=\"jobType\"\n                                          id=\"jobType\"\n                                          value={values.jobType}\n                                          options={jobTypeOptions}\n                                          onChange={setFieldValue}\n                                          onBlur={setFieldTouched}\n                                          required\n                                        />\n                                        {errors.jobType && touched.jobType ? (\n                                          <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                                            {errors.jobType}\n                                          </div>\n                                        ) : null}\n                                      </div>\n\n                                      <div\n                                        style={{\n                                          display: 'flex',\n                                          flexDirection: 'row',\n                                        }}\n                                      >\n                                        <div className=\"form-group w-100\">\n                                          <label\n                                            style={inputLabel}\n                                            for=\"grade\"\n                                            className=\"col-form-label\"\n                                          >\n                                            بست\n                                            <span style={{ color: 'red' }}>\n                                              *\n                                            </span>\n                                          </label>\n\n                                          <FormikReactSelect\n                                            name=\"grade\"\n                                            id=\"grade\"\n                                            value={values.grade}\n                                            options={gradeOptions}\n                                            onChange={setFieldValue}\n                                            onBlur={setFieldTouched}\n                                            required\n                                          />\n                                          {errors.grade && touched.grade ? (\n                                            <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                                              {errors.grade}\n                                            </div>\n                                          ) : null}\n                                        </div>\n                                        <div className=\"form-group w-100\">\n                                          <label\n                                            style={inputLabel}\n                                            for=\"step\"\n                                            className=\"col-form-label\"\n                                          >\n                                            قدم\n                                            <span style={{ color: 'red' }}>\n                                              *\n                                            </span>\n                                          </label>\n                                          <FormikReactSelect\n                                            name=\"step\"\n                                            id=\"step\"\n                                            value={values.step}\n                                            options={stepOptions}\n                                            onChange={setFieldValue}\n                                            onBlur={setFieldTouched}\n                                            required\n                                          />\n                                          {errors.step && touched.step ? (\n                                            <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                                              {errors.step}\n                                            </div>\n                                          ) : null}\n                                        </div>\n                                      </div>\n\n                                      <div className=\"form-group\">\n                                        <label\n                                          style={inputLabel}\n                                          for=\"teaching_language\"\n                                          className=\"col-form-label\"\n                                        >\n                                          ده تدریس ژبه\n                                          <span style={{ color: 'red' }}>\n                                            *\n                                          </span>\n                                        </label>\n                                        <FormikReactSelect\n                                          name=\"teaching_language\"\n                                          id=\"teaching_language\"\n                                          value={values.teaching_language}\n                                          options={langOptions}\n                                          onChange={setFieldValue}\n                                          onBlur={setFieldTouched}\n                                          required\n                                        />\n                                        {errors.teaching_language &&\n                                        touched.teaching_language ? (\n                                          <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                                            {errors.teaching_language}\n                                          </div>\n                                        ) : null}\n                                      </div>\n                                      <div className=\"form-group\">\n                                        <label\n                                          style={inputLabel}\n                                          for=\"contractType\"\n                                          className=\"col-form-label\"\n                                        >\n                                          قرارداد ډول\n                                          <span style={{ color: 'red' }}>\n                                            *\n                                          </span>\n                                        </label>\n                                        <FormikReactSelect\n                                          name=\"contract_type\"\n                                          id=\"contract_type\"\n                                          value={values.contract_type}\n                                          options={contractTypeOptions}\n                                          onChange={setFieldValue}\n                                          onBlur={setFieldTouched}\n                                          required\n                                        />\n                                        {errors.contract_type &&\n                                        touched.contract_type ? (\n                                          <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                                            {errors.contract_type}\n                                          </div>\n                                        ) : null}\n                                      </div>\n                                      <div className=\"form-group\">\n                                        <label\n                                          style={inputLabel}\n                                          for=\"hireType\"\n                                          className=\"col-form-label\"\n                                        >\n                                          استخدام ډول\n                                          <span style={{ color: 'red' }}>\n                                            *\n                                          </span>\n                                        </label>\n                                        <FormikReactSelect\n                                          name=\"hireType\"\n                                          id=\"hireType\"\n                                          value={values.hireType}\n                                          options={hireTypeOptions}\n                                          onChange={setFieldValue}\n                                          onBlur={setFieldTouched}\n                                          required\n                                        />\n                                        {errors.hireType && touched.hireType ? (\n                                          <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                                            {errors.hireType}\n                                          </div>\n                                        ) : null}\n                                      </div>\n\n                                      <div\n                                        style={{\n                                          display: 'flex',\n                                          flexDirection: 'row',\n                                          justifyContent: 'space-between',\n                                        }}\n                                      >\n                                        <div>\n                                          <label\n                                            style={inputLabel}\n                                            for=\"year_of_completion\"\n                                            className=\"col-form-label\"\n                                          >\n                                            قرارداد شروع تاریخ\n                                          </label>\n                                          <br />\n\n                                          <DatePicker\n                                            name=\"startDate\"\n                                            calendar={persian}\n                                            locale={persian_fa}\n                                            value={updatingRecord?.start_date}\n                                            months={persianMonthOptions}\n                                            onChange={(e) =>\n                                              setStartDate(\n                                                new Date(\n                                                  e.toDate(),\n                                                ).getFullYear() +\n                                                  '-' +\n                                                  (new Date(\n                                                    e.toDate(),\n                                                  ).getMonth() +\n                                                    1) +\n                                                  '-' +\n                                                  new Date(\n                                                    e.toDate(),\n                                                  ).getDate(),\n                                              )\n                                            }\n                                          />\n                                        </div>\n                                        <div>\n                                          <label\n                                            style={inputLabel}\n                                            for=\"year_of_completion\"\n                                            className=\"col-form-label\"\n                                          >\n                                            قرارداد پای تاریخ\n                                          </label>\n                                          <br />\n\n                                          <DatePicker\n                                            name=\"endDate\"\n                                            calendar={persian}\n                                            value={updatingRecord?.end_date}\n                                            locale={persian_fa}\n                                            months={persianMonthOptions}\n                                            onChange={(e) => {\n                                              if (!e) return;\n                                              setEndDate(\n                                                new Date(\n                                                  e.toDate(),\n                                                ).getFullYear() +\n                                                  '-' +\n                                                  (new Date(\n                                                    e.toDate(),\n                                                  ).getMonth() +\n                                                    1) +\n                                                  '-' +\n                                                  new Date(\n                                                    e.toDate(),\n                                                  ).getDate(),\n                                              );\n                                            }}\n                                          />\n                                        </div>\n                                      </div>\n\n                                      <div className=\"form-group w-100\">\n                                        <label\n                                          style={inputLabel}\n                                          for=\"institute\"\n                                          className=\"col-form-label\"\n                                        >\n                                          حالت قرارداد\n                                          <span style={{ color: 'red' }}>\n                                            *\n                                          </span>\n                                        </label>\n                                        <FormikReactSelect\n                                          name=\"status\"\n                                          id=\"status\"\n                                          value={values.status}\n                                          options={teacherContractStatusOptions}\n                                          onChange={setFieldValue}\n                                          onBlur={setFieldTouched}\n                                          required\n                                        />\n                                        {errors.status && touched.status ? (\n                                          <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                                            {errors.status}\n                                          </div>\n                                        ) : null}\n                                      </div>\n\n                                      <div className=\"form-group\">\n                                        <label\n                                          style={inputLabel}\n                                          for=\"recipient-name\"\n                                          className=\"col-form-label\"\n                                        >\n                                          اسناد\n                                          <span style={{ color: 'red' }}>\n                                            *\n                                          </span>\n                                        </label>\n                                        <input\n                                          className=\"form-control\"\n                                          type=\"file\"\n                                          id=\"formFile\"\n                                          onChange={(e) => {\n                                            setCVFile(e.target.files[0]);\n                                          }}\n                                        />\n                                      </div>\n                                    </form>\n                                    <div className=\"modal-footer\">\n                                      <button\n                                        style={buttonStyle}\n                                        type=\"button\"\n                                        className=\"btn btn-secondary\"\n                                        data-dismiss=\"modal\"\n                                        onClick={resetUpdate}\n                                      >\n                                        لغو‍\n                                      </button>\n                                      <button\n                                        style={buttonStyle}\n                                        type=\"submit\"\n                                        className=\"btn btn-primary\"\n                                        // data-dismiss=\"modal\"\n                                        onClick={handleSubmit}\n                                      >\n                                        ثبت\n                                      </button>\n                                    </div>\n                                  </>\n                                )}\n                              </Formik>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </Colxx>\n                  </Row>\n                </CardBody>\n              </Card>\n              {/* Contract Details End */}\n              {/* Evaluation Details Start */}\n              <Card className=\"rounded m-4 mt-5\">\n                <CardBody>\n                  <Colxx className=\" pt-5\" style={{ paddingInline: '3%' }}>\n                    <h2\n                      className=\"bg-primary \"\n                      style={{\n                        padding: '8px',\n                        paddingInline: '30px',\n                        borderRadius: '10px',\n                      }}\n                    >\n                      <IntlMessages id=\"ارزیابی\" />\n                    </h2>\n                  </Colxx>\n\n                  <Row className=\"justify-content-center   rounded\">\n                    <Colxx style={{ paddingInline: '4%' }}>\n                      <table\n                        className=\"table table-striped table-lg\"\n                        style={{ fontSize: 18 }}\n                      >\n                        <thead>\n                          <tr>\n                            <th scope=\"col\">آیدی</th>\n                            <th scope=\"col\">\n                              د ارزوونکی نوم/ نام ارزیابی کننده\n                            </th>\n                            <th scope=\"col\">د ارزونی ډول/ نوع ارزیابی</th>\n                            <th scope=\"col\">د ارزیابی نېټه/ تاریخ ارزیابی</th>\n                            <th scope=\"col\">انسستیوت</th>\n                            <th scope=\"col\">نمره</th>\n                            <th scope=\"col\">قوی نقطې/نقاط قوت</th>\n                            <th scope=\"col\">ضعیفې نقطې/ نقاط ضعف</th>\n                            <th scope=\"col\">توسعه</th>\n                            <th scope=\"col\">آیډیټ/ دیلیت</th>\n                          </tr>\n                        </thead>\n                        <tbody>\n                          {teacherEvaluation.map((item, index) => {\n                            return (\n                              <tr>\n                                <th scope=\"row\">{item.id}</th>\n                                <td>{item.evaluator_name}</td>\n                                <td>{item.evaluation_type}</td>\n                                <td>{item.evaluation_date}</td>\n                                <td>{item.institute}</td>\n\n                                <td>{item.score}</td>\n                                <td>{item.strong_points}</td>\n                                <td>{item.weak_points}</td>\n                                <td>{item.suggestions}</td>\n                                <td>\n                                  {/* <a\n                                    data-toggle=\"modal\"\n                                    data-target=\"#evaluationModal\"\n                                    data-whatever=\"@getbootstrap\"\n                                  >\n                                    Edit\n                                  </a>\n                                  /<a>Delete</a> */}\n                                  <BsPencilSquare\n                                    color=\"green\"\n                                    data-toggle=\"modal\"\n                                    data-target=\"#evaluationModal\"\n                                    data-whatever=\"@getbootstrap\"\n                                    outline\n                                    style={{ fontSize: '20px' }}\n                                    id=\"updateIcon\"\n                                    onClick={() => handleRecord(item)}\n                                  />\n\n                                  <Popconfirm\n                                    title=\"ډلیټ\"\n                                    icon={\n                                      <BsTrashFill\n                                        color=\"red\"\n                                        id=\"deleteIcon\"\n                                        outline\n                                        style={{ fontSize: '20px' }}\n                                      />\n                                    }\n                                    description={`مطمعین یاست چې  (${item.id})  ډیلیټ کړی. `}\n                                    onConfirm={() => deleteEvaluation(item.id)}\n                                    okText=\"ډیلیټ\"\n                                    okType=\"danger\"\n                                    cancelText=\"نه\"\n                                  >\n                                    <BsTrashFill\n                                      color=\"red\"\n                                      id=\"deleteIcon\"\n                                      outline\n                                      // onClick={() => setInsentiveAlert(true)}\n                                      style={{ fontSize: '20px' }}\n                                    />\n                                  </Popconfirm>\n                                </td>\n                              </tr>\n                            );\n                          })}\n                        </tbody>\n                      </table>\n                      <br />\n                      <br />\n                      <Button\n                        style={buttonStyle}\n                        className=\"btn btn-primary\"\n                        data-toggle=\"modal\"\n                        data-target=\"#evaluationModal\"\n                        data-whatever=\"@getbootstrap\"\n                      >\n                        اضافه نمودن ارزیابی\n                      </Button>\n\n                      <div\n                        className=\"modal fade\"\n                        id=\"evaluationModal\"\n                        tabindex=\"-1\"\n                        role=\"dialog\"\n                        aria-labelledby=\"evaluationModalLabel\"\n                        aria-hidden=\"true\"\n                      >\n                        <div className=\"modal-dialog\" role=\"document\">\n                          <div className=\"modal-content\">\n                            <div className=\"modal-header\">\n                              <h5\n                                className=\"modal-title\"\n                                id=\"evaluationModalLabel\"\n                              >\n                                ثبت ارزیابی\n                              </h5>\n                              <button\n                                type=\"button\"\n                                className=\"close\"\n                                data-dismiss=\"modal\"\n                                aria-label=\"Close\"\n                              >\n                                <span aria-hidden=\"true\">&times;</span>\n                              </button>\n                            </div>\n                            <div className=\"modal-body\">\n                              <Formik\n                                enableReinitialize={true}\n                                initialValues={\n                                  !updatingRecord\n                                    ? {\n                                        topic: '',\n                                        evaluator_name: '',\n                                        evaluation_type: [],\n                                        strong_points: '',\n                                        weak_points: '',\n                                        suggestions: '',\n                                        evaluation_date: '',\n                                        institute: [],\n                                        department: [],\n                                        classs: [],\n                                        subject: [],\n                                      }\n                                    : {\n                                        topic: updatingRecord.topic,\n                                        evaluator_name:\n                                          updatingRecord.evaluator_name,\n                                        evaluation_type:\n                                          evaluationTypeOptions.find(\n                                            (inst) =>\n                                              inst.value ===\n                                              updatingRecord.evaluation_type,\n                                          ),\n                                        strong_points:\n                                          updatingRecord.strong_points,\n                                        weak_points: updatingRecord.weak_points,\n                                        suggestions: updatingRecord.suggestions,\n                                        evaluation_date:\n                                          updatingRecord.evaluation_date,\n                                        institute: institutes.find(\n                                          (inst) =>\n                                            inst.value ===\n                                            updatingRecord.institute,\n                                        ),\n                                        department: departments.find(\n                                          (dep) =>\n                                            dep.value ===\n                                            updatingRecord.department,\n                                        ),\n                                        classs: classes.find(\n                                          (dep) =>\n                                            dep.value === updatingRecord.classs,\n                                        ),\n                                        subject: subjects.find(\n                                          (dep) =>\n                                            dep.value ===\n                                            updatingRecord.subject,\n                                        ),\n                                      }\n                                }\n                                validationSchema={\n                                  teacherEvaluationValidationSchema\n                                }\n                                onSubmit={(formData) => {\n                                  addEvaluation(formData);\n                                }}\n                              >\n                                {({\n                                  errors,\n                                  touched,\n                                  values,\n                                  setFieldTouched,\n                                  setFieldValue,\n                                  handleSubmit,\n                                }) => (\n                                  <>\n                                    <form>\n                                      <div\n                                        style={{\n                                          display: 'flex',\n                                          flexDirection: 'row',\n                                        }}\n                                      >\n                                        <div className=\"form-group w-100\">\n                                          <label\n                                            style={inputLabel}\n                                            for=\"evaluator_name\"\n                                            className=\"col-form-label\"\n                                          >\n                                            ارزیابی کننده\n                                            <span style={{ color: 'red' }}>\n                                              *\n                                            </span>\n                                          </label>\n                                          <Field\n                                            className=\"form-control fieldStyle\"\n                                            name=\"evaluator_name\"\n                                          />\n                                          {errors.evaluator_name &&\n                                          touched.evaluator_name ? (\n                                            <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                                              {errors.evaluator_name}\n                                            </div>\n                                          ) : null}\n                                        </div>\n                                        <div className=\"form-group w-100\">\n                                          <label\n                                            style={inputLabel}\n                                            for=\"evaluation_type\"\n                                            className=\"col-form-label\"\n                                          >\n                                            ارزیابی ډول\n                                            <span style={{ color: 'red' }}>\n                                              *\n                                            </span>\n                                          </label>\n                                          <FormikReactSelect\n                                            name=\"evaluation_type\"\n                                            id=\"evaluation_type\"\n                                            value={values.evaluation_type}\n                                            options={evaluationTypeOptions}\n                                            onChange={setFieldValue}\n                                            onBlur={setFieldTouched}\n                                            required\n                                          />\n                                          {errors.evaluation_type &&\n                                          touched.evaluation_type ? (\n                                            <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                                              {errors.evaluation_type}\n                                            </div>\n                                          ) : null}\n                                        </div>\n                                      </div>\n\n                                      <div\n                                        style={{\n                                          display: 'flex',\n                                          flexDirection: 'row',\n                                        }}\n                                      >\n                                        <div className=\"form-group w-100\">\n                                          <label\n                                            style={inputLabel}\n                                            for=\"institute\"\n                                            className=\"col-form-label\"\n                                          >\n                                            انستتیوت\n                                            <span style={{ color: 'red' }}>\n                                              *\n                                            </span>\n                                          </label>\n                                          <FormikReactSelect\n                                            name=\"institute\"\n                                            id=\"institute\"\n                                            value={values.institute}\n                                            options={institutes}\n                                            onChange={setFieldValue}\n                                            onBlur={setFieldTouched}\n                                            required\n                                          />\n                                          {errors.institute &&\n                                          touched.institute ? (\n                                            <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                                              {errors.institute}\n                                            </div>\n                                          ) : null}\n                                        </div>\n                                        <div className=\"form-group w-100\">\n                                          <label\n                                            style={inputLabel}\n                                            for=\"department\"\n                                            className=\"col-form-label\"\n                                          >\n                                            ډیپارتمنت\n                                            <span style={{ color: 'red' }}>\n                                              *\n                                            </span>\n                                          </label>\n                                          <FormikReactSelect\n                                            name=\"department\"\n                                            id=\"department\"\n                                            value={values.department}\n                                            options={departments}\n                                            onChange={setFieldValue}\n                                            onBlur={setFieldTouched}\n                                            required\n                                          />\n                                          {errors.department &&\n                                          touched.department ? (\n                                            <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                                              {errors.department}\n                                            </div>\n                                          ) : null}\n                                        </div>\n                                      </div>\n                                      <div className=\"form-group\">\n                                        <label\n                                          style={inputLabel}\n                                          for=\"classs\"\n                                          className=\"col-form-label\"\n                                        >\n                                          صنف\n                                          <span style={{ color: 'red' }}>\n                                            *\n                                          </span>\n                                        </label>\n                                        <FormikReactSelect\n                                          name=\"classs\"\n                                          id=\"classs\"\n                                          value={values.classs}\n                                          options={classes}\n                                          onChange={setFieldValue}\n                                          onBlur={setFieldTouched}\n                                          required\n                                        />\n                                        {errors.classs && touched.classs ? (\n                                          <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                                            {errors.classs}\n                                          </div>\n                                        ) : null}\n                                      </div>\n                                      <div\n                                        style={{\n                                          display: 'flex',\n                                          flexDirection: 'row',\n                                        }}\n                                      >\n                                        <div className=\"form-group w-100\">\n                                          <label\n                                            style={inputLabel}\n                                            for=\"subject\"\n                                            className=\"col-form-label\"\n                                          >\n                                            مضمون\n                                            <span style={{ color: 'red' }}>\n                                              *\n                                            </span>\n                                          </label>\n\n                                          <FormikReactSelect\n                                            name=\"subject\"\n                                            id=\"subject\"\n                                            value={values.subject}\n                                            options={subjects}\n                                            onChange={setFieldValue}\n                                            onBlur={setFieldTouched}\n                                            required\n                                          />\n                                          {errors.subject && touched.subject ? (\n                                            <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                                              {errors.subject}\n                                            </div>\n                                          ) : null}\n                                        </div>\n                                        <div className=\"\">\n                                          <label\n                                            style={inputLabel}\n                                            for=\"year_of_completion\"\n                                            className=\"col-form-label\"\n                                          >\n                                            ارزیابی تاریخ\n                                            <span style={{ color: 'red' }}>\n                                              *\n                                            </span>\n                                          </label>\n                                          <br />\n\n                                          <DatePicker\n                                            style={{\n                                              width: '100%',\n                                              height: 38,\n                                              borderRadius: 0,\n                                            }}\n                                            name=\"evaluation_date\"\n                                            calendar={persian}\n                                            locale={persian_fa}\n                                            value={\n                                              updatingRecord?.evaluation_date\n                                            }\n                                            months={persianMonthOptions}\n                                            onChange={(e) =>\n                                              setEvaluationDate(\n                                                new Date(\n                                                  e.toDate(),\n                                                ).getFullYear() +\n                                                  '-' +\n                                                  (new Date(\n                                                    e.toDate(),\n                                                  ).getMonth() +\n                                                    1) +\n                                                  '-' +\n                                                  new Date(\n                                                    e.toDate(),\n                                                  ).getDate(),\n                                              )\n                                            }\n                                          />\n                                        </div>\n                                      </div>\n\n                                      <div className=\"form-group\">\n                                        <label\n                                          style={inputLabel}\n                                          for=\"topic\"\n                                          className=\"col-form-label\"\n                                        >\n                                          موضوع\n                                          <span style={{ color: 'red' }}>\n                                            *\n                                          </span>\n                                        </label>\n                                        <Field\n                                          className=\"form-control fieldStyle\"\n                                          name=\"topic\"\n                                        />\n                                        {errors.topic && touched.topic ? (\n                                          <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                                            {errors.topic}\n                                          </div>\n                                        ) : null}\n                                      </div>\n\n                                      <div className=\"form-group\">\n                                        <label\n                                          style={inputLabel}\n                                          for=\"strong_points\"\n                                          className=\"col-form-label\"\n                                        >\n                                          مثبت پواینت\n                                          <span style={{ color: 'red' }}>\n                                            *\n                                          </span>\n                                        </label>\n                                        <Field\n                                          className=\"form-control fieldStyle\"\n                                          name=\"strong_points\"\n                                        />\n                                        {errors.strong_points &&\n                                        touched.strong_points ? (\n                                          <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                                            {errors.strong_points}\n                                          </div>\n                                        ) : null}\n                                      </div>\n                                      <div className=\"form-group\">\n                                        <label\n                                          style={inputLabel}\n                                          for=\"weak_points\"\n                                          className=\"col-form-label\"\n                                        >\n                                          منفی پواینت\n                                          <span style={{ color: 'red' }}>\n                                            *\n                                          </span>\n                                        </label>\n                                        <Field\n                                          className=\"form-control fieldStyle\"\n                                          name=\"weak_points\"\n                                        />\n                                        {errors.weak_points &&\n                                        touched.weak_points ? (\n                                          <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                                            {errors.weak_points}\n                                          </div>\n                                        ) : null}\n                                      </div>\n\n                                      <div className=\"form-group\">\n                                        <label\n                                          style={inputLabel}\n                                          for=\"suggestions\"\n                                          className=\"col-form-label\"\n                                        >\n                                          توسعه\n                                          <span style={{ color: 'red' }}>\n                                            *\n                                          </span>\n                                        </label>\n                                        <Field\n                                          className=\"form-control fieldStyle\"\n                                          name=\"suggestions\"\n                                        />\n                                        {errors.suggestions &&\n                                        touched.suggestions ? (\n                                          <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                                            {errors.suggestions}\n                                          </div>\n                                        ) : null}\n                                      </div>\n                                      <label\n                                        style={inputLabel}\n                                        for=\"score\"\n                                        className=\"col-form-label\"\n                                      >\n                                        نمری\n                                        <span style={{ color: 'red' }}>*</span>\n                                      </label>\n                                      <div\n                                        style={{\n                                          display: 'flex',\n                                          flexDirection: 'row',\n                                          justifyContent: 'space-between',\n                                        }}\n                                      >\n                                        <Col span={4}>\n                                          <InputNumber\n                                            min={1}\n                                            max={10}\n                                            style={{ margin: '0 16px' }}\n                                            value={score}\n                                            onChange={(val) => setScore(val)}\n                                          />\n                                        </Col>\n                                        <Col span={17}>\n                                          <Slider\n                                            min={1}\n                                            max={10}\n                                            onChange={(val) => setScore(val)}\n                                            value={\n                                              typeof score === 'number'\n                                                ? score\n                                                : 0\n                                            }\n                                          />\n                                        </Col>\n                                      </div>\n                                    </form>\n                                    <div className=\"modal-footer\">\n                                      <button\n                                        style={buttonStyle}\n                                        type=\"button\"\n                                        className=\"btn btn-secondary\"\n                                        data-dismiss=\"modal\"\n                                        onClick={resetUpdate}\n                                      >\n                                        لغو\n                                      </button>\n                                      <button\n                                        style={buttonStyle}\n                                        type=\"submit\"\n                                        className=\"btn btn-primary\"\n                                        // data-dismiss=\"modal\"\n                                        onClick={handleSubmit}\n                                      >\n                                        ثبت\n                                      </button>\n                                    </div>\n                                  </>\n                                )}\n                              </Formik>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </Colxx>\n                  </Row>\n\n                  {/* HR Evaluation */}\n                  <Colxx className=\" pt-5\" style={{ paddingInline: '3%' }}>\n                    <h2\n                      className=\"bg-primary \"\n                      style={{\n                        padding: '8px',\n                        paddingInline: '30px',\n                        borderRadius: '10px',\n                      }}\n                    >\n                      <IntlMessages id=\"ارزیابی منابع بشری\" />\n                    </h2>\n                  </Colxx>\n\n                  <Row className=\"justify-content-center   rounded\">\n                    <Colxx style={{ paddingInline: '4%' }}>\n                      <table\n                        className=\"table table-striped table-lg\"\n                        style={{ fontSize: 18 }}\n                      >\n                        <thead>\n                          <tr>\n                            <th scope=\"col\">آیدی</th>\n                            <th scope=\"col\">اسم ارزیابی کننده</th>\n                            <th scope=\"col\">تاریخ ارزیابی نېټه</th>\n                            <th scope=\"col\">انسستتیوت</th>\n                            <th scope=\"col\">نمره</th>\n                            <th scope=\"col\">بست فعلی</th>\n                            <th scope=\"col\">بست جدید</th>\n                            <th scope=\"col\">حالت</th>\n                            <th scope=\"col\">ایډیټ/ډیلیټ</th>\n                          </tr>\n                        </thead>\n                        <tbody>\n                          {teacherHREvaluation.map((item, index) => {\n                            return (\n                              <tr>\n                                <th scope=\"row\">{item.id}</th>\n                                <td>{item.evaluator_name}</td>\n                                <td>{item.evaluation_date}</td>\n                                <td>{item.institute}</td>\n\n                                <td>{item.score}</td>\n                                <td>{item.current_grade}</td>\n                                <td>{item.new_grade}</td>\n                                <td>{item.review_status}</td>\n                                <td>\n                                  <BsPencilSquare\n                                    color=\"green\"\n                                    data-toggle=\"modal\"\n                                    data-target=\"#hrEvaluationModal\"\n                                    data-whatever=\"@getbootstrap\"\n                                    outline\n                                    style={{ fontSize: '20px' }}\n                                    id=\"updateIcon\"\n                                    onClick={() => handleRecord(item)}\n                                  />\n\n                                  <Popconfirm\n                                    title=\"ډلیټ\"\n                                    icon={\n                                      <BsTrashFill\n                                        color=\"red\"\n                                        id=\"deleteIcon\"\n                                        outline\n                                        style={{ fontSize: '20px' }}\n                                      />\n                                    }\n                                    description={`مطمعین یاست چې  (${item.id})  ډیلیټ کړی. `}\n                                    onConfirm={() =>\n                                      deleteHREvaluation(item.id)\n                                    }\n                                    okText=\"ډیلیټ\"\n                                    okType=\"danger\"\n                                    cancelText=\"نه\"\n                                  >\n                                    <BsTrashFill\n                                      color=\"red\"\n                                      id=\"deleteIcon\"\n                                      outline\n                                      // onClick={() => setInsentiveAlert(true)}\n                                      style={{ fontSize: '20px' }}\n                                    />\n                                  </Popconfirm>\n                                </td>\n                              </tr>\n                            );\n                          })}\n                        </tbody>\n                      </table>\n                      <br />\n                      <br />\n                      <Button\n                        style={buttonStyle}\n                        className=\"btn btn-primary\"\n                        data-toggle=\"modal\"\n                        data-target=\"#hrEvaluationModal\"\n                        data-whatever=\"@getbootstrap\"\n                      >\n                        اضافه نمودن ارزیابی منابع بشری\n                      </Button>\n\n                      <div\n                        className=\"modal fade\"\n                        id=\"hrEvaluationModal\"\n                        tabindex=\"-1\"\n                        role=\"dialog\"\n                        aria-labelledby=\"hrEvaluationModalLabel\"\n                        aria-hidden=\"true\"\n                      >\n                        <div className=\"modal-dialog\" role=\"document\">\n                          <div className=\"modal-content\">\n                            <div className=\"modal-header\">\n                              <h5\n                                className=\"modal-title\"\n                                id=\"hrEvaluationModalLabel\"\n                              >\n                                ثبت ارزیابی منابع بشری\n                              </h5>\n                              <button\n                                type=\"button\"\n                                className=\"close\"\n                                data-dismiss=\"modal\"\n                                aria-label=\"Close\"\n                              >\n                                <span aria-hidden=\"true\">&times;</span>\n                              </button>\n                            </div>\n                            <div className=\"modal-body\">\n                              <Formik\n                                enableReinitialize={true}\n                                initialValues={\n                                  !updatingRecord\n                                    ? {\n                                        evaluator_name: '',\n                                        evaluation_date: '',\n                                        institute: [],\n                                        grade: [],\n                                        step: [],\n                                      }\n                                    : {\n                                        evaluator_name:\n                                          updatingRecord.evaluator_name,\n                                        evaluation_date:\n                                          updatingRecord.evaluation_date,\n                                        institute: institutes.filter((inst) => {\n                                          if (\n                                            inst.value ===\n                                            updatingRecord.institute\n                                          )\n                                            return inst;\n                                        }),\n                                        grade: gradeOptions.filter((inst) => {\n                                          if (\n                                            inst.value ===\n                                            updatingRecord.new_grade\n                                          )\n                                            return inst;\n                                        }),\n                                        step: stepOptions.filter((inst) => {\n                                          if (\n                                            inst.value ===\n                                            updatingRecord.new_step\n                                          )\n                                            return inst;\n                                        }),\n                                      }\n                                }\n                                validationSchema={\n                                  teacherHREvaluationValidationSchema\n                                }\n                                onSubmit={(formData) => {\n                                  addHREvaluation(formData);\n                                }}\n                              >\n                                {({\n                                  errors,\n                                  touched,\n                                  values,\n                                  setFieldTouched,\n                                  setFieldValue,\n                                  handleSubmit,\n                                }) => (\n                                  <>\n                                    <form>\n                                      <div className=\"form-group w-100\">\n                                        <label\n                                          style={inputLabel}\n                                          for=\"evaluator_name\"\n                                          className=\"col-form-label\"\n                                        >\n                                          ارزیابی کننده\n                                          <span style={{ color: 'red' }}>\n                                            *\n                                          </span>\n                                        </label>\n                                        <Field\n                                          className=\"form-control fieldStyle\"\n                                          name=\"evaluator_name\"\n                                        />\n                                        {errors.evaluator_name &&\n                                        touched.evaluator_name ? (\n                                          <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                                            {errors.evaluator_name}\n                                          </div>\n                                        ) : null}\n                                      </div>\n\n                                      <div\n                                        style={{\n                                          display: 'flex',\n                                          flexDirection: 'row',\n                                        }}\n                                      >\n                                        <div className=\"form-group w-100\">\n                                          <label\n                                            style={inputLabel}\n                                            for=\"institute\"\n                                            className=\"col-form-label\"\n                                          >\n                                            انستتیوت\n                                            <span style={{ color: 'red' }}>\n                                              *\n                                            </span>\n                                          </label>\n                                          <FormikReactSelect\n                                            name=\"institute\"\n                                            id=\"institute\"\n                                            value={values.institute}\n                                            options={institutes}\n                                            onChange={setFieldValue}\n                                            onBlur={setFieldTouched}\n                                            required\n                                          />\n                                          {errors.institute &&\n                                          touched.institute ? (\n                                            <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                                              {errors.institute}\n                                            </div>\n                                          ) : null}\n                                        </div>\n                                      </div>\n                                      <div\n                                        style={{\n                                          display: 'flex',\n                                          flexDirection: 'row',\n                                        }}\n                                      >\n                                        <div className=\"form-group w-100\">\n                                          <label\n                                            style={inputLabel}\n                                            for=\"grade\"\n                                            className=\"col-form-label\"\n                                          >\n                                            بست\n                                            <span style={{ color: 'red' }}>\n                                              *\n                                            </span>\n                                          </label>\n\n                                          <FormikReactSelect\n                                            name=\"grade\"\n                                            id=\"grade\"\n                                            value={values.grade}\n                                            options={gradeOptions}\n                                            onChange={setFieldValue}\n                                            onBlur={setFieldTouched}\n                                            required\n                                          />\n                                          {errors.grade && touched.grade ? (\n                                            <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                                              {errors.grade}\n                                            </div>\n                                          ) : null}\n                                        </div>\n                                        <div className=\"form-group w-100\">\n                                          <label\n                                            style={inputLabel}\n                                            for=\"step\"\n                                            className=\"col-form-label\"\n                                          >\n                                            قدم\n                                            <span style={{ color: 'red' }}>\n                                              *\n                                            </span>\n                                          </label>\n                                          <FormikReactSelect\n                                            name=\"step\"\n                                            id=\"step\"\n                                            value={values.step}\n                                            options={stepOptions}\n                                            onChange={setFieldValue}\n                                            onBlur={setFieldTouched}\n                                            required\n                                          />\n                                          {errors.step && touched.step ? (\n                                            <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                                              {errors.step}\n                                            </div>\n                                          ) : null}\n                                        </div>\n                                      </div>\n\n                                      <div\n                                        style={{\n                                          display: 'flex',\n                                          flexDirection: 'row',\n                                        }}\n                                      >\n                                        <div className=\"\">\n                                          <label\n                                            style={inputLabel}\n                                            for=\"year_of_completion\"\n                                            className=\"col-form-label\"\n                                          >\n                                            ارزیابی تاریخ\n                                            <span style={{ color: 'red' }}>\n                                              *\n                                            </span>\n                                          </label>\n                                          <br />\n\n                                          <DatePicker\n                                            placeholder=\"Date\"\n                                            style={{\n                                              width: '100%',\n                                              height: 38,\n                                              borderRadius: 0,\n                                            }}\n                                            name=\"evaluation_date\"\n                                            calendar={persian}\n                                            locale={persian_fa}\n                                            value={\n                                              updatingRecord?.evaluation_date\n                                            }\n                                            months={persianMonthOptions}\n                                            onChange={(e) =>\n                                              setEvaluationDate(\n                                                new Date(\n                                                  e.toDate(),\n                                                ).getFullYear() +\n                                                  '-' +\n                                                  (new Date(\n                                                    e.toDate(),\n                                                  ).getMonth() +\n                                                    1) +\n                                                  '-' +\n                                                  new Date(\n                                                    e.toDate(),\n                                                  ).getDate(),\n                                              )\n                                            }\n                                          />\n                                        </div>\n                                      </div>\n\n                                      <label\n                                        style={inputLabel}\n                                        for=\"score\"\n                                        className=\"col-form-label\"\n                                      >\n                                        نمری\n                                        <span style={{ color: 'red' }}>*</span>\n                                      </label>\n                                      <div\n                                        style={{\n                                          display: 'flex',\n                                          flexDirection: 'row',\n                                          justifyContent: 'space-between',\n                                        }}\n                                      >\n                                        <Col span={4}>\n                                          <InputNumber\n                                            min={1}\n                                            max={10}\n                                            style={{ margin: '0 16px' }}\n                                            value={score}\n                                            onChange={(val) => setScore(val)}\n                                          />\n                                        </Col>\n                                        <Col span={17}>\n                                          <Slider\n                                            min={1}\n                                            max={10}\n                                            onChange={(val) => setScore(val)}\n                                            value={\n                                              typeof score === 'number'\n                                                ? score\n                                                : 0\n                                            }\n                                          />\n                                        </Col>\n                                      </div>\n                                    </form>\n                                    <div className=\"modal-footer\">\n                                      <button\n                                        style={buttonStyle}\n                                        type=\"button\"\n                                        className=\"btn btn-secondary\"\n                                        data-dismiss=\"modal\"\n                                        onClick={resetUpdate}\n                                      >\n                                        لغو\n                                      </button>\n                                      <button\n                                        style={buttonStyle}\n                                        type=\"submit\"\n                                        className=\"btn btn-primary\"\n                                        // data-dismiss=\"modal\"\n                                        onClick={handleSubmit}\n                                      >\n                                        ثبت\n                                      </button>\n                                    </div>\n                                  </>\n                                )}\n                              </Formik>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </Colxx>\n                  </Row>\n                  {/* HR Evaluation End */}\n                </CardBody>\n              </Card>\n              {/* Evaluation Details End */}\n              {/* Insentives Start */}\n              <Card className=\"rounded m-4 mt-5\">\n                <CardBody>\n                  <Colxx className=\" pt-5\" style={{ paddingInline: '3%' }}>\n                    <h2\n                      className=\"bg-primary \"\n                      style={{\n                        padding: '8px',\n                        paddingInline: '30px',\n                        borderRadius: '10px',\n                      }}\n                    >\n                      <IntlMessages id=\"مکافات\" />\n                    </h2>\n                  </Colxx>\n\n                  <Row className=\"justify-content-center   rounded\">\n                    <Colxx style={{ paddingInline: '4%' }}>\n                      <table\n                        className=\"table table-striped table-lg\"\n                        style={{ fontSize: 18 }}\n                      >\n                        <thead>\n                          <tr>\n                            <th scope=\"col\">آیدی</th>\n                            <th scope=\"col\">استاد/معلم</th>\n                            <th scope=\"col\">انستتیوت</th>\n                            <th scope=\"col\">نوع</th>\n                            <th scope=\"col\">توضیحات</th>\n                          </tr>\n                        </thead>\n                        <tbody>\n                          {teacherIncentives.map((item, index) => {\n                            return (\n                              <tr key={item.id}>\n                                <th scope=\"row\">{item.id}</th>\n                                <td>{item.teacher}</td>\n                                <td>{item.institute}</td>\n                                <td>{item.type}</td>\n                                <td>{item.details}</td>\n                                <td>\n                                  <BsPencilSquare\n                                    color=\"green\"\n                                    data-toggle=\"modal\"\n                                    data-target=\"#incentiveModal\"\n                                    data-whatever=\"@getbootstrap\"\n                                    outline\n                                    style={{ fontSize: '20px' }}\n                                    id=\"updateIcon\"\n                                    onClick={() => handleRecord(item)}\n                                  />\n                                  <Popconfirm\n                                    title=\"ډلیټ\"\n                                    icon={\n                                      <BsTrashFill\n                                        color=\"red\"\n                                        id=\"deleteIcon\"\n                                        outline\n                                        style={{ fontSize: '20px' }}\n                                      />\n                                    }\n                                    description={`مطمعین یاست چې  (${item.id})  ډیلیټ کړی. `}\n                                    onConfirm={() => deleteInsentive(item.id)}\n                                    okText=\"ډیلیټ\"\n                                    okType=\"danger\"\n                                    cancelText=\"نه\"\n                                  >\n                                    <BsTrashFill\n                                      color=\"red\"\n                                      id=\"deleteIcon\"\n                                      outline\n                                      // onClick={() => setInsentiveAlert(true)}\n                                      style={{ fontSize: '20px' }}\n                                    />\n                                  </Popconfirm>\n                                </td>\n                                {/* <Modal\n                                  isOpen={insentiveAlert}\n                                  toggle={() =>\n                                    setInsentiveAlert(!insentiveAlert)\n                                  }\n                                  style={{ marginTop: '10%' }}\n                                >\n                                  <ModalHeader>\n                                    <IntlMessages id=\"modal.deletion-message-title\" />\n                                  </ModalHeader>\n                                  <ModalBody className=\"text-center\">\n                                    <IntlMessages id=\"modal.deletion-message-details\" />\n                                  </ModalBody>\n                                  <ModalFooter>\n                                    <Button\n                                      onClick={() => setInsentiveAlert(false)}\n                                      style={{ marginLeft: '55%' }}\n                                    >\n                                      نه/ نخیر\n                                    </Button>\n                                    <Button\n                                      color=\"danger\"\n                                      onClick={() => {\n                                        setInsentiveAlert(false);\n                                        deleteInsentive(item.id);\n                                      }}\n                                      style={{ marginLeft: '5%' }}\n                                    >\n                                      هو / بلی\n                                    </Button>\n                                  </ModalFooter>\n                                </Modal> */}\n                              </tr>\n                            );\n                          })}\n                        </tbody>\n                      </table>\n\n                      <br />\n                      <br />\n                      <Button\n                        style={buttonStyle}\n                        className=\"btn btn-primary\"\n                        data-toggle=\"modal\"\n                        data-target=\"#incentiveModal\"\n                        data-whatever=\"@getbootstrap\"\n                      >\n                        ثبت مکافات\n                      </Button>\n\n                      <div\n                        className=\"modal fade\"\n                        id=\"incentiveModal\"\n                        tabindex=\"-1\"\n                        role=\"dialog\"\n                        aria-labelledby=\"incentiveModalLabel\"\n                        aria-hidden=\"true\"\n                      >\n                        <div className=\"modal-dialog\" role=\"document\">\n                          <div className=\"modal-content\">\n                            <div className=\"modal-header\">\n                              <h5\n                                className=\"modal-title\"\n                                id=\"hrEvaluationModalLabel\"\n                              >\n                                ثبت مکافات\n                              </h5>\n                              <button\n                                type=\"button\"\n                                className=\"close\"\n                                data-dismiss=\"modal\"\n                                aria-label=\"Close\"\n                                onClick={resetUpdate}\n                              >\n                                <span aria-hidden=\"true\">&times;</span>\n                              </button>\n                            </div>\n                            <div className=\"modal-body\">\n                              <Formik\n                                enableReinitialize={true}\n                                initialValues={\n                                  !updatingRecord\n                                    ? {\n                                        institute: [],\n                                        type: [],\n                                        details: '',\n                                      }\n                                    : {\n                                        institute: institutes.filter((inst) => {\n                                          if (\n                                            inst.value ===\n                                            updatingRecord.institute\n                                          )\n                                            return inst;\n                                        }),\n                                        type: teacherFeedbackOptions.filter(\n                                          (inst) => {\n                                            if (\n                                              inst.value === updatingRecord.type\n                                            )\n                                              return inst;\n                                          },\n                                        ),\n                                        details: updatingRecord.details,\n                                      }\n                                }\n                                validationSchema={\n                                  teacherIncentivesValidationSchema\n                                }\n                                onSubmit={addIncentive}\n                              >\n                                {({\n                                  errors,\n                                  touched,\n                                  values,\n                                  setFieldTouched,\n                                  setFieldValue,\n                                  handleSubmit,\n                                }) => (\n                                  <>\n                                    <form>\n                                      <div className=\"form-group w-100\">\n                                        <label\n                                          style={inputLabel}\n                                          for=\"type\"\n                                          className=\"col-form-label\"\n                                        >\n                                          ډول\n                                          <span style={{ color: 'red' }}>\n                                            *\n                                          </span>\n                                        </label>\n                                        <FormikReactSelect\n                                          name=\"type\"\n                                          id=\"type\"\n                                          value={values.type}\n                                          options={teacherFeedbackOptions}\n                                          onChange={setFieldValue}\n                                          onBlur={setFieldTouched}\n                                          required\n                                        />\n                                        {errors.type && touched.type ? (\n                                          <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                                            {errors.type}\n                                          </div>\n                                        ) : null}\n                                      </div>\n                                      <div className=\"form-group w-100\">\n                                        <label\n                                          style={inputLabel}\n                                          for=\"institute\"\n                                          className=\"col-form-label\"\n                                        >\n                                          انستتیوت\n                                          <span style={{ color: 'red' }}>\n                                            *\n                                          </span>\n                                        </label>\n                                        <FormikReactSelect\n                                          name=\"institute\"\n                                          id=\"institute\"\n                                          value={values.institute}\n                                          options={institutes}\n                                          onChange={setFieldValue}\n                                          onBlur={setFieldTouched}\n                                          required\n                                        />\n                                        {errors.institute &&\n                                        touched.institute ? (\n                                          <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                                            {errors.institute}\n                                          </div>\n                                        ) : null}\n                                      </div>\n                                      <div className=\"form-group\">\n                                        <label\n                                          style={inputLabel}\n                                          for=\"recipient-name\"\n                                          className=\"col-form-label\"\n                                        >\n                                          توضیحات\n                                          <span style={{ color: 'red' }}>\n                                            *\n                                          </span>\n                                        </label>\n                                        <Field\n                                          className=\"form-control fieldStyle\"\n                                          name=\"details\"\n                                        />\n                                        {errors.details && touched.details ? (\n                                          <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                                            {errors.details}\n                                          </div>\n                                        ) : null}\n                                      </div>\n                                    </form>\n                                    <div className=\"modal-footer\">\n                                      <button\n                                        style={buttonStyle}\n                                        type=\"button\"\n                                        className=\"btn btn-secondary\"\n                                        data-dismiss=\"modal\"\n                                        onClick={resetUpdate}\n                                      >\n                                        لفو\n                                      </button>\n                                      <button\n                                        style={buttonStyle}\n                                        type=\"submit\"\n                                        className=\"btn btn-primary\"\n                                        // data-dismiss=\"modal\"\n                                        onClick={handleSubmit}\n                                      >\n                                        ثبت\n                                        {loading && <Spin />}\n                                      </button>\n                                    </div>\n                                  </>\n                                )}\n                              </Formik>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </Colxx>\n                  </Row>\n                </CardBody>\n              </Card>\n              {/* Insentives End */}\n            </>\n          ) : (\n            <div className=\"p-2\">\n              <Row className=\"justify-content-center pt-5 rounded\">\n                <Colxx xxs=\"10\">\n                  <Card className=\"mb-4\">\n                    <CardBody>\n                      <CardTitle>\n                        <IntlMessages id=\"teacher.EvalautionHrTitle1\" />\n                      </CardTitle>\n\n                      <Table striped>\n                        <thead>\n                          <tr>\n                            <th># </th>\n                            <th>\n                              <IntlMessages id=\"forms.InstituteLabel\" />\n                            </th>\n                            <th>\n                              <IntlMessages id=\"teacher.curretGradeLabel\" />\n                            </th>\n                            <th>\n                              <IntlMessages id=\"teacher.currentStepLabel\" />\n                            </th>\n                            <th>\n                              <IntlMessages id=\"teacher.newGradeLabel\" />\n                            </th>\n                            <th>\n                              <IntlMessages id=\"teacher.newStepLabel\" />\n                            </th>\n                            <th>\n                              <IntlMessages id=\"marks.Marks\" />\n                            </th>\n                            <th>\n                              <IntlMessages id=\"teacher.evaluationDateLabel\" />\n                            </th>\n                          </tr>\n                        </thead>\n                        <tbody>\n                          {teacherHREvaluation.map((item, index) => (\n                            <tr key={index}>\n                              <th scope=\"row\">{index + 1}</th>\n                              <td>{item?.institute_id?.name}</td>\n                              <td>{item?.current_grade}</td>\n                              <td>{item?.current_step}</td>\n                              <td>{item?.new_grade}</td>\n                              <td>{item?.new_step}</td>\n                              <td>{item?.score}</td>\n                              <td>{item?.evaluation_date}</td>\n                            </tr>\n                          ))}\n                        </tbody>\n                      </Table>\n                    </CardBody>\n                  </Card>\n                </Colxx>\n              </Row>\n\n              <Row className=\"justify-content-center pt-5 rounded\">\n                <Colxx xxs=\"10\">\n                  <Card className=\"mb-4\">\n                    <CardBody>\n                      <CardTitle>\n                        <IntlMessages id=\"teacher.EvalautionTitle1\" />\n                      </CardTitle>\n\n                      <Table striped>\n                        <thead>\n                          <tr>\n                            <th># </th>\n                            <th>\n                              <IntlMessages id=\"forms.InstituteLabel\" />\n                            </th>\n                            <th> دیپارتمنت</th>\n                            <th> صنف - سمستر</th>\n                            <th>مضمون</th>\n\n                            <th>\n                              <IntlMessages id=\"marks.Marks\" />\n                            </th>\n                            <th>\n                              <IntlMessages id=\"teacher.evaluationDateLabel\" />\n                            </th>\n                          </tr>\n                        </thead>\n                        <tbody>\n                          {teacherEvaluation.map((item, index) => (\n                            <tr key={index}>\n                              <th scope=\"row\">{index + 1}</th>\n                              <td>{item?.institute_id?.name}</td>\n                              <td>{item?.department_id?.name}</td>\n                              <td>\n                                {item?.class_id?.name +\n                                  ' - ' +\n                                  item?.class_id?.semester}\n                              </td>\n                              <td>{item?.topic}</td>\n                              <td>{item?.score}</td>\n                              <td>{item?.evaluation_date}</td>\n                            </tr>\n                          ))}\n                        </tbody>\n                      </Table>\n                    </CardBody>\n                  </Card>\n                </Colxx>\n              </Row>\n\n              <Row className=\"justify-content-center pt-5 rounded\">\n                <Colxx xxs=\"10\">\n                  <Card className=\"mb-4\">\n                    <CardBody>\n                      <CardTitle>\n                        <IntlMessages id=\"teacher.Transfer\" />\n                      </CardTitle>\n\n                      <Table striped>\n                        <thead>\n                          <tr>\n                            <th># </th>\n                            <th>\n                              <IntlMessages id=\"forms.InstituteLabel\" />\n                            </th>\n                            <th> ولایت</th>\n                            <th> د مقرری تاریخ</th>\n                          </tr>\n                        </thead>\n                        <tbody>\n                          {teacherTransfer.map((item, index) => (\n                            <tr key={index}>\n                              <th scope=\"row\">{index + 1}</th>\n                              <td>{item.institute_id.name}</td>\n                              <td>{item.institute_id.province}</td>\n                              <td>{item.hire_date}</td>\n                            </tr>\n                          ))}\n                        </tbody>\n                      </Table>\n                    </CardBody>\n                  </Card>\n                </Colxx>\n              </Row>\n\n              <Card className=\"rounded\">\n                <CardBody>\n                  <Row\n                    className=\"  p-2\"\n                    style={{ borderRadius: '5px', minHeight: '200px' }}\n                  >\n                    <Colxx className=\"m-3 border\">\n                      <h1 className=\"p-2\">مکافات</h1>\n                      <div className=\"p-2\" style={{ minHeight: '150px' }}>\n                        یک استاد (یا معلم خصوصی) خوب در مرحله اول باید به کاری\n                        که انجام می دهد علاقه داشته باشد. اگر علاقه ای در کار\n                        نباشد روش ها و تکنیک های دیگر برای تبدیل شدن به استاد\n                        خوب موثر واقع نخواهد شد. استاد باید دروسی را تدریس کند\n                        که خودش به آن درس ها علاقه دارد و بر آن دروس مسلط است.\n                        اساتید عالی معمولا همواره در حال یادگیری هستند و تونایی\n                        های خودشان را به صورت مداوم افزایش می دهند. این اساتید\n                        در کلاس درس به دانشجو احترام می گذارند و سعی می کنند\n                        مطالب را از دید دانشجو ببینند و به ساده ترین زبان ممکن\n                        مطالب را توضیح می دهند. در کلاس های دانشگاه بسیار خوب\n                        است کلاس به صورت دوطرفه و تعاملی برگزار گردد. اساتید خوب\n                        که دانشجویان راضی و موفقی دارند اینطور نیست که در کلاس\n                        فقط خودشان حرف بزنند و متکلم وحده باشند. به هر میزان\n                        دانشجویان در کلاس مشارکت بیشتری داشته باشند در نهایت\n                        بازدهی کلاس بالاتر خواهد بود. اساتید خوب با پرسیدن\n                        سوالات مناسب حین تدریس سطح سواد دانشجویان را مورد\n                        ارزیابی قرار می دهند و متناسب با آن تدریس می کنند. این\n                        اساتید جو راحت و آزادی را در کلاس ایجاد می نمایند به\n                        گونه ای که دانشجویان در عین حال که به استاد و کلاس\n                        احترام می گذارند سوالات خودشان را هم راحت می پرسند و\n                        اظهار نظر می کنند. در ادامه با استناد به مقالات معتبر\n                        علمی در رابطه با ویژگی های استاد خوب توضیح داده می شود.\n                      </div>\n                    </Colxx>\n\n                    <Colxx className=\"m-3 border\">\n                      <h1 className=\"p-2\">مجازات</h1>\n                      <div className=\"p-2\" style={{ minHeight: '150px' }}>\n                        یک استاد (یا معلم خصوصی) خوب در مرحله اول باید به کاری\n                        که انجام می دهد علاقه داشته باشد. اگر علاقه ای در کار\n                        نباشد روش ها و تکنیک های دیگر برای تبدیل شدن به استاد\n                        خوب موثر واقع نخواهد شد. استاد باید دروسی را تدریس کند\n                        که خودش به آن درس ها علاقه دارد و بر آن دروس مسلط است.\n                        اساتید عالی معمولا همواره در حال یادگیری هستند و تونایی\n                        های خودشان را به صورت مداوم افزایش می دهند. این اساتید\n                        در کلاس درس به دانشجو احترام می گذارند و سعی می کنند\n                        مطالب را از دید دانشجو ببینند و به ساده ترین زبان ممکن\n                        مطالب را توضیح می دهند.\n                      </div>\n                    </Colxx>\n                  </Row>\n                </CardBody>\n              </Card>\n            </div>\n          )}\n        </>\n      )}\n    </>\n  );\n};\n\nexport default TeacherProfile;\n","import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n//import CustomSelectInput from 'components/common/CustomSelectInput';\n\nimport { Row } from 'reactstrap';\n//import logo from './../../../../assets/logos/AdminLogo.png';\nimport logo from '../../../../assets/logos/AdminLogo.png';\n\nimport IntlMessages from 'helpers/IntlMessages';\nimport { Colxx } from 'components/common/CustomBootstrap';\n\nimport config from '../../../../config';\nconst servicePath = config.API_URL;\nconst teacherApiUrl = `${servicePath}/teachers/`;\nconst teacherEvaluationApiUrl = `${servicePath}/teachers/evaluation`;\nconst teacherHREvaluationApiUrl = `${servicePath}/teachers/hr-evaluation`;\nconst teacherTransferApiUrl = `${servicePath}/teachers/institute`;\nconst roughInfo = {\n  workerId: '1',\n  workerName: 'نعمان احمدی',\n  workerProvince: 'ننگرهار',\n  workerStep: '3',\n  workerGrade: '4',\n  workerGradeType: 'مامور',\n  workerPosition: 'سیستم سازی',\n  workerAppointedDate: '1401/3/6',\n  workerStartDate: '1401/5/1',\n  workerDateOfBirth: '1401/1/2',\n  workerQualification: 'لسانس',\n  workerField: 'سافتویز انجینری',\n  workerGender: 'مرد',\n  workerTazkera: '34534545',\n  workerTashkilGrade: '3',\n  workerAppointedType: 'حکمی',\n};\nconst TeacherProfile = () => {\n  const [isNext, setIsNext] = useState(false);\n  const [isLoaded, setIsLoaded] = useState(true);\n  const { teacherId } = useParams();\n  const [teacher, setTeacher] = useState([]);\n  const [institute, setInstitute] = useState([]);\n  const [teacherEvaluation, setTeacherEvaluation] = useState([]);\n  const [teacherHREvaluation, setTeacherHREvaluation] = useState([]);\n  const [teacherTransfer, setTeacherTransfer] = useState([]);\n  const [workerProfile, setWorkerProfile] = useState({});\n\n  // here we are fetching data for the displaying the list\n  useEffect(() => {\n    // const timeOut = setTimeout(SetRoughData, 3000);\n    SetRoughData();\n  }, []);\n\n  function SetRoughData() {\n    setWorkerProfile(roughInfo);\n    setIsLoaded(false);\n  }\n\n  // useEffect(() => {\n  //   async function fetchTeacher() {\n  //     const response = await axios.get(`${teacherApiUrl}?id=${teacherId}`);\n  //     const data = response.data;\n  //     setTeacher(data);\n\n  //     const instituteResponse = await axios.get(\n  //       `${teacherApiUrl}institute/?teacher_id=${teacherId}`\n  //     );\n  //     const instituteData = await instituteResponse.data;\n  //     setInstitute(instituteData);\n  //   }\n  //   async function fetchTeacherEvaluation() {\n  //     console.log('data');\n  //     const response = await axios.get(\n  //       `${teacherEvaluationApiUrl}/?teacher_id=${teacherId}`\n  //     );\n  //     console.log(`${teacherEvaluationApiUrl}/?teacher_id=${teacherId}`);\n  //     const data = response.data;\n  //     setTeacherEvaluation(data);\n  //   }\n  //   async function fetchTeacherHREvaluation() {\n  //     const response = await axios.get(\n  //       `${teacherHREvaluationApiUrl}/?teacher_id=${teacherId}`\n  //     );\n  //     const data = response.data;\n  //     setTeacherHREvaluation(data);\n  //   }\n  //   async function fetchTeacherTransfer() {\n  //     const response = await axios.get(\n  //       `${teacherTransferApiUrl}/?teacher_id=${teacherId}`\n  //     );\n  //     const data = response.data;\n  //     console.log(`${teacherTransferApiUrl}/?teacher_id=${teacherId}`);\n  //     setTeacherTransfer(data);\n  //   }\n  //   fetchTeacher();\n  //   fetchTeacherEvaluation();\n  //   fetchTeacherHREvaluation();\n  //   fetchTeacherTransfer();\n  // }, []);\n\n  // console.log('teacher', teacher);\n  // console.log('teacherEvaluation', teacherEvaluation);\n  // console.log('teacherHREvaluation', teacherHREvaluation);\n  // console.log('teacherTransfer', teacherTransfer);\n\n  const handleClick = (event) => {\n    setIsNext(event);\n  };\n\n  const style2 = {\n    padding: '',\n  };\n  const style1 = {\n    backgroungColor: 'blue',\n  };\n\n  return isLoaded ? (\n    <div className=\"loading\" />\n  ) : (\n    <>\n      <Row>\n        <Colxx className=\"mt-5 m-5\" xxs=\"8\">\n          <h3>{<IntlMessages id=\"workerProfile\" />}</h3>\n        </Colxx>\n        <Colxx className=\"mt-4 max\">\n          <div className=\"d-flex align-items-center flex-column\">\n            <img src={logo} alt=\"Logo\" width={'30%'} />\n            <p>\n              د تخنیکی او مسلکی زده کړو اداره\n              <br />\n              اداره تعلیمات تخنیکی و مسلکی\n            </p>\n          </div>\n        </Colxx>\n      </Row>\n      {/* \n      <Row>\n        <Colxx xxs=\"1\"></Colxx>\n        <Colxx>\n          <img src={profilePhoto} alt=\"Photo\" width={'10%'} />{' '}\n        </Colxx>\n      </Row> */}\n      {workerProfile != null ? (\n        <div>\n          <Row>\n            <table className=\"table\">\n              <thead\n                className=\"pl-2 d-flex flex-grow-1  table-dark\"\n                style={{\n                  maxHeight: '55px',\n                  marginRight: 2,\n                  width: '100%',\n                  marginBottom: 20,\n                }}\n              >\n                <tr className=\"card-body align-self-center d-flex flex-column flex-lg-row align-items-lg-center\">\n                  <th\n                    style={{\n                      width: '11%',\n                      paddingInline: '0%',\n                      textAlign: 'right',\n                      borderStyle: 'hidden',\n                    }}\n                  >\n                    <IntlMessages id=\"workerId\" />\n                  </th>\n                  <th\n                    style={{\n                      width: '14%',\n                      paddingInline: '0%',\n                      textAlign: 'right',\n                      borderStyle: 'hidden',\n                    }}\n                  >\n                    <IntlMessages id=\"workerName\" />\n                  </th>\n                  <th\n                    style={{\n                      width: '15%',\n                      padding: '0%',\n                      textAlign: 'right',\n                      borderStyle: 'hidden',\n                    }}\n                  >\n                    <IntlMessages id=\"workerAppointedType\" />\n                  </th>\n                  <th\n                    style={{\n                      width: '15%',\n                      padding: '0%',\n                      textAlign: 'right',\n                      borderStyle: 'hidden',\n                    }}\n                  >\n                    {' '}\n                    <IntlMessages id=\"workerQualification\" />\n                  </th>\n                  <th\n                    style={{\n                      width: '14%',\n                      padding: '0%',\n                      textAlign: 'right',\n                      borderStyle: 'hidden',\n                    }}\n                  >\n                    {' '}\n                    <IntlMessages id=\"workerField\" />\n                  </th>\n                  <th\n                    style={{\n                      width: '15%',\n                      padding: '0%',\n                      textAlign: 'right',\n                      borderStyle: 'hidden',\n                    }}\n                  >\n                    {' '}\n                    <IntlMessages id=\"workerGender\" />\n                  </th>\n                  <th\n                    style={{\n                      width: '15%',\n                      padding: '0%',\n                      textAlign: 'right',\n                      borderStyle: 'hidden',\n                    }}\n                  >\n                    {' '}\n                    <IntlMessages id=\"workerTazkera\" />\n                  </th>\n                  <th\n                    style={{\n                      width: '15%',\n                      padding: '0%',\n                      textAlign: 'right',\n                      borderStyle: 'hidden',\n                    }}\n                  >\n                    {' '}\n                    <IntlMessages id=\"workerDateOfBirth\" />\n                  </th>\n                </tr>\n              </thead>\n            </table>\n          </Row>\n          <Row>\n            <table className=\"table\">\n              <thead\n                className=\"pl-2 d-flex flex-grow-1  table-light\"\n                style={{\n                  maxHeight: '55px',\n                  marginRight: 2,\n                  width: '100%',\n                  marginBottom: 20,\n                }}\n              >\n                <tr className=\"card-body align-self-center d-flex flex-column flex-lg-row align-items-lg-center\">\n                  <th\n                    style={{\n                      width: '11%',\n                      paddingInline: '0%',\n                      textAlign: 'right',\n                      borderStyle: 'hidden',\n                    }}\n                  >\n                    {workerProfile.workerId}\n                  </th>\n                  <th\n                    style={{\n                      width: '14%',\n                      paddingInline: '0%',\n                      textAlign: 'right',\n                      borderStyle: 'hidden',\n                    }}\n                  >\n                    {workerProfile.workerName}\n                  </th>\n                  <th\n                    style={{\n                      width: '15%',\n                      padding: '0%',\n                      textAlign: 'right',\n                      borderStyle: 'hidden',\n                    }}\n                  >\n                    {workerProfile.workerGradeType}\n                  </th>\n                  <th\n                    style={{\n                      width: '15%',\n                      padding: '0%',\n                      textAlign: 'right',\n                      borderStyle: 'hidden',\n                    }}\n                  >\n                    {' '}\n                    {workerProfile.workerQualification}\n                  </th>\n                  <th\n                    style={{\n                      width: '14%',\n                      padding: '0%',\n                      textAlign: 'right',\n                      borderStyle: 'hidden',\n                    }}\n                  >\n                    {' '}\n                    {workerProfile.workerField}\n                  </th>\n                  <th\n                    style={{\n                      width: '15%',\n                      padding: '0%',\n                      textAlign: 'right',\n                      borderStyle: 'hidden',\n                    }}\n                  >\n                    {' '}\n                    {workerProfile.workerGender}\n                  </th>\n                  <th\n                    style={{\n                      width: '15%',\n                      padding: '0%',\n                      textAlign: 'right',\n                      borderStyle: 'hidden',\n                    }}\n                  >\n                    {' '}\n                    {workerProfile.workerTazkera}\n                  </th>\n                  <th\n                    style={{\n                      width: '15%',\n                      padding: '0%',\n                      textAlign: 'right',\n                      borderStyle: 'hidden',\n                    }}\n                  >\n                    {' '}\n                    {workerProfile.workerDateOfBirth}\n                  </th>\n                </tr>\n              </thead>\n            </table>\n          </Row>\n          <Row>\n            <table className=\"table\">\n              <thead\n                className=\"pl-2 d-flex flex-grow-1  table-dark\"\n                style={{\n                  maxHeight: '55px',\n                  marginRight: 2,\n                  width: '100%',\n                  marginBottom: 20,\n                }}\n              >\n                <tr className=\"card-body align-self-center d-flex flex-column flex-lg-row align-items-lg-center\">\n                  <th\n                    style={{\n                      width: '11%',\n                      paddingInline: '0%',\n                      textAlign: 'right',\n                      borderStyle: 'hidden',\n                    }}\n                  >\n                    <IntlMessages id=\"workerPosition\" />\n                  </th>\n                  <th\n                    style={{\n                      width: '14%',\n                      paddingInline: '0%',\n                      textAlign: 'right',\n                      borderStyle: 'hidden',\n                    }}\n                  >\n                    <IntlMessages id=\"workerStep\" />\n                  </th>\n                  <th\n                    style={{\n                      width: '15%',\n                      padding: '0%',\n                      textAlign: 'right',\n                      borderStyle: 'hidden',\n                    }}\n                  >\n                    <IntlMessages id=\"workerGrade\" />\n                  </th>\n                  <th\n                    style={{\n                      width: '15%',\n                      padding: '0%',\n                      textAlign: 'right',\n                      borderStyle: 'hidden',\n                    }}\n                  >\n                    {' '}\n                    <IntlMessages id=\"workerTashkeilGrade\" />\n                  </th>\n                  <th\n                    style={{\n                      width: '14%',\n                      padding: '0%',\n                      textAlign: 'right',\n                      borderStyle: 'hidden',\n                    }}\n                  >\n                    {' '}\n                    <IntlMessages id=\"workerGradeType\" />\n                  </th>\n                  <th\n                    style={{\n                      width: '15%',\n                      padding: '0%',\n                      textAlign: 'right',\n                      borderStyle: 'hidden',\n                    }}\n                  >\n                    {' '}\n                    <IntlMessages id=\"workerAppointedDate\" />\n                  </th>\n                  <th\n                    style={{\n                      width: '15%',\n                      padding: '0%',\n                      textAlign: 'right',\n                      borderStyle: 'hidden',\n                    }}\n                  >\n                    {' '}\n                    <IntlMessages id=\"workerStartDate\" />\n                  </th>\n                  <th\n                    style={{\n                      width: '15%',\n                      padding: '0%',\n                      textAlign: 'right',\n                      borderStyle: 'hidden',\n                    }}\n                  >\n                    {' '}\n                    <IntlMessages id=\"workerProvince\" />\n                  </th>\n                </tr>\n              </thead>\n            </table>\n          </Row>\n          <Row>\n            <table className=\"table\">\n              <thead\n                className=\"pl-2 d-flex flex-grow-1  table-light\"\n                style={{\n                  maxHeight: '55px',\n                  marginRight: 2,\n                  width: '100%',\n                  marginBottom: 20,\n                }}\n              >\n                <tr className=\"card-body align-self-center d-flex flex-column flex-lg-row align-items-lg-center\">\n                  <th\n                    style={{\n                      width: '11%',\n                      paddingInline: '0%',\n                      textAlign: 'right',\n                      borderStyle: 'hidden',\n                    }}\n                  >\n                    {workerProfile.workerPosition}\n                  </th>\n                  <th\n                    style={{\n                      width: '14%',\n                      paddingInline: '0%',\n                      textAlign: 'right',\n                      borderStyle: 'hidden',\n                    }}\n                  >\n                    {workerProfile.workerStep}\n                  </th>\n                  <th\n                    style={{\n                      width: '15%',\n                      padding: '0%',\n                      textAlign: 'right',\n                      borderStyle: 'hidden',\n                    }}\n                  >\n                    {workerProfile.workerGrade}\n                  </th>\n                  <th\n                    style={{\n                      width: '15%',\n                      padding: '0%',\n                      textAlign: 'right',\n                      borderStyle: 'hidden',\n                    }}\n                  >\n                    {' '}\n                    {workerProfile.workerTashkilGrade}\n                  </th>\n                  <th\n                    style={{\n                      width: '14%',\n                      padding: '0%',\n                      textAlign: 'right',\n                      borderStyle: 'hidden',\n                    }}\n                  >\n                    {' '}\n                    {workerProfile.workerGradeType}\n                  </th>\n                  <th\n                    style={{\n                      width: '15%',\n                      padding: '0%',\n                      textAlign: 'right',\n                      borderStyle: 'hidden',\n                    }}\n                  >\n                    {' '}\n                    {workerProfile.workerAppointedDate}\n                  </th>\n                  <th\n                    style={{\n                      width: '15%',\n                      padding: '0%',\n                      textAlign: 'right',\n                      borderStyle: 'hidden',\n                    }}\n                  >\n                    {' '}\n                    {workerProfile.workerStartDate}\n                  </th>\n                  <th\n                    style={{\n                      width: '15%',\n                      padding: '0%',\n                      textAlign: 'right',\n                      borderStyle: 'hidden',\n                    }}\n                  >\n                    {' '}\n                    {workerProfile.workerProvince}\n                  </th>\n                </tr>\n              </thead>\n            </table>\n          </Row>\n        </div>\n      ) : (\n        <div>No data</div>\n      )}\n    </>\n  );\n};\n\nexport default TeacherProfile;\n"],"names":["config","require","API_URL","inputLabel","fontSize","fontWeight","buttonStyle","FormikReactSelect","_ref","name","value","options","isMulti","className","onChange","onBlur","defaultValue","onClick","isDisabled","isLoading","isClearable","isRtl","isSearchable","placeholder","_jsx","Select","concat","classNamePrefix","IntlMessages","id","initial","val","FormikInputText","_ref9","otherProps","_objectWithoutProperties","_excluded","Input","_objectSpread","style","height","borderRadius","FormikDatePicker","_ref11","DatePicker","selected","_val","servicePath","teacherEvaluationApiUrl","teacherTransferApiUrl","_genderOptions$find","_useContext","useContext","AuthContext","departments","classes","subjects","institutes","contextFields","provinces","districts","console","log","recId","_useState","useState","_useState2","_slicedToArray","isNext","teacherId","useParams","_useState3","_useState4","teacher","setTeacher","_useState5","_useState6","teacherEvaluation","setTeacherEvaluation","_useState7","_useState8","teacherHREvaluation","setTeacherHREvaluation","_useState9","_useState10","teacherTransfer","setTeacherTransfer","_useState11","_useState12","teacherEducation","setTeacherEducation","_useState13","_useState14","teacherContracts","setTeacherContracts","_useState15","_useState16","teacherIncentives","setTeacherIncentives","_useState17","_useState18","setIsLoaded","_useState19","_useState20","cvFile","setCVFile","_useState21","_useState22","startDate","setStartDate","_useState23","_useState24","endDate","setEndDate","_useState25","_useState26","score","setScore","_useState27","_useState28","evaluationDate","setEvaluationDate","_useState29","_useState30","_useState31","_useState32","_useState33","_useState34","_useState35","_useState36","_useState37","_useState38","updatingRecord","setUpdatingRecord","_useState39","_useState40","loading","setLoading","resetUpdate","_fetchTeacher","_asyncToGenerator","_regeneratorRuntime","mark","_callee11","response","data","wrap","_context11","prev","next","callApi","sent","stop","apply","arguments","fetchTeacherEvaluation","_fetchTeacherEvaluation","_callee12","_context12","fetchTeacherHREvaluation","_fetchTeacherHREvaluation","_callee13","_context13","then","_fetchTeacherTransfer","_callee14","_context14","t0","fetchTeacherEducation","_fetchTeacherEducation","_callee15","_context15","fetchTeacherContracts","_fetchTeacherContracts","_callee16","_context16","fetchTeacherIncentives","_fetchTeacherIncentives","_callee17","_context17","handleRecord","item","useEffect","fetchTeacher","fetchTeacherTransfer","deleteContract","_callee","_context","_x","deleteEducation","_ref2","_callee2","_context2","_x2","deleteEvaluation","_ref3","_callee3","_context3","_x3","deleteHREvaluation","_ref4","_callee4","_context4","_x4","deleteInsentive","_ref5","_callee5","_context5","_x5","addEducation","_ref6","_callee6","inputData","_inputData$degree","_inputData$year_of_co","apiParams","formData","_context6","endPoint","method","FormData","append","degree","institute","field_of_study","year_of_completion","description","status","message","success","error","_x6","addContract","_ref7","_callee7","_inputData$jobType","_inputData$grade","_inputData$step","_inputData$teaching_l","_inputData$contract_t","_inputData$hireType","_inputData$institute","_inputData$field","_inputData$status","_iterator","_step","entry","_context7","jobType","grade","step","teaching_language","contract_type","hireType","field","_createForOfIteratorHelper","entries","s","n","done","delete","err","e","f","_x7","addEvaluation","_ref8","_callee8","_inputData$evaluation","_inputData$institute2","_inputData$department","_inputData$classs","_inputData$subject","_context8","topic","evaluator_name","evaluation_type","strong_points","weak_points","suggestions","evaluation_date","department","classs","subject","_x8","addHREvaluation","_callee9","_inputData$institute3","_inputData$grade2","_inputData$step2","_context9","educational_year","new_grade","new_step","_x9","addIncentive","_callee10","_ref10","_inputData$type","_inputData$institute4","resetForm","_context10","type","details","_x10","_x11","_jsxs","_Fragment","children","Row","Colxx","xxs","src","logo","alt","width","Spinner","photo","profilePhoto","marginRight","marginBottom","Button","backgroundColor","href","target","color","Card","CardBody","paddingInline","padding","Label","father_name","genderOptions","find","op","gender","label","phone_number","email","registration_number","cover_number","page_number","year_of_birth","month_of_birth","day_of_birth","Separator","map","pro","main_province","main_district","current_province","current_district","scope","index","institution","year_completed","document","rel","BsPencilSquare","outline","Popconfirm","title","icon","BsTrashFill","onConfirm","okText","okType","cancelText","tabindex","role","Formik","enableReinitialize","initialValues","degreeTypeOptions","filter","inst","dateOfBirthOptoions","validationSchema","teacherEducationValidationSchema","onSubmit","_ref12","errors","touched","values","setFieldTouched","setFieldValue","handleSubmit","for","required","Field","files","contractTypeOptions","props","gradeOptions","stepOptions","jobTypeOptions","job_type","langOptions","start_date","end_date","_defineProperty","hireTypeOptions","hire_type","teaching_field","teacherContractStatusOptions","teacherContractValidationSchema","_ref14","display","flexDirection","justifyContent","calendar","persian","locale","persian_fa","months","persianMonthOptions","Date","toDate","getFullYear","getMonth","getDate","evaluationTypeOptions","dep","teacherEvaluationValidationSchema","_ref15","Col","span","InputNumber","min","max","margin","Slider","current_grade","review_status","teacherHREvaluationValidationSchema","_ref16","teacherFeedbackOptions","teacherIncentivesValidationSchema","_ref17","Spin","CardTitle","Table","striped","_item$institute_id","institute_id","current_step","_item$institute_id2","_item$department_id","_item$class_id","_item$class_id2","department_id","class_id","semester","province","hire_date","minHeight","roughInfo","workerId","workerName","workerProvince","workerStep","workerGrade","workerGradeType","workerPosition","workerAppointedDate","workerStartDate","workerDateOfBirth","workerQualification","workerField","workerGender","workerTazkera","workerTashkilGrade","workerAppointedType","isLoaded","workerProfile","setWorkerProfile","maxHeight","textAlign","borderStyle"],"sourceRoot":""}