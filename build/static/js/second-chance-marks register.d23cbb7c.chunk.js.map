{"version":3,"sources":["views/app/students/second-chance-marks-register.js"],"names":["servicePath","config","API_URL","ValidationSchema","concat","IntlMessages","Yup","shape","institute","value","required","nullable","_jsx","id","educationalYear","studyTime","classs","department","subject","initialValues","educationlaYear","MarksRegistration","_ref","match","_useState","useState","_useState2","_slicedToArray","isNext","setIsNext","_useState3","_useState4","isSubmitted","setIsSubmitted","_useState5","_useState6","setFields","_useState7","_useState8","institutes","setInstitutes","_useState9","_useState10","departments","setDepartments","_useState11","_useState12","classes","setClasses","_useState13","_useState14","subjects","setSubjects","_useState15","_useState16","students","setStudents","_useState17","_useState18","selectedInstitute","setSelectedInstitute","_useState19","_useState20","selectedDepartment","setSelectedDepartment","_useState21","_useState22","selectedClass","setSelectedClass","_useState23","_useState24","selectedSubject","setSelectedSubject","_useState25","_useState26","selecedStudyTime","setSelectedStudyTime","_useState27","_useState28","selectedEducationalYear","setSelectedEducationalYear","_useState29","_useState30","_useState31","_useState32","_useState33","_useState34","_useState35","_useState36","markId","useParams","_useState37","semester","section","_useState38","selectedClassLabel","setselectedClassLabel","useEffect","console","log","isEmptyArray","_selectedClass$label$","label","split","_selectedClass$label$2","_fetchStudent","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_yield$axios$get","wrap","_context","prev","next","axios","get","studentMarkId","sent","data","stop","apply","arguments","fetchStudent","fetchInstitutes","_ref2","_callee2","response","updatedData","_context2","callApi","status","map","item","name","fetchFields","_ref3","_callee3","_context3","fetchDepartments","_ref4","_callee4","_context4","fetchClasses","_ref5","_callee5","_context5","fetchSubjects","_ref6","_callee6","_context6","createNotification","type","className","cName","NotificationManager","success","error","alert","info","fechtStudens","_ref7","_callee7","_context7","onSubmit","_ref8","_callee8","values","instituteId","departmentId","classId","subjectId","newStudents","_context8","student","index","student_id","marks","score","educational_year","_toConsumableArray","_x","_Fragment","children","_jsxs","Card","CardBody","Button","onClick","Row","style","marginInline","Colxx","xxs","Label","scope","Formik","_ref10","errors","Form","height","overflowY","overflowX","length","father_name","class","FormGroup","Field","min","max","touched","color","size","validationSchema","_ref9","setFieldTouched","setFieldValue","FormikReactSelect","options","onChange","onBlur","studyTimeOptions","educationalYearsOptions","margin"],"mappings":"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","file":"static/js/second-chance-marks register.d23cbb7c.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Formik, Form, Field, isEmptyArray } from 'formik';\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\nimport callApi from 'helpers/callApi';\nimport {\n  studyTimeOptions,\n  educationalYearsOptions,\n} from '../global-data/options';\nimport './../../../assets/css/global-style.css';\n\n// Year  and SHift\nimport * as Yup from 'yup';\nimport {\n  Row,\n  Card,\n  CardBody,\n  FormGroup,\n  Label,\n  Button,\n  CardTitle,\n  Input,\n} from 'reactstrap';\nimport Select from 'react-select';\nimport { NotificationManager } from 'components/common/react-notifications';\n\nimport IntlMessages from 'helpers/IntlMessages';\nimport { Colxx } from 'components/common/CustomBootstrap';\nimport {\n  FormikReactSelect,\n  FormikTagsInput,\n  FormikDatePicker,\n} from 'containers/form-validations/FormikFields';\nimport userEvent from '@testing-library/user-event';\nimport { async } from 'q';\n\nimport config from '../../../config';\n\nconst servicePath = config.API_URL;\nconst studentApi = `${servicePath}/api`;\n// http://localhost:8000/api/?student_id=1232\n\nconst LevelOfEdcationOptions = [\n  { value: '1', label: 'اصلی' },\n  { value: '2', label: 'فرعی' },\n];\n\nconst FieldOptions = [\n  { value: '14th', label: 'Computer Science' },\n  { value: 'bachelor', label: 'Agriculture' },\n  { value: 'master', label: 'BBA' },\n  { value: 'PHD', label: 'Mechenical Engineering' },\n];\n\nconst SemesterOptions = [\n  { value: '1', label: <IntlMessages id=\"marks.SemesterOption_1\" /> },\n  { value: '2', label: <IntlMessages id=\"marks.SemesterOption_2\" /> },\n  // { value: '3', label: <IntlMessages id=\"marks.SemesterOption_3\" /> },\n  //   { value: '4', label: <IntlMessages id=\"marks.SemesterOption_4\" /> },\n];\n\nconst SectionOptions = [\n  { value: '1', label: <IntlMessages id=\"marks.SectionOption_1\" /> },\n  { value: '2', label: <IntlMessages id=\"marks.SectionOption_2\" /> },\n  { value: '3', label: <IntlMessages id=\"marks.SectionOption_3\" /> },\n  { value: '4', label: <IntlMessages id=\"marks.SectionOption_4\" /> },\n  { value: '5', label: <IntlMessages id=\"marks.SectionOption_5\" /> },\n];\n\nconst ClassOptions = [\n  { value: '1', label: <IntlMessages id=\"marks.ClassOption_1\" /> },\n  { value: '2', label: <IntlMessages id=\"marks.ClassOption_2\" /> },\n  { value: '3', label: <IntlMessages id=\"marks.ClassOption_3\" /> },\n  { value: '4', label: <IntlMessages id=\"marks.ClassOption_4\" /> },\n  { value: '5', label: <IntlMessages id=\"marks.ClassOption_5\" /> },\n  { value: '6', label: <IntlMessages id=\"marks.ClassOption_6\" /> },\n];\n\nconst SubjectOptions = [\n  { value: '14th', label: 'Computer Science' },\n  { value: 'bachelor', label: 'Agriculture' },\n  { value: 'master', label: 'BBA' },\n  { value: 'PHD', label: 'Mechenical Engineering' },\n];\n\nconst orderOptions = [\n  { column: 'title', label: 'Product Name' },\n  { column: 'category', label: 'Category' },\n  { column: 'status', label: 'Status' },\n];\nconst pageSizes = [10, 20, 40, 80];\n\nconst ValidationSchema = Yup.object().shape({\n  institute: Yup.object()\n    .shape({\n      value: Yup.string().required(),\n    })\n    .nullable()\n    .required(<IntlMessages id=\"forms.InstituteErr\" />),\n\n  educationalYear: Yup.object()\n    .shape({\n      value: Yup.string().required(),\n    })\n    .nullable()\n    .required(<IntlMessages id=\"forms.educationYearErr\" />),\n\n  studyTime: Yup.object()\n    .shape({\n      value: Yup.string().required(),\n    })\n    .nullable()\n    .required(<IntlMessages id=\"forms.StudyTimeErr\" />),\n\n  classs: Yup.object()\n    .shape({\n      value: Yup.string().required(),\n    })\n    .nullable()\n    .required(<IntlMessages id=\"marks.ClassErr\" />),\n\n  department: Yup.object()\n    .shape({\n      value: Yup.string().required(),\n    })\n    .nullable()\n    .required(<IntlMessages id=\"teacher.departmentIdErr\" />),\n\n  subject: Yup.object()\n    .shape({\n      value: Yup.string().required(),\n    })\n    .nullable()\n    .required(<IntlMessages id=\"marks.SubjectErr\" />),\n});\n\nconst initialValues = {\n  institute: [],\n  educationlaYear: '',\n  studyTime: [],\n  classs: [],\n  department: [],\n  subject: [],\n};\nconst MarksRegistration = ({ match }) => {\n  const [isNext, setIsNext] = useState(false);\n\n  const [isSubmitted, setIsSubmitted] = useState(false);\n  const [fields, setFields] = useState([]);\n  const [institutes, setInstitutes] = useState([]);\n  const [departments, setDepartments] = useState([]);\n  const [classes, setClasses] = useState([]);\n  const [subjects, setSubjects] = useState([]);\n  const [students, setStudents] = useState([]);\n  const [selectedInstitute, setSelectedInstitute] = useState('');\n  const [selectedDepartment, setSelectedDepartment] = useState('');\n  const [selectedClass, setSelectedClass] = useState('');\n  const [selectedSubject, setSelectedSubject] = useState('');\n  const [selecedStudyTime, setSelectedStudyTime] = useState('');\n  const [selectedEducationalYear, setSelectedEducationalYear] = useState([]);\n  const [passingScore, setPassingScore] = useState(55);\n  const [subjectGrad, setSubjectGrad] = useState();\n  const [subjectGPA, setSubjectGPA] = useState();\n  const [examId, setExamId] = useState();\n  const { markId } = useParams();\n  // separate and set labels for classes\n  const [selectedClassLabel, setselectedClassLabel] = useState({\n    classs: '',\n    semester: '',\n    section: '',\n  });\n\n  useEffect(() => {\n    console.log(\n      selectedClass,\n      typeof selectedClass,\n      'fjkdsjfkjsdafkjsdalkfjlsa'\n    );\n    if (!isEmptyArray(selectedClass) && selectedClass !== '') {\n      const [semester, classs, section] = selectedClass.label.split('-');\n      setselectedClassLabel({ classs, semester, section });\n    }\n  }, [selectedClass]);\n\n  if (markId) {\n    useEffect(() => {\n      async function fetchStudent() {\n        const { data } = await axios.get(\n          `${studentMarkId}/?student_id=${markId}`\n        );\n        // console.log(data, 'object of the data');\n\n        // const instGender = genderOptions.map((studentGender) => {\n        //   if (studentGender.value === data[0].gender) {\n        //     setInitialGender(studentGender);\n        //   }\n        // });\n      }\n      fetchStudent();\n      //setUpdateMode(true);\n    }, []);\n  }\n\n  const fetchInstitutes = async () => {\n    const response = await callApi('institute/', '', null);\n    if (response.data && response.status === 200) {\n      const updatedData = await response.data.map((item) => ({\n        value: item.id,\n        label: item.name,\n      }));\n      setInstitutes(updatedData);\n    } else {\n      console.log('institute error');\n    }\n  };\n  const fetchFields = async () => {\n    const response = await callApi('institute/field/', '', null);\n    if (response.data && response.status === 200) {\n      const updatedData = await response.data.map((item) => ({\n        value: item.id,\n        label: item.name,\n      }));\n      setFields(updatedData);\n    } else {\n      console.log('field error');\n    }\n  };\n  const fetchDepartments = async () => {\n    const response = await callApi('institute/department/', '', null);\n    // console.log('response of department', response);\n    if (response.data && response.status === 200) {\n      const updatedData = await response.data.map((item) => ({\n        value: item.id,\n        label: item.name,\n      }));\n      setDepartments(updatedData);\n    } else {\n      console.log('department error');\n    }\n  };\n\n  const fetchClasses = async () => {\n    const response = await callApi('institute/classs/', '', null);\n    if (response.data && response.status === 200) {\n      const updatedData = await response.data.map((item) => ({\n        value: item.id,\n        label: item.name + ' - ' + item.semester + ' - ' + item.section,\n      }));\n      setClasses(updatedData);\n    } else {\n      console.log('class error');\n    }\n  };\n\n  const fetchSubjects = async () => {\n    const response = await callApi('institute/subject/', '', null);\n    if (response.data && response.status === 200) {\n      const updatedData = await response.data.map((item) => ({\n        value: item.id,\n        label: item.name,\n      }));\n      setSubjects(updatedData);\n    } else {\n      console.log('subject error');\n    }\n  };\n\n  useEffect(() => {\n    fetchInstitutes();\n    fetchFields();\n    fetchDepartments();\n    fetchClasses();\n    fetchSubjects();\n  }, []);\n  // notification message\n  const createNotification = (type, className) => {\n    const cName = className || '';\n    switch (type) {\n      case 'success':\n        NotificationManager.success(\n          'نمری په بریالیتوب سره ثبت شوی',\n          'موفقیت',\n          3000,\n          null,\n          null,\n          cName\n        );\n        break;\n      case 'error':\n        NotificationManager.error(\n          'نمری ثبت نه شوی بیا کوشش وکری',\n          'خطا',\n          9000,\n          () => {\n            alert('callback');\n          },\n          null,\n          cName\n        );\n        break;\n      default:\n        NotificationManager.info('Info message');\n        break;\n    }\n  };\n\n  const fechtStudens = async () => {\n    console.log('subject', selectedSubject.value);\n    const response = await callApi(\n      `students/class-marks/list/second-chance/?institute=${selectedInstitute.value}&classs=${selectedClass.value}&shift=${selecedStudyTime.value}&department=${selectedDepartment.value}&educational_year=${selectedEducationalYear.value}&subject=${selectedSubject.value}`,\n      '',\n      null\n    );\n    if (response.data && response.status === 200) {\n      setStudents(response.data);\n      setIsNext(true);\n    } else {\n      console.log('subject error');\n    }\n  };\n\n  const onSubmit = async (values) => {\n    const educationalYear = selectedEducationalYear.value;\n    const instituteId = selectedInstitute.value;\n    const departmentId = selectedDepartment.value;\n    const classId = selectedClass.value;\n    const subjectId = selectedSubject.value;\n    console.log('educationalYear', educationalYear);\n    console.log('instituteId', instituteId);\n    console.log('departmentId', departmentId);\n    console.log('classId', classId);\n    console.log('subjectId', subjectId);\n\n    const newStudents = students.map((student, index) => {\n      return {\n        student_id: student.student_id,\n        marks: values.score[student.student_id],\n      };\n    });\n\n    let data = [\n      {\n        educational_year: educationalYear,\n        institute: instituteId,\n        department: departmentId,\n        classs: classId,\n        subject: subjectId,\n      },\n      ...newStudents,\n    ];\n\n    console.log('data', data);\n\n    const response = await callApi(\n      'students/class-marks/create/second-chance/',\n      'POST',\n      data\n    );\n    if (response.status === 200) {\n      console.log('response of students', response);\n      setIsSubmitted(true);\n      createNotification('success', 'filled');\n    } else {\n      console.log('marks error');\n      setIsSubmitted(false);\n      createNotification('error', 'filled');\n    }\n  };\n\n  // console.log('condsotlsa f', students);\n  return (\n    <>\n      <Card>\n        <div className=\"mt-4 ml-5\">\n          <h3 className=\"mt-5 m-5 titleStyle\">\n            {<IntlMessages id=\"menu.second-chance-marks-register\" />}\n          </h3>\n        </div>\n        <CardBody>\n          {!isNext ? (\n            <Formik\n              initialValues={initialValues}\n              onSubmit={fechtStudens}\n              validationSchema={ValidationSchema}\n            >\n              {({\n                errors,\n                touched,\n                values,\n                setFieldTouched,\n                setFieldValue,\n              }) => (\n                <Form className=\"av-tooltip tooltip-label-right style \">\n                  <Row className=\"m-5\">\n                    <Colxx xxs=\"6\">\n                      {/* set if condition, if institutes are loaded */}\n                      <FormGroup className=\"form-group has-float-label error-l-150 \">\n                        <Label>\n                          <IntlMessages id=\"forms.InstituteLabel\" />\n                          <span style={{ color: 'red' }}>*</span>\n                        </Label>\n                        <FormikReactSelect\n                          name=\"institute\"\n                          id=\"institute\"\n                          value={values.institute}\n                          options={institutes}\n                          onChange={setFieldValue}\n                          onBlur={setFieldTouched}\n                          onClick={setSelectedInstitute(values.institute)}\n                        />\n\n                        {errors.institute && touched.institute ? (\n                          <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                            {errors.institute}\n                          </div>\n                        ) : null}\n                      </FormGroup>\n\n                      <FormGroup className=\"form-group has-float-label mt-5  error-l-150 \">\n                        <Label>\n                          <IntlMessages id=\"forms.StudyTimeLabel\" />\n                          <span style={{ color: 'red' }}>*</span>\n                        </Label>\n                        <FormikReactSelect\n                          name=\"studyTime\"\n                          id=\"studyTime\"\n                          value={values.studyTime}\n                          options={studyTimeOptions}\n                          onChange={setFieldValue}\n                          onBlur={setFieldTouched}\n                          onClick={setSelectedStudyTime(values.studyTime)}\n                        />\n                        {errors.studyTime && touched.studyTime ? (\n                          <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                            {errors.studyTime}\n                          </div>\n                        ) : null}\n                      </FormGroup>\n\n                      <FormGroup className=\"form-group has-float-label mt-5  error-l-150\">\n                        <Label>\n                          <IntlMessages id=\"forms.educationYearLabel\" />\n                        </Label>\n                        <FormikReactSelect\n                          name=\"educationalYear\"\n                          id=\"educationalYear\"\n                          options={educationalYearsOptions}\n                          onChange={setFieldValue}\n                          onBlur={setFieldTouched}\n                          onClick={setSelectedEducationalYear(\n                            values.educationalYear\n                          )}\n                        />\n                        {errors.educationlaYear && touched.educationlaYear ? (\n                          <div className=\"invalid-feedback d-block bg-danger text-white \">\n                            {errors.educationlaYear}\n                          </div>\n                        ) : null}\n                      </FormGroup>\n                    </Colxx>\n\n                    <Colxx xxs=\"6\">\n                      <FormGroup className=\"form-group has-float-label error-l-150 \">\n                        <Label>\n                          <IntlMessages id=\"marks.ClassLabel\" />\n                          <span style={{ color: 'red' }}>*</span>\n                        </Label>\n                        <FormikReactSelect\n                          name=\"classs\"\n                          id=\"classs\"\n                          value={values.classs}\n                          options={classes}\n                          onChange={setFieldValue}\n                          onBlur={setFieldTouched}\n                          onClick={setSelectedClass(values.classs)}\n                          required\n                        />\n                        {errors.classs && touched.classs ? (\n                          <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                            {errors.classs}\n                          </div>\n                        ) : null}\n                      </FormGroup>\n\n                      <FormGroup className=\"form-group has-float-label mt-5 error-l-150\">\n                        <Label>\n                          <IntlMessages id=\"forms.studyDepartment\" />\n                          <span style={{ color: 'red' }}>*</span>\n                        </Label>\n                        <FormikReactSelect\n                          name=\"department\"\n                          id=\"department\"\n                          value={values.department}\n                          options={departments}\n                          onChange={setFieldValue}\n                          onBlur={setFieldTouched}\n                          onClick={setSelectedDepartment(values.department)}\n                          required\n                        />\n                        {errors.department && touched.department ? (\n                          <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                            {errors.department}\n                          </div>\n                        ) : null}\n                      </FormGroup>\n\n                      <FormGroup className=\"form-group has-float-label mt-5 error-l-150\">\n                        <Label>\n                          <IntlMessages id=\"marks.SubjectLabel\" />\n                          <span style={{ color: 'red' }}>*</span>\n                        </Label>\n                        <FormikReactSelect\n                          name=\"subject\"\n                          id=\"subject\"\n                          value={values.subject}\n                          options={subjects}\n                          onChange={setFieldValue}\n                          onBlur={setFieldTouched}\n                          onClick={setSelectedSubject(values.subject)}\n                          required\n                        />\n                        {errors.subject && touched.subject ? (\n                          <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                            {errors.subject}\n                          </div>\n                        ) : null}\n                      </FormGroup>\n                    </Colxx>\n                  </Row>\n                  <Row>\n                    <Colxx>\n                      <Button\n                        color=\"primary\"\n                        className=\"float-right  buttonStyle\"\n                        size=\"lg\"\n                        type=\"submit\"\n                        style={{ margin: '2% 0% 10% 6%' }}\n                        // onClick={() => fechtStudens()}\n                      >\n                        <span className=\"label\">\n                          <IntlMessages id=\"button.Next\" />\n                        </span>\n                      </Button>\n                    </Colxx>\n                  </Row>\n                </Form>\n              )}\n            </Formik>\n          ) : (\n            <>\n              {!isSubmitted ? (\n                <>\n                  <Row\n                    className=\"border border bg-primary me-5 p-1 \"\n                    style={{ marginInline: '16%' }}\n                  >\n                    <Colxx xxs=\"2\">\n                      <Label>\n                        <IntlMessages id=\"forms.FieldLabel\" />\n                      </Label>\n                      {/* {console.log('selectedDepartment', selectedDepartment)} */}\n                      <h6>{selectedDepartment.label}</h6>\n                    </Colxx>\n\n                    <Colxx xxs=\"2\">\n                      <Label>\n                        <IntlMessages id=\"marks.ClassLabel\" />\n                      </Label>\n                      <h6>{selectedClassLabel.classs}</h6>\n                    </Colxx>\n\n                    <Colxx xxs=\"2\">\n                      <Label>\n                        <IntlMessages id=\"forms.StudyTimeLabel\" />\n                      </Label>\n                      <h6>{selecedStudyTime.label}</h6>\n                    </Colxx>\n\n                    <Colxx xxs=\"2\">\n                      <Label>\n                        <IntlMessages id=\"marks.SemesterLabel\" />\n                      </Label>\n                      <h6>{selectedClassLabel.semester}</h6>\n                    </Colxx>\n\n                    <Colxx xxs=\"2\">\n                      <Label>\n                        <IntlMessages id=\"marks.SectionLabel\" />\n                      </Label>\n                      <h6>{selectedClassLabel.section}</h6>\n                    </Colxx>\n\n                    <Colxx xxs=\"2\">\n                      <Label>\n                        <IntlMessages id=\"marks.SubjectLabel\" />\n                      </Label>\n                      <h6>{selectedSubject.label}</h6>\n                    </Colxx>\n                  </Row>\n                  <Row\n                    className=\"justify-content-center  border border\"\n                    style={{ marginInline: '16%' }}\n                  >\n                    <table className=\"table\">\n                      <thead className=\"thead-dark\">\n                        <tr>\n                          <th scope=\"col\">\n                            <IntlMessages id=\"marks.No\" />\n                          </th>\n                          <th scope=\"col\">\n                            <IntlMessages id=\"marks.FullName\" />\n                          </th>\n                          <th scope=\"col\">\n                            <IntlMessages id=\"marks.FatherName\" />\n                          </th>\n                          <th scope=\"col\">\n                            <IntlMessages id=\"marks.ID\" />\n                          </th>\n                          {/* LATTER UNCOMMENT IT, WHEN FIRST CHANCE MARKS IS GOT FROM BACKEND */}\n                          {/* <th scope=\"col\">\n                            <IntlMessages id=\"marks.firstChance\" />\n                          </th> */}\n                          <th scope=\"col\">\n                            <IntlMessages id=\"marks.secondChance\" />\n                          </th>\n                        </tr>\n                      </thead>\n                    </table>\n                  </Row>\n                  <Formik\n                    initialValues={initialValues}\n                    onSubmit={onSubmit}\n                    // validationSchema={ValidationSchema}\n                  >\n                    {({\n                      errors,\n                      // touched,\n                      // // values,\n                      // setFieldTouched,\n                      // setFieldValue,\n                    }) => (\n                      <Form className=\"av-tooltip tooltip-label-right \">\n                        <Row\n                          className=\"justify-content-center  border border\"\n                          style={{\n                            marginInline: '16%',\n                            height: '30rem',\n                            overflowY: 'scroll',\n                            overflowX: 'hidden',\n                          }}\n                        >\n                          <table className=\"table \">\n                            <tbody\n                              className=\"border border \"\n                              style={{\n                                height: '200px',\n                                overflowY: 'scroll',\n                                overflowX: 'hidden',\n                              }}\n                            >\n                              {students.length > 0 &&\n                                students.map((student, index) => (\n                                  <tr key={index}>\n                                    <th scope=\"row\">{index + 1}</th>\n                                    <td>{student.name}</td>\n                                    <td>{student.father_name}</td>\n                                    <td>{student.student_id}</td>\n                                    {/* LATTER UNCOMMENT IT, WHEN FIRST CHANCE MARKS IS GOT FROM BACKEND */}\n                                    {/* <td>first chance marks</td> */}\n\n                                    {/* Second Chance Marks */}\n                                    <td>\n                                      <div class=\"form-group mx-sm-3 mb-2\">\n                                        <FormGroup className=\"form-group\">\n                                          <Field\n                                            type=\"number\"\n                                            className=\"form-control\"\n                                            name={`score[${student.student_id}]`}\n                                            min=\"0\"\n                                            max=\"100\"\n                                          />\n                                          {errors.score && touched.score ? (\n                                            <div className=\"invalid-feedback d-block\">\n                                              {errors.score}\n                                            </div>\n                                          ) : null}\n                                        </FormGroup>\n                                      </div>\n                                    </td>\n                                  </tr>\n                                ))}\n                            </tbody>\n                          </table>\n                        </Row>\n                        <Row\n                          className=\"justify-content-center  border border\"\n                          style={{\n                            marginInline: '16%',\n                          }}\n                        >\n                          <table class=\"table \">\n                            <tbody>\n                              <tr>\n                                <td></td>\n                                <td></td>\n                                <td></td>\n                                <td></td>\n                              </tr>\n                            </tbody>\n                            <tfoot className=\"thead-dark\">\n                              <tr>\n                                <th scope=\"col\">\n                                  <IntlMessages id=\"marks.No\" />\n                                </th>\n                                <th scope=\"col\">\n                                  <IntlMessages id=\"marks.FullName\" />\n                                </th>\n                                <th scope=\"col\">\n                                  <IntlMessages id=\"marks.FatherName\" />\n                                </th>\n                                <th scope=\"col\">\n                                  <IntlMessages id=\"marks.ID\" />\n                                </th>\n                                <th scope=\"col\">\n                                  <IntlMessages id=\"marks.firstChance\" />\n                                </th>\n                                <th scope=\"col\">\n                                  <IntlMessages id=\"marks.secondChance\" />\n                                </th>\n                              </tr>\n                            </tfoot>\n                          </table>\n                        </Row>\n                        <Row className=\" justify-content-center\">\n                          <Colxx xxs=\"9\" className=\"m-5\">\n                            <Button\n                              className=\" m-4 \"\n                              color=\"primary\"\n                              onClick={() => setIsNext(false)}\n                            >\n                              <IntlMessages id=\"button.Back\" />\n                            </Button>\n\n                            <div className=\"d-flex justify-content-between align-items-center m-4 float-right\">\n                              <Button\n                                size=\"lg\"\n                                type=\"submit\"\n                                color=\"primary\"\n                                // onSubmit={onSubmit}\n                                // onClick={() => setIsSubmitted(true)}\n                              >\n                                <IntlMessages id=\"button.SubmitButton\" />\n                              </Button>\n                            </div>\n                          </Colxx>\n                        </Row>\n                      </Form>\n                    )}\n                  </Formik>\n                </>\n              ) : (\n                <div className=\"wizard-basic-step text-center pt-3\">\n                  <div>\n                    <h1 className=\"mb-2\">\n                      <IntlMessages id=\"wizard.content-thanks\" />\n                    </h1>\n                    <h3>\n                      <IntlMessages id=\"wizard.registered\" />\n                    </h3>\n                    <Button\n                      className=\"m-5 bg-primary\"\n                      // onClick={() => window.location.reload()}\n                      onClick={() => {\n                        setIsNext(false);\n                        setIsSubmitted(false);\n                      }}\n                    >\n                      <IntlMessages id=\"button.Back\" />\n                    </Button>\n                  </div>\n                </div>\n              )}\n            </>\n          )}\n        </CardBody>\n      </Card>\n    </>\n  );\n};\n\nexport default MarksRegistration;\n"],"sourceRoot":""}