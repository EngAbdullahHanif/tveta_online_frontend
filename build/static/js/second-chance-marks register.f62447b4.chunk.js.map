{"version":3,"file":"static/js/second-chance-marks register.f62447b4.chunk.js","mappings":"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","sources":["views/app/students/second-chance-marks-register.js"],"sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport { Formik, Form, Field, isEmptyArray } from 'formik';\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\nimport callApi from 'helpers/callApi';\nimport {\n  studyTimeOptions,\n  educationalYearsOptions,\n} from '../global-data/options';\nimport './../../../assets/css/global-style.css';\n\n// Year  and SHift\nimport * as Yup from 'yup';\nimport { Row, Card, CardBody, FormGroup, Label, Button } from 'reactstrap';\nimport { NotificationManager } from 'components/common/react-notifications';\n\nimport IntlMessages from 'helpers/IntlMessages';\nimport { Colxx } from 'components/common/CustomBootstrap';\nimport { FormikReactSelect } from 'containers/form-validations/FormikFields';\nimport { AuthContext } from 'context/AuthContext';\n\nconst ValidationSchema = Yup.object().shape({\n  institute: Yup.object()\n    .shape({\n      value: Yup.string().required(),\n    })\n    .nullable()\n    .required(<IntlMessages id=\"forms.InstituteErr\" />),\n\n  educationalYear: Yup.object()\n    .shape({\n      value: Yup.string().required(),\n    })\n    .nullable()\n    .required(<IntlMessages id=\"forms.educationYearErr\" />),\n\n  studyTime: Yup.object()\n    .shape({\n      value: Yup.string().required(),\n    })\n    .nullable()\n    .required(<IntlMessages id=\"forms.StudyTimeErr\" />),\n\n  classs: Yup.object()\n    .shape({\n      value: Yup.string().required(),\n    })\n    .nullable()\n    .required(<IntlMessages id=\"marks.ClassErr\" />),\n\n  department: Yup.object()\n    .shape({\n      value: Yup.string().required(),\n    })\n    .nullable()\n    .required(<IntlMessages id=\"teacher.departmentIdErr\" />),\n\n  subject: Yup.object()\n    .shape({\n      value: Yup.string().required(),\n    })\n    .nullable()\n    .required(<IntlMessages id=\"marks.SubjectErr\" />),\n});\n\nconst initialValues = {\n  institute: [],\n  educationlaYear: '',\n  studyTime: [],\n  classs: [],\n  department: [],\n  subject: [],\n};\nconst MarksRegistration = ({ match }) => {\n  const { institutes } = useContext(AuthContext);\n  const [isNext, setIsNext] = useState(false);\n\n  const [isSubmitted, setIsSubmitted] = useState(false);\n  const [fields, setFields] = useState([]);\n  // const [institutes, setInstitutes] = useState([]);\n  const [departments, setDepartments] = useState([]);\n  const [classes, setClasses] = useState([]);\n  const [subjects, setSubjects] = useState([]);\n  const [students, setStudents] = useState([]);\n  const [selectedInstitute, setSelectedInstitute] = useState('');\n  const [selectedDepartment, setSelectedDepartment] = useState('');\n  const [selectedClass, setSelectedClass] = useState('');\n  const [selectedSubject, setSelectedSubject] = useState('');\n  const [selecedStudyTime, setSelectedStudyTime] = useState('');\n  const [selectedEducationalYear, setSelectedEducationalYear] = useState([]);\n  const [passingScore, setPassingScore] = useState(55);\n  const [subjectGrad, setSubjectGrad] = useState();\n  const [subjectGPA, setSubjectGPA] = useState();\n  const [examId, setExamId] = useState();\n  const { markId } = useParams();\n  // separate and set labels for classes\n  const [selectedClassLabel, setselectedClassLabel] = useState({\n    classs: '',\n    semester: '',\n    section: '',\n  });\n\n  useEffect(() => {\n    console.log(\n      selectedClass,\n      typeof selectedClass,\n      'fjkdsjfkjsdafkjsdalkfjlsa',\n    );\n    if (!isEmptyArray(selectedClass) && selectedClass !== '') {\n      const [semester, classs, section] = selectedClass.label.split('-');\n      setselectedClassLabel({ classs, semester, section });\n    }\n  }, [selectedClass]);\n  async function fetchStudent() {\n    const { data } = await axios.get(\n      // `${studentMarkId}/?student_id=${markId}`,\n      `${1}/?student_id=${markId}`,\n    );\n    // console.log(data, 'object of the data');\n\n    // const instGender = genderOptions.map((studentGender) => {\n    //   if (studentGender.value === data[0].gender) {\n    //     setInitialGender(studentGender);\n    //   }\n    // });\n  }\n\n  useEffect(() => {\n    if (markId) {\n      fetchStudent();\n    }\n    //setUpdateMode(true);\n  }, []);\n\n  // const fetchInstitutes = async () => {\n  //   const response = await callApi('institute/', '', null);\n  //   if (response.data && response.status === 200) {\n  //     const updatedData = await response.data.map((item) => ({\n  //       value: item.id,\n  //       label: item.name,\n  //     }));\n  //     setInstitutes(updatedData);\n  //   } else {\n  //     console.log('institute error');\n  //   }\n  // };\n  const fetchFields = async () => {\n    const response = await callApi('institute/field/', '', null);\n    if (response.data && response.status === 200) {\n      const updatedData = await response.data.map((item) => ({\n        value: item.id,\n        label: item.name,\n      }));\n      setFields(updatedData);\n    } else {\n      console.log('field error');\n    }\n  };\n  const fetchDepartments = async () => {\n    const response = await callApi('institute/department/', '', null);\n    if (response.data && response.status === 200) {\n      const updatedData = await response.data.map((item) => ({\n        value: item.id,\n        label: item.name,\n      }));\n      setDepartments(updatedData);\n    } else {\n      console.log('department error');\n    }\n  };\n\n  const fetchClasses = async () => {\n    const response = await callApi('institute/classs/', '', null);\n    if (response.data && response.status === 200) {\n      const updatedData = await response.data.map((item) => ({\n        value: item.id,\n        label: item.name + ' - ' + item.semester + ' - ' + item.section,\n      }));\n      setClasses(updatedData);\n    } else {\n      console.log('class error');\n    }\n  };\n\n  const fetchSubjects = async () => {\n    const response = await callApi('institute/subject/', '', null);\n    if (response.data && response.status === 200) {\n      const updatedData = await response.data.map((item) => ({\n        value: item.id,\n        label: item.name,\n      }));\n      setSubjects(updatedData);\n    } else {\n      console.log('subject error');\n    }\n  };\n\n  useEffect(() => {\n    // fetchInstitutes();\n    fetchFields();\n    fetchDepartments();\n    fetchClasses();\n    fetchSubjects();\n  }, []);\n  // notification message\n  const createNotification = (type, className) => {\n    const cName = className || '';\n    switch (type) {\n      case 'success':\n        NotificationManager.success(\n          'نمری په بریالیتوب سره ثبت شوی',\n          'موفقیت',\n          3000,\n          null,\n          null,\n          cName,\n        );\n        break;\n      case 'error':\n        NotificationManager.error(\n          'نمری ثبت نه شوی بیا کوشش وکری',\n          'خطا',\n          9000,\n          () => {\n            alert('callback');\n          },\n          null,\n          cName,\n        );\n        break;\n      default:\n        NotificationManager.info('Info message');\n        break;\n    }\n  };\n\n  const fechtStudens = async () => {\n    console.log('subject', selectedSubject.value);\n    const response = await callApi(\n      `students/class-marks/list/second-chance/?institute=${selectedInstitute.value}&classs=${selectedClass.value}&shift=${selecedStudyTime.value}&department=${selectedDepartment.value}&educational_year=${selectedEducationalYear.value}&subject=${selectedSubject.value}`,\n      '',\n      null,\n    );\n    if (response.data && response.status === 200) {\n      setStudents(response.data);\n      setIsNext(true);\n    } else {\n      console.log('subject error');\n    }\n  };\n\n  const onSubmit = async (values) => {\n    const educationalYear = selectedEducationalYear.value;\n    const instituteId = selectedInstitute.value;\n    const departmentId = selectedDepartment.value;\n    const classId = selectedClass.value;\n    const subjectId = selectedSubject.value;\n    console.log('educationalYear', educationalYear);\n    console.log('instituteId', instituteId);\n    console.log('departmentId', departmentId);\n    console.log('classId', classId);\n    console.log('subjectId', subjectId);\n\n    const newStudents = students.map((student, index) => {\n      return {\n        student_id: student.student_id,\n        marks: values.score[student.student_id],\n      };\n    });\n\n    let data = [\n      {\n        educational_year: educationalYear,\n        institute: instituteId,\n        department: departmentId,\n        classs: classId,\n        subject: subjectId,\n      },\n      ...newStudents,\n    ];\n\n    console.log('data', data);\n\n    const response = await callApi(\n      'students/class-marks/create/second-chance/',\n      'POST',\n      data,\n    );\n    if (response.status === 200) {\n      console.log('response of students', response);\n      setIsSubmitted(true);\n      createNotification('success', 'filled');\n    } else {\n      console.log('marks error');\n      setIsSubmitted(false);\n      createNotification('error', 'filled');\n    }\n  };\n\n  // console.log('condsotlsa f', students);\n  return (\n    <>\n      <Card>\n        <div className=\"mt-4 ml-5\">\n          <h3 className=\"mt-5 m-5 titleStyle\">\n            {<IntlMessages id=\"menu.second-chance-marks-register\" />}\n          </h3>\n        </div>\n        <CardBody>\n          {!isNext ? (\n            <Formik\n              initialValues={initialValues}\n              onSubmit={fechtStudens}\n              validationSchema={ValidationSchema}\n            >\n              {({\n                errors,\n                touched,\n                values,\n                setFieldTouched,\n                setFieldValue,\n              }) => (\n                <Form className=\"av-tooltip tooltip-label-right style \">\n                  <Row className=\"m-5\">\n                    <Colxx xxs=\"6\">\n                      {/* set if condition, if institutes are loaded */}\n                      <FormGroup className=\"form-group has-float-label error-l-150 \">\n                        <Label>\n                          <IntlMessages id=\"forms.InstituteLabel\" />\n                          <span style={{ color: 'red' }}>*</span>\n                        </Label>\n                        <FormikReactSelect\n                          name=\"institute\"\n                          id=\"institute\"\n                          value={values.institute}\n                          options={institutes}\n                          onChange={setFieldValue}\n                          onBlur={setFieldTouched}\n                          onClick={setSelectedInstitute(values.institute)}\n                        />\n\n                        {errors.institute && touched.institute ? (\n                          <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                            {errors.institute}\n                          </div>\n                        ) : null}\n                      </FormGroup>\n\n                      <FormGroup className=\"form-group has-float-label mt-5  error-l-150 \">\n                        <Label>\n                          <IntlMessages id=\"forms.StudyTimeLabel\" />\n                          <span style={{ color: 'red' }}>*</span>\n                        </Label>\n                        <FormikReactSelect\n                          name=\"studyTime\"\n                          id=\"studyTime\"\n                          value={values.studyTime}\n                          options={studyTimeOptions}\n                          onChange={setFieldValue}\n                          onBlur={setFieldTouched}\n                          onClick={setSelectedStudyTime(values.studyTime)}\n                        />\n                        {errors.studyTime && touched.studyTime ? (\n                          <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                            {errors.studyTime}\n                          </div>\n                        ) : null}\n                      </FormGroup>\n\n                      <FormGroup className=\"form-group has-float-label mt-5  error-l-150\">\n                        <Label>\n                          <IntlMessages id=\"forms.educationYearLabel\" />\n                        </Label>\n                        <FormikReactSelect\n                          name=\"educationalYear\"\n                          id=\"educationalYear\"\n                          options={educationalYearsOptions}\n                          onChange={setFieldValue}\n                          onBlur={setFieldTouched}\n                          onClick={setSelectedEducationalYear(\n                            values.educationalYear,\n                          )}\n                        />\n                        {errors.educationlaYear && touched.educationlaYear ? (\n                          <div className=\"invalid-feedback d-block bg-danger text-white \">\n                            {errors.educationlaYear}\n                          </div>\n                        ) : null}\n                      </FormGroup>\n                    </Colxx>\n\n                    <Colxx xxs=\"6\">\n                      <FormGroup className=\"form-group has-float-label error-l-150 \">\n                        <Label>\n                          <IntlMessages id=\"marks.ClassLabel\" />\n                          <span style={{ color: 'red' }}>*</span>\n                        </Label>\n                        <FormikReactSelect\n                          name=\"classs\"\n                          id=\"classs\"\n                          value={values.classs}\n                          options={classes}\n                          onChange={setFieldValue}\n                          onBlur={setFieldTouched}\n                          onClick={setSelectedClass(values.classs)}\n                          required\n                        />\n                        {errors.classs && touched.classs ? (\n                          <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                            {errors.classs}\n                          </div>\n                        ) : null}\n                      </FormGroup>\n\n                      <FormGroup className=\"form-group has-float-label mt-5 error-l-150\">\n                        <Label>\n                          <IntlMessages id=\"forms.studyDepartment\" />\n                          <span style={{ color: 'red' }}>*</span>\n                        </Label>\n                        <FormikReactSelect\n                          name=\"department\"\n                          id=\"department\"\n                          value={values.department}\n                          options={departments}\n                          onChange={setFieldValue}\n                          onBlur={setFieldTouched}\n                          onClick={setSelectedDepartment(values.department)}\n                          required\n                        />\n                        {errors.department && touched.department ? (\n                          <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                            {errors.department}\n                          </div>\n                        ) : null}\n                      </FormGroup>\n\n                      <FormGroup className=\"form-group has-float-label mt-5 error-l-150\">\n                        <Label>\n                          <IntlMessages id=\"marks.SubjectLabel\" />\n                          <span style={{ color: 'red' }}>*</span>\n                        </Label>\n                        <FormikReactSelect\n                          name=\"subject\"\n                          id=\"subject\"\n                          value={values.subject}\n                          options={subjects}\n                          onChange={setFieldValue}\n                          onBlur={setFieldTouched}\n                          onClick={setSelectedSubject(values.subject)}\n                          required\n                        />\n                        {errors.subject && touched.subject ? (\n                          <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                            {errors.subject}\n                          </div>\n                        ) : null}\n                      </FormGroup>\n                    </Colxx>\n                  </Row>\n                  <Row>\n                    <Colxx>\n                      <Button\n                        color=\"primary\"\n                        className=\"float-right  buttonStyle\"\n                        size=\"lg\"\n                        type=\"submit\"\n                        style={{ margin: '2% 0% 10% 6%' }}\n                        // onClick={() => fechtStudens()}\n                      >\n                        <span className=\"label\">\n                          <IntlMessages id=\"button.Next\" />\n                        </span>\n                      </Button>\n                    </Colxx>\n                  </Row>\n                </Form>\n              )}\n            </Formik>\n          ) : (\n            <>\n              {!isSubmitted ? (\n                <>\n                  <Row\n                    className=\"border border bg-primary me-5 p-1 \"\n                    style={{ marginInline: '16%' }}\n                  >\n                    <Colxx xxs=\"2\">\n                      <Label>\n                        <IntlMessages id=\"forms.FieldLabel\" />\n                      </Label>\n                      {/* {console.log('selectedDepartment', selectedDepartment)} */}\n                      <h6>{selectedDepartment.label}</h6>\n                    </Colxx>\n\n                    <Colxx xxs=\"2\">\n                      <Label>\n                        <IntlMessages id=\"marks.ClassLabel\" />\n                      </Label>\n                      <h6>{selectedClassLabel.classs}</h6>\n                    </Colxx>\n\n                    <Colxx xxs=\"2\">\n                      <Label>\n                        <IntlMessages id=\"forms.StudyTimeLabel\" />\n                      </Label>\n                      <h6>{selecedStudyTime.label}</h6>\n                    </Colxx>\n\n                    <Colxx xxs=\"2\">\n                      <Label>\n                        <IntlMessages id=\"marks.SemesterLabel\" />\n                      </Label>\n                      <h6>{selectedClassLabel.semester}</h6>\n                    </Colxx>\n\n                    <Colxx xxs=\"2\">\n                      <Label>\n                        <IntlMessages id=\"marks.SectionLabel\" />\n                      </Label>\n                      <h6>{selectedClassLabel.section}</h6>\n                    </Colxx>\n\n                    <Colxx xxs=\"2\">\n                      <Label>\n                        <IntlMessages id=\"marks.SubjectLabel\" />\n                      </Label>\n                      <h6>{selectedSubject.label}</h6>\n                    </Colxx>\n                  </Row>\n                  <Row\n                    className=\"justify-content-center  border border\"\n                    style={{ marginInline: '16%' }}\n                  >\n                    <table className=\"table\">\n                      <thead className=\"thead-dark\">\n                        <tr>\n                          <th scope=\"col\">\n                            <IntlMessages id=\"marks.No\" />\n                          </th>\n                          <th scope=\"col\">\n                            <IntlMessages id=\"marks.FullName\" />\n                          </th>\n                          <th scope=\"col\">\n                            <IntlMessages id=\"marks.FatherName\" />\n                          </th>\n                          <th scope=\"col\">\n                            <IntlMessages id=\"marks.ID\" />\n                          </th>\n                          {/* LATTER UNCOMMENT IT, WHEN FIRST CHANCE MARKS IS GOT FROM BACKEND */}\n                          {/* <th scope=\"col\">\n                            <IntlMessages id=\"marks.firstChance\" />\n                          </th> */}\n                          <th scope=\"col\">\n                            <IntlMessages id=\"marks.secondChance\" />\n                          </th>\n                        </tr>\n                      </thead>\n                    </table>\n                  </Row>\n                  <Formik\n                    initialValues={initialValues}\n                    onSubmit={onSubmit}\n                    // validationSchema={ValidationSchema}\n                  >\n                    {({\n                      errors,\n                      // touched,\n                      // // values,\n                      // setFieldTouched,\n                      // setFieldValue,\n                    }) => (\n                      <Form className=\"av-tooltip tooltip-label-right \">\n                        <Row\n                          className=\"justify-content-center  border border\"\n                          style={{\n                            marginInline: '16%',\n                            height: '30rem',\n                            overflowY: 'scroll',\n                            overflowX: 'hidden',\n                          }}\n                        >\n                          <table className=\"table \">\n                            <tbody\n                              className=\"border border \"\n                              style={{\n                                height: '200px',\n                                overflowY: 'scroll',\n                                overflowX: 'hidden',\n                              }}\n                            >\n                              {students.length > 0 &&\n                                students.map((student, index) => (\n                                  <tr key={index}>\n                                    <th scope=\"row\">{index + 1}</th>\n                                    <td>{student.name}</td>\n                                    <td>{student.father_name}</td>\n                                    <td>{student.student_id}</td>\n                                    {/* LATTER UNCOMMENT IT, WHEN FIRST CHANCE MARKS IS GOT FROM BACKEND */}\n                                    {/* <td>first chance marks</td> */}\n\n                                    {/* Second Chance Marks */}\n                                    <td>\n                                      <div class=\"form-group mx-sm-3 mb-2\">\n                                        <FormGroup className=\"form-group\">\n                                          <Field\n                                            type=\"number\"\n                                            className=\"form-control\"\n                                            name={`score[${student.student_id}]`}\n                                            min=\"0\"\n                                            max=\"100\"\n                                          />\n                                          {/* {errors.score && touched.score ? (\n                                            <div className=\"invalid-feedback d-block\">\n                                              {errors.score}\n                                            </div>\n                                          ) : null} */}\n                                        </FormGroup>\n                                      </div>\n                                    </td>\n                                  </tr>\n                                ))}\n                            </tbody>\n                          </table>\n                        </Row>\n                        <Row\n                          className=\"justify-content-center  border border\"\n                          style={{\n                            marginInline: '16%',\n                          }}\n                        >\n                          <table class=\"table \">\n                            <tbody>\n                              <tr>\n                                <td></td>\n                                <td></td>\n                                <td></td>\n                                <td></td>\n                              </tr>\n                            </tbody>\n                            <tfoot className=\"thead-dark\">\n                              <tr>\n                                <th scope=\"col\">\n                                  <IntlMessages id=\"marks.No\" />\n                                </th>\n                                <th scope=\"col\">\n                                  <IntlMessages id=\"marks.FullName\" />\n                                </th>\n                                <th scope=\"col\">\n                                  <IntlMessages id=\"marks.FatherName\" />\n                                </th>\n                                <th scope=\"col\">\n                                  <IntlMessages id=\"marks.ID\" />\n                                </th>\n                                <th scope=\"col\">\n                                  <IntlMessages id=\"marks.firstChance\" />\n                                </th>\n                                <th scope=\"col\">\n                                  <IntlMessages id=\"marks.secondChance\" />\n                                </th>\n                              </tr>\n                            </tfoot>\n                          </table>\n                        </Row>\n                        <Row className=\" justify-content-center\">\n                          <Colxx xxs=\"9\" className=\"m-5\">\n                            <Button\n                              className=\" m-4 \"\n                              color=\"primary\"\n                              onClick={() => setIsNext(false)}\n                            >\n                              <IntlMessages id=\"button.Back\" />\n                            </Button>\n\n                            <div className=\"d-flex justify-content-between align-items-center m-4 float-right\">\n                              <Button\n                                size=\"lg\"\n                                type=\"submit\"\n                                color=\"primary\"\n                                // onSubmit={onSubmit}\n                                // onClick={() => setIsSubmitted(true)}\n                              >\n                                <IntlMessages id=\"button.SubmitButton\" />\n                              </Button>\n                            </div>\n                          </Colxx>\n                        </Row>\n                      </Form>\n                    )}\n                  </Formik>\n                </>\n              ) : (\n                <div className=\"wizard-basic-step text-center pt-3\">\n                  <div>\n                    <h1 className=\"mb-2\">\n                      <IntlMessages id=\"wizard.content-thanks\" />\n                    </h1>\n                    <h3>\n                      <IntlMessages id=\"wizard.registered\" />\n                    </h3>\n                    <Button\n                      className=\"m-5 bg-primary\"\n                      // onClick={() => window.location.reload()}\n                      onClick={() => {\n                        setIsNext(false);\n                        setIsSubmitted(false);\n                      }}\n                    >\n                      <IntlMessages id=\"button.Back\" />\n                    </Button>\n                  </div>\n                </div>\n              )}\n            </>\n          )}\n        </CardBody>\n      </Card>\n    </>\n  );\n};\n\nexport default MarksRegistration;\n"],"names":["ValidationSchema","Yup","shape","institute","value","required","nullable","_jsx","IntlMessages","id","educationalYear","studyTime","classs","department","subject","initialValues","educationlaYear","_ref","match","institutes","useContext","AuthContext","_useState","useState","_useState2","_slicedToArray","isNext","setIsNext","_useState3","_useState4","isSubmitted","setIsSubmitted","_useState5","_useState6","setFields","_useState7","_useState8","departments","setDepartments","_useState9","_useState10","classes","setClasses","_useState11","_useState12","subjects","setSubjects","_useState13","_useState14","students","setStudents","_useState15","_useState16","selectedInstitute","setSelectedInstitute","_useState17","_useState18","selectedDepartment","setSelectedDepartment","_useState19","_useState20","selectedClass","setSelectedClass","_useState21","_useState22","selectedSubject","setSelectedSubject","_useState23","_useState24","selecedStudyTime","setSelectedStudyTime","_useState25","_useState26","selectedEducationalYear","setSelectedEducationalYear","_useState27","_useState28","_useState29","_useState30","_useState31","_useState32","_useState33","_useState34","markId","useParams","_useState35","semester","section","_useState36","selectedClassLabel","setselectedClassLabel","_fetchStudent","_asyncToGenerator","_regeneratorRuntime","mark","_callee7","_yield$axios$get","wrap","_context7","prev","next","axios","concat","sent","data","stop","apply","arguments","useEffect","console","log","isEmptyArray","_selectedClass$label$","label","split","_selectedClass$label$2","fetchStudent","fetchFields","_ref2","_callee","response","updatedData","_context","callApi","status","map","item","name","fetchDepartments","_ref3","_callee2","_context2","fetchClasses","_ref4","_callee3","_context3","fetchSubjects","_ref5","_callee4","_context4","createNotification","type","className","cName","NotificationManager","success","error","alert","info","fechtStudens","_ref6","_callee5","_context5","onSubmit","_ref7","_callee6","values","instituteId","departmentId","classId","subjectId","newStudents","_context6","student","index","student_id","marks","score","educational_year","_toConsumableArray","_x","_Fragment","children","_jsxs","Card","CardBody","Button","onClick","Row","style","marginInline","Colxx","xxs","Label","scope","Formik","_ref9","errors","Form","height","overflowY","overflowX","length","father_name","class","FormGroup","Field","min","max","color","size","validationSchema","_ref8","touched","setFieldTouched","setFieldValue","FormikReactSelect","options","onChange","onBlur","studyTimeOptions","educationalYearsOptions","margin"],"sourceRoot":""}