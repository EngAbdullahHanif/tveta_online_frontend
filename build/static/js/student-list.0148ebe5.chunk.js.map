{"version":3,"sources":["views/app/students/bio/students-list/StudentListMain.js","views/app/students/attendence/attendance-list/AttendanceListHeading.js","views/app/students/attendence/attendance-list/AttendanceListBody.js","views/app/students/attendence/attendance-list/AttendanceListCatagory.js","views/app/students/attendence/attendance-list/AttendanceListMain.js","containers/pages/Pagination.js","hooks/use-mousetrap.js","containers/pages/ImageListView.js","../node_modules/reactstrap/es/ButtonDropdown.js"],"names":["columns","title","dataIndex","sorter","a","b","student_id","width","name","filters","text","value","onFilter","record","gender","indexOf","orderOptions","column","label","pageSizes","ThumbListPages","_ref","match","provinces","useContext","AuthContext","_useState","useState","_useState2","_slicedToArray","loading","_useState3","pagination","current","pageSize","_useState4","tableParams","_useState5","_useState6","isLoaded","setIsLoaded","_useState7","_useState8","displayMode","setDisplayMode","_useState9","_useState10","currentPage","setCurrentPage","_useState11","_useState12","selectedPageSize","setSelectedPageSize","_useState13","_useState14","selectedItems","setSelectedItems","_useState15","_useState16","selectedOrderOption","setSelectedOrderOption","_useState17","_useState18","setSelectedDistrict","_useState19","_useState20","modalOpen","setModalOpen","_useState21","_useState22","totalItemCount","setTotalItemCount","_useState23","_useState24","setTotalPage","_useState25","_useState26","search","setSearch","_useState27","_useState28","items","setItems","_useState29","_useState30","_useState31","_useState32","rest","setRest","_useState33","_useState34","institutes","setInstitutes","_useState35","_useState36","institute","setInstitute","_useState37","_useState38","studentId","setStudentId","_useState39","_useState40","province","setProvince","_useState41","_useState42","district","setDistrict","provincesOptionsForList","ProvincesContext","_useState43","_useState44","selectedGenderOption","setSelectedGenderOption","_useState45","_useState46","selectedProvinceOption","setSelectedProvinceOption","_useState47","_useState48","selectedShiftOption","setSelectedShiftOption","_useState49","_useState50","selectedEducationalYearOption","seSelectedEducationalYearOption","_useState51","_useState52","studentTypeOptions","setStudentTypeOptions","useEffect","itemsPerPage","_asyncToGenerator","_regeneratorRuntime","mark","_callee2","fetchData","_fetchData","wrap","_context2","prev","next","_callee","params","response","_params","_response","_params2","_response2","_params3","_response3","_params4","_response4","_context","institute_id","id","page","callApi","sent","data","status","Math","ceil","count","results","console","log","current_district","p","table","current_province","stop","apply","arguments","fetchInstitutes","_ref3","_callee3","updatedData","_context3","map","item","handleChangeSelectAll","isToggle","length","x","document","activeElement","blur","useMousetrap","startIndex","endIndex","_jsx","className","_Fragment","children","_jsxs","ListPageHeading","heading","changeDisplayMode","changeOrderBy","find","changePageSize","selectedItemsLength","itemsLength","onSearchKey","e","key","target","toLowerCase","toggleModal","changeGenderBy","genderOptionsForList","changeProvinceBy","provinceId","studyTimeOptionsForList","onIdSearchKey","onProvinceSearchKey","onDistrictSearchKey","onResetClick","reset","onInstituteSelect","changeShiftBy","changeEducationalYearBy","educationalYearsOptionsForList","changeStudentTypeBy","studentType","TB","dataSource","index","NavLink","to","concat","style","father_name","pro","phone_number","student_type","studentStatusOptions","fontSize","Badge","color","pill","description","action","BsPencilSquare","outline","injectIntl","intl","dropdownSplitOpen","setDropdownSplitOpen","displayOptionsIsOpen","setDisplayOptionsIsOpen","messages","selectedInstitute","setSelectedInstitute","Row","Colxx","xxs","IntlMessages","ButtonDropdown","isOpen","toggle","CustomInput","type","checked","onChange","DropdownToggle","caret","DropdownMenu","right","DropdownItem","Button","onClick","Collapse","href","DataListIcon","ThumbListIcon","ImageListIcon","UncontrolledDropdown","size","height","overflowY","overflowX","order","placeholder","onKeyPress","getElementById","Separator","StudentListBody","attendance","isSelect","collect","onCheckItem","ContextMenuTrigger","Card","event","classnames","active","marginRight","student","department","present_hours","absent_hours","sickness_hours","educational_year","is_short_attendance","React","memo","props","ListPageListing","totalPage","onContextMenuClick","onContextMenu","onChangePage","ImageListView","includes","DataListView","Pagination","i","ContextMenuContainer","getIndex","arr","prop","servicePath","config","API_URL","lastChecked","setLastChecked","setAttendance","fetchAttendance","_ref2","maxHeight","paddingInline","textAlign","borderStyle","padding","tagName","parentElement","selectedList","_toConsumableArray","filter","push","shiftKey","newItems","start","end","slice","min","max","Array","from","Set","clickedProductId","DisplayMessage","message","_ref$totalPage","_ref$currentPage","_ref$numberLimit","numberLimit","_ref$lastIsActive","lastIsActive","_ref$firstIsActive","firstIsActive","startPoint","endPoint","parseInt","points","firstPageButtonClassName","lastPageButtonClassName","prevPageButtonClassName","nextPageButtonClassName","Nav","NavItem","handlerKey","handlerCallback","actionRef","useRef","mousetrap","bind","evt","combo","preventDefault","unbind","product","sm","lg","xl","CardImg","top","alt","src","img","statusColor","CardBody","CardSubtitle","CardText","date","propTypes","PropTypes","node","createElement","Dropdown","_extends","group"],"mappings":"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","file":"static/js/student-list.0148ebe5.chunk.js","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport { Table as TB } from 'antd';\nimport IntlMessages from 'helpers/IntlMessages';\nimport callApi from 'helpers/callApi';\nimport {\n  educationalYearsOptionsForList,\n  studentType,\n  genderOptionsForList,\n  studyTimeOptionsForList,\n  StdInteranceOptions,\n} from '../../../global-data/options';\nimport { Badge } from 'reactstrap';\n// import { servicePath } from 'constants/defaultValues';\nimport ListPageHeading from 'views/app/students/bio/students-list/StudentListHeading';\nimport ListPageListing from 'views/app/students/bio/students-list/StudentListCatagory';\nimport useMousetrap from 'hooks/use-mousetrap';\n\nimport { AuthContext, ProvincesContext } from 'context/AuthContext';\nimport { BsPencilSquare, BsTrashFill } from 'react-icons/bs';\nimport { studentStatusOptions } from './../../../global-data/options';\nimport { NavLink } from 'react-router-dom';\nconst getIndex = (value, arr, prop) => {\n  for (let i = 0; i < arr.length; i += 1) {\n    if (arr[i][prop] === value) {\n      return i;\n    }\n  }\n  return -1;\n};\n\nconst columns = [\n  {\n    title: 'نمبر اساس',\n    dataIndex: 'student_id',\n    sorter: (a, b) => a.student_id - b.student_id,\n    width: '5%',\n  },\n  {\n    title: 'نوم/نام',\n    dataIndex: 'name',\n    sorter: (a, b) => a.name - b.name,\n    // render: (name) => `${name.first} ${name.last}`,\n    width: '15%',\n  },\n  {\n    title: 'جنسیت',\n    dataIndex: 'gender',\n    filters: [\n      { text: 'Male', value: 'male' },\n      { text: 'Female', value: 'female' },\n    ],\n    onFilter: (value, record) => record.gender.indexOf(value) === 0,\n    width: '10%',\n  },\n  {\n    title: 'د پلار نوم',\n    dataIndex: 'father_name',\n    width: '10%',\n  },\n  {\n    title: 'ولایت',\n    dataIndex: 'province',\n    width: '10%',\n  },\n  {\n    title: 'تلفون شمیره',\n    dataIndex: 'phone_number',\n    width: '20%',\n  },\n  // {\n  //   title: 'ده جزت نوعیت',\n  //   dataIndex: 'std_status',\n  //   width: '20%',\n  // },\n  {\n    title: 'شاګرد ډول',\n    dataIndex: 'student_type',\n    width: '8%',\n  },\n  {\n    title: 'اپډیټ',\n    dataIndex: 'action',\n  },\n];\n\nconst orderOptions = [\n  { column: 'title', label: 'Product Name' },\n  { column: 'category', label: 'Category' },\n  { column: 'status', label: 'Status' },\n];\nconst pageSizes = [10, 20, 40, 80];\n\nconst ThumbListPages = ({ match }) => {\n  const { provinces } = useContext(AuthContext);\n  const [loading, setLoading] = useState(false);\n  const [tableParams, setTableParams] = useState({\n    pagination: {\n      current: 1,\n      pageSize: 10,\n    },\n  });\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [displayMode, setDisplayMode] = useState('thumblist');\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const [selectedPageSize, setSelectedPageSize] = useState(20);\n  const [selectedItems, setSelectedItems] = useState([]);\n  const [selectedOrderOption, setSelectedOrderOption] = useState({\n    column: 'title',\n    label: 'Product Name',\n  });\n  const [selectedDistrict, setSelectedDistrict] = useState();\n\n  const [modalOpen, setModalOpen] = useState(false);\n  const [totalItemCount, setTotalItemCount] = useState(0);\n  const [totalPage, setTotalPage] = useState(1);\n  const [search, setSearch] = useState('');\n  const [items, setItems] = useState([]);\n  const [lastChecked, setLastChecked] = useState(null);\n  const [rest, setRest] = useState(0);\n  const [institutes, setInstitutes] = useState();\n  const [institute, setInstitute] = useState('');\n\n  const [studentId, setStudentId] = useState('');\n  const [province, setProvince] = useState('');\n  const [district, setDistrict] = useState('');\n  const { provinces: provincesOptionsForList } = useContext(ProvincesContext);\n\n  const [selectedGenderOption, setSelectedGenderOption] = useState();\n  const [selectedProvinceOption, setSelectedProvinceOption] = useState();\n  const [selectedShiftOption, setSelectedShiftOption] = useState();\n  const [selectedEducationalYearOption, seSelectedEducationalYearOption] =\n    useState();\n  const [studentTypeOptions, setStudentTypeOptions] = useState();\n\n  // if any filter changes, go to first page\n  useEffect(() => {\n    setCurrentPage(1);\n  }, [\n    selectedPageSize,\n    selectedOrderOption,\n    selectedGenderOption,\n    selectedProvinceOption,\n    selectedShiftOption,\n    selectedEducationalYearOption,\n    studentTypeOptions,\n  ]);\n\n  const itemsPerPage = 10;\n\n  useEffect(async () => {\n    async function fetchData() {\n      // if institute not selected\n      if (institute !== '') {\n        const params = {\n          institute_id: institute.id,\n          page: currentPage,\n        };\n        const response = await callApi(\n          `students/student_institutes/`,\n          '',\n          null,\n          params\n        );\n        if (response.data && response.status === 200) {\n          setTotalPage(Math.ceil(response.data.count / itemsPerPage));\n          setItems(response.data.results);\n          setSelectedItems([]);\n          setTotalItemCount(response.data.count);\n          setIsLoaded(false);\n        } else {\n          console.log('students error');\n        }\n      }\n      // if institute and shift selected, but province and gender are not selected\n      else if (\n        !selectedProvinceOption &&\n        !selectedGenderOption &&\n        selectedShiftOption\n      ) {\n        if (rest == true) {\n          setDistrict('');\n          setStudentId('');\n          setRest(false);\n        }\n\n        const params = {\n          student_id: studentId,\n          current_district: district,\n          p: currentPage,\n          page: 1,\n        };\n        // here\n        const response = await callApi(`students/`, '', null, params);\n        console.table('respons', response);\n        if (response.data && response.status === 200) {\n          setTotalPage(Math.ceil(response.data.count / itemsPerPage));\n          setIsLoaded(false);\n          setItems(response.data.results);\n\n          setSelectedItems([]);\n          setTotalItemCount(response.data.count);\n          console.log('response of the result ', response.data.results);\n          console.log('isLoaded sadf', isLoaded);\n        } else {\n          console.log('students error');\n        }\n      } else if (!selectedProvinceOption) {\n        const params = {\n          student_id: studentId,\n          gender: selectedGenderOption?.value,\n          current_district: district?.value,\n          page: currentPage,\n        };\n        const response = await callApi(`students/`, '', null, params);\n\n        if (response.data && response.status === 200) {\n          setTotalPage(Math.ceil(response.data.count / itemsPerPage));\n          setItems(response.data.results);\n          setSelectedItems([]);\n          setTotalItemCount(response.data.count);\n          setIsLoaded(false);\n        } else {\n          console.log('students error');\n        }\n      } else if (!selectedGenderOption) {\n        const params = {\n          student_id: studentId,\n          current_province: selectedProvinceOption.value,\n          current_district: district,\n          page: currentPage,\n        };\n        const response = await callApi(`students/`, '', null, params);\n        if (response.data && response.status === 200) {\n          setTotalPage(Math.ceil(response.data.count / itemsPerPage));\n          setItems(response.data.results);\n          setSelectedItems([]);\n          setTotalItemCount(response.data.count);\n          setIsLoaded(false);\n        } else {\n          console.log('students error');\n        }\n      } else {\n        // setTotalItemCount(response.data.totalItem);\n        const params = {\n          student_id: studentId,\n          gender: selectedGenderOption.value,\n          current_province: selectedProvinceOption.value,\n          current_district: district.value,\n          page: currentPage,\n        };\n        const response = await callApi(`students`, '', null, params);\n        if (response.data && response.status === 200) {\n          setTotalPage(Math.ceil(response.data.count / itemsPerPage));\n          setItems(response.data.results);\n          setSelectedItems([]);\n          setTotalItemCount(response.data.count);\n          setIsLoaded(false);\n        } else {\n          console.log('students error');\n        }\n      }\n    }\n\n    fetchData();\n  }, [\n    selectedPageSize,\n    currentPage,\n    selectedOrderOption,\n    search,\n    selectedGenderOption,\n    selectedProvinceOption,\n    studentId,\n    province,\n    district,\n    rest,\n    institute,\n    studentTypeOptions,\n  ]);\n\n  const fetchInstitutes = async () => {\n    const response = await callApi('institute/', '', null);\n    if (response.data && response.status === 200) {\n      const updatedData = await response.data.map((item) => ({\n        value: item.id,\n        label: item.name,\n      }));\n      setInstitutes(updatedData);\n    } else {\n      console.log('institute error');\n    }\n  };\n\n  useEffect(() => {\n    fetchInstitutes();\n  }, []);\n\n  const onCheckItem = (event, id) => {\n    if (\n      event.target.tagName === 'A' ||\n      (event.target.parentElement && event.target.parentElement.tagName === 'A')\n    ) {\n      return true;\n    }\n    if (lastChecked === null) {\n      setLastChecked(id);\n    }\n\n    let selectedList = [...selectedItems];\n    if (selectedList.includes(id)) {\n      selectedList = selectedList.filter((x) => x !== id);\n    } else {\n      selectedList.push(id);\n    }\n    setSelectedItems(selectedList);\n\n    if (event.shiftKey) {\n      let newItems = [...items];\n      const start = getIndex(id, newItems, 'id');\n      const end = getIndex(lastChecked, newItems, 'id');\n      newItems = newItems.slice(Math.min(start, end), Math.max(start, end) + 1);\n      selectedItems.push(\n        ...newItems.map((item) => {\n          return item.id;\n        })\n      );\n      selectedList = Array.from(new Set(selectedItems));\n      setSelectedItems(selectedList);\n    }\n    document.activeElement.blur();\n    return false;\n  };\n\n  const handleChangeSelectAll = (isToggle) => {\n    if (selectedItems.length >= items.length) {\n      if (isToggle) {\n        setSelectedItems([]);\n      }\n    } else {\n      setSelectedItems(items.map((x) => x.id));\n    }\n    document.activeElement.blur();\n    return false;\n  };\n\n  const onContextMenuClick = (e, data) => {\n    // params : (e,data,target)\n    console.log('onContextMenuClick - selected items', selectedItems);\n    console.log('onContextMenuClick - action : ', data.action);\n  };\n\n  const onContextMenu = (e, data) => {\n    const clickedProductId = data.data;\n    if (!selectedItems.includes(clickedProductId)) {\n      setSelectedItems([clickedProductId]);\n    }\n\n    return true;\n  };\n\n  useMousetrap(['ctrl+a', 'command+a'], () => {\n    handleChangeSelectAll(false);\n  });\n\n  useMousetrap(['ctrl+d', 'command+d'], () => {\n    setSelectedItems([]);\n    return false;\n  });\n\n  const startIndex = (currentPage - 1) * selectedPageSize;\n  const endIndex = currentPage * selectedPageSize;\n  console.log('isLoadedsdfsd', isLoaded);\n  return isLoaded ? (\n    <div className=\"loading\" />\n  ) : (\n    <>\n      <div className=\"disable-text-selection\">\n        {/* This is he */}\n        <ListPageHeading\n          heading=\"د شاگرد لست/لست شاگردان\"\n          // Using display mode we can change the display of the list.\n          displayMode={displayMode}\n          changeDisplayMode={setDisplayMode}\n          handleChangeSelectAll={handleChangeSelectAll}\n          // following code is used for order the list based on different element of the prod\n          changeOrderBy={(column) => {\n            setSelectedOrderOption(\n              orderOptions.find((x) => x.column === column)\n            );\n          }}\n          changePageSize={setSelectedPageSize}\n          selectedPageSize={selectedPageSize}\n          totalItemCount={totalItemCount}\n          selectedOrderOption={selectedOrderOption}\n          match={match}\n          startIndex={startIndex}\n          endIndex={endIndex}\n          selectedItemsLength={selectedItems ? selectedItems.length : 0}\n          itemsLength={items ? items.length : 0}\n          onSearchKey={(e) => {\n            if (e.key === 'Enter') {\n              setSearch(e.target.value.toLowerCase());\n            }\n          }}\n          orderOptions={orderOptions}\n          pageSizes={pageSizes}\n          toggleModal={() => setModalOpen(!modalOpen)}\n          // Gender\n          changeGenderBy={(value) => {\n            console.log('changeGenderBy: ', value);\n            setSelectedGenderOption(\n              genderOptionsForList.find((x) => x.value == value)\n            );\n          }}\n          changeProvinceBy={(provinceId) => {\n            setSelectedProvinceOption(\n              provincesOptionsForList.find(\n                (province) => province.value === provinceId\n              )\n            );\n          }}\n          selectedGenderOption={selectedGenderOption}\n          selectedEducationalYearOption={selectedEducationalYearOption}\n          studentTypeOptions={studentTypeOptions}\n          selectedProvinceOption={selectedProvinceOption}\n          selectedShiftOption={selectedShiftOption}\n          genderOptionsForList={genderOptionsForList}\n          studyTimeOptionsForList={studyTimeOptionsForList}\n          provincesOptionsForList={provincesOptionsForList}\n          onIdSearchKey={(e) => {\n            if (e.key === 'Enter') {\n              setStudentId(e.target.value.toLowerCase());\n            }\n          }}\n          // Province\n          onProvinceSearchKey={(e) => {\n            if (e.key === 'Enter') {\n              setProvince(e.target.value.toLowerCase());\n            }\n          }}\n          // District\n          onDistrictSearchKey={(e) => {\n            if (e.key === 'Enter') {\n              setDistrict(e.target.value.toLowerCase());\n            }\n          }}\n          onResetClick={setRest}\n          reset={rest}\n          institutes={institutes}\n          onInstituteSelect={setInstitute}\n          // Shift\n          changeShiftBy={(column) => {\n            setSelectedShiftOption(\n              studyTimeOptionsForList.find((x) => x.column === column)\n            );\n          }}\n          // Educational Year\n          changeEducationalYearBy={(column) => {\n            seSelectedEducationalYearOption(\n              educationalYearsOptionsForList.find((x) => x.column === column)\n            );\n          }}\n          educationalYearsOptionsForList={educationalYearsOptionsForList}\n          // Level of Education\n          changeStudentTypeBy={(column) => {\n            setStudentTypeOptions(studentType.find((x) => x.column === column));\n          }}\n          studentType={studentType}\n          setSelectedDistrict={setSelectedDistrict}\n        />\n        {/* <table className=\"table\">\n          <thead\n            className=\"pl-2 d-flex flex-grow-1  table-dark mb-2\"\n            style={{ maxHeight: '55px' }}\n          >\n            <tr className=\"card-body align-self-center d-flex flex-column flex-lg-row align-items-lg-center\">\n              <th\n                style={{\n                  width: '11%',\n                  fontSize: '20px',\n                  paddingInline: '0%',\n                  textAlign: 'right',\n                  borderStyle: 'hidden',\n                }}\n              >\n                <IntlMessages id=\"student.rollNo\" />\n              </th>\n              <th\n                style={{\n                  width: '14%',\n                  fontSize: '20px',\n                  paddingInline: '0%',\n                  textAlign: 'right',\n                  borderStyle: 'hidden',\n                }}\n              >\n                <IntlMessages id=\"forms.StdName\" />\n              </th>\n              <th\n                style={{\n                  width: '15%',\n                  fontSize: '20px',\n                  padding: '0%',\n                  textAlign: 'right',\n                  borderStyle: 'hidden',\n                }}\n              >\n                <IntlMessages id=\"forms.StdFatherName\" />\n              </th>\n              <th\n                style={{\n                  width: '15%',\n                  padding: '0%',\n                  fontSize: '20px',\n                  textAlign: 'right',\n                  borderStyle: 'hidden',\n                }}\n              >\n                {' '}\n                <IntlMessages id=\"forms.ProvinceLabel\" />\n              </th>\n              <th\n                style={{\n                  width: '15%',\n                  padding: '0%',\n                  fontSize: '20px',\n                  textAlign: 'right',\n                  borderStyle: 'hidden',\n                }}\n              >\n                {' '}\n                <IntlMessages id=\"student.PhoneNo\" />\n              </th>\n              <th\n                style={{\n                  width: '15%',\n                  padding: '0%',\n                  fontSize: '20px',\n                  textAlign: 'right',\n                  borderStyle: 'hidden',\n                }}\n              >\n                {' '}\n                <IntlMessages id=\"student.interenaceType\" />\n              </th>\n              <th\n                style={{\n                  width: '10%',\n                  padding: '0%',\n                  fontSize: '20px',\n                  textAlign: 'right',\n                  borderStyle: 'hidden',\n                }}\n              >\n                {' '}\n                <IntlMessages id=\"study.type\" />\n              </th>\n            </tr>\n          </thead>\n\n          <ListPageListing\n            items={items}\n            displayMode={displayMode}\n            selectedItems={selectedItems}\n            onCheckItem={onCheckItem}\n            currentPage={currentPage}\n            totalPage={totalPage}\n            onContextMenuClick={onContextMenuClick}\n            onContextMenu={onContextMenu}\n            onChangePage={setCurrentPage}\n          />\n        </table> */}\n        <TB\n          columns={columns}\n          // rowKey={(record) => record.login.uuid}\n          pagination={tableParams.pagination}\n          loading={loading}\n          // onChange={handleTableChange}\n          dataSource={items.map((item, index) => ({\n            key: index,\n            student_id: item.student_id,\n            name: (\n              <NavLink to={`student/${item.id}`} style={{ width: '10%' }}>\n                {item.name}\n              </NavLink>\n            ),\n            gender: item.gender,\n            father_name: item.father_name,\n            province: provinces.map((pro) => {\n              if (pro.value == item.current_province) return pro.label;\n            }),\n            phone_number: item.phone_number,\n\n            student_type: studentStatusOptions.map((status) => {\n              if (status.value == item.status) {\n                return (\n                  <div\n                    className=\"mb-1 text-small\"\n                    style={{ fontSize: '20px', width: '10%' }}\n                  >\n                    <Badge\n                      color={\n                        status.value == 'dismissed'\n                          ? 'danger'\n                          : status.value == 'inprogress' ||\n                            status.value == 'active'\n                          ? 'success'\n                          : status.value == 'freeze'\n                          ? 'secondary'\n                          : 'warning'\n                      }\n                      pill\n                    >\n                      {status.label}\n                    </Badge>\n                  </div>\n                );\n              }\n            }),\n            description: item.description,\n            action: (\n              <NavLink\n                to={`/app/students/student-update/${item.id}`}\n                // style={{ width: '10%' }}\n              >\n                <div>\n                  <BsPencilSquare\n                    color=\"green\"\n                    outline\n                    style={{ fontSize: '20px' }}\n                    id=\"updateIcon\"\n                  />\n                </div>\n              </NavLink>\n            ),\n          }))}\n        />\n      </div>\n    </>\n  );\n};\n\nexport default ThumbListPages;\n","/* eslint-disable react/no-array-index-key */\nimport React, { useState } from 'react';\nimport {\n  Row,\n  Button,\n  ButtonDropdown,\n  UncontrolledDropdown,\n  DropdownMenu,\n  DropdownItem,\n  DropdownToggle,\n  CustomInput,\n  Collapse,\n} from 'reactstrap';\nimport { injectIntl } from 'react-intl';\n\nimport { Colxx, Separator } from 'components/common/CustomBootstrap';\nimport IntlMessages from 'helpers/IntlMessages';\nimport ReactAutoSugegst from 'containers/forms/ReactAutoSugegst';\n\nimport { DataListIcon, ThumbListIcon, ImageListIcon } from 'components/svg';\n// import Breadcrumb from '../navs/Breadcrumb';\n\nconst ListPageHeading = ({\n  intl,\n  displayMode,\n  changeDisplayMode,\n  handleChangeSelectAll,\n  changeOrderBy,\n  changePageSize,\n  selectedPageSize,\n  totalItemCount,\n  selectedOrderOption,\n  match,\n  startIndex,\n  endIndex,\n  selectedItemsLength,\n  itemsLength,\n  onSearchKey,\n  orderOptions,\n  pageSizes,\n  // toggleModal,\n  heading,\n  onIdSearchKey,\n  changeGenderBy,\n  selectedGenderOption,\n  genderOptionsForList,\n  selectedProvinceOption,\n  provincesOptionsForList,\n  changeProvinceBy,\n  onDistrictSearchKey,\n  onProvinceSearchKey,\n  onResetClick,\n  reset,\n  institutes,\n  onInstituteSelect,\n}) => {\n  const [dropdownSplitOpen, setDropdownSplitOpen] = useState(false);\n  const [displayOptionsIsOpen, setDisplayOptionsIsOpen] = useState(false);\n  const { messages } = intl;\n  const [selectedInstitute, setSelectedInstitute] = useState('');\n  onInstituteSelect(selectedInstitute);\n  return (\n    <Row>\n      <Colxx xxs=\"12\">\n        <div className=\"mb-2\">\n          <h1>\n            <IntlMessages id={heading} />\n          </h1>\n          <div className=\"text-zero top-right-button-container\">\n            {/* <Button\n              color=\"primary\"\n              size=\"lg\"\n              className=\"top-right-button\"\n              onClick={() => toggleModal()}\n            >\n              <IntlMessages id=\"pages.add-new\" />\n            </Button> */}\n            {'  '}\n            <ButtonDropdown\n              isOpen={dropdownSplitOpen}\n              toggle={() => setDropdownSplitOpen(!dropdownSplitOpen)}\n            >\n              <div className=\"btn btn-primary btn-lg pl-4 pr-0 check-button check-all\">\n                <CustomInput\n                  className=\"custom-checkbox mb-0 d-inline-block\"\n                  type=\"checkbox\"\n                  id=\"checkAll\"\n                  checked={selectedItemsLength >= itemsLength}\n                  onChange={() => handleChangeSelectAll(true)}\n                  label={\n                    <span\n                      className={`custom-control-label ${\n                        selectedItemsLength > 0 &&\n                        selectedItemsLength < itemsLength\n                          ? 'indeterminate'\n                          : ''\n                      }`}\n                    />\n                  }\n                />\n              </div>\n              <DropdownToggle\n                caret\n                color=\"primary\"\n                className=\"dropdown-toggle-split btn-lg\"\n              />\n              <DropdownMenu right>\n                <DropdownItem>\n                  <IntlMessages id=\"pages.delete\" />\n                </DropdownItem>\n                <DropdownItem>\n                  <IntlMessages id=\"pages.another-action\" />\n                </DropdownItem>\n              </DropdownMenu>\n            </ButtonDropdown>\n          </div>\n          {/* <Breadcrumb match={match} /> */}\n        </div>\n\n        <div className=\"mb-2\">\n          <Button\n            color=\"empty\"\n            className=\"pt-0 pl-0 d-inline-block d-md-none\"\n            onClick={() => setDisplayOptionsIsOpen(!displayOptionsIsOpen)}\n          >\n            <IntlMessages id=\"pages.display-options\" />{' '}\n            <i className=\"simple-icon-arrow-down align-middle\" />\n          </Button>\n          <Collapse\n            isOpen={displayOptionsIsOpen}\n            className=\"d-md-block\"\n            id=\"displayOptions\"\n          >\n            <span className=\"mr-3 d-inline-block float-md-left\">\n              <a\n                href=\"#/\"\n                className={`mr-2 view-icon ${\n                  displayMode === 'list' ? 'active' : ''\n                }`}\n                onClick={() => changeDisplayMode('list')}\n              >\n                <DataListIcon />\n              </a>\n              <a\n                href=\"#/\"\n                className={`mr-2 view-icon ${\n                  displayMode === 'thumblist' ? 'active' : ''\n                }`}\n                onClick={() => changeDisplayMode('thumblist')}\n              >\n                <ThumbListIcon />\n              </a>\n              <a\n                href=\"#/\"\n                className={`mr-2 view-icon ${\n                  displayMode === 'imagelist' ? 'active' : ''\n                }`}\n                onClick={() => changeDisplayMode('imagelist')}\n              >\n                <ImageListIcon />\n              </a>\n            </span>\n            <div className=\"d-block d-md-inline-block pt-1\">\n              <div className=\"row\">\n                <UncontrolledDropdown className=\"mr-1 float-md-left btn-group mb-1 \">\n                  <DropdownToggle caret color=\"outline-dark\" size=\"xs\">\n                    <IntlMessages id=\"filter\" />\n                    {selectedGenderOption.label}\n                  </DropdownToggle>\n                  <DropdownMenu>\n                    {genderOptionsForList.map((gender, index) => {\n                      return (\n                        <DropdownItem\n                          key={index}\n                          onClick={() => changeGenderBy(gender.column)}\n                        >\n                          {gender.label}\n                        </DropdownItem>\n                      );\n                    })}\n                  </DropdownMenu>\n                </UncontrolledDropdown>\n                <UncontrolledDropdown className=\"mr-1 float-md-left btn-group mb-1 \">\n                  <DropdownToggle caret color=\"outline-dark\" size=\"xs\">\n                    <IntlMessages id=\"filter\" />\n                    {selectedProvinceOption.label}\n                  </DropdownToggle>\n                  <DropdownMenu\n                    style={{\n                      height: '300px',\n                      overflowY: 'scroll',\n                      overflowX: 'hidden',\n                    }}\n                  >\n                    {provincesOptionsForList.map((order, index) => {\n                      return (\n                        <DropdownItem\n                          key={index}\n                          onClick={() => changeProvinceBy(order.column)}\n                        >\n                          {order.label}\n                        </DropdownItem>\n                      );\n                    })}\n                  </DropdownMenu>\n                </UncontrolledDropdown>\n                <div className=\"search-sm d-inline-block float-md-left mr-1 mb-1 align-top\">\n                  <input\n                    type=\"text\"\n                    name=\"district\"\n                    id=\"district\"\n                    placeholder={messages['search.district']}\n                    onKeyPress={(e) => onDistrictSearchKey(e)}\n                  />\n                </div>\n                <div className=\"search-sm d-inline-block float-md-left mr-1 mb-1 align-top\">\n                  <input\n                    type=\"text\"\n                    name=\"student_id\"\n                    id=\"student_id\"\n                    placeholder={messages['search.id']}\n                    onKeyPress={(e) => onIdSearchKey(e)}\n                  />\n                </div>\n              </div>\n              <Button\n                color=\"outline-dark\"\n                size=\"xs\"\n                className=\"float-md-left mb-1\"\n                onClick={() => {\n                  changeGenderBy('all');\n                  changeProvinceBy('all');\n                  document.getElementById('district').value = '';\n                  document.getElementById('student_id').value = '';\n                  setSelectedInstitute('');\n                  onResetClick(!reset);\n                }}\n              >\n                <IntlMessages id=\"pages.reset\" />\n              </Button>\n            </div>\n\n            {/* <div className=\"float-md-right pt-1\">\n              <span className=\"text-muted text-small mr-1\">{`${startIndex}-${endIndex} of ${totalItemCount} `}</span>\n              <UncontrolledDropdown className=\"d-inline-block\">\n                <DropdownToggle caret color=\"outline-dark\" size=\"xs\">\n                  {selectedPageSize}\n                </DropdownToggle>\n                <DropdownMenu right>\n                  {pageSizes.map((size, index) => {\n                    return (\n                      <DropdownItem\n                        key={index}\n                        onClick={() => changePageSize(size)}\n                      >\n                        {size}\n                      </DropdownItem>\n                    );\n                  })}\n                </DropdownMenu>\n              </UncontrolledDropdown>\n            </div> */}\n          </Collapse>\n        </div>\n        <Separator className=\"mb-5\" />\n      </Colxx>\n    </Row>\n  );\n};\n\nexport default injectIntl(ListPageHeading);\n","import React from 'react';\nimport { Card, CustomInput, Badge } from 'reactstrap';\nimport { NavLink } from 'react-router-dom';\nimport classnames from 'classnames';\nimport { ContextMenuTrigger } from 'react-contextmenu';\nimport { Colxx } from 'components/common/CustomBootstrap';\n\nconst StudentListBody = ({ attendance, isSelect, collect, onCheckItem }) => {\n  return (\n    <Colxx xxs=\"12\" key={attendance.id} className=\"mb-3\">\n      <ContextMenuTrigger id=\"menu_id\" data={attendance.id} collect={collect}>\n        <Card\n          onClick={(event) => onCheckItem(event, attendance.id)}\n          className={classnames('d-flex flex-row', {\n            active: isSelect,\n          })}\n        >\n          {/* <NavLink to={`?p=${attendance.id}`} className=\"d-flex\">\n            <img\n              alt={attendance.title}\n              src={attendance.img}\n              className=\"list-thumbnail responsive border-0 card-img-left\"\n            />\n          </NavLink> */}\n          <div className=\"pl-2 d-flex flex-grow-1 min-width-zero\">\n            <div className=\"py-3 card-body align-self-center d-flex flex-column flex-lg-row justify-content-between min-width-zero align-items-lg-center\">\n              {/* send this to localhost/attendances/:id */}\n\n              <NavLink to={`attendance-list/${attendance.id}`} className=\"\">\n                <p\n                  className=\"list-item-heading mb-1 truncate \"\n                  style={{ fontSize: 18 }}\n                >\n                  <span className=\"mr-5\">{attendance.id}</span>\n                </p>\n              </NavLink>\n              <p\n                style={{ marginRight: '20px', fontSize: 18 }}\n                className=\"mb-1 text-small w-10 w-sm-100\"\n              >\n                {attendance.student.name}\n              </p>\n              <p\n                style={{ marginRight: '30px', fontSize: 18 }}\n                className=\"mb-1 text-small w-10 w-sm-100\"\n              >\n                {attendance.department.name}\n              </p>\n              <p\n                style={{ marginRight: '30px', fontSize: 18 }}\n                className=\"mb-1 text-small w-10 w-sm-100\"\n              >\n                {attendance.institute.name}\n              </p>\n              <p\n                style={{ marginRight: '10px', fontSize: 18 }}\n                className=\"mb-1 text-small w-10 w-sm-100\"\n              >\n                {attendance.present_hours}\n              </p>\n              <p\n                className=\"mb-1 text-small w-10 w-sm-100\"\n                style={{ fontSize: 18 }}\n              >\n                {attendance.absent_hours}\n              </p>\n              <p\n                className=\"mb-1 text-small w-10 w-sm-100\"\n                style={{ fontSize: 18 }}\n              >\n                {attendance.sickness_hours}\n              </p>\n              {/* <p className=\"mb-1 text-small w-10 w-sm-100\">\n                {attendance.educational_days}\n              </p> */}\n              <p\n                className=\"mb-1 text-small w-10 w-sm-100\"\n                style={{ fontSize: 18 }}\n              >\n                {attendance.educational_year}\n              </p>\n              <p\n                className=\"mb-1 text-small w-10 w-sm-100\"\n                style={{ fontSize: 18 }}\n              >\n                {attendance.is_short_attendance ? 'محروم' : 'غیر محروم'}\n              </p>\n            </div>\n          </div>\n        </Card>\n      </ContextMenuTrigger>\n    </Colxx>\n  );\n};\n\n/* React.memo detail : https://reactjs.org/docs/react-api.html#reactpurecomponent  */\nexport default React.memo(StudentListBody);\n","import React, { useState } from 'react';\nimport {\n  Row,\n  Modal,\n  Button,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n} from 'reactstrap';\n\nimport Pagination from '../../../../../containers/pages/Pagination';\nimport ContextMenuContainer from '../../../../../containers/pages/ContextMenuContainer';\nimport DataListView from '../../../../../containers/pages/DataListView';\nimport ImageListView from '../../../../../containers/pages/ImageListView';\nimport StudentListBody from './AttendanceListBody';\n\nfunction collect(props) {\n  return { data: props.data };\n}\n\nconst ListPageListing = ({\n  items,\n  displayMode,\n  selectedItems,\n  onCheckItem,\n  currentPage,\n  totalPage,\n  onContextMenuClick,\n  onContextMenu,\n  onChangePage,\n}) => {\n  const [modalBasic, setModalBasic] = useState(true);\n\n  return (\n    <>\n      <Row>\n        {items.length === 0 ? (\n          <div className=\"no-result\">\n            <h5>هیچ داده ای برای نمایش وجود ندارد</h5>\n          </div>\n        ) : null}\n        {items.map((attendance) => {\n          if (displayMode === 'imagelist') {\n            return (\n              <ImageListView\n                key={attendance.id}\n                attendance={attendance}\n                isSelect={selectedItems.includes(attendance.id)}\n                collect={collect}\n                onCheckItem={onCheckItem}\n              />\n            );\n          }\n          if (displayMode === 'thumblist') {\n            return (\n              <StudentListBody\n                key={attendance.id}\n                attendance={attendance}\n                isSelect={selectedItems.includes(attendance.id)}\n                collect={collect}\n                onCheckItem={onCheckItem}\n              />\n            );\n          }\n          return (\n            <DataListView\n              key={attendance.id}\n              attendance={attendance}\n              isSelect={selectedItems.includes(attendance.id)}\n              onCheckItem={onCheckItem}\n              collect={collect}\n            />\n          );\n        })}\n        <Pagination\n          currentPage={currentPage}\n          totalPage={totalPage}\n          onChangePage={(i) => onChangePage(i)}\n        />\n        <ContextMenuContainer\n          onContextMenuClick={onContextMenuClick}\n          onContextMenu={onContextMenu}\n        />\n      </Row>\n    </>\n  );\n};\n\nexport default React.memo(ListPageListing);\n","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport IntlMessages from 'helpers/IntlMessages';\nimport ListPageHeading from './AttendanceListHeading';\nimport {\n  provincesOptionsForList,\n  genderOptionsForList,\n} from '../../../global-data/options';\n\nimport ListPageListing from './AttendanceListCatagory';\nimport useMousetrap from 'hooks/use-mousetrap';\nimport { useAsyncDebounce } from 'react-table';\nimport callApi from 'helpers/callApi';\nimport DisplayMessage from 'components/messages/DisplayMessage';\nimport config from '../../../../../config';\nconst getIndex = (value, arr, prop) => {\n  for (let i = 0; i < arr.length; i += 1) {\n    if (arr[i][prop] === value) {\n      return i;\n    }\n  }\n  return -1;\n};\n\nconst servicePath = config.API_URL;\nconst apiUrl = `${servicePath}/cakes/paging`;\nconst studentApiUrl = `${servicePath}/api/`;\nconst studentInstituteApiUrl = `${servicePath}/api/student_institutes/`;\nconst instituteApiUrl = `${servicePath}/institute/`;\nconst attendanceListAPI = `${servicePath}/api/stdatten/`;\n\nconst orderOptions = [\n  { column: 'title', label: 'Product Name' },\n  { column: 'category', label: 'Category' },\n  { column: 'status', label: 'Status' },\n];\nconst pageSizes = [10, 20, 40, 80];\nconst genderOptions = [\n  {\n    column: 'all',\n    label: 'تول / همه',\n  },\n  { column: '1', label: 'ذکور' },\n  { column: '2', label: 'اناث' },\n];\n\nconst ThumbListPages = ({ match }) => {\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [displayMode, setDisplayMode] = useState('thumblist');\n  const [currentPage, setCurrentPage] = useState(1);\n  const [selectedPageSize, setSelectedPageSize] = useState(20);\n  const [selectedOrderOption, setSelectedOrderOption] = useState({\n    column: 'title',\n    label: 'Product Name',\n  });\n\n  const [modalOpen, setModalOpen] = useState(false);\n  const [totalItemCount, setTotalItemCount] = useState(0);\n  const [totalPage, setTotalPage] = useState(1);\n  const [search, setSearch] = useState('');\n  const [selectedItems, setSelectedItems] = useState([]);\n  const [items, setItems] = useState([]);\n  const [lastChecked, setLastChecked] = useState(null);\n  const [rest, setRest] = useState(0);\n  const [institutes, setInstitutes] = useState();\n  const [institute, setInstitute] = useState('');\n  const [attendance, setAttendance] = useState([]);\n\n  const [studentId, setStudentId] = useState('');\n  const [province, setProvince] = useState('');\n  const [district, setDistrict] = useState('');\n  const [selectedGenderOption, setSelectedGenderOption] = useState({\n    column: 'all',\n    label: 'جنیست',\n  });\n  const [selectedProvinceOption, setSelectedProvinceOption] = useState({\n    column: 'all',\n    label: 'ولایت',\n  });\n\n  const fetchAttendance = async () => {\n    const response = await callApi(`students/stdatten/`, '', null);\n    console.log('ATTENDANCE: ', response.data);\n    if (response.data && response.status === 200) {\n      setAttendance(response.data);\n      setIsLoaded(true);\n      console.log('resonse.data attendance', response.data);\n    } else {\n      console.log('Attendance error: ' + response.status);\n    }\n  };\n\n  useEffect(() => {\n    fetchAttendance();\n    console.log('ATT: ', attendance);\n  }, []);\n\n  const onCheckItem = (event, id) => {\n    if (\n      event.target.tagName === 'A' ||\n      (event.target.parentElement && event.target.parentElement.tagName === 'A')\n    ) {\n      return true;\n    }\n    if (lastChecked === null) {\n      setLastChecked(id);\n    }\n\n    let selectedList = [...selectedItems];\n    if (selectedList.includes(id)) {\n      selectedList = selectedList.filter((x) => x !== id);\n    } else {\n      selectedList.push(id);\n    }\n    setSelectedItems(selectedList);\n\n    if (event.shiftKey) {\n      let newItems = [...items];\n      const start = getIndex(id, newItems, 'id');\n      const end = getIndex(lastChecked, newItems, 'id');\n      newItems = newItems.slice(Math.min(start, end), Math.max(start, end) + 1);\n      selectedItems.push(\n        ...newItems.map((item) => {\n          return item.id;\n        })\n      );\n      selectedList = Array.from(new Set(selectedItems));\n      setSelectedItems(selectedList);\n    }\n    document.activeElement.blur();\n    return false;\n  };\n\n  const handleChangeSelectAll = (isToggle) => {\n    if (selectedItems.length >= items.length) {\n      if (isToggle) {\n        setSelectedItems([]);\n      }\n    } else {\n      setSelectedItems(items.map((x) => x.id));\n    }\n    document.activeElement.blur();\n    return false;\n  };\n\n  const onContextMenuClick = (e, data) => {\n    // params : (e,data,target)\n    console.log('onContextMenuClick - selected items', selectedItems);\n    console.log('onContextMenuClick - action : ', data.action);\n  };\n\n  const onContextMenu = (e, data) => {\n    const clickedProductId = data.data;\n    if (!selectedItems.includes(clickedProductId)) {\n      setSelectedItems([clickedProductId]);\n    }\n\n    return true;\n  };\n\n  useMousetrap(['ctrl+a', 'command+a'], () => {\n    handleChangeSelectAll(false);\n  });\n\n  useMousetrap(['ctrl+d', 'command+d'], () => {\n    setSelectedItems([]);\n    return false;\n  });\n\n  const startIndex = (currentPage - 1) * selectedPageSize;\n  const endIndex = currentPage * selectedPageSize;\n\n  console.log('items', items);\n  return !isLoaded ? (\n    <div className=\"loading\" />\n  ) : (\n    <>\n      <div className=\"disable-text-selection\">\n        <ListPageHeading\n          heading=\"د حاضری لست/لست حاضری\"\n          // Using display mode we can change the display of the list.\n          displayMode={displayMode}\n          changeDisplayMode={setDisplayMode}\n          handleChangeSelectAll={handleChangeSelectAll}\n          // following code is used for order the list based on different element of the prod\n          changeOrderBy={(column) => {\n            setSelectedOrderOption(\n              orderOptions.find((x) => x.column === column)\n            );\n          }}\n          changePageSize={setSelectedPageSize}\n          selectedPageSize={selectedPageSize}\n          totalItemCount={totalItemCount}\n          selectedOrderOption={selectedOrderOption}\n          match={match}\n          startIndex={startIndex}\n          endIndex={endIndex}\n          selectedItemsLength={selectedItems ? selectedItems.length : 0}\n          itemsLength={items ? items.length : 0}\n          onSearchKey={(e) => {\n            if (e.key === 'Enter') {\n              setSearch(e.target.value.toLowerCase());\n            }\n          }}\n          orderOptions={orderOptions}\n          pageSizes={pageSizes}\n          toggleModal={() => setModalOpen(!modalOpen)}\n          changeGenderBy={(column) => {\n            setSelectedGenderOption(\n              genderOptionsForList.find((x) => x.column === column)\n            );\n          }}\n          changeProvinceBy={(column) => {\n            setSelectedProvinceOption(\n              provincesOptionsForList.find((x) => x.column === column)\n            );\n          }}\n          selectedGenderOption={selectedGenderOption}\n          selectedProvinceOption={selectedProvinceOption}\n          genderOptionsForList={genderOptionsForList}\n          provincesOptionsForList={provincesOptionsForList}\n          onIdSearchKey={(e) => {\n            if (e.key === 'Enter') {\n              setStudentId(e.target.value.toLowerCase());\n            }\n          }}\n          onProvinceSearchKey={(e) => {\n            if (e.key === 'Enter') {\n              setProvince(e.target.value.toLowerCase());\n            }\n          }}\n          onDistrictSearchKey={(e) => {\n            if (e.key === 'Enter') {\n              setDistrict(e.target.value.toLowerCase());\n            }\n          }}\n          onResetClick={setRest}\n          reset={rest}\n          institutes={institutes}\n          onInstituteSelect={setInstitute}\n        />\n        {attendance.length > 0 ? (\n          <table className=\"table\">\n            <thead\n              className=\"pl-2 d-flex flex-grow-1  table-dark\"\n              style={{ maxHeight: '55px' }}\n            >\n              <tr className=\"card-body align-self-center d-flex flex-column flex-lg-row align-items-lg-center\">\n                <th\n                  style={{\n                    width: '9%',\n                    paddingInline: '0%',\n                    textAlign: 'right',\n                    borderStyle: 'hidden',\n                  }}\n                >\n                  <IntlMessages id=\"ایدی حاضری\" />\n                </th>\n                <th\n                  style={{\n                    width: '14%',\n                    paddingInline: '0%',\n                    textAlign: 'right',\n                    borderStyle: 'hidden',\n                  }}\n                >\n                  <IntlMessages id=\"نام/نوم\" />\n                </th>\n                {/* <th\n                style={{\n                  width: '10%',\n                  padding: '0%',\n                  textAlign: 'right',\n                  borderStyle: 'hidden',\n                }}\n              >\n                <IntlMessages id=\"صنف/ټولګۍ\" />\n              </th> */}\n                {/* <th\n                style={{\n                  width: '10%',\n                  padding: '0%',\n                  textAlign: 'right',\n                  borderStyle: 'hidden',\n                }}\n              >\n                {' '}\n                <IntlMessages id=\"سمستر.\" />\n              </th> */}\n                <th\n                  style={{\n                    width: '13%',\n                    padding: '0%',\n                    textAlign: 'right',\n                    borderStyle: 'hidden',\n                  }}\n                >\n                  {' '}\n                  <IntlMessages id=\"دیپارتمنت\" />\n                </th>\n                <th\n                  style={{\n                    width: '11%',\n                    padding: '0%',\n                    textAlign: 'right',\n                    borderStyle: 'hidden',\n                  }}\n                >\n                  {' '}\n                  <IntlMessages id=\"انستیتوت\" />\n                </th>\n                {/* <th\n                style={{\n                  width: '10%',\n                  padding: '0%',\n                  textAlign: 'right',\n                  borderStyle: 'hidden',\n                }}\n              >\n                {' '}\n                <IntlMessages id=\"دیپارتمنت\" />\n              </th> */}\n                <th\n                  style={{\n                    width: '10%',\n                    padding: '0%',\n                    textAlign: 'right',\n                    borderStyle: 'hidden',\n                  }}\n                >\n                  {' '}\n                  <IntlMessages id=\"حاضر\" />\n                </th>\n                <th\n                  style={{\n                    width: '10%',\n                    padding: '0%',\n                    textAlign: 'right',\n                    borderStyle: 'hidden',\n                  }}\n                >\n                  {' '}\n                  <IntlMessages id=\"غیر حاضر\" />\n                </th>\n                <th\n                  style={{\n                    width: '10%',\n                    padding: '0%',\n                    textAlign: 'right',\n                    borderStyle: 'hidden',\n                  }}\n                >\n                  {' '}\n                  <IntlMessages id=\"مریض\" />\n                </th>\n                {/* <th\n                  style={{\n                    width: '11%',\n                    padding: '0%',\n                    textAlign: 'right',\n                    borderStyle: 'hidden',\n                  }}\n                >\n                  {' '}\n                  <IntlMessages id=\"روز ها تعلیمی\" />\n                </th> */}\n                <th\n                  style={{\n                    width: '10%',\n                    padding: '0%',\n                    textAlign: 'right',\n                    borderStyle: 'hidden',\n                  }}\n                >\n                  {' '}\n                  <IntlMessages id=\"سال تعلیمی\" />\n                </th>\n\n                <th\n                  style={{\n                    width: '10%',\n                    padding: '0%',\n                    textAlign: 'right',\n                    borderStyle: 'hidden',\n                  }}\n                >\n                  {' '}\n                  محرومیت\n                </th>\n              </tr>\n            </thead>\n            <ListPageListing\n              items={attendance}\n              displayMode={displayMode}\n              selectedItems={selectedItems}\n              onCheckItem={onCheckItem}\n              currentPage={currentPage}\n              totalPage={totalPage}\n              onContextMenuClick={onContextMenuClick}\n              onContextMenu={onContextMenu}\n              onChangePage={setCurrentPage}\n            />\n          </table>\n        ) : (\n          <DisplayMessage type=\"error\" message=\"معلومات شتون نلری\" />\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default ThumbListPages;\n","import React from 'react';\nimport { Nav, NavItem, NavLink } from 'reactstrap';\nimport { Colxx } from 'components/common/CustomBootstrap';\n\nconst Pagination = ({\n  totalPage = 0,\n  currentPage = 1,\n  numberLimit = 5,\n  lastIsActive = true,\n  firstIsActive = true,\n  onChangePage,\n}) => {\n  let startPoint = 1;\n  let endPoint = numberLimit;\n\n  if (numberLimit > totalPage) {\n    startPoint = 1;\n    endPoint = totalPage;\n  } else if (currentPage <= parseInt(numberLimit / 2, 10)) {\n    startPoint = 1;\n    endPoint = numberLimit;\n  } else if (currentPage + parseInt(numberLimit / 2, 10) <= totalPage) {\n    startPoint = currentPage - parseInt(numberLimit / 2, 10);\n    endPoint = currentPage + parseInt(numberLimit / 2, 10);\n  } else {\n    startPoint = totalPage - (numberLimit - 1);\n    endPoint = totalPage;\n  }\n  startPoint = startPoint === 0 ? 1 : startPoint;\n  const points = [];\n  for (let i = startPoint; i <= endPoint; i += 1) {\n    points.push(i);\n  }\n\n  const firstPageButtonClassName = currentPage <= 1 ? 'disabled' : '';\n  const lastPageButtonClassName = currentPage >= totalPage ? 'disabled' : '';\n  const prevPageButtonClassName = currentPage <= 1 ? 'disabled' : '';\n  const nextPageButtonClassName = currentPage >= totalPage ? 'disabled' : '';\n  return totalPage > 1 ? (\n    <Colxx xxs=\"12\" className=\"mt-3 mb-3\">\n      <Nav className=\"pagination justify-content-center\">\n        {firstIsActive && (\n          <NavItem className={`page-item ${firstPageButtonClassName}`}>\n            <NavLink\n              className=\"page-link first c-pointer\"\n              onClick={() => onChangePage(1)}\n            >\n              <i className=\"simple-icon-control-start\" />\n            </NavLink>\n          </NavItem>\n        )}\n\n        <NavItem className={`page-item ${prevPageButtonClassName}`}>\n          <NavLink\n            className=\"page-link prev c-pointer\"\n            onClick={() => onChangePage(currentPage - 1)}\n          >\n            <i className=\"simple-icon-arrow-left\" />\n          </NavLink>\n        </NavItem>\n        {points.map((i) => {\n          return (\n            <NavItem\n              key={i}\n              className={`page-item ${currentPage === i && 'active'}`}\n            >\n              <NavLink\n                className=\"page-link c-pointer\"\n                onClick={() => onChangePage(i)}\n              >\n                {i}\n              </NavLink>\n            </NavItem>\n          );\n        })}\n        <NavItem className={`page-item ${nextPageButtonClassName}`}>\n          <NavLink\n            className=\"page-link next c-pointer\"\n            onClick={() => onChangePage(currentPage + 1)}\n          >\n            <i className=\"simple-icon-arrow-right\" />\n          </NavLink>\n        </NavItem>\n        {lastIsActive && (\n          <NavItem className={`page-item ${lastPageButtonClassName}`}>\n            <NavLink\n              className=\"page-link last c-pointer\"\n              onClick={() => onChangePage(totalPage)}\n            >\n              <i className=\"simple-icon-control-end\" />\n            </NavLink>\n          </NavItem>\n        )}\n      </Nav>\n    </Colxx>\n  ) : (\n    <Colxx xxs=\"12\" className=\"mt-2\" />\n  );\n};\n\nexport default Pagination;\n","/* eslint-disable no-unused-expressions */\nimport mousetrap from 'mousetrap';\nimport { useEffect, useRef } from 'react';\n\n/**\n * Use mousetrap hook\n *\n * @param  {(string | string[])} handlerKey - A key, key combo or array of combos according to Mousetrap documentation.\n * @param  { function } handlerCallback - A function that is triggered on key combo catch.\n */\nexport default (handlerKey, handlerCallback) => {\n  const actionRef = useRef(null);\n  actionRef.current = handlerCallback;\n\n  useEffect(() => {\n    mousetrap.bind(handlerKey, (evt, combo) => {\n      typeof actionRef.current === 'function' && actionRef.current(evt, combo);\n      evt.preventDefault();\n    });\n    return () => {\n      mousetrap.unbind(handlerKey);\n    };\n  }, [handlerKey]);\n};\n","import React from 'react';\nimport {\n  Row,\n  Card,\n  CardBody,\n  CardSubtitle,\n  CardImg,\n  CardText,\n  CustomInput,\n  Badge,\n} from 'reactstrap';\nimport { NavLink } from 'react-router-dom';\nimport classnames from 'classnames';\nimport { ContextMenuTrigger } from 'react-contextmenu';\nimport { Colxx } from 'components/common/CustomBootstrap';\n\nconst ImageListView = ({ product, isSelect, collect, onCheckItem }) => {\n  return (\n    <Colxx sm=\"6\" lg=\"4\" xl=\"3\" className=\"mb-3\" key={product.id}>\n      <ContextMenuTrigger id=\"menu_id\" data={product.id} collect={collect}>\n        <Card\n          onClick={(event) => onCheckItem(event, product.id)}\n          className={classnames({\n            active: isSelect,\n          })}\n        >\n          <div className=\"position-relative\">\n            <NavLink to={`?p=${product.id}`} className=\"w-40 w-sm-100\">\n              <CardImg top alt={product.title} src={product.img} />\n            </NavLink>\n            <Badge\n              color={product.statusColor}\n              pill\n              className=\"position-absolute badge-top-left\"\n            >\n              {product.status}\n            </Badge>\n          </div>\n          <CardBody>\n            <Row>\n              <Colxx xxs=\"2\">\n                <CustomInput\n                  className=\"item-check mb-0\"\n                  type=\"checkbox\"\n                  id={`check_${product.id}`}\n                  checked={isSelect}\n                  onChange={() => {}}\n                  label=\"\"\n                />\n              </Colxx>\n              <Colxx xxs=\"10\" className=\"mb-3\">\n                <CardSubtitle>{product.title}</CardSubtitle>\n                <CardText className=\"text-muted text-small mb-0 font-weight-light\">\n                  {product.date}\n                </CardText>\n              </Colxx>\n            </Row>\n          </CardBody>\n        </Card>\n      </ContextMenuTrigger>\n    </Colxx>\n  );\n};\n\n/* React.memo detail : https://reactjs.org/docs/react-api.html#reactpurecomponent  */\nexport default React.memo(ImageListView);\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Dropdown from './Dropdown';\nvar propTypes = {\n  children: PropTypes.node\n};\n\nvar ButtonDropdown = function ButtonDropdown(props) {\n  return /*#__PURE__*/React.createElement(Dropdown, _extends({\n    group: true\n  }, props));\n};\n\nButtonDropdown.propTypes = propTypes;\nexport default ButtonDropdown;"],"sourceRoot":""}