{"version":3,"sources":["views/app/students/bio/students-list/StudentListMain.js","views/app/students/attendence/attendance-list/AttendanceListHeading.js","views/app/students/attendence/attendance-list/AttendanceListBody.js","views/app/students/attendence/attendance-list/AttendanceListCatagory.js","views/app/students/attendence/attendance-list/AttendanceListMain.js","containers/pages/Pagination.js","hooks/use-mousetrap.js","containers/pages/ImageListView.js","../node_modules/reactstrap/es/ButtonDropdown.js"],"names":["getIndex","value","arr","prop","i","length","servicePath","config","API_URL","orderOptions","concat","column","label","pageSizes","ThumbListPages","_ref","match","_useState","useState","_useState2","_slicedToArray","isLoaded","setIsLoaded","_useState3","_useState4","displayMode","setDisplayMode","_useState5","_useState6","currentPage","setCurrentPage","_useState7","_useState8","selectedPageSize","setSelectedPageSize","_useState9","_useState10","selectedItems","setSelectedItems","_useState11","_useState12","selectedOrderOption","setSelectedOrderOption","_useState13","_useState14","setSelectedDistrict","_useState15","_useState16","modalOpen","setModalOpen","_useState17","_useState18","totalItemCount","setTotalItemCount","_useState19","_useState20","totalPage","setTotalPage","_useState21","_useState22","search","setSearch","_useState23","_useState24","items","setItems","_useState25","_useState26","lastChecked","setLastChecked","_useState27","_useState28","rest","setRest","_useState29","_useState30","institutes","setInstitutes","_useState31","_useState32","institute","setInstitute","_useState33","_useState34","studentId","setStudentId","_useState35","_useState36","province","setProvince","_useState37","_useState38","district","setDistrict","provincesOptionsForList","useContext","ProvincesContext","provinces","_useState39","_useState40","selectedGenderOption","setSelectedGenderOption","_useState41","_useState42","selectedProvinceOption","setSelectedProvinceOption","_useState43","_useState44","selectedShiftOption","setSelectedShiftOption","_useState45","_useState46","selectedEducationalYearOption","seSelectedEducationalYearOption","_useState47","_useState48","studentTypeOptions","setStudentTypeOptions","useEffect","itemsPerPage","_asyncToGenerator","_regeneratorRuntime","mark","_callee2","fetchData","_fetchData","wrap","_context2","prev","next","_callee","params","response","_params","_response","_params2","_response2","_params3","_response3","_params4","_response4","_context","console","log","institute_id","id","page","callApi","sent","data","status","Math","ceil","count","results","student_id","current_district","p","table","gender","current_province","stop","apply","arguments","fetchInstitutes","_ref3","_callee3","updatedData","_context3","map","item","name","handleChangeSelectAll","isToggle","x","document","activeElement","blur","useMousetrap","startIndex","endIndex","_jsx","className","_Fragment","children","_jsxs","ListPageHeading","heading","changeDisplayMode","changeOrderBy","find","changePageSize","selectedItemsLength","itemsLength","onSearchKey","e","key","target","toLowerCase","toggleModal","changeGenderBy","genderOptionsForList","changeProvinceBy","provinceId","studyTimeOptionsForList","onIdSearchKey","onProvinceSearchKey","onDistrictSearchKey","onResetClick","reset","onInstituteSelect","changeShiftBy","changeEducationalYearBy","educationalYearsOptionsForList","changeStudentTypeBy","studentType","style","maxHeight","width","fontSize","paddingInline","textAlign","borderStyle","IntlMessages","padding","ListPageListing","onCheckItem","event","tagName","parentElement","selectedList","_toConsumableArray","includes","filter","push","shiftKey","newItems","start","end","slice","min","max","Array","from","Set","onContextMenuClick","action","onContextMenu","clickedProductId","onChangePage","injectIntl","intl","dropdownSplitOpen","setDropdownSplitOpen","displayOptionsIsOpen","setDisplayOptionsIsOpen","messages","selectedInstitute","setSelectedInstitute","Row","Colxx","xxs","ButtonDropdown","isOpen","toggle","CustomInput","type","checked","onChange","DropdownToggle","caret","color","DropdownMenu","right","DropdownItem","Button","onClick","Collapse","href","DataListIcon","ThumbListIcon","ImageListIcon","UncontrolledDropdown","size","index","height","overflowY","overflowX","order","placeholder","onKeyPress","getElementById","Separator","StudentListBody","attendance","isSelect","collect","ContextMenuTrigger","Card","classnames","active","NavLink","to","marginRight","student","department","present_hours","absent_hours","sickness_hours","educational_year","is_short_attendance","React","memo","props","ImageListView","DataListView","Pagination","ContextMenuContainer","setAttendance","fetchAttendance","_ref2","DisplayMessage","message","_ref$totalPage","_ref$currentPage","_ref$numberLimit","numberLimit","_ref$lastIsActive","lastIsActive","_ref$firstIsActive","firstIsActive","startPoint","endPoint","parseInt","points","firstPageButtonClassName","lastPageButtonClassName","prevPageButtonClassName","nextPageButtonClassName","Nav","NavItem","handlerKey","handlerCallback","actionRef","useRef","current","mousetrap","bind","evt","combo","preventDefault","unbind","product","sm","lg","xl","CardImg","top","alt","title","src","img","Badge","statusColor","pill","CardBody","CardSubtitle","CardText","date","propTypes","PropTypes","node","createElement","Dropdown","_extends","group"],"mappings":"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","file":"static/js/student-list.3db4c8ee.chunk.js","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport axios from 'axios';\nimport IntlMessages from 'helpers/IntlMessages';\nimport callApi from 'helpers/callApi';\nimport {\n  educationalYearsOptionsForList,\n  studentType,\n  genderOptionsForList,\n  studyTimeOptionsForList,\n} from '../../../global-data/options';\n// import { servicePath } from 'constants/defaultValues';\nimport ListPageHeading from 'views/app/students/bio/students-list/StudentListHeading';\nimport ListPageListing from 'views/app/students/bio/students-list/StudentListCatagory';\nimport useMousetrap from 'hooks/use-mousetrap';\n\nimport config from '../../../../../config';\nimport { ProvincesContext } from 'context/AuthContext';\n\nconst getIndex = (value, arr, prop) => {\n  for (let i = 0; i < arr.length; i += 1) {\n    if (arr[i][prop] === value) {\n      return i;\n    }\n  }\n  return -1;\n};\n\nconst servicePath = config.API_URL;\nconst apiUrl = `${servicePath}/cakes/paging`;\nconst studentApiUrl = `${servicePath}/api/`;\nconst studentInstituteApiUrl = `${servicePath}/api/student_institutes/`;\nconst instituteApiUrl = `${servicePath}/institute/`;\n\nconst orderOptions = [\n  { column: 'title', label: 'Product Name' },\n  { column: 'category', label: 'Category' },\n  { column: 'status', label: 'Status' },\n];\nconst pageSizes = [10, 20, 40, 80];\n\nconst ThumbListPages = ({ match }) => {\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [displayMode, setDisplayMode] = useState('thumblist');\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const [selectedPageSize, setSelectedPageSize] = useState(20);\n  const [selectedItems, setSelectedItems] = useState([]);\n  const [selectedOrderOption, setSelectedOrderOption] = useState({\n    column: 'title',\n    label: 'Product Name',\n  });\n  const [selectedDistrict, setSelectedDistrict] = useState();\n\n  const [modalOpen, setModalOpen] = useState(false);\n  const [totalItemCount, setTotalItemCount] = useState(0);\n  const [totalPage, setTotalPage] = useState(1);\n  const [search, setSearch] = useState('');\n  const [items, setItems] = useState([]);\n  const [lastChecked, setLastChecked] = useState(null);\n  const [rest, setRest] = useState(0);\n  const [institutes, setInstitutes] = useState();\n  const [institute, setInstitute] = useState('');\n\n  const [studentId, setStudentId] = useState('');\n  const [province, setProvince] = useState('');\n  const [district, setDistrict] = useState('');\n\n  const { provinces: provincesOptionsForList } = useContext(ProvincesContext);\n\n  const [selectedGenderOption, setSelectedGenderOption] = useState();\n  const [selectedProvinceOption, setSelectedProvinceOption] = useState();\n  const [selectedShiftOption, setSelectedShiftOption] = useState();\n  const [selectedEducationalYearOption, seSelectedEducationalYearOption] =\n    useState();\n  const [studentTypeOptions, setStudentTypeOptions] = useState();\n\n  // if any filter changes, go to first page\n  useEffect(() => {\n    setCurrentPage(1);\n  }, [\n    selectedPageSize,\n    selectedOrderOption,\n    selectedGenderOption,\n    selectedProvinceOption,\n    selectedShiftOption,\n    selectedEducationalYearOption,\n    studentTypeOptions,\n  ]);\n\n  const itemsPerPage = 10;\n\n  useEffect(async () => {\n    async function fetchData() {\n      console.log('institute', institute);\n      console.log('province', province);\n      console.log('district', district);\n      console.log('studentId', studentId);\n      console.log('selectedGenderOption', selectedGenderOption);\n      console.log('currentPage', currentPage);\n\n      // if institute not selected\n      if (institute !== '') {\n        const params = {\n          institute_id: institute.id,\n          page: currentPage,\n        };\n        const response = await callApi(\n          `students/student_institutes/`,\n          '',\n          null,\n          params\n        );\n        if (response.data && response.status === 200) {\n          setTotalPage(Math.ceil(response.data.count / itemsPerPage));\n          setItems(response.data.results);\n          setSelectedItems([]);\n          setTotalItemCount(response.data.count);\n          setIsLoaded(false);\n        } else {\n          console.log('students error');\n        }\n      }\n      // if institute and shift selected, but province and gender are not selected\n      else if (\n        !selectedProvinceOption &&\n        !selectedGenderOption &&\n        selectedShiftOption\n      ) {\n        if (rest == true) {\n          setDistrict('');\n          setStudentId('');\n          setRest(false);\n        }\n\n        const params = {\n          student_id: studentId,\n          current_district: district,\n          p: currentPage,\n          page: 1,\n        };\n        // here\n        const response = await callApi(`students/`, '', null, params);\n        console.table('respons', response);\n        if (response.data && response.status === 200) {\n          setTotalPage(Math.ceil(response.data.count / itemsPerPage));\n          setIsLoaded(false);\n          setItems(response.data.results);\n          setSelectedItems([]);\n          setTotalItemCount(response.data.count);\n          console.log('response of the result ', response.data.results);\n          console.log('isLoaded sadf', isLoaded);\n        } else {\n          console.log('students error');\n        }\n      } else if (!selectedProvinceOption) {\n        const params = {\n          student_id: studentId,\n          gender: selectedGenderOption?.value,\n          current_district: district?.value,\n          page: currentPage,\n        };\n        const response = await callApi(`students/`, '', null, params);\n\n        if (response.data && response.status === 200) {\n          setTotalPage(Math.ceil(response.data.count / itemsPerPage));\n          setItems(response.data.results);\n          setSelectedItems([]);\n          setTotalItemCount(response.data.count);\n          setIsLoaded(false);\n        } else {\n          console.log('students error');\n        }\n      } else if (!selectedGenderOption) {\n        const params = {\n          student_id: studentId,\n          current_province: selectedProvinceOption.value,\n          current_district: district,\n          page: currentPage,\n        };\n        const response = await callApi(`students/`, '', null, params);\n        if (response.data && response.status === 200) {\n          setTotalPage(Math.ceil(response.data.count / itemsPerPage));\n          setItems(response.data.results);\n          setSelectedItems([]);\n          setTotalItemCount(response.data.count);\n          setIsLoaded(false);\n        } else {\n          console.log('students error');\n        }\n      } else {\n        // setTotalItemCount(response.data.totalItem);\n        const params = {\n          student_id: studentId,\n          gender: selectedGenderOption.value,\n          current_province: selectedProvinceOption.value,\n          current_district: district.value,\n          page: currentPage,\n        };\n        const response = await callApi(`students`, '', null, params);\n        if (response.data && response.status === 200) {\n          setTotalPage(Math.ceil(response.data.count / itemsPerPage));\n          setItems(response.data.results);\n          setSelectedItems([]);\n          setTotalItemCount(response.data.count);\n          setIsLoaded(false);\n        } else {\n          console.log('students error');\n        }\n      }\n    }\n\n    fetchData();\n  }, [\n    selectedPageSize,\n    currentPage,\n    selectedOrderOption,\n    search,\n    selectedGenderOption,\n    selectedProvinceOption,\n    studentId,\n    province,\n    district,\n    rest,\n    institute,\n    studentTypeOptions,\n  ]);\n\n  const fetchInstitutes = async () => {\n    const response = await callApi('institute/', '', null);\n    if (response.data && response.status === 200) {\n      const updatedData = await response.data.map((item) => ({\n        value: item.id,\n        label: item.name,\n      }));\n      setInstitutes(updatedData);\n    } else {\n      console.log('institute error');\n    }\n  };\n\n  useEffect(() => {\n    fetchInstitutes();\n  }, []);\n\n  const onCheckItem = (event, id) => {\n    if (\n      event.target.tagName === 'A' ||\n      (event.target.parentElement && event.target.parentElement.tagName === 'A')\n    ) {\n      return true;\n    }\n    if (lastChecked === null) {\n      setLastChecked(id);\n    }\n\n    let selectedList = [...selectedItems];\n    if (selectedList.includes(id)) {\n      selectedList = selectedList.filter((x) => x !== id);\n    } else {\n      selectedList.push(id);\n    }\n    setSelectedItems(selectedList);\n\n    if (event.shiftKey) {\n      let newItems = [...items];\n      const start = getIndex(id, newItems, 'id');\n      const end = getIndex(lastChecked, newItems, 'id');\n      newItems = newItems.slice(Math.min(start, end), Math.max(start, end) + 1);\n      selectedItems.push(\n        ...newItems.map((item) => {\n          return item.id;\n        })\n      );\n      selectedList = Array.from(new Set(selectedItems));\n      setSelectedItems(selectedList);\n    }\n    document.activeElement.blur();\n    return false;\n  };\n\n  const handleChangeSelectAll = (isToggle) => {\n    if (selectedItems.length >= items.length) {\n      if (isToggle) {\n        setSelectedItems([]);\n      }\n    } else {\n      setSelectedItems(items.map((x) => x.id));\n    }\n    document.activeElement.blur();\n    return false;\n  };\n\n  const onContextMenuClick = (e, data) => {\n    // params : (e,data,target)\n    console.log('onContextMenuClick - selected items', selectedItems);\n    console.log('onContextMenuClick - action : ', data.action);\n  };\n\n  const onContextMenu = (e, data) => {\n    const clickedProductId = data.data;\n    if (!selectedItems.includes(clickedProductId)) {\n      setSelectedItems([clickedProductId]);\n    }\n\n    return true;\n  };\n\n  useMousetrap(['ctrl+a', 'command+a'], () => {\n    handleChangeSelectAll(false);\n  });\n\n  useMousetrap(['ctrl+d', 'command+d'], () => {\n    setSelectedItems([]);\n    return false;\n  });\n\n  const startIndex = (currentPage - 1) * selectedPageSize;\n  const endIndex = currentPage * selectedPageSize;\n  console.log('isLoadedsdfsd', isLoaded);\n  return isLoaded ? (\n    <div className=\"loading\" />\n  ) : (\n    <>\n      <div className=\"disable-text-selection\">\n        {/* This is he */}\n        <ListPageHeading\n          heading=\"د شاگرد لست/لست شاگردان\"\n          // Using display mode we can change the display of the list.\n          displayMode={displayMode}\n          changeDisplayMode={setDisplayMode}\n          handleChangeSelectAll={handleChangeSelectAll}\n          // following code is used for order the list based on different element of the prod\n          changeOrderBy={(column) => {\n            setSelectedOrderOption(\n              orderOptions.find((x) => x.column === column)\n            );\n          }}\n          changePageSize={setSelectedPageSize}\n          selectedPageSize={selectedPageSize}\n          totalItemCount={totalItemCount}\n          selectedOrderOption={selectedOrderOption}\n          match={match}\n          startIndex={startIndex}\n          endIndex={endIndex}\n          selectedItemsLength={selectedItems ? selectedItems.length : 0}\n          itemsLength={items ? items.length : 0}\n          onSearchKey={(e) => {\n            if (e.key === 'Enter') {\n              setSearch(e.target.value.toLowerCase());\n            }\n          }}\n          orderOptions={orderOptions}\n          pageSizes={pageSizes}\n          toggleModal={() => setModalOpen(!modalOpen)}\n          // Gender\n          changeGenderBy={(value) => {\n            console.log('changeGenderBy: ', value);\n            setSelectedGenderOption(\n              genderOptionsForList.find((x) => x.value == value)\n            );\n          }}\n          changeProvinceBy={(provinceId) => {\n            setSelectedProvinceOption(\n              provincesOptionsForList.find(\n                (province) => province.value === provinceId\n              )\n            );\n          }}\n          selectedGenderOption={selectedGenderOption}\n          selectedEducationalYearOption={selectedEducationalYearOption}\n          studentTypeOptions={studentTypeOptions}\n          selectedProvinceOption={selectedProvinceOption}\n          selectedShiftOption={selectedShiftOption}\n          genderOptionsForList={genderOptionsForList}\n          studyTimeOptionsForList={studyTimeOptionsForList}\n          provincesOptionsForList={provincesOptionsForList}\n          onIdSearchKey={(e) => {\n            if (e.key === 'Enter') {\n              setStudentId(e.target.value.toLowerCase());\n            }\n          }}\n          // Province\n          onProvinceSearchKey={(e) => {\n            if (e.key === 'Enter') {\n              setProvince(e.target.value.toLowerCase());\n            }\n          }}\n          // District\n          onDistrictSearchKey={(e) => {\n            if (e.key === 'Enter') {\n              setDistrict(e.target.value.toLowerCase());\n            }\n          }}\n          onResetClick={setRest}\n          reset={rest}\n          institutes={institutes}\n          onInstituteSelect={setInstitute}\n          // Shift\n          changeShiftBy={(column) => {\n            setSelectedShiftOption(\n              studyTimeOptionsForList.find((x) => x.column === column)\n            );\n          }}\n          // Educational Year\n          changeEducationalYearBy={(column) => {\n            seSelectedEducationalYearOption(\n              educationalYearsOptionsForList.find((x) => x.column === column)\n            );\n          }}\n          educationalYearsOptionsForList={educationalYearsOptionsForList}\n          // Level of Education\n          changeStudentTypeBy={(column) => {\n            setStudentTypeOptions(studentType.find((x) => x.column === column));\n          }}\n          studentType={studentType}\n          setSelectedDistrict={setSelectedDistrict}\n        />\n        <table className=\"table\">\n          <thead\n            className=\"pl-2 d-flex flex-grow-1  table-dark mb-2\"\n            style={{ maxHeight: '55px' }}\n          >\n            <tr className=\"card-body align-self-center d-flex flex-column flex-lg-row align-items-lg-center\">\n              <th\n                style={{\n                  width: '11%',\n                  fontSize: '20px',\n                  paddingInline: '0%',\n                  textAlign: 'right',\n                  borderStyle: 'hidden',\n                }}\n              >\n                <IntlMessages id=\"student.rollNo\" />\n              </th>\n              <th\n                style={{\n                  width: '14%',\n                  fontSize: '20px',\n                  paddingInline: '0%',\n                  textAlign: 'right',\n                  borderStyle: 'hidden',\n                }}\n              >\n                <IntlMessages id=\"forms.StdName\" />\n              </th>\n              <th\n                style={{\n                  width: '15%',\n                  fontSize: '20px',\n                  padding: '0%',\n                  textAlign: 'right',\n                  borderStyle: 'hidden',\n                }}\n              >\n                <IntlMessages id=\"forms.StdFatherName\" />\n              </th>\n              <th\n                style={{\n                  width: '15%',\n                  padding: '0%',\n                  fontSize: '20px',\n                  textAlign: 'right',\n                  borderStyle: 'hidden',\n                }}\n              >\n                {' '}\n                <IntlMessages id=\"forms.ProvinceLabel\" />\n              </th>\n              <th\n                style={{\n                  width: '15%',\n                  padding: '0%',\n                  fontSize: '20px',\n                  textAlign: 'right',\n                  borderStyle: 'hidden',\n                }}\n              >\n                {' '}\n                <IntlMessages id=\"student.PhoneNo\" />\n              </th>\n              <th\n                style={{\n                  width: '15%',\n                  padding: '0%',\n                  fontSize: '20px',\n                  textAlign: 'right',\n                  borderStyle: 'hidden',\n                }}\n              >\n                {' '}\n                <IntlMessages id=\"student.interenaceType\" />\n              </th>\n              <th\n                style={{\n                  width: '10%',\n                  padding: '0%',\n                  fontSize: '20px',\n                  textAlign: 'right',\n                  borderStyle: 'hidden',\n                }}\n              >\n                {' '}\n                <IntlMessages id=\"study.type\" />\n              </th>\n            </tr>\n          </thead>\n\n          <ListPageListing\n            items={items}\n            displayMode={displayMode}\n            selectedItems={selectedItems}\n            onCheckItem={onCheckItem}\n            currentPage={currentPage}\n            totalPage={totalPage}\n            onContextMenuClick={onContextMenuClick}\n            onContextMenu={onContextMenu}\n            onChangePage={setCurrentPage}\n          />\n        </table>\n      </div>\n    </>\n  );\n};\n\nexport default ThumbListPages;\n","/* eslint-disable react/no-array-index-key */\nimport React, { useState } from 'react';\nimport {\n  Row,\n  Button,\n  ButtonDropdown,\n  UncontrolledDropdown,\n  DropdownMenu,\n  DropdownItem,\n  DropdownToggle,\n  CustomInput,\n  Collapse,\n} from 'reactstrap';\nimport { injectIntl } from 'react-intl';\n\nimport { Colxx, Separator } from 'components/common/CustomBootstrap';\nimport IntlMessages from 'helpers/IntlMessages';\nimport ReactAutoSugegst from 'containers/forms/ReactAutoSugegst';\n\nimport { DataListIcon, ThumbListIcon, ImageListIcon } from 'components/svg';\n// import Breadcrumb from '../navs/Breadcrumb';\n\nconst ListPageHeading = ({\n  intl,\n  displayMode,\n  changeDisplayMode,\n  handleChangeSelectAll,\n  changeOrderBy,\n  changePageSize,\n  selectedPageSize,\n  totalItemCount,\n  selectedOrderOption,\n  match,\n  startIndex,\n  endIndex,\n  selectedItemsLength,\n  itemsLength,\n  onSearchKey,\n  orderOptions,\n  pageSizes,\n  // toggleModal,\n  heading,\n  onIdSearchKey,\n  changeGenderBy,\n  selectedGenderOption,\n  genderOptionsForList,\n  selectedProvinceOption,\n  provincesOptionsForList,\n  changeProvinceBy,\n  onDistrictSearchKey,\n  onProvinceSearchKey,\n  onResetClick,\n  reset,\n  institutes,\n  onInstituteSelect,\n}) => {\n  const [dropdownSplitOpen, setDropdownSplitOpen] = useState(false);\n  const [displayOptionsIsOpen, setDisplayOptionsIsOpen] = useState(false);\n  const { messages } = intl;\n  const [selectedInstitute, setSelectedInstitute] = useState('');\n  onInstituteSelect(selectedInstitute);\n  return (\n    <Row>\n      <Colxx xxs=\"12\">\n        <div className=\"mb-2\">\n          <h1>\n            <IntlMessages id={heading} />\n          </h1>\n          <div className=\"text-zero top-right-button-container\">\n            {/* <Button\n              color=\"primary\"\n              size=\"lg\"\n              className=\"top-right-button\"\n              onClick={() => toggleModal()}\n            >\n              <IntlMessages id=\"pages.add-new\" />\n            </Button> */}\n            {'  '}\n            <ButtonDropdown\n              isOpen={dropdownSplitOpen}\n              toggle={() => setDropdownSplitOpen(!dropdownSplitOpen)}\n            >\n              <div className=\"btn btn-primary btn-lg pl-4 pr-0 check-button check-all\">\n                <CustomInput\n                  className=\"custom-checkbox mb-0 d-inline-block\"\n                  type=\"checkbox\"\n                  id=\"checkAll\"\n                  checked={selectedItemsLength >= itemsLength}\n                  onChange={() => handleChangeSelectAll(true)}\n                  label={\n                    <span\n                      className={`custom-control-label ${\n                        selectedItemsLength > 0 &&\n                        selectedItemsLength < itemsLength\n                          ? 'indeterminate'\n                          : ''\n                      }`}\n                    />\n                  }\n                />\n              </div>\n              <DropdownToggle\n                caret\n                color=\"primary\"\n                className=\"dropdown-toggle-split btn-lg\"\n              />\n              <DropdownMenu right>\n                <DropdownItem>\n                  <IntlMessages id=\"pages.delete\" />\n                </DropdownItem>\n                <DropdownItem>\n                  <IntlMessages id=\"pages.another-action\" />\n                </DropdownItem>\n              </DropdownMenu>\n            </ButtonDropdown>\n          </div>\n          {/* <Breadcrumb match={match} /> */}\n        </div>\n\n        <div className=\"mb-2\">\n          <Button\n            color=\"empty\"\n            className=\"pt-0 pl-0 d-inline-block d-md-none\"\n            onClick={() => setDisplayOptionsIsOpen(!displayOptionsIsOpen)}\n          >\n            <IntlMessages id=\"pages.display-options\" />{' '}\n            <i className=\"simple-icon-arrow-down align-middle\" />\n          </Button>\n          <Collapse\n            isOpen={displayOptionsIsOpen}\n            className=\"d-md-block\"\n            id=\"displayOptions\"\n          >\n            <span className=\"mr-3 d-inline-block float-md-left\">\n              <a\n                href=\"#/\"\n                className={`mr-2 view-icon ${\n                  displayMode === 'list' ? 'active' : ''\n                }`}\n                onClick={() => changeDisplayMode('list')}\n              >\n                <DataListIcon />\n              </a>\n              <a\n                href=\"#/\"\n                className={`mr-2 view-icon ${\n                  displayMode === 'thumblist' ? 'active' : ''\n                }`}\n                onClick={() => changeDisplayMode('thumblist')}\n              >\n                <ThumbListIcon />\n              </a>\n              <a\n                href=\"#/\"\n                className={`mr-2 view-icon ${\n                  displayMode === 'imagelist' ? 'active' : ''\n                }`}\n                onClick={() => changeDisplayMode('imagelist')}\n              >\n                <ImageListIcon />\n              </a>\n            </span>\n            <div className=\"d-block d-md-inline-block pt-1\">\n              <div className=\"row\">\n                <UncontrolledDropdown className=\"mr-1 float-md-left btn-group mb-1 \">\n                  <DropdownToggle caret color=\"outline-dark\" size=\"xs\">\n                    <IntlMessages id=\"filter\" />\n                    {selectedGenderOption.label}\n                  </DropdownToggle>\n                  <DropdownMenu>\n                    {genderOptionsForList.map((gender, index) => {\n                      return (\n                        <DropdownItem\n                          key={index}\n                          onClick={() => changeGenderBy(gender.column)}\n                        >\n                          {gender.label}\n                        </DropdownItem>\n                      );\n                    })}\n                  </DropdownMenu>\n                </UncontrolledDropdown>\n                <UncontrolledDropdown className=\"mr-1 float-md-left btn-group mb-1 \">\n                  <DropdownToggle caret color=\"outline-dark\" size=\"xs\">\n                    <IntlMessages id=\"filter\" />\n                    {selectedProvinceOption.label}\n                  </DropdownToggle>\n                  <DropdownMenu\n                    style={{\n                      height: '300px',\n                      overflowY: 'scroll',\n                      overflowX: 'hidden',\n                    }}\n                  >\n                    {provincesOptionsForList.map((order, index) => {\n                      return (\n                        <DropdownItem\n                          key={index}\n                          onClick={() => changeProvinceBy(order.column)}\n                        >\n                          {order.label}\n                        </DropdownItem>\n                      );\n                    })}\n                  </DropdownMenu>\n                </UncontrolledDropdown>\n                <div className=\"search-sm d-inline-block float-md-left mr-1 mb-1 align-top\">\n                  <input\n                    type=\"text\"\n                    name=\"district\"\n                    id=\"district\"\n                    placeholder={messages['search.district']}\n                    onKeyPress={(e) => onDistrictSearchKey(e)}\n                  />\n                </div>\n                <div className=\"search-sm d-inline-block float-md-left mr-1 mb-1 align-top\">\n                  <input\n                    type=\"text\"\n                    name=\"student_id\"\n                    id=\"student_id\"\n                    placeholder={messages['search.id']}\n                    onKeyPress={(e) => onIdSearchKey(e)}\n                  />\n                </div>\n              </div>\n              <Button\n                color=\"outline-dark\"\n                size=\"xs\"\n                className=\"float-md-left mb-1\"\n                onClick={() => {\n                  changeGenderBy('all');\n                  changeProvinceBy('all');\n                  document.getElementById('district').value = '';\n                  document.getElementById('student_id').value = '';\n                  setSelectedInstitute('');\n                  onResetClick(!reset);\n                }}\n              >\n                <IntlMessages id=\"pages.reset\" />\n              </Button>\n            </div>\n\n            {/* <div className=\"float-md-right pt-1\">\n              <span className=\"text-muted text-small mr-1\">{`${startIndex}-${endIndex} of ${totalItemCount} `}</span>\n              <UncontrolledDropdown className=\"d-inline-block\">\n                <DropdownToggle caret color=\"outline-dark\" size=\"xs\">\n                  {selectedPageSize}\n                </DropdownToggle>\n                <DropdownMenu right>\n                  {pageSizes.map((size, index) => {\n                    return (\n                      <DropdownItem\n                        key={index}\n                        onClick={() => changePageSize(size)}\n                      >\n                        {size}\n                      </DropdownItem>\n                    );\n                  })}\n                </DropdownMenu>\n              </UncontrolledDropdown>\n            </div> */}\n          </Collapse>\n        </div>\n        <Separator className=\"mb-5\" />\n      </Colxx>\n    </Row>\n  );\n};\n\nexport default injectIntl(ListPageHeading);\n","import React from 'react';\nimport { Card, CustomInput, Badge } from 'reactstrap';\nimport { NavLink } from 'react-router-dom';\nimport classnames from 'classnames';\nimport { ContextMenuTrigger } from 'react-contextmenu';\nimport { Colxx } from 'components/common/CustomBootstrap';\n\nconst StudentListBody = ({ attendance, isSelect, collect, onCheckItem }) => {\n  return (\n    <Colxx xxs=\"12\" key={attendance.id} className=\"mb-3\">\n      <ContextMenuTrigger id=\"menu_id\" data={attendance.id} collect={collect}>\n        <Card\n          onClick={(event) => onCheckItem(event, attendance.id)}\n          className={classnames('d-flex flex-row', {\n            active: isSelect,\n          })}\n        >\n          {/* <NavLink to={`?p=${attendance.id}`} className=\"d-flex\">\n            <img\n              alt={attendance.title}\n              src={attendance.img}\n              className=\"list-thumbnail responsive border-0 card-img-left\"\n            />\n          </NavLink> */}\n          <div className=\"pl-2 d-flex flex-grow-1 min-width-zero\">\n            <div className=\"py-3 card-body align-self-center d-flex flex-column flex-lg-row justify-content-between min-width-zero align-items-lg-center\">\n              {/* send this to localhost/attendances/:id */}\n\n              <NavLink to={`attendance-list/${attendance.id}`} className=\"\">\n                <p className=\"list-item-heading mb-1 truncate \">\n                  <span className=\"mr-5\">{attendance.id}</span>\n                </p>\n              </NavLink>\n              <p\n                style={{ marginRight: '20px' }}\n                className=\"mb-1 text-small w-10 w-sm-100\"\n              >\n                {attendance.student.name}\n              </p>\n              <p\n                style={{ marginRight: '30px' }}\n                className=\"mb-1 text-small w-10 w-sm-100\"\n              >\n                {attendance.department.name}\n              </p>\n              <p\n                style={{ marginRight: '30px' }}\n                className=\"mb-1 text-small w-10 w-sm-100\"\n              >\n                {attendance.institute.name}\n              </p>\n              <p\n                style={{ marginRight: '10px' }}\n                className=\"mb-1 text-small w-10 w-sm-100\"\n              >\n                {attendance.present_hours}\n              </p>\n              <p className=\"mb-1 text-small w-10 w-sm-100\">\n                {attendance.absent_hours}\n              </p>\n              <p className=\"mb-1 text-small w-10 w-sm-100\">\n                {attendance.sickness_hours}\n              </p>\n              {/* <p className=\"mb-1 text-small w-10 w-sm-100\">\n                {attendance.educational_days}\n              </p> */}\n              <p className=\"mb-1 text-small w-10 w-sm-100\">\n                {attendance.educational_year}\n              </p>\n              <p className=\"mb-1 text-small w-10 w-sm-100\">\n                {attendance.is_short_attendance ? 'محروم' : 'غیر محروم'}\n              </p>\n            </div>\n          </div>\n        </Card>\n      </ContextMenuTrigger>\n    </Colxx>\n  );\n};\n\n/* React.memo detail : https://reactjs.org/docs/react-api.html#reactpurecomponent  */\nexport default React.memo(StudentListBody);\n","import React, { useState } from 'react';\nimport {\n  Row,\n  Modal,\n  Button,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n} from 'reactstrap';\n\nimport Pagination from '../../../../../containers/pages/Pagination';\nimport ContextMenuContainer from '../../../../../containers/pages/ContextMenuContainer';\nimport DataListView from '../../../../../containers/pages/DataListView';\nimport ImageListView from '../../../../../containers/pages/ImageListView';\nimport StudentListBody from './AttendanceListBody';\n\nfunction collect(props) {\n  return { data: props.data };\n}\n\nconst ListPageListing = ({\n  items,\n  displayMode,\n  selectedItems,\n  onCheckItem,\n  currentPage,\n  totalPage,\n  onContextMenuClick,\n  onContextMenu,\n  onChangePage,\n}) => {\n  const [modalBasic, setModalBasic] = useState(true);\n\n  return (\n    <>\n      <Row>\n        {items.length === 0 ? (\n          <div className=\"no-result\">\n            <h5>هیچ داده ای برای نمایش وجود ندارد</h5>\n          </div>\n        ) : null}\n        {items.map((attendance) => {\n          if (displayMode === 'imagelist') {\n            return (\n              <ImageListView\n                key={attendance.id}\n                attendance={attendance}\n                isSelect={selectedItems.includes(attendance.id)}\n                collect={collect}\n                onCheckItem={onCheckItem}\n              />\n            );\n          }\n          if (displayMode === 'thumblist') {\n            return (\n              <StudentListBody\n                key={attendance.id}\n                attendance={attendance}\n                isSelect={selectedItems.includes(attendance.id)}\n                collect={collect}\n                onCheckItem={onCheckItem}\n              />\n            );\n          }\n          return (\n            <DataListView\n              key={attendance.id}\n              attendance={attendance}\n              isSelect={selectedItems.includes(attendance.id)}\n              onCheckItem={onCheckItem}\n              collect={collect}\n            />\n          );\n        })}\n        <Pagination\n          currentPage={currentPage}\n          totalPage={totalPage}\n          onChangePage={(i) => onChangePage(i)}\n        />\n        <ContextMenuContainer\n          onContextMenuClick={onContextMenuClick}\n          onContextMenu={onContextMenu}\n        />\n      </Row>\n    </>\n  );\n};\n\nexport default React.memo(ListPageListing);\n","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport IntlMessages from 'helpers/IntlMessages';\nimport ListPageHeading from './AttendanceListHeading';\nimport {\n  provincesOptionsForList,\n  genderOptionsForList,\n} from '../../../global-data/options';\n\nimport ListPageListing from './AttendanceListCatagory';\nimport useMousetrap from 'hooks/use-mousetrap';\nimport { useAsyncDebounce } from 'react-table';\nimport callApi from 'helpers/callApi';\nimport DisplayMessage from 'components/messages/DisplayMessage';\nimport config from '../../../../../config';\nconst getIndex = (value, arr, prop) => {\n  for (let i = 0; i < arr.length; i += 1) {\n    if (arr[i][prop] === value) {\n      return i;\n    }\n  }\n  return -1;\n};\n\nconst servicePath = config.API_URL;\nconst apiUrl = `${servicePath}/cakes/paging`;\nconst studentApiUrl = `${servicePath}/api/`;\nconst studentInstituteApiUrl = `${servicePath}/api/student_institutes/`;\nconst instituteApiUrl = `${servicePath}/institute/`;\nconst attendanceListAPI = `${servicePath}/api/stdatten/`;\n\nconst orderOptions = [\n  { column: 'title', label: 'Product Name' },\n  { column: 'category', label: 'Category' },\n  { column: 'status', label: 'Status' },\n];\nconst pageSizes = [10, 20, 40, 80];\nconst genderOptions = [\n  {\n    column: 'all',\n    label: 'تول / همه',\n  },\n  { column: '1', label: 'ذکور' },\n  { column: '2', label: 'اناث' },\n];\n\nconst ThumbListPages = ({ match }) => {\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [displayMode, setDisplayMode] = useState('thumblist');\n  const [currentPage, setCurrentPage] = useState(1);\n  const [selectedPageSize, setSelectedPageSize] = useState(20);\n  const [selectedOrderOption, setSelectedOrderOption] = useState({\n    column: 'title',\n    label: 'Product Name',\n  });\n\n  const [modalOpen, setModalOpen] = useState(false);\n  const [totalItemCount, setTotalItemCount] = useState(0);\n  const [totalPage, setTotalPage] = useState(1);\n  const [search, setSearch] = useState('');\n  const [selectedItems, setSelectedItems] = useState([]);\n  const [items, setItems] = useState([]);\n  const [lastChecked, setLastChecked] = useState(null);\n  const [rest, setRest] = useState(0);\n  const [institutes, setInstitutes] = useState();\n  const [institute, setInstitute] = useState('');\n  const [attendance, setAttendance] = useState([]);\n\n  const [studentId, setStudentId] = useState('');\n  const [province, setProvince] = useState('');\n  const [district, setDistrict] = useState('');\n  const [selectedGenderOption, setSelectedGenderOption] = useState({\n    column: 'all',\n    label: 'جنیست',\n  });\n  const [selectedProvinceOption, setSelectedProvinceOption] = useState({\n    column: 'all',\n    label: 'ولایت',\n  });\n\n  const fetchAttendance = async () => {\n    const response = await callApi(`students/stdatten/`, '', null);\n    console.log('ATTENDANCE: ', response.data);\n    if (response.data && response.status === 200) {\n      setAttendance(response.data);\n      setIsLoaded(true);\n      console.log('resonse.data attendance', response.data);\n    } else {\n      console.log('Attendance error: ' + response.status);\n    }\n  };\n\n  useEffect(() => {\n    fetchAttendance();\n    console.log('ATT: ', attendance);\n  }, []);\n\n  const onCheckItem = (event, id) => {\n    if (\n      event.target.tagName === 'A' ||\n      (event.target.parentElement && event.target.parentElement.tagName === 'A')\n    ) {\n      return true;\n    }\n    if (lastChecked === null) {\n      setLastChecked(id);\n    }\n\n    let selectedList = [...selectedItems];\n    if (selectedList.includes(id)) {\n      selectedList = selectedList.filter((x) => x !== id);\n    } else {\n      selectedList.push(id);\n    }\n    setSelectedItems(selectedList);\n\n    if (event.shiftKey) {\n      let newItems = [...items];\n      const start = getIndex(id, newItems, 'id');\n      const end = getIndex(lastChecked, newItems, 'id');\n      newItems = newItems.slice(Math.min(start, end), Math.max(start, end) + 1);\n      selectedItems.push(\n        ...newItems.map((item) => {\n          return item.id;\n        })\n      );\n      selectedList = Array.from(new Set(selectedItems));\n      setSelectedItems(selectedList);\n    }\n    document.activeElement.blur();\n    return false;\n  };\n\n  const handleChangeSelectAll = (isToggle) => {\n    if (selectedItems.length >= items.length) {\n      if (isToggle) {\n        setSelectedItems([]);\n      }\n    } else {\n      setSelectedItems(items.map((x) => x.id));\n    }\n    document.activeElement.blur();\n    return false;\n  };\n\n  const onContextMenuClick = (e, data) => {\n    // params : (e,data,target)\n    console.log('onContextMenuClick - selected items', selectedItems);\n    console.log('onContextMenuClick - action : ', data.action);\n  };\n\n  const onContextMenu = (e, data) => {\n    const clickedProductId = data.data;\n    if (!selectedItems.includes(clickedProductId)) {\n      setSelectedItems([clickedProductId]);\n    }\n\n    return true;\n  };\n\n  useMousetrap(['ctrl+a', 'command+a'], () => {\n    handleChangeSelectAll(false);\n  });\n\n  useMousetrap(['ctrl+d', 'command+d'], () => {\n    setSelectedItems([]);\n    return false;\n  });\n\n  const startIndex = (currentPage - 1) * selectedPageSize;\n  const endIndex = currentPage * selectedPageSize;\n\n  console.log('items', items);\n  return !isLoaded ? (\n    <div className=\"loading\" />\n  ) : (\n    <>\n      <div className=\"disable-text-selection\">\n        <ListPageHeading\n          heading=\"د حاضری لست/لست حاضری\"\n          // Using display mode we can change the display of the list.\n          displayMode={displayMode}\n          changeDisplayMode={setDisplayMode}\n          handleChangeSelectAll={handleChangeSelectAll}\n          // following code is used for order the list based on different element of the prod\n          changeOrderBy={(column) => {\n            setSelectedOrderOption(\n              orderOptions.find((x) => x.column === column)\n            );\n          }}\n          changePageSize={setSelectedPageSize}\n          selectedPageSize={selectedPageSize}\n          totalItemCount={totalItemCount}\n          selectedOrderOption={selectedOrderOption}\n          match={match}\n          startIndex={startIndex}\n          endIndex={endIndex}\n          selectedItemsLength={selectedItems ? selectedItems.length : 0}\n          itemsLength={items ? items.length : 0}\n          onSearchKey={(e) => {\n            if (e.key === 'Enter') {\n              setSearch(e.target.value.toLowerCase());\n            }\n          }}\n          orderOptions={orderOptions}\n          pageSizes={pageSizes}\n          toggleModal={() => setModalOpen(!modalOpen)}\n          changeGenderBy={(column) => {\n            setSelectedGenderOption(\n              genderOptionsForList.find((x) => x.column === column)\n            );\n          }}\n          changeProvinceBy={(column) => {\n            setSelectedProvinceOption(\n              provincesOptionsForList.find((x) => x.column === column)\n            );\n          }}\n          selectedGenderOption={selectedGenderOption}\n          selectedProvinceOption={selectedProvinceOption}\n          genderOptionsForList={genderOptionsForList}\n          provincesOptionsForList={provincesOptionsForList}\n          onIdSearchKey={(e) => {\n            if (e.key === 'Enter') {\n              setStudentId(e.target.value.toLowerCase());\n            }\n          }}\n          onProvinceSearchKey={(e) => {\n            if (e.key === 'Enter') {\n              setProvince(e.target.value.toLowerCase());\n            }\n          }}\n          onDistrictSearchKey={(e) => {\n            if (e.key === 'Enter') {\n              setDistrict(e.target.value.toLowerCase());\n            }\n          }}\n          onResetClick={setRest}\n          reset={rest}\n          institutes={institutes}\n          onInstituteSelect={setInstitute}\n        />\n        {attendance.length > 0 ? (\n          <table className=\"table\">\n            <thead\n              className=\"pl-2 d-flex flex-grow-1  table-dark\"\n              style={{ maxHeight: '55px' }}\n            >\n              <tr className=\"card-body align-self-center d-flex flex-column flex-lg-row align-items-lg-center\">\n                <th\n                  style={{\n                    width: '9%',\n                    paddingInline: '0%',\n                    textAlign: 'right',\n                    borderStyle: 'hidden',\n                  }}\n                >\n                  <IntlMessages id=\"ایدی حاضری\" />\n                </th>\n                <th\n                  style={{\n                    width: '14%',\n                    paddingInline: '0%',\n                    textAlign: 'right',\n                    borderStyle: 'hidden',\n                  }}\n                >\n                  <IntlMessages id=\"نام/نوم\" />\n                </th>\n                {/* <th\n                style={{\n                  width: '10%',\n                  padding: '0%',\n                  textAlign: 'right',\n                  borderStyle: 'hidden',\n                }}\n              >\n                <IntlMessages id=\"صنف/ټولګۍ\" />\n              </th> */}\n                {/* <th\n                style={{\n                  width: '10%',\n                  padding: '0%',\n                  textAlign: 'right',\n                  borderStyle: 'hidden',\n                }}\n              >\n                {' '}\n                <IntlMessages id=\"سمستر.\" />\n              </th> */}\n                <th\n                  style={{\n                    width: '13%',\n                    padding: '0%',\n                    textAlign: 'right',\n                    borderStyle: 'hidden',\n                  }}\n                >\n                  {' '}\n                  <IntlMessages id=\"دیپارتمنت\" />\n                </th>\n                <th\n                  style={{\n                    width: '11%',\n                    padding: '0%',\n                    textAlign: 'right',\n                    borderStyle: 'hidden',\n                  }}\n                >\n                  {' '}\n                  <IntlMessages id=\"انستیتوت\" />\n                </th>\n                {/* <th\n                style={{\n                  width: '10%',\n                  padding: '0%',\n                  textAlign: 'right',\n                  borderStyle: 'hidden',\n                }}\n              >\n                {' '}\n                <IntlMessages id=\"دیپارتمنت\" />\n              </th> */}\n                <th\n                  style={{\n                    width: '10%',\n                    padding: '0%',\n                    textAlign: 'right',\n                    borderStyle: 'hidden',\n                  }}\n                >\n                  {' '}\n                  <IntlMessages id=\"حاضر\" />\n                </th>\n                <th\n                  style={{\n                    width: '10%',\n                    padding: '0%',\n                    textAlign: 'right',\n                    borderStyle: 'hidden',\n                  }}\n                >\n                  {' '}\n                  <IntlMessages id=\"غیر حاضر\" />\n                </th>\n                <th\n                  style={{\n                    width: '10%',\n                    padding: '0%',\n                    textAlign: 'right',\n                    borderStyle: 'hidden',\n                  }}\n                >\n                  {' '}\n                  <IntlMessages id=\"مریض\" />\n                </th>\n                {/* <th\n                  style={{\n                    width: '11%',\n                    padding: '0%',\n                    textAlign: 'right',\n                    borderStyle: 'hidden',\n                  }}\n                >\n                  {' '}\n                  <IntlMessages id=\"روز ها تعلیمی\" />\n                </th> */}\n                <th\n                  style={{\n                    width: '10%',\n                    padding: '0%',\n                    textAlign: 'right',\n                    borderStyle: 'hidden',\n                  }}\n                >\n                  {' '}\n                  <IntlMessages id=\"سال تعلیمی\" />\n                </th>\n\n                <th\n                  style={{\n                    width: '10%',\n                    padding: '0%',\n                    textAlign: 'right',\n                    borderStyle: 'hidden',\n                  }}\n                >\n                  {' '}\n                  محرومیت\n                </th>\n              </tr>\n            </thead>\n            <ListPageListing\n              items={attendance}\n              displayMode={displayMode}\n              selectedItems={selectedItems}\n              onCheckItem={onCheckItem}\n              currentPage={currentPage}\n              totalPage={totalPage}\n              onContextMenuClick={onContextMenuClick}\n              onContextMenu={onContextMenu}\n              onChangePage={setCurrentPage}\n            />\n          </table>\n        ) : (\n          <DisplayMessage type=\"error\" message=\"معلومات شتون نلری\" />\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default ThumbListPages;\n","import React from 'react';\nimport { Nav, NavItem, NavLink } from 'reactstrap';\nimport { Colxx } from 'components/common/CustomBootstrap';\n\nconst Pagination = ({\n  totalPage = 0,\n  currentPage = 1,\n  numberLimit = 5,\n  lastIsActive = true,\n  firstIsActive = true,\n  onChangePage,\n}) => {\n  let startPoint = 1;\n  let endPoint = numberLimit;\n\n  if (numberLimit > totalPage) {\n    startPoint = 1;\n    endPoint = totalPage;\n  } else if (currentPage <= parseInt(numberLimit / 2, 10)) {\n    startPoint = 1;\n    endPoint = numberLimit;\n  } else if (currentPage + parseInt(numberLimit / 2, 10) <= totalPage) {\n    startPoint = currentPage - parseInt(numberLimit / 2, 10);\n    endPoint = currentPage + parseInt(numberLimit / 2, 10);\n  } else {\n    startPoint = totalPage - (numberLimit - 1);\n    endPoint = totalPage;\n  }\n  startPoint = startPoint === 0 ? 1 : startPoint;\n  const points = [];\n  for (let i = startPoint; i <= endPoint; i += 1) {\n    points.push(i);\n  }\n\n  const firstPageButtonClassName = currentPage <= 1 ? 'disabled' : '';\n  const lastPageButtonClassName = currentPage >= totalPage ? 'disabled' : '';\n  const prevPageButtonClassName = currentPage <= 1 ? 'disabled' : '';\n  const nextPageButtonClassName = currentPage >= totalPage ? 'disabled' : '';\n  return totalPage > 1 ? (\n    <Colxx xxs=\"12\" className=\"mt-3 mb-3\">\n      <Nav className=\"pagination justify-content-center\">\n        {firstIsActive && (\n          <NavItem className={`page-item ${firstPageButtonClassName}`}>\n            <NavLink\n              className=\"page-link first c-pointer\"\n              onClick={() => onChangePage(1)}\n            >\n              <i className=\"simple-icon-control-start\" />\n            </NavLink>\n          </NavItem>\n        )}\n\n        <NavItem className={`page-item ${prevPageButtonClassName}`}>\n          <NavLink\n            className=\"page-link prev c-pointer\"\n            onClick={() => onChangePage(currentPage - 1)}\n          >\n            <i className=\"simple-icon-arrow-left\" />\n          </NavLink>\n        </NavItem>\n        {points.map((i) => {\n          return (\n            <NavItem\n              key={i}\n              className={`page-item ${currentPage === i && 'active'}`}\n            >\n              <NavLink\n                className=\"page-link c-pointer\"\n                onClick={() => onChangePage(i)}\n              >\n                {i}\n              </NavLink>\n            </NavItem>\n          );\n        })}\n        <NavItem className={`page-item ${nextPageButtonClassName}`}>\n          <NavLink\n            className=\"page-link next c-pointer\"\n            onClick={() => onChangePage(currentPage + 1)}\n          >\n            <i className=\"simple-icon-arrow-right\" />\n          </NavLink>\n        </NavItem>\n        {lastIsActive && (\n          <NavItem className={`page-item ${lastPageButtonClassName}`}>\n            <NavLink\n              className=\"page-link last c-pointer\"\n              onClick={() => onChangePage(totalPage)}\n            >\n              <i className=\"simple-icon-control-end\" />\n            </NavLink>\n          </NavItem>\n        )}\n      </Nav>\n    </Colxx>\n  ) : (\n    <Colxx xxs=\"12\" className=\"mt-2\" />\n  );\n};\n\nexport default Pagination;\n","/* eslint-disable no-unused-expressions */\nimport mousetrap from 'mousetrap';\nimport { useEffect, useRef } from 'react';\n\n/**\n * Use mousetrap hook\n *\n * @param  {(string | string[])} handlerKey - A key, key combo or array of combos according to Mousetrap documentation.\n * @param  { function } handlerCallback - A function that is triggered on key combo catch.\n */\nexport default (handlerKey, handlerCallback) => {\n  const actionRef = useRef(null);\n  actionRef.current = handlerCallback;\n\n  useEffect(() => {\n    mousetrap.bind(handlerKey, (evt, combo) => {\n      typeof actionRef.current === 'function' && actionRef.current(evt, combo);\n      evt.preventDefault();\n    });\n    return () => {\n      mousetrap.unbind(handlerKey);\n    };\n  }, [handlerKey]);\n};\n","import React from 'react';\nimport {\n  Row,\n  Card,\n  CardBody,\n  CardSubtitle,\n  CardImg,\n  CardText,\n  CustomInput,\n  Badge,\n} from 'reactstrap';\nimport { NavLink } from 'react-router-dom';\nimport classnames from 'classnames';\nimport { ContextMenuTrigger } from 'react-contextmenu';\nimport { Colxx } from 'components/common/CustomBootstrap';\n\nconst ImageListView = ({ product, isSelect, collect, onCheckItem }) => {\n  return (\n    <Colxx sm=\"6\" lg=\"4\" xl=\"3\" className=\"mb-3\" key={product.id}>\n      <ContextMenuTrigger id=\"menu_id\" data={product.id} collect={collect}>\n        <Card\n          onClick={(event) => onCheckItem(event, product.id)}\n          className={classnames({\n            active: isSelect,\n          })}\n        >\n          <div className=\"position-relative\">\n            <NavLink to={`?p=${product.id}`} className=\"w-40 w-sm-100\">\n              <CardImg top alt={product.title} src={product.img} />\n            </NavLink>\n            <Badge\n              color={product.statusColor}\n              pill\n              className=\"position-absolute badge-top-left\"\n            >\n              {product.status}\n            </Badge>\n          </div>\n          <CardBody>\n            <Row>\n              <Colxx xxs=\"2\">\n                <CustomInput\n                  className=\"item-check mb-0\"\n                  type=\"checkbox\"\n                  id={`check_${product.id}`}\n                  checked={isSelect}\n                  onChange={() => {}}\n                  label=\"\"\n                />\n              </Colxx>\n              <Colxx xxs=\"10\" className=\"mb-3\">\n                <CardSubtitle>{product.title}</CardSubtitle>\n                <CardText className=\"text-muted text-small mb-0 font-weight-light\">\n                  {product.date}\n                </CardText>\n              </Colxx>\n            </Row>\n          </CardBody>\n        </Card>\n      </ContextMenuTrigger>\n    </Colxx>\n  );\n};\n\n/* React.memo detail : https://reactjs.org/docs/react-api.html#reactpurecomponent  */\nexport default React.memo(ImageListView);\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Dropdown from './Dropdown';\nvar propTypes = {\n  children: PropTypes.node\n};\n\nvar ButtonDropdown = function ButtonDropdown(props) {\n  return /*#__PURE__*/React.createElement(Dropdown, _extends({\n    group: true\n  }, props));\n};\n\nButtonDropdown.propTypes = propTypes;\nexport default ButtonDropdown;"],"sourceRoot":""}