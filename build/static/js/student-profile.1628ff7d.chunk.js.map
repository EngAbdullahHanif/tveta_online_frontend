{"version":3,"file":"static/js/student-profile.1628ff7d.chunk.js","mappings":"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","sources":["views/app/students/bio/student-profile.js","../node_modules/reactstrap/es/Table.js"],"sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport { useParams } from 'react-router-dom';\nimport callApi from 'helpers/callApi';\n\nimport './../../.././../assets/css/global-style.css';\nimport profilePhoto from './../../../../assets/img/profiles/user.png';\n\nimport { message } from 'antd';\nimport { Row, Card, CardBody, Label, Button, Table, Badge } from 'reactstrap';\nimport logo from './../../../../assets/logos/AdminLogo.png';\n\nimport IntlMessages from 'helpers/IntlMessages';\nimport { Colxx, Separator } from 'components/common/CustomBootstrap';\nimport config from '../../../../config';\n\nimport { AuthContext } from 'context/AuthContext';\nimport { studentStatusOptions } from 'views/app/global-data/options';\n\nconst servicePath = config.API_URL;\nconst studentApiUrl = `${servicePath}/api/`;\n\nconst StudentProfile = () => {\n  const { institutes, provinces, districts } = useContext(AuthContext);\n  const { studentId } = useParams();\n  const [isNext, setIsNext] = useState(true);\n  const [student, setStudent] = useState([]);\n  const [institute, setInstitute] = useState([]);\n  const [classs, setClasss] = useState([]); //classs is used because class is a reserved word\n  const [dorm, setDorm] = useState([]);\n  const [marks, setMarks] = useState([]);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [insentiveAlert, setInsentiveAlert] = useState(false);\n  const [updatingRecord, setUpdatingRecord] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [startDate, setStartDate] = useState();\n  const [endDate, setEndDate] = useState();\n  const [studentInstitute, setStudentInstitutes] = useState();\n\n  const provincesList = {};\n  const districtsList = {};\n\n  provinces.forEach((province) => {\n    provincesList[province.value] = province.label;\n  });\n\n  districts.forEach((districts) => {\n    districtsList[districts.value] = districts.label;\n  });\n  async function fetchStudentInstitutes() {\n    const response = await callApi(\n      // `teachers/${teacherId}/feedbacks/`,\n      `students/${studentId}/feedbacks/`,\n      '',\n      null,\n    );\n\n    const data = response.data;\n    setStudentInstitutes(data);\n  }\n  let recId;\n  const resetUpdate = () => {\n    setUpdatingRecord(null);\n    recId = null;\n    setStartDate(null);\n    setEndDate(null);\n  };\n  const handleRecord = (item) => {\n    recId = item.id;\n    setUpdatingRecord(item);\n    setStartDate(item.startDate);\n    setEndDate(item.endDate);\n  };\n  const deleteInsentive = async (item) => {\n    await callApi(`students/${studentId}/feedbacks/${item}/`, 'DELETE').then(\n      (response) => {\n        fetchStudentInstitutes();\n      },\n    );\n  };\n  const addInstitute = async (inputData, { resetForm }) => {\n    setLoading(true);\n    let apiParams = {\n      endPoint: `students/${studentId}/institute/`,\n      method: 'POST',\n    };\n    if (recId || updatingRecord.id) {\n      apiParams.endPoint = `students/${studentId}/institute/${updatingRecord.id}/`;\n      apiParams.method = 'PATCH';\n    }\n    const data = {\n      type: inputData.type?.value,\n      // teacher: teacher[0].id,\n      institute: inputData.institute?.value,\n      details: inputData.details,\n    };\n    await callApi(apiParams.endPoint, apiParams.method, data).then(\n      (response) => {\n        resetUpdate();\n        if (response.status >= 200 && response.status < 300) {\n          setLoading(false);\n          message.success('Data Saved Successfully');\n          // fetchTeacherIncentives();\n          resetForm();\n          resetUpdate();\n        } else {\n          message.error('Data Not Saved Check your Payload');\n        }\n      },\n    );\n    setLoading(false);\n  };\n  //load data of student from database\n\n  async function fetchStudent() {\n    try {\n      const response = await callApi(`students/${studentId}/`, '', null);\n\n      if (response.data && response.status === 200) {\n        const data = await response.data;\n        setStudent([data]);\n        setIsLoaded(true);\n      }\n\n      const instituteResponse = await callApi(\n        `students/student_institutes/?student__id=${studentId}`,\n        '',\n        null,\n      );\n\n      if (instituteResponse.data && instituteResponse.status === 200) {\n        const instituteData = await instituteResponse.data;\n        setInstitute(instituteData?.results);\n      }\n\n      //type =1 means current class or current continued class\n      const classResponse = await callApi(\n        `students/student_class/?student=${studentId}&stauts=inprogress`,\n        '',\n        null,\n      );\n\n      if (classResponse.data && classResponse.status === 200) {\n        const classData = await classResponse.data;\n        setClasss(classData);\n      }\n\n      const dormResponse = await callApi(\n        `students/student_dorms/?student=${studentId}`,\n        '',\n        null,\n      );\n      if (dormResponse.data && dormResponse.status === 200) {\n        const dormData = await dormResponse.data;\n        setDorm(dormData);\n      }\n\n      const marksResponse = await callApi(\n        `students/TranscriptData/?student=${studentId}`,\n        '',\n        null,\n      );\n      if (marksResponse.data && marksResponse.status === 200) {\n        const marksData = await marksResponse.data;\n        setMarks(marksData);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  useEffect(() => {\n    fetchStudent();\n  }, []);\n\n  const handleClick = (event) => {\n    setIsNext(event);\n  };\n\n  const style2 = {\n    padding: '',\n  };\n  const style1 = {\n    backgroungColor: 'blue',\n  };\n\n  return (\n    <>\n      <Row className=\"position-static\">\n        <Colxx className=\"m-5\" xxs=\"8\">\n          <div className=\" ml-5\">\n            <h2 className=\" mt-3 titleStyle\">\n              {<IntlMessages id=\"student.Profile\" />}\n            </h2>\n          </div>\n        </Colxx>\n        <Colxx className=\"mt-4 \" style={{ paddingRight: '10%' }}>\n          <div className=\" align-items-center flex-column \">\n            <img src={logo} alt=\"Logo\" width={'50%'} />\n            <p>\n              د تخنیکی او مسلکی زده کړو اداره\n              <br />\n              اداره تعلیمات تخنیکی و مسلکی\n            </p>\n          </div>\n        </Colxx>\n      </Row>\n      {!isLoaded ? (\n        <div className=\"loading\" />\n      ) : (\n        <div>\n          <Row>\n            <Colxx xxs=\"1\"></Colxx>\n            {student.length > 0 && (\n              <Colxx>\n                <a\n                  href={student[0].photo}\n                  className=\"w-40 w-sm-100\"\n                  target=\"_blank\"\n                  rel=\"noreferrer\"\n                >\n                  <img\n                    top\n                    alt={student[0].name}\n                    src={student[0].photo || profilePhoto}\n                    style={{\n                      maxWidth: '12%',\n                      maxHeight: '130%',\n                      borderRadius: '5px',\n                    }}\n                  />\n                </a>\n              </Colxx>\n            )}\n          </Row>\n          <Row>\n            <Colxx\n              className=\" d-flex justify-content-center \"\n              style={{ marginBottom: '2%' }}\n            >\n              {' '}\n              <div className=\"d-inline-block\">\n                <Button\n                  style={{\n                    backgroundColor: isNext ? 'blue' : '',\n                    fontWeight: 'bold',\n                    fontSize: '18px',\n                  }}\n                  className=\"m-2\"\n                  onClick={() => {\n                    handleClick(true);\n                  }}\n                >\n                  <span className=\"label\">\n                    <IntlMessages id=\"button.Teacherprofile\" />\n                  </span>\n                </Button>\n                <Button\n                  style={{\n                    backgroundColor: !isNext ? 'blue' : '',\n                    fontWeight: 'bold',\n                    fontSize: '18px',\n                  }}\n                  className=\"m-2 \"\n                  onClick={() => {\n                    handleClick(false);\n                  }}\n                >\n                  <IntlMessages id=\"student.results\" />\n                </Button>{' '}\n              </div>\n            </Colxx>\n          </Row>\n        </div>\n      )}\n      {/* if student is loaded show it, if not show empty  */}\n      {student?.length > 0 && institute?.length > 0 && classs?.length > 0 && (\n        <>\n          {isNext ? (\n            <>\n              <Card className=\"rounded m-4\">\n                <CardBody>\n                  <div>\n                    <Row>\n                      <Colxx className=\" pt-5\" style={{ paddingInline: '3%' }}>\n                        {' '}\n                        <h2\n                          className=\"bg-primary data-style \"\n                          style={{\n                            padding: '8px',\n                            paddingInline: '30px',\n                            borderRadius: '10px',\n                          }}\n                        >\n                          {' '}\n                          <IntlMessages id=\"forms.personalInfo\" />\n                        </h2>\n                      </Colxx>\n                    </Row>\n                    <Row className=\"justify-content-center   rounded \">\n                      <Colxx style={{ paddingInline: '4%' }} xxs=\"\">\n                        <Label className=\"data-style\">\"ایدی\"</Label>\n\n                        <h2>\n                          {student[0].student_id}{' '}\n                          {\n                            <Badge\n                              color={\n                                student[0].status == 'dismissed'\n                                  ? 'danger'\n                                  : student[0].status == 'inprogress'\n                                  ? 'success'\n                                  : student[0].status == 'active'\n                                  ? 'success'\n                                  : student[0].status == 'freeze'\n                                  ? 'secondary'\n                                  : 'warning'\n                              }\n                              pill\n                            >\n                              {\n                                studentStatusOptions.find(\n                                  (op) => op.value === student[0].status,\n                                )?.label\n                              }\n                            </Badge>\n                          }\n                        </h2>\n                        <Label className=\"data-style\">\n                          <IntlMessages id=\"teacher.NameLabel\" />\n                        </Label>\n                        <h2>\n                          {student[0].name +\n                            '\"' +\n                            ' ' +\n                            student[0].last_name +\n                            '\"'}\n                        </h2>\n                        <Label className=\"data-style\">\n                          <IntlMessages id=\"forms.Eng_name\" />\n                        </Label>\n                        <h2>\n                          {`${student[0].english_name || '-'} ${\n                            student[0].english_last_name || '-'\n                          }`}\n                        </h2>\n                        <Label className=\"data-style\">\n                          <IntlMessages id=\"teacher.FatherNameLabel\" />\n                        </Label>\n                        <h2>{student[0].father_name}</h2>\n\n                        <Label className=\"data-style\">\n                          <IntlMessages id=\"forms.Std_father_Eng_Name\" />\n                        </Label>\n                        <h2>{student[0].english_father_name || '-'}</h2>\n\n                        <Label className=\"data-style\">\n                          <IntlMessages id=\"teacher.PhoneNoLabel\" />\n                        </Label>\n                        <h2>{student[0].phone_number}</h2>\n                        <Label className=\"data-style\">\n                          <IntlMessages id=\"teacher.EmailLabel\" />\n                        </Label>\n                        <h2>{student[0].email || '-'}</h2>\n                        {student[0].tazkira_type === 'electronic' && (\n                          <>\n                            <Label className=\"data-style\">\n                              <IntlMessages id=\"forms.electronicTazkiraLabel\" />\n                            </Label>\n                            <h2>{student[0].registration_number}</h2>\n                          </>\n                        )}\n                        <br />\n                        <br />\n                      </Colxx>\n                      <Colxx style={{ paddingInline: '4%' }}>\n                        {/* if person has paper-based ID card, not electronic */}\n                        {student[0].tazkira_type === 'paper' && (\n                          <>\n                            <Label className=\"data-style\">\n                              <IntlMessages id=\"forms.StdIdCardCoverLabel\" />\n                            </Label>\n                            <h2>{student[0].cover_number}</h2>\n                            <Label className=\"data-style\">\n                              <IntlMessages id=\"forms.StdIdCardPageNoLabel\" />\n                            </Label>\n                            <h2>{student[0].page_number}</h2>\n                            <Label className=\"data-style\">\n                              <IntlMessages id=\"forms.tazkiraSabt\" />\n                            </Label>\n                            <h2>{student[0].sabt_number}</h2>\n                            <Label className=\"data-style\">\n                              <IntlMessages id=\"forms.StdIdCardSakukNoLabel\" />\n                            </Label>\n                            <h2>{student[0].sokok_number}</h2>\n                          </>\n                        )}\n                        <Label className=\"data-style\">\n                          <IntlMessages id=\"forms.StdDoBLabel\" />\n                        </Label>\n                        <h2>{student[0].year_of_birth}</h2>\n                        <Label className=\"data-style\">\n                          <IntlMessages id=\"forms.PlaceOfBirthLabel\" />\n                        </Label>\n                        <h2>{student[0].place_of_birth}</h2>\n                        <Label className=\"data-style\">\n                          <IntlMessages id=\"forms.StdFatherDutyLabel\" />\n                        </Label>\n                        <h2>{student[0].father_profession}</h2>\n                        <Label className=\"data-style\">\n                          <IntlMessages id=\"forms.StdFatherDutyLocationLabel\" />\n                        </Label>\n                        <h2>{student[0].father_place_of_duty}</h2>\n\n                        <br />\n                        <br />\n                      </Colxx>\n                    </Row>\n                    <Row>\n                      <Colxx style={{ paddingInline: '4%' }}>\n                        {' '}\n                        <h2\n                          className=\"bg-primary rounded  data-style \"\n                          style={{ padding: '1%', paddingInline: '3%' }}\n                        >\n                          {' '}\n                          <IntlMessages id=\"forms.PermanentAddressLabel\" />\n                        </h2>\n                        <Separator />\n                        <br />\n                        <Row>\n                          <Colxx>\n                            {' '}\n                            <Label className=\"data-style\">\n                              <IntlMessages id=\"forms.ProvinceLabel\" />\n                            </Label>\n                            <h2>{provincesList[student[0].main_province]}</h2>\n                          </Colxx>\n                          <Colxx>\n                            {' '}\n                            <Label className=\"data-style\">\n                              <IntlMessages id=\"forms.DistrictLabel\" />\n                            </Label>\n                            <h2>{districtsList[student[0].main_district]}</h2>\n                          </Colxx>\n                          <Colxx>\n                            {' '}\n                            <Label className=\"data-style\">\n                              <IntlMessages id=\"forms.VillageLabel\" />\n                            </Label>\n                            <h2>{student[0].main_village}</h2>\n                          </Colxx>\n                        </Row>\n                      </Colxx>\n                      <Colxx style={{ paddingInline: '4%' }}>\n                        {' '}\n                        <h2\n                          className=\"bg-primary rounded data-style \"\n                          style={{ padding: '1%', paddingInline: '3%' }}\n                        >\n                          {' '}\n                          <IntlMessages id=\"forms.CurrentAddresslabel\" />\n                        </h2>\n                        <Separator />\n                        <br />\n                        <Row>\n                          <Colxx>\n                            {' '}\n                            <Label className=\"data-style\">\n                              <IntlMessages id=\"forms.ProvinceLabel\" />\n                            </Label>\n                            <h2>\n                              {provincesList[student[0].current_province]}\n                            </h2>\n                          </Colxx>\n                          <Colxx>\n                            {' '}\n                            <Label className=\"data-style\">\n                              <IntlMessages id=\"forms.DistrictLabel\" />\n                            </Label>\n                            <h2>\n                              {districtsList[student[0].current_district]}\n                            </h2>\n                          </Colxx>\n                          <Colxx>\n                            {' '}\n                            <Label className=\"data-style\">\n                              <IntlMessages id=\"forms.VillageLabel\" />\n                            </Label>\n                            <h2>{student[0].current_village}</h2>\n                          </Colxx>\n                        </Row>\n                      </Colxx>\n                    </Row>\n                  </div>\n                </CardBody>\n              </Card>\n\n              <Card className=\"rounded m-4 mt-5\">\n                <CardBody>\n                  <div>\n                    <Row>\n                      <Colxx className=\" pt-5\" style={{ paddingInline: '3%' }}>\n                        {' '}\n                        <h2\n                          className=\"bg-primary \"\n                          style={{\n                            padding: '8px',\n                            paddingInline: '30px',\n                            borderRadius: '10px',\n                          }}\n                        >\n                          {' '}\n                          <IntlMessages id=\"teacher.LevelOfEducationLabel\" />\n                        </h2>\n                      </Colxx>\n                    </Row>\n                    <Row className=\"justify-content-center   rounded \">\n                      <Colxx style={{ paddingInline: '4%' }} xxs=\"\">\n                        <Label className=\"data-style\">\n                          <IntlMessages id=\"forms.EducationLevelLabel\" />\n                        </Label>\n                        <h2>{student[0].previous_grade}</h2>\n                        <Label className=\"data-style\">\n                          <IntlMessages id=\"forms.StdGraduationYearLabel\" />\n                        </Label>\n                        <h2>{student[0].previous_grade_year}</h2>\n                        <Label className=\"data-style\">\n                          <IntlMessages id=\"forms.StPreShcoolLabel\" />\n                        </Label>\n                        <h2>{student[0].previous_school_name || '-'}</h2>\n\n                        <Label className=\"data-style\">\n                          <IntlMessages id=\"students.previousProvince\" />\n                        </Label>\n                        <h2>\n                          {provincesList[student[0].previous_school_province]}\n                        </h2>\n\n                        <Label className=\"data-style\">\n                          <IntlMessages id=\"forms.StdInteranceTypeLabel\" />\n                        </Label>\n                        {student.admission_method === 'decree' ? (\n                          <h2>حکمی</h2>\n                        ) : student.internse_type === 'general_kankor' ? (\n                          <h2>کانکور اختصاصی</h2>\n                        ) : (\n                          <h2>کانکور عمومی</h2>\n                        )}\n                        <Label className=\"data-style\">\n                          <IntlMessages id=\"student.educationType\" />\n                        </Label>\n                        {student.student_type === 'continuous' ? (\n                          <h2>پیوسته</h2>\n                        ) : (\n                          <h2>غیر پیوسته</h2>\n                        )}\n                        <br />\n                        <br />\n                      </Colxx>\n                      <Colxx style={{ paddingInline: '4%' }}>\n                        <Label className=\"data-style\">\n                          <IntlMessages id=\"menu.institutes\" />\n                        </Label>\n                        <h2>\n                          {console.log('iiiiiiiii', institutes)}\n                          {\n                            institutes.find(\n                              (ins) => ins.value === institute[0].institute,\n                            )?.label\n                          }\n                        </h2>\n                        <Label className=\"data-style\">\n                          <IntlMessages id=\"field.SemesterLabel\" />\n                        </Label>\n                        <h2>{classs[0].classs.semester}</h2>\n                        <Label className=\"data-style\">\n                          <IntlMessages id=\"curriculum.classLabel\" />\n                        </Label>\n                        <h2>{classs[0].classs.name}</h2>\n                        <Label className=\"data-style\">\n                          <IntlMessages id=\"field.SectionLabel\" />\n                        </Label>\n                        <h2>{classs[0].classs.section}</h2>\n                        {dorm.length > 0 && (\n                          <>\n                            <Label className=\"data-style\">\n                              <IntlMessages id=\"menu.dorms\" />\n                            </Label>\n                            <h2>{dorm[0].dorm.name}</h2>\n                            <Label>نوعیت</Label>\n\n                            {dorm.dorm_type == 1 ? (\n                              <h2> بدل عاشه</h2>\n                            ) : (\n                              <h2> بدیل عاشه</h2>\n                            )}\n                          </>\n                        )}\n\n                        <br />\n                        <br />\n                      </Colxx>\n                    </Row>\n                  </div>\n                </CardBody>\n              </Card>\n              {/* <Card className=\"rounded m-4 mt-5\">\n                <CardBody>\n                  <Colxx className=\" pt-5\" style={{ paddingInline: '3%' }}>\n                    {' '}\n                    <h2\n                      className=\"bg-primary \"\n                      style={{\n                        padding: '8px',\n                        paddingInline: '30px',\n                        borderRadius: '10px',\n                      }}\n                    >\n                      <IntlMessages id=\"Student Institute\" />\n                    </h2>\n                  </Colxx>\n\n                  <Row className=\"justify-content-center   rounded\">\n                    <Colxx style={{ paddingInline: '4%' }}>\n                      <table\n                        className=\"table table-striped table-lg\"\n                        style={{ fontSize: 18 }}\n                      >\n                        <thead>\n                          <tr>\n                            <th scope=\"col\">ID</th>\n                            <th scope=\"col\">Teacher</th>\n                            <th scope=\"col\">Institute</th>\n                            <th scope=\"col\">Type</th>\n                            <th scope=\"col\">Details</th>\n                          </tr>\n                        </thead>\n                        <tbody>\n                          {[\n                            {\n                              id: 123,\n                              name: 'name',\n                              institute: 'institute',\n                              type: 'type',\n                            },\n                          ].map((item, index) => {\n                            return (\n                              <tr key={item.id}>\n                                <th scope=\"row\">{item.id}</th>\n                                <td>{item.teacher}</td>\n                                <td>{item.institute}</td>\n                                <td>{item.type}</td>\n                                <td>{item.details}</td>\n                                <td>\n                                  <BsPencilSquare\n                                    color=\"green\"\n                                    data-toggle=\"modal\"\n                                    data-target=\"#instituteModal\"\n                                    data-whatever=\"@getbootstrap\"\n                                    outline\n                                    style={{ fontSize: '20px' }}\n                                    id=\"updateIcon\"\n                                    onClick={() => handleRecord(item)}\n                                  />\n                                  <Popconfirm\n                                    title=\"ډلیټ\"\n                                    icon={\n                                      <BsTrashFill\n                                        color=\"red\"\n                                        id=\"deleteIcon\"\n                                        outline\n                                        style={{ fontSize: '20px' }}\n                                      />\n                                    }\n                                    description={`مطمعین یاست چې   برای ${studentId} (${item.id})  ډیلیټ کړی. `}\n                                    onConfirm={() => deleteInsentive(item.id)}\n                                    okText=\"ډیلیټ\"\n                                    okType=\"danger\"\n                                    cancelText=\"نه\"\n                                  >\n                                    <BsTrashFill\n                                      color=\"red\"\n                                      id=\"deleteIcon\"\n                                      outline\n                                      // onClick={() => setInsentiveAlert(true)}\n                                      style={{ fontSize: '20px' }}\n                                    />\n                                  </Popconfirm>\n                                </td>\n                                <Modal\n                                  isOpen={insentiveAlert}\n                                  toggle={() =>\n                                    setInsentiveAlert(!insentiveAlert)\n                                  }\n                                  style={{ marginTop: '10%' }}\n                                >\n                                  <ModalHeader>\n                                    <IntlMessages id=\"modal.deletion-message-title\" />\n                                  </ModalHeader>\n                                  <ModalBody className=\"text-center\">\n                                    <IntlMessages id=\"modal.deletion-message-details\" />\n                                  </ModalBody>\n                                  <ModalFooter>\n                                    <Button\n                                      onClick={() => setInsentiveAlert(false)}\n                                      style={{ marginLeft: '55%' }}\n                                    >\n                                      نه/ نخیر\n                                    </Button>\n                                    <Button\n                                      color=\"danger\"\n                                      onClick={() => {\n                                        setInsentiveAlert(false);\n                                        deleteInsentive(item.id);\n                                      }}\n                                      style={{ marginLeft: '5%' }}\n                                    >\n                                      هو / بلی\n                                    </Button>\n                                  </ModalFooter>\n                                </Modal>\n                              </tr>\n                            );\n                          })}\n                        </tbody>\n                      </table>\n\n                      <br />\n                      <Button\n                        className=\"btn btn-primary\"\n                        data-toggle=\"modal\"\n                        data-target=\"#instituteModal\"\n                        data-whatever=\"@getbootstrap\"\n                      >\n                        Save Institute\n                      </Button>\n\n                      <div\n                        className=\"modal fade\"\n                        id=\"instituteModal\"\n                        tabindex=\"-1\"\n                        role=\"dialog\"\n                        aria-labelledby=\"instituteModalLabel\"\n                        aria-hidden=\"true\"\n                      >\n                        <div className=\"modal-dialog\" role=\"document\">\n                          <div className=\"modal-content\">\n                            <div className=\"modal-header\">\n                              <h5\n                                className=\"modal-title\"\n                                id=\"instituteModalLabel\"\n                              ></h5>\n                              <button\n                                type=\"button\"\n                                className=\"close\"\n                                data-dismiss=\"modal\"\n                                aria-label=\"Close\"\n                                onClick={resetUpdate}\n                              >\n                                <span aria-hidden=\"true\">&times;</span>\n                              </button>\n                            </div>\n                            <div className=\"modal-body\">\n                              <Formik\n                                enableReinitialize={true}\n                                initialValues={\n                                  !updatingRecord\n                                    ? {\n                                        institute: [],\n                                        type: [],\n                                        details: '',\n                                      }\n                                    : {\n                                        institute: institutes.filter((inst) => {\n                                          if (\n                                            inst.value ===\n                                            updatingRecord.institute\n                                          )\n                                            return inst;\n                                        }),\n                                        type: teacherFeedbackOptions.filter(\n                                          (inst) => {\n                                            if (\n                                              inst.value === updatingRecord.type\n                                            )\n                                              return inst;\n                                          }\n                                        ),\n                                        details: updatingRecord.details,\n                                      }\n                                }\n                                // validationSchema={\n                                //   teacherInstitutesValidationSchema\n                                // }\n                                onSubmit={addInstitute}\n                              >\n                                {({\n                                  errors,\n                                  touched,\n                                  values,\n                                  setFieldTouched,\n                                  setFieldValue,\n                                  handleSubmit,\n                                }) => (\n                                  <>\n                                    <form>\n                                      <div className=\"form-group w-100\">\n                                        <label\n                                          for=\"institute\"\n                                          className=\"col-form-label\"\n                                        >\n                                          institute\n                                          <span style={{ color: 'red' }}>\n                                            *\n                                          </span>\n                                        </label>\n                                        <FormikReactSelect\n                                          name=\"institute\"\n                                          id=\"institute\"\n                                          value={values.institute}\n                                          options={institutes}\n                                          onChange={setFieldValue}\n                                          onBlur={setFieldTouched}\n                                          required\n                                        />\n                                        {errors.institute &&\n                                        touched.institute ? (\n                                          <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                                            {errors.institute}\n                                          </div>\n                                        ) : null}\n                                      </div>\n                                      <div className=\"form-group w-100\">\n                                        <label\n                                          for=\"type\"\n                                          className=\"col-form-label\"\n                                        >\n                                          Type\n                                          <span style={{ color: 'red' }}>\n                                            *\n                                          </span>\n                                        </label>\n                                        <FormikReactSelect\n                                          name=\"type\"\n                                          id=\"type\"\n                                          value={values.type}\n                                          options={teacherFeedbackOptions}\n                                          onChange={setFieldValue}\n                                          onBlur={setFieldTouched}\n                                          required\n                                        />\n                                        {errors.type && touched.type ? (\n                                          <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                                            {errors.type}\n                                          </div>\n                                        ) : null}\n                                      </div>\n\n                                      <div className=\"form-group\">\n                                        <label\n                                          for=\"recipient-name\"\n                                          className=\"col-form-label\"\n                                        >\n                                          Description\n                                          <span style={{ color: 'red' }}>\n                                            *\n                                          </span>\n                                        </label>\n                                        <Field\n                                          className=\"form-control fieldStyle\"\n                                          name=\"details\"\n                                        />\n                                        {errors.details && touched.details ? (\n                                          <div className=\"invalid-feedback d-block bg-danger text-white messageStyle\">\n                                            {errors.details}\n                                          </div>\n                                        ) : null}\n                                      </div>\n                                    </form>\n                                    <div className=\"modal-footer\">\n                                      <button\n                                        type=\"button\"\n                                        className=\"btn btn-secondary\"\n                                        data-dismiss=\"modal\"\n                                        onClick={resetUpdate}\n                                      >\n                                        Close\n                                      </button>\n                                      <button\n                                        type=\"submit\"\n                                        className=\"btn btn-primary\"\n                                        // data-dismiss=\"modal\"\n                                        onClick={handleSubmit}\n                                      >\n                                        Add Institute\n                                        {loading && <Spin />}\n                                      </button>\n                                    </div>\n                                  </>\n                                )}\n                              </Formik>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </Colxx>\n                  </Row>\n                </CardBody>\n              </Card> */}\n            </>\n          ) : (\n            <>\n              {marks.length > 0 && (\n                <>\n                  {marks.map((mark, index) => (\n                    <Row\n                      className=\"rounded d-block\"\n                      style={{\n                        padding: '20px',\n                        paddingInline: '3%',\n\n                        minHeight: '200px',\n                      }}\n                    >\n                      <Colxx>\n                        <Card className=\"mb-4\">\n                          <CardBody>\n                            <div\n                              style={{\n                                padding: '10px',\n                                display: 'inline-flex',\n                                width: '50%',\n                              }}\n                            >\n                              <Colxx>\n                                <span className=\"data-style\">\n                                  <IntlMessages id=\"forms.studentIdLabel\" />\n                                  <h3 style={{ fontWeight: 'bold' }}>\n                                    {mark.student}\n                                  </h3>\n                                </span>\n                              </Colxx>\n                              <Colxx>\n                                <span className=\"data-style\">\n                                  <IntlMessages id=\"marks.ClassLabel\" />\n                                  <h3 style={{ fontWeight: 'bold' }}>\n                                    {mark.class_name}\n                                  </h3>\n                                </span>\n                              </Colxx>\n                              <Colxx>\n                                <span className=\"data-style\">\n                                  <IntlMessages id=\"field.SemesterLabel\" />\n                                  <h3 style={{ fontWeight: 'bold' }}>\n                                    {mark.semester}\n                                  </h3>\n                                </span>\n                              </Colxx>\n                            </div>\n                            <Separator />\n                            <Separator />\n\n                            <Table>\n                              <thead className=\"data-style\">\n                                <tr>\n                                  <th>\n                                    {' '}\n                                    <IntlMessages id=\"marks.No\" />\n                                  </th>\n                                  <th>\n                                    <IntlMessages id=\"marks.SubjectLabel\" />\n                                  </th>\n                                  <th>\n                                    {' '}\n                                    <IntlMessages id=\"marks.Marks\" />\n                                  </th>\n                                  <th>\n                                    {' '}\n                                    <IntlMessages id=\"forms.SubjectCreditLabel\" />\n                                  </th>\n                                  <th>\n                                    {' '}\n                                    <IntlMessages id=\"subject.type\" />\n                                  </th>\n                                </tr>\n                              </thead>\n                              <tbody className=\"body-style\">\n                                {mark.children.map((child, index) => (\n                                  <>\n                                    <tr>\n                                      <th scope=\"row\">{index + 1}</th>\n                                      <td>{child.subject_name}</td>\n\n                                      <td>{child.score}</td>\n                                      {child.subject_credit > 1 && (\n                                        <>\n                                          <td>{child.subject_credit}</td>\n\n                                          <td>{child.subject_type}</td>\n                                        </>\n                                      )}\n                                    </tr>\n                                  </>\n                                ))}\n                              </tbody>\n                            </Table>\n                            <Separator />\n                            <Separator />\n                            <br />\n                            <Row>\n                              <Colxx xxs=\"3\">\n                                <h3> فیصدی سمستر: % {mark.total_percentage}</h3>\n                              </Colxx>\n                              {mark.class_gpa > 0 && (\n                                <Colxx xxs=\"3\">\n                                  <h3>GPA: {mark.class_gpa} </h3>\n                                </Colxx>\n                              )}\n                            </Row>\n                          </CardBody>\n                        </Card>\n                      </Colxx>\n                    </Row>\n                  ))}\n                </>\n              )}\n            </>\n          )}\n        </>\n      )}\n    </>\n  );\n};\n\nexport default StudentProfile;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"size\", \"bordered\", \"borderless\", \"striped\", \"dark\", \"hover\", \"responsive\", \"tag\", \"responsiveTag\", \"innerRef\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  size: PropTypes.string,\n  bordered: PropTypes.bool,\n  borderless: PropTypes.bool,\n  striped: PropTypes.bool,\n  dark: PropTypes.bool,\n  hover: PropTypes.bool,\n  responsive: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n  tag: tagPropType,\n  responsiveTag: tagPropType,\n  innerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.string, PropTypes.object])\n};\nvar defaultProps = {\n  tag: 'table',\n  responsiveTag: 'div'\n};\n\nvar Table = function Table(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      size = props.size,\n      bordered = props.bordered,\n      borderless = props.borderless,\n      striped = props.striped,\n      dark = props.dark,\n      hover = props.hover,\n      responsive = props.responsive,\n      Tag = props.tag,\n      ResponsiveTag = props.responsiveTag,\n      innerRef = props.innerRef,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var classes = mapToCssModules(classNames(className, 'table', size ? 'table-' + size : false, bordered ? 'table-bordered' : false, borderless ? 'table-borderless' : false, striped ? 'table-striped' : false, dark ? 'table-dark' : false, hover ? 'table-hover' : false), cssModule);\n  var table = /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    ref: innerRef,\n    className: classes\n  }));\n\n  if (responsive) {\n    var responsiveClassName = mapToCssModules(responsive === true ? 'table-responsive' : \"table-responsive-\" + responsive, cssModule);\n    return /*#__PURE__*/React.createElement(ResponsiveTag, {\n      className: responsiveClassName\n    }, table);\n  }\n\n  return table;\n};\n\nTable.propTypes = propTypes;\nTable.defaultProps = defaultProps;\nexport default Table;"],"names":["servicePath","config","API_URL","concat","_studentStatusOptions","_institutes$find","_useContext","useContext","AuthContext","institutes","provinces","districts","studentId","useParams","_useState","useState","_useState2","_slicedToArray","isNext","setIsNext","_useState3","_useState4","student","setStudent","_useState5","_useState6","institute","setInstitute","_useState7","_useState8","classs","setClasss","_useState9","_useState10","dorm","setDorm","_useState11","_useState12","marks","setMarks","_useState13","_useState14","isLoaded","setIsLoaded","_useState15","_useState16","_useState17","_useState18","_useState19","_useState20","_useState21","_useState22","_useState23","_useState24","_useState25","_useState26","provincesList","districtsList","forEach","province","value","label","_fetchStudent","_asyncToGenerator","_regeneratorRuntime","mark","_callee4","response","data","instituteResponse","instituteData","classResponse","classData","dormResponse","dormData","marksResponse","marksData","wrap","_context4","prev","next","callApi","sent","status","results","t0","console","log","stop","apply","arguments","useEffect","fetchStudent","handleClick","event","_jsxs","_Fragment","children","Row","className","_jsx","Colxx","xxs","IntlMessages","id","style","paddingRight","src","logo","alt","width","length","href","photo","target","rel","top","name","profilePhoto","maxWidth","maxHeight","borderRadius","marginBottom","Button","backgroundColor","fontWeight","fontSize","onClick","Card","CardBody","paddingInline","padding","Label","student_id","Badge","color","pill","studentStatusOptions","find","op","last_name","english_name","english_last_name","father_name","english_father_name","phone_number","email","tazkira_type","registration_number","cover_number","page_number","sabt_number","sokok_number","year_of_birth","place_of_birth","father_profession","father_place_of_duty","Separator","main_province","main_district","main_village","current_province","current_district","current_village","previous_grade","previous_grade_year","previous_school_name","previous_school_province","admission_method","internse_type","student_type","ins","semester","section","dorm_type","map","index","minHeight","display","class_name","Table","child","scope","subject_name","score","subject_credit","subject_type","total_percentage","class_gpa","_excluded","propTypes","PropTypes","cssModule","size","bordered","borderless","striped","dark","hover","responsive","tag","tagPropType","responsiveTag","innerRef","props","Tag","ResponsiveTag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","table","React","_extends","ref","responsiveClassName","defaultProps"],"sourceRoot":""}